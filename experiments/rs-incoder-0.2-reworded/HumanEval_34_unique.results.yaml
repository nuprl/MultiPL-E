language: rs
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for el in l {\n        if !seen.insert(el).unwrap() {\n            v.push(el);\n\
    \        }\n    }\n    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptqrqc_ja.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.to_vec();\n    v.sort();\n    v.dedup();\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpw_pcgd_q.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpw_pcgd_q.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  v.sort();\n    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpt5kg5cki.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpt5kg5cki.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  v.sort();\n    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  v.sort();\n    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.to_vec();\n    v.sort();\n    v.dedup();\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for elt in l {\n        if !seen.insert(elt).unwrap() {\n            result.push(elt);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpshi9ynko.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.to_vec();\n    v.sort();\n    v.dedup();\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: the method `collect` exists for unit type `()`, but its trait\
    \ bounds were not satisfied\n --> /tmp/tmpx8i04x4r.rs:5:59\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    \  |                                                           ^^^^^^^ method\
    \ cannot be called on `()` due to unsatisfied trait bounds\n  |\n  = note: the\
    \ following trait bounds were not satisfied:\n          `(): Iterator`\n     \
    \     which is required by `&mut (): Iterator`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<isize>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmp2pbi8_lk.rs:5:47\n  |\n5 |     l.iter().cloned().collect::<Vec<isize>>().sorted().collect()\n\
    \  |                                               ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  v.sort();\n    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: the method `collect` exists for unit type `()`, but its trait\
    \ bounds were not satisfied\n --> /tmp/tmpx8i04x4r.rs:5:59\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    \  |                                                           ^^^^^^^ method\
    \ cannot be called on `()` due to unsatisfied trait bounds\n  |\n  = note: the\
    \ following trait bounds were not satisfied:\n          `(): Iterator`\n     \
    \     which is required by `&mut (): Iterator`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: the method `collect` exists for unit type `()`, but its trait\
    \ bounds were not satisfied\n --> /tmp/tmpx8i04x4r.rs:5:59\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    \  |                                                           ^^^^^^^ method\
    \ cannot be called on `()` due to unsatisfied trait bounds\n  |\n  = note: the\
    \ following trait bounds were not satisfied:\n          `(): Iterator`\n     \
    \     which is required by `&mut (): Iterator`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: the method `collect` exists for unit type `()`, but its trait\
    \ bounds were not satisfied\n --> /tmp/tmpx8i04x4r.rs:5:59\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    \  |                                                           ^^^^^^^ method\
    \ cannot be called on `()` due to unsatisfied trait bounds\n  |\n  = note: the\
    \ following trait bounds were not satisfied:\n          `(): Iterator`\n     \
    \     which is required by `&mut (): Iterator`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  v.sort_unstable();\n    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpw_pcgd_q.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpw_pcgd_q.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.clone();\n    v.sort();\n    v.dedup();\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: the method `collect` exists for unit type `()`, but its trait\
    \ bounds were not satisfied\n --> /tmp/tmpx8i04x4r.rs:5:59\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    \  |                                                           ^^^^^^^ method\
    \ cannot be called on `()` due to unsatisfied trait bounds\n  |\n  = note: the\
    \ following trait bounds were not satisfied:\n          `(): Iterator`\n     \
    \     which is required by `&mut (): Iterator`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  v.sort();\n    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: the method `collect` exists for unit type `()`, but its trait\
    \ bounds were not satisfied\n --> /tmp/tmpx8i04x4r.rs:5:59\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    \  |                                                           ^^^^^^^ method\
    \ cannot be called on `()` due to unsatisfied trait bounds\n  |\n  = note: the\
    \ following trait bounds were not satisfied:\n          `(): Iterator`\n     \
    \     which is required by `&mut (): Iterator`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  v.sort();\n    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    for el in l {\n        if\
    \ !result.contains(&el) {\n            result.push(el);\n        }\n    }\n  \
    \  result\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpcrzd3xe_.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpesurahu9.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `sort`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkc2jp4d.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in l {\n        if !v.contains(&i)\
    \ {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmptvz_uboa.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpwz3pm9re.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).unwrap_or(false)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5zf5ignj.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprebhd2u5.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.to_vec();\n    v.sort();\n    v.dedup();\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749240
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmprstyeplf.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659749239

name: HumanEval_98_count_upper
language: rs
prompt: "/// Given a string s, count the number of uppercase vowels in even indices.\n\
  /// For example:\n/// >>> count_upper(String::from(\"aBCdEf\"))\n/// 1\n/// >>>\
  \ count_upper(String::from(\"abcdefg\"))\n/// 0\n/// >>> count_upper(String::from(\"\
  dBBE\"))\n/// 0\nfn count_upper(s: String) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = count_upper;\n    assert_eq!(candidate(String::from(\"\
  aBCdEf\")), 1);\n    assert_eq!(candidate(String::from(\"abcdefg\")), 0);\n    assert_eq!(candidate(String::from(\"\
  dBBE\")), 0);\n    assert_eq!(candidate(String::from(\"B\")), 0);\n    assert_eq!(candidate(String::from(\"\
  U\")), 1);\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
  EEEE\")), 2);\n}\n"
completions: ['    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_letter()).count()',
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  "    s.chars().enumerate().filter(|(_, c)| c >= 'A' && c <= 'Z').filter(|(_, c)|\
    \ c != 'a' && c != 'A' && c != 'e' && c != 'E').count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_letter()).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c % 2 == 0).count()', "    s.chars().filter(|c| c\
    \ >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().enumerate().filter(|(_,
    c)| c.is_uppercase()).filter(|(_, c)| c.is_even()).count()', '    s.chars().enumerate().filter(|(_,
    c)| c.is_uppercase()).filter(|(_, c)| c.is_ascii()).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().enumerate().filter(|(_,\
    \ c)| c >= 'A' && c <= 'Z').count(|(_, c)| c >= 'A' && c <= 'Z')", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', "    s.chars().enumerate().filter(|(_,\
    \ c)| c >= 'A' && c <= 'Z').filter(|(_, c)| c != 'a' && c != 'A' && c != 'e' &&\
    \ c != 'E' && c != 'i' && c != 'I' && c != 'o' && c != 'O' && c != 'u' && c !=\
    \ 'U').count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c\
    \ % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c % 2 == 0).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()',
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()',
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c % 2 == 0).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii()).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c % 2 == 0).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_lowercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c % 2 == 0).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().enumerate().filter(|(_, c)| c >= 'A' &&\
    \ c <= 'Z').filter(|(_, c)| c != 'a' && c != 'A' && c != 'e' && c != 'E' && c\
    \ != 'i' && c != 'I' && c != 'o' && c != 'O' && c != 'u' && c != 'U').count()\
    \ as isize", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2\
    \ == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c\
    \ % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii()).count()',
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c % 2 == 0).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').count() as isize", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_letter()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().enumerate().filter(|(_, c)| c >= 'A' &&\
    \ c <= 'Z').filter(|(_, c)| c != 'a' && c != 'A' && c != 'e' && c != 'E' && c\
    \ != 'i' && c != 'I' && c != 'o' && c != 'O' && c != 'u' && c != 'U').count()\
    \ as isize", '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii()).count()',
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii()).count()', " \
    \   s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii()).count()', " \
    \   s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()',
  "    s.chars().enumerate().filter(|(_, c)| c >= 'A' && c <= 'Z').filter(|(_, c)|\
    \ c != 'a' && c != 'A' && c != 'e' && c != 'E' && c != 'i' && c != 'I' && c !=\
    \ 'o' && c != 'O' && c != 'u' && c != 'U').count() as isize", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c % 2 == 0).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c % 2 == 0).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').count()\
    \ % 2 == 0", '    s.chars().enumerate().filter(|(_, c)| c.is_uppercase()).filter(|(_,
    c)| c.is_ascii()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', "    s.chars().enumerate().filter(|(_, c)| c.is_uppercase()).filter(|(_,\
    \ c)| {\n        c.is_ascii_letter() || c.is_ascii_digit()\n    }).count(|(_,\
    \ c)| {\n        c.is_ascii_letter() || c.is_ascii_digit()\n    })", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c % 2 == 0).count()', "    s.chars().filter(|c| c\
    \ >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_lowercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii()).count() as isize', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_lowercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii()).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').count() % 2 == 0", "    s.chars().filter(|c| c >= 'A'\
    \ && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c| c >=\
    \ 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().enumerate().filter(|(_,\
    \ c)| c >= 'A' && c <= 'Z').filter(|(_, c)| c != 'a' && c != 'A').count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_lowercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c % 2 == 0).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_letter()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_lowercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().enumerate().filter(|(_, c)| c.is_uppercase()).filter(|(_,
    c)| c.is_ascii_letter()).count()', "    s.chars().filter(|c| c >= 'A' && c <=\
    \ 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' &&\
    \ c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_letter()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().enumerate().filter(|(_, c)| c >= 'A' &&\
    \ c <= 'Z').count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_letter()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_letter()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().enumerate().filter(|(_, c)| c.is_uppercase()).count()',
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  '    s.chars().enumerate().filter(|(_, c)| c.is_uppercase()).filter(|(_, c)| c %
    2 == 0).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c\
    \ % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()',
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c % 2 == 0).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c % 2 == 0).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_uppercase()).count()', '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c.is_ascii_letter()).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().enumerate().filter(|(_, c)| c >= 'A' &&\
    \ c <= 'Z').filter(|(_, c)| c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u').count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c % 2 == 0).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c|\
    \ c % 2 == 0).count()", '    s.chars().filter(|c| c.is_uppercase()).filter(|c|
    c % 2 == 0).count()', "    s.chars().filter(|c| c >= 'A' && c <= 'Z').count()\
    \ as isize", '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii()).count()',
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()',
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()',
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()',
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()',
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_letter()).count()',
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()',
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  "    s.chars().filter(|c| c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()",
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c.is_ascii_letter()).count()',
  '    s.chars().filter(|c| c.is_uppercase()).filter(|c| c % 2 == 0).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_letter()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii()).count() as isize', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', '    s.chars().filter(|c|
    c.is_uppercase()).filter(|c| c.is_ascii_uppercase()).count()', "    s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').filter(|c| c % 2 == 0).count()", "    s.chars().enumerate().filter(|(_,\
    \ c)| c >= 'A' && c <= 'Z').count(|(_, c)| c >= 'a' && c <= 'z')"]
stop_tokens:
- "\n}"

language: rs
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    lst.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmpoaedo0m2.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst {\n        if i % 2 == 0 {\n            sum += i;\n \
    \       }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n \
    \   assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmp3nsihtdh.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst {\n        if i % 2 == 1 {\n            sum += i;\n \
    \       }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n \
    \   assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmp55_4ktri.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().skip(1) {\n        if i % 2 == 0 {\n         \
    \   sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpnuorrre0.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    lst.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmpoaedo0m2.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst {\n        if i % 2 == 0 {\n            sum += i;\n \
    \       }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n \
    \   assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmp3nsihtdh.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    lst.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmpoaedo0m2.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 != 0).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpnqmm_40t.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter() {\n        if i % 2 == 0 {\n            sum +=\
    \ i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpvot9iuff.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&el| el % 2 == 1).sum::<isize>()\n\
    \        + odds.iter().filter(|&el| el % 2 == 0).sum::<isize>()\n}\n\nfn main()\
    \ {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]),\
    \ 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3aykvbom.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmpp3hdkd_n.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                             - ^ - {integer}\n\
    \   |                             |\n   |                             &&isize\n\
    \   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n   |\n19 | \
    \    evens.iter().filter(|x| *x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                             +\n\nerror[E0369]:\
    \ cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmpp3hdkd_n.rs:19:83\n   |\n\
    19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                           \
    \                                      - ^ - {integer}\n   |                 \
    \                                                                |\n   |     \
    \                                                                            &&isize\n\
    \   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n   |\n19 | \
    \    evens.iter().filter(|x| x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ *x % 2 == 0).sum::<isize>()\n   |                                          \
    \                                       +\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&el| el % 2 == 1).sum::<isize>()\n\
    \        + odds.iter().filter(|&el| el % 2 == 0).sum::<isize>()\n}\n\nfn main()\
    \ {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]),\
    \ 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3aykvbom.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().skip(1) {\n        if i % 2 == 0 {\n         \
    \   sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpnuorrre0.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 1 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpncx7ax84.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut even\
    \ = 0;\n    let mut odd = 1;\n    for &i in lst {\n        if i % 2 == 0 {\n \
    \           even += i;\n        } else {\n            odd += i;\n        }\n \
    \   }\n    even + odd\n}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpu_nx1bg1.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 != 0).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpf_v006kb.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    let mut even = lst.iter().filter(|&x| x % 2 == 0).count();\n    let\
    \ mut odd = lst.iter().filter(|&x| x % 2 != 0).count();\n    while even > 0 {\n\
    \        sum += lst.iter().filter(|&x| x % 2 == 0).last().unwrap();\n        even\
    \ -= 1;\n    }\n    while odd > 0 {\n        sum += lst.iter().filter(|&x| x %\
    \ 2 != 0).last().unwrap();\n        odd -= 1;\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]),\
    \ 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `12`', /tmp/tmp55rvcoqn.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    let mut even = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n\
    \            sum += i;\n            even += 1;\n        }\n    }\n    if even\
    \ > 0 {\n        sum -= lst[even];\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n  \
    \  assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1os2uzbz.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut even\
    \ = 0;\n    let mut odd = 1;\n    for &i in lst {\n        if i % 2 == 0 {\n \
    \           even += i;\n        } else {\n            odd += i;\n        }\n \
    \   }\n    even + odd\n}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpu_nx1bg1.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 != 0).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpf_v006kb.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst {\n        if i % 2 == 0 {\n            sum += i;\n \
    \       }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n \
    \   assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmp3nsihtdh.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmpp3hdkd_n.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                             - ^ - {integer}\n\
    \   |                             |\n   |                             &&isize\n\
    \   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n   |\n19 | \
    \    evens.iter().filter(|x| *x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                             +\n\nerror[E0369]:\
    \ cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmpp3hdkd_n.rs:19:83\n   |\n\
    19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                           \
    \                                      - ^ - {integer}\n   |                 \
    \                                                                |\n   |     \
    \                                                                            &&isize\n\
    \   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n   |\n19 | \
    \    evens.iter().filter(|x| x % 2 == 1).sum::<isize>() + odds.iter().filter(|x|\
    \ *x % 2 == 0).sum::<isize>()\n   |                                          \
    \                                       +\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    let mut even = 0;\n    let mut odd = 1;\n    for &i in lst {\n   \
    \     if i % 2 == 0 {\n            sum += i;\n        } else {\n            sum\
    \ += odd;\n            even = i;\n            odd = 1;\n        }\n    }\n   \
    \ sum += even;\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n   \
    \ assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptdkoak6a.rs:13:9\n   |\n\
    13 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    let mut even = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n\
    \            sum += i;\n            even += 1;\n        }\n    }\n    if even\
    \ > 0 {\n        sum -= (sum % even);\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n  \
    \  assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "warning: unnecessary parentheses around assigned value\n  --> /tmp/tmpfy2q09om.rs:19:16\n\
    \   |\n19 |         sum -= (sum % even);\n   |                ^^^^^^^^^^^^ help:\
    \ remove these parentheses\n   |\n   = note: `#[warn(unused_parens)]` on by default\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpfy2q09om.rs:12:9\n   |\n12 | \
    \    for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error; 1 warning emitted\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    lst.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmpoaedo0m2.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    lst.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmpoaedo0m2.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    lst.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmpoaedo0m2.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().skip(1).filter(|&x| x % 2 == 1) {\n        sum\
    \ += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n   \
    \ assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpnrh5d_3j.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut even\
    \ = 0;\n    let mut odd = 1;\n    for &i in lst {\n        if i % 2 == 0 {\n \
    \           even += i;\n        } else {\n            odd += i;\n        }\n \
    \   }\n    even + odd\n}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpu_nx1bg1.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 != 0).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpf_v006kb.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&el| el % 2 == 1).sum::<isize>()\n\
    \        + odds.iter().filter(|&el| el % 2 == 0).sum::<isize>()\n}\n\nfn main()\
    \ {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]),\
    \ 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3aykvbom.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 != 0).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpf_v006kb.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut even\
    \ = 0;\n    let mut odd = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n \
    \           even += i;\n        } else {\n            odd += i;\n        }\n \
    \   }\n    even + odd\n}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpns8vlm6v.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 1 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmphxyucd4n.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&el| el % 2 == 1).sum::<isize>()\n\
    \        + odds.iter().filter(|&el| el % 2 == 0).sum::<isize>()\n}\n\nfn main()\
    \ {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]),\
    \ 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3aykvbom.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst {\n        if i % 2 == 0 {\n            sum += i;\n \
    \       }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n \
    \   assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmp3nsihtdh.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst.iter().rev() {\n        if i % 2 == 0 {\n          \
    \  sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpl3wg8xz7.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    let mut even = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n\
    \            sum += i;\n        } else {\n            even = i;\n        }\n \
    \   }\n    sum - even\n}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpb4oqsb2e.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 != 0).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpf_v006kb.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&el| el % 2 == 1).sum::<isize>()\n\
    \        + odds.iter().filter(|&el| el % 2 == 0).sum::<isize>()\n}\n\nfn main()\
    \ {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]),\
    \ 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3aykvbom.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3qbai4s9.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 != 0).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpf_v006kb.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut even\
    \ = 0;\n    let mut odd = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n \
    \           even += i;\n        } else {\n            odd += i;\n        }\n \
    \   }\n    even + odd\n}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpns8vlm6v.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut even\
    \ = 0;\n    let mut odd = 0;\n    for x in lst {\n        if x % 2 == 0 {\n  \
    \          even += x;\n        } else {\n            odd += x;\n        }\n  \
    \  }\n    even + odd\n}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `21`,\n right: `12`', /tmp/tmprbukepqe.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&el| el % 2 == 1).sum::<isize>()\n\
    \        + odds.iter().filter(|&el| el % 2 == 0).sum::<isize>()\n}\n\nfn main()\
    \ {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]),\
    \ 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3aykvbom.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut even\
    \ = 0;\n    let mut odd = 1;\n    for &i in lst {\n        if i % 2 == 0 {\n \
    \           even += i;\n        } else {\n            odd += i;\n        }\n \
    \   }\n    even * odd\n}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmplt3c27sy.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&el| el % 2 == 1).sum::<isize>()\n\
    \        + odds.iter().filter(|&el| el % 2 == 0).sum::<isize>()\n}\n\nfn main()\
    \ {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]),\
    \ 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3aykvbom.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3qbai4s9.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 != 0).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpf_v006kb.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut even\
    \ = 0;\n    let mut odd = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n \
    \           even += i;\n        } else {\n            odd += i;\n        }\n \
    \   }\n    even + odd\n}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpns8vlm6v.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    lst.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmpoaedo0m2.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp1ijs2xn5.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 == 1).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp1ijs2xn5.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 1 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmphxyucd4n.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            evens.push(i);\n        } else {\n            odds.push(i);\n\
    \        }\n    }\n    evens.iter().filter(|&i| i % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpau5sn2qs.rs:12:9\n   |\n\
    12 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    lst.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `12`', /tmp/tmpoaedo0m2.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n            sum += i;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = solution;\n\
    \    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpaqw7r4nf.rs:11:9\n   |\n\
    11 |     for &i in lst {\n   |         ^^    --- this expression has type `isize`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmpuacl7seg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 1
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&&isize` by `{integer}`\n  --> /tmp/tmp2y3o9rjj.rs:19:31\n\
    \   |\n19 |     evens.iter().filter(|x| x % 2 != 0).sum::<isize>()\n   |     \
    \                        - ^ - {integer}\n   |                             |\n\
    \   |                             &&isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n19 |     evens.iter().filter(|x| *x % 2 != 0).sum::<isize>()\n\
    \   |                             +\n\nerror[E0369]: cannot mod `&&isize` by `{integer}`\n\
    \  --> /tmp/tmp2y3o9rjj.rs:20:36\n   |\n20 |         + odds.iter().filter(|x|\
    \ x % 2 == 0).sum::<isize>()\n   |                                  - ^ - {integer}\n\
    \   |                                  |\n   |                               \
    \   &&isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `x`\n\
    \   |\n20 |         + odds.iter().filter(|x| *x % 2 == 0).sum::<isize>()\n   |\
    \                                  +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n           \
    \ sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3,\
    \ 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30, 13, 24, 321]), 0);\n  \
    \  assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2, 4,\
    \ 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpsyybxybw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut sum\
    \ = 0;\n    let mut i = 0;\n    while i < lst.len() {\n        if lst[i] % 2 ==\
    \ 0 {\n            sum += lst[i];\n        }\n        i += 1;\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
    \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `12`', /tmp/tmpz60wysy3.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323
- exit_code: 101
  program: "/// Given a non-empty vector of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5,\
    \ 8, 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
    \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for el in lst {\n        if el %\
    \ 2 == 0 {\n            evens.push(el);\n        } else {\n            odds.push(el);\n\
    \        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n \
    \       + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()\n}\n\nfn main() {\n\
    \    let candidate = solution;\n    assert_eq!(candidate(vec![5, 8, 7, 1]), 12);\n\
    \    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
    \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
    \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
    \ 13, 2, 9]), 3);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `12`', /tmp/tmp3qbai4s9.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748323

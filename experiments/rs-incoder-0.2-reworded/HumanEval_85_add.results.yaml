language: rs
name: HumanEval_85_add
results:
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp278qi9bg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for el in lst {\n        if el % 2 == 0 {\n            even += el;\n    \
    \    } else {\n            odd += el;\n        }\n    }\n    even + odd\n}\n\n\
    fn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpl80hwwxq.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for el in lst {\n        if el % 2 == 0 {\n            even += el;\n    \
    \    } else {\n            odd += el;\n        }\n    }\n    even + odd\n}\n\n\
    fn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpl80hwwxq.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptdzg2c08.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptdzg2c08.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp97e_cuh5.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for i in lst {\n        if i % 2 == 0 {\n            even += i;\n       \
    \ } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmpix682eyn.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for el in lst {\n        if el % 2 == 0 {\n            even += el;\n    \
    \    } else {\n            odd += el;\n        }\n    }\n    even + odd\n}\n\n\
    fn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpl80hwwxq.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp8ajjzvz3.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp278qi9bg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptdzg2c08.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp97e_cuh5.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp278qi9bg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptdzg2c08.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().skip(1)\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `130`,\n right: `122`', /tmp/tmpxz0suml8.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().rev()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp340136ig.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&x|\
    \ x % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpzypurtgd.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().skip(1)\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `130`,\n right: `122`', /tmp/tmpxz0suml8.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for i in lst.iter() {\n        if i % 2 == 0 {\n            even += i;\n\
    \        } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp6t905bxc.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for i in lst.iter() {\n        if i % 2 == 0 {\n            even += i;\n\
    \        } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp6t905bxc.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for x in lst {\n\
    \        if x % 2 == 0 {\n            even += x;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpiihat06x.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&x|\
    \ x % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmp107o7476.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().skip(1)\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `130`,\n right: `122`', /tmp/tmpxz0suml8.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp278qi9bg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for i in lst {\n        if i % 2 == 0 {\n            even += i;\n       \
    \ } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmpix682eyn.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().skip(1)\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `130`,\n right: `122`', /tmp/tmpxz0suml8.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&x|\
    \ x % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmp107o7476.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp278qi9bg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp278qi9bg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for i in lst {\n        if i % 2 == 0 {\n            even += i;\n       \
    \ } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmpix682eyn.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for el in lst {\n        if el % 2 == 0 {\n            even += el;\n    \
    \    } else {\n            odd += el;\n        }\n    }\n    even + odd\n}\n\n\
    fn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpl80hwwxq.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().skip(1)\
    \ {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `142`,\n right: `122`', /tmp/tmpzlri6o6n.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp8ajjzvz3.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&x|\
    \ x % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmp107o7476.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp8ajjzvz3.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for el in lst {\n        if el % 2 == 0 {\n            even += el;\n    \
    \    } else {\n            odd += el;\n        }\n    }\n    even + odd\n}\n\n\
    fn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpl80hwwxq.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp97e_cuh5.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for i in lst {\n        if i % 2 == 0 {\n            even += i;\n       \
    \ } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmph_3y7pee.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().rev()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp340136ig.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp8ajjzvz3.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().rev()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp340136ig.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp97e_cuh5.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for i in lst.iter() {\n        if i % 2 == 0 {\n            even += i;\n\
    \        } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp0o5a967m.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for ele in lst {\n        if ele % 2 == 0 {\n            even += ele;\n \
    \       } else {\n            odd += ele;\n        }\n    }\n    even + odd\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmph6e0e43f.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp278qi9bg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().rev()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp340136ig.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&x|\
    \ x % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmp107o7476.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptdzg2c08.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptdzg2c08.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp97e_cuh5.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp278qi9bg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptdzg2c08.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpufnqf19o.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp278qi9bg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for i in lst.iter() {\n        if i % 2 == 0 {\n            even += i;\n\
    \        } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp6t905bxc.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().rev()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp340136ig.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpidhsqwxh.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp97e_cuh5.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 0) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmpqlk25kbh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgsiovs04.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for i in lst.iter() {\n        if i % 2 == 0 {\n            even += i;\n\
    \        } else {\n            odd += i;\n        }\n    }\n    even\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmp0o5a967m.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            even += i;\n        }\n    }\n    even\n\
    }\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]),\
    \ 88);\n    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdsdw_vpl.rs:7:9\n  |\n7 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `92`,\n right: `88`', /tmp/tmplk9wjg6c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in lst.iter().filter(|&i|\
    \ i % 2 == 1) {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n    assert_eq!(candidate(vec![4,\
    \ 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4, 0, 6, 7]), 0);\n\
    \    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `88`', /tmp/tmpkd6nmii6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n\
    \    for &i in lst {\n        if i % 2 == 0 {\n            even += i;\n      \
    \  } else {\n            odd += i;\n        }\n    }\n    even + odd\n}\n\nfn\
    \ main() {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n\
    \    assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg05ddc29.rs:8:9\n  |\n8 |\
    \     for &i in lst {\n  |         ^^    --- this expression has type `isize`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 101
  program: "/// Given a non-empty vector of integers lst. add the even elements that\
    \ are at odd indices..\n/// Examples:\n/// >>> add(vec![4, 2, 6, 7])\n/// 2\n\
    fn add(lst: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 1;\n\
    \    for x in lst {\n        if x % 2 == 0 {\n            even += x;\n       \
    \ } else {\n            odd += x;\n        }\n    }\n    even + odd\n}\n\nfn main()\
    \ {\n    let candidate = add;\n    assert_eq!(candidate(vec![4, 88]), 88);\n \
    \   assert_eq!(candidate(vec![4, 5, 6, 7, 2, 122]), 122);\n    assert_eq!(candidate(vec![4,\
    \ 0, 6, 7]), 0);\n    assert_eq!(candidate(vec![4, 4, 6, 8]), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `93`,\n right: `88`', /tmp/tmp97e_cuh5.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749246

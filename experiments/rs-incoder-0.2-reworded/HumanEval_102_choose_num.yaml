name: HumanEval_102_choose_num
language: rs
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\n/// >>>\
  \ choose_num(12, 15)\n/// 14\n/// >>> choose_num(13, 12)\n/// -1\nfn choose_num(x:\
  \ isize, y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!(candidate(12,\
  \ 15), 14);\n    assert_eq!(candidate(13, 12), -1);\n    assert_eq!(candidate(33,\
  \ 12354), 12354);\n    assert_eq!(candidate(5234, 5233), -1);\n    assert_eq!(candidate(6,\
  \ 29), 28);\n    assert_eq!(candidate(27, 10), -1);\n    assert_eq!(candidate(7,\
  \ 7), -1);\n    assert_eq!(candidate(546, 546), 546);\n}\n"
completions: ["    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x <= y {\n        -1\n    } else {\n        let mut x: isize\
    \ = x;\n        let mut y: isize = y;\n        while x > y {\n            x =\
    \ x + 1;\n            y = y + 1;\n        }\n        x\n    }", "    if x < y\
    \ {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        if x % 2 == 0 {\n\
    \            x // 2\n        } else {\n            choose_num(y - 1, x + 1)\n\
    \        }\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        choose_num(x, y)\n    }", "    if x <= y {\n        -1\n    } else if\
    \ x % 2 == 0 {\n        x + (y % 2)\n    } else {\n        x + (y - 1)\n    }",
  "    let mut x = x;\n    let mut y = y;\n    while x > y {\n        if x % 2 ==\
    \ 0 {\n            x = x / 2;\n        } else {\n            y = y / 2;\n    \
    \    }\n    }\n    if x == y {\n        x\n    } else {\n        -1\n    }", " \
    \   if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x <= y {\n        -1\n    } else {\n        let mut x: isize\
    \ = x;\n        let mut y: isize = y;\n        let mut z: isize = 0;\n       \
    \ while z < x {\n            x -= y;\n            y *= 2;\n            z += y;\n\
    \        }\n        z\n    }", "    if x < y {\n        choose_num(y, x)\n   \
    \ } else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ <= y {\n        -1\n    } else {\n        let mut x: isize = x;\n        let\
    \ mut y: isize = y;\n        while x > y {\n            x = x + 1;\n         \
    \   y = y + 1;\n        }\n        x\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ <= y {\n        -1\n    } else {\n        let mut x = x;\n        let mut y\
    \ = y;\n        while x > y {\n            x -= y;\n            y *= 2;\n    \
    \    }\n        x\n    }", "    if x < y {\n        choose_num(y, x)\n    } else\
    \ {\n        choose_num(x, y)\n    }", "    if x <= y {\n        -1\n    } else\
    \ {\n        let mut x: isize = x;\n        let mut y: isize = y;\n        while\
    \ x > y {\n            x -= y;\n            y += 2;\n        }\n        x\n  \
    \  }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        let mut\
    \ x: isize = x;\n        let mut y: isize = y;\n        let mut z: isize = 0;\n\
    \        while z < x {\n            if x % 2 == 0 {\n                x /= 2;\n\
    \                y /= 2;\n            } else {\n                x /= 2;\n    \
    \        }\n            z += 1\n        }\n        if x == y {\n            x\n\
    \        } else {\n            -1\n        }\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        if x % 2 == 0 {\n            x\n        } else {\n\
    \            choose_num(y - 1, x)\n        }\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n       \
    \ let mut even: isize = 0;\n        while x <= y {\n            if x % 2 == 0\
    \ {\n                even += 1;\n            }\n            x /= 2;\n        }\n\
    \        even\n    }", "    if x <= y {\n        -1\n    } else {\n        let\
    \ mut x = x;\n        let mut y = y;\n        while x <= y {\n            if x\
    \ % 2 == 0 {\n                x /= 2;\n            } else {\n                y\
    \ /= 2;\n            }\n        }\n        x\n    }", "    let mut even: isize\
    \ = 0;\n    let mut odd: isize = 0;\n    while even < y && odd < x {\n       \
    \ if even % 2 == 0 {\n            even += 1;\n        } else {\n            odd\
    \ += 1;\n        }\n    }\n    if even < y {\n        even\n    } else {\n   \
    \     odd\n    }", "    if x <= y {\n        -1\n    } else if y > x {\n     \
    \   x\n    } else {\n        y + (x % y)\n    }", "    if x <= y {\n        -1\n\
    \    } else {\n        let mut i = x;\n        let mut j = y;\n        while i\
    \ <= j {\n            if i % 2 == 0 {\n                i += 1;\n            }\
    \ else {\n                j -= 1;\n            }\n        }\n        j\n    }",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        let mut x: isize\
    \ = x;\n        let mut y: isize = y;\n        while x > y {\n            x -=\
    \ y;\n            y *= 2;\n        }\n        x\n    }", "    if x < y {\n   \
    \     choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if\
    \ x > y {\n        (x, y) = (y, x)\n    }\n    let mut x: isize = 1;\n    let\
    \ mut y: isize = 1;\n    while x <= y {\n        if x % 2 == 0 {\n           \
    \ x = x + 1;\n        } else {\n            y = y + 1;\n        }\n    }\n   \
    \ if x == y {\n        x\n    } else {\n        -1\n    }", "    if x <= y {\n\
    \        -1\n    } else {\n        let mut x: isize = x;\n        let mut y: isize\
    \ = y;\n        let mut z: isize = 0;\n        while z < x || z < y {\n      \
    \      if z % 2 == 0 {\n                z += 1;\n            } else {\n      \
    \          z += 2;\n            }\n        }\n        z\n    }", "    if x < y\
    \ {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n    let mut x: isize\
    \ = 0;\n    let mut y: isize = 0;\n    let mut z: isize = 0;\n    let mut z2:\
    \ isize = 0;\n    let mut z3: isize = 0;\n    let mut z4: isize = 0;\n    let\
    \ mut z5: isize = 0;\n    let mut z6: isize = 0;\n    let mut z7: isize = 0;\n\
    \    let mut z8: isize = 0;\n    let mut z9: isize = 0;\n    let mut z10: isize\
    \ = 0;\n    let mut z11: isize = 0;\n    let mut z12: isize = 0;\n    let mut\
    \ z13: isize = 0;\n    let mut z14: isize = 0;\n    let mut z15: isize = 0;\n\
    \    let mut z16: isize = 0;\n    let mut z17: isize = 0;\n    let mut z18: isize\
    \ = 0;\n    let mut z19: isize = 0;\n    let mut z20: isize = 0;\n    let mut\
    \ z21: isize = 0;\n    let mut z22: isize = 0;\n    let mut z23: isize = 0;\n\
    \    let mut z24: isize = 0;\n    let mut z25: isize = 0;\n    let mut z26: isize\
    \ = 0;\n    let mut z27: isize = 0;\n    let mut z28: isize = 0;\n    let mut\
    \ z29: isize = 0;\n    let mut z30: isize = 0;\n    let mut z31: isize = 0;\n\
    \    let mut z32: isize = 0;\n    let mut z33: isize = 0;\n    let mut z34: isize\
    \ = 0;\n    let mut z35: isize = 0;\n    let mut z36: isize = 0;\n    let mut\
    \ z37: isize = 0;\n    let mut z38: isize = 0;\n    let mut z39: isize = 0;\n\
    \    let mut z40: isize = 0;\n    let mut z41: isize = 0;\n    let mut z42: isize\
    \ = 0;\n    let mut z43: isize = 0;\n    let mut z44: isize = 0;\n    let mut\
    \ z45: isize = 0;\n    let mut z46: isize = 0;\n    let mut z47: isize = 0;\n\
    \    let mut z48: isize = 0;\n    let mut z49: isize", "    let mut num: isize\
    \ = 0;\n    let mut even: isize = 0;\n    let mut odd: isize = 0;\n    while num\
    \ < y {\n        if even < x {\n            even += 2;\n        } else {\n   \
    \         odd += 2;\n        }\n        num +=1;\n    }\n    if even < x {\n \
    \       even\n    } else {\n        odd\n    }", "    if x <= y {\n        -1\n\
    \    } else {\n        let mut x: isize = x;\n        let mut y: isize = y;\n\
    \        let mut z: isize = 0;\n        while z < x || z < y {\n            if\
    \ z % 2 == 0 {\n                z += 1;\n            } else {\n              \
    \  z += 2;\n            }\n        }\n        z\n    }", "    let mut x = x;\n\
    \    let mut y = y;\n    loop {\n        if x % 2 == 0 && y % 2 == 0 {\n     \
    \       return x;\n        }\n        x /= 2;\n        y /= 2;\n    }", "    if\
    \ x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n\
    \    let mut x: isize = (x as isize) / 2;\n    let mut y: isize = (y as isize)\
    \ / 2;\n    while x <= y {\n        if x % 2 == 0 {\n            x = x + 1;\n\
    \        } else {\n            x = x - 1;\n        }\n    }\n    if x == y {\n\
    \        x\n    } else {\n        -1\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x: isize = x;\n        let mut y: isize\
    \ = y;\n        while x > y {\n            x -= y;\n            y *= 2;\n    \
    \    }\n        x\n    }", "    if x < y {\n        choose_num(y, x)\n    } else\
    \ {\n        let mut x: isize = 0;\n        let mut y: isize = 0;\n        let\
    \ mut z: isize = 0;\n        let mut w: isize = 0;\n        let mut z1: isize\
    \ = 0;\n        let mut z2: isize = 0;\n        let mut z3: isize = 0;\n     \
    \   let mut z4: isize = 0;\n        let mut z5: isize = 0;\n        let mut z6:\
    \ isize = 0;\n        let mut z7: isize = 0;\n        let mut z8: isize = 0;\n\
    \        let mut z9: isize = 0;\n        let mut z10: isize = 0;\n        let\
    \ mut z11: isize = 0;\n        let mut z12: isize = 0;\n        let mut z13: isize\
    \ = 0;\n        let mut z14: isize = 0;\n        let mut z15: isize = 0;\n   \
    \     let mut z16: isize = 0;\n        let mut z17: isize = 0;\n        let mut\
    \ z18: isize = 0;\n        let mut z19: isize = 0;\n        let mut z20: isize\
    \ = 0;\n        let mut z21: isize = 0;\n        let mut z22: isize = 0;\n   \
    \     let mut z23: isize = 0;\n        let mut z24: isize = 0;\n        let mut\
    \ z25: isize = 0;\n        let mut z26: isize = 0;\n        let mut z27: isize\
    \ = 0;\n        let mut z28: isize = 0;\n        let mut z29: isize = 0;\n   \
    \     let mut z30: isize = 0;\n        let mut z31: isize = 0;\n        let mut\
    \ z32: isize = 0;\n        let mut z33: isize = 0;\n        let mut z34: isize\
    \ = 0;\n        let mut z35: isize = 0;\n        let mut z36: isize = 0;\n   \
    \     let mut z37: isize = 0;\n        let mut z38: isize = 0;\n        let mut\
    \ z39: isize = 0;\n        let mut z40: isize = 0;\n        let mut z41: isize\
    \ = 0;\n        let mut z42: isize = 0;\n        let mut z43: isize = 0;\n   \
    \     let mut z44: isize = 0;\n        let mut z45: isize = 0;\n        let mut\
    \ z46: isize = 0;\n        let mut z47: isize = 0;", "    if x <= y {\n      \
    \  -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n        while\
    \ x <= y {\n            if x % 2 == 0 {\n                x += 1;\n           \
    \ } else {\n                y -= 1;\n            }\n        }\n        x\n   \
    \ }"]
stop_tokens:
- "\n}"

name: HumanEval_31_is_prime
language: rs
prompt: "/// Return true if a given number is prime, and false otherwise.\n/// >>>\
  \ is_prime(6)\n/// false\n/// >>> is_prime(101)\n/// true\n/// >>> is_prime(11)\n\
  /// true\n/// >>> is_prime(13441)\n/// true\n/// >>> is_prime(61)\n/// true\n///\
  \ >>> is_prime(4)\n/// false\n/// >>> is_prime(1)\n/// false\nfn is_prime(n: isize)\
  \ -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = is_prime;\n    assert_eq!(candidate(6),\
  \ false);\n    assert_eq!(candidate(101), true);\n    assert_eq!(candidate(11),\
  \ true);\n    assert_eq!(candidate(13441), true);\n    assert_eq!(candidate(61),\
  \ true);\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(1), false);\n\
  \    assert_eq!(candidate(5), true);\n    assert_eq!(candidate(11), true);\n   \
  \ assert_eq!(candidate(17), true);\n    assert_eq!(candidate(85), false);\n    assert_eq!(candidate(77),\
  \ false);\n    assert_eq!(candidate(255379), false);\n}\n"
completions: ["    if n == 1 {\n        return false;\n    }\n    if n == 2 {\n  \
    \      return true;\n    }\n    if n % 2 == 0 {\n        return false;\n    }\n\
    \    let mut i = 3;\n    while i * i <= n {\n        if n % i == 0 {\n       \
    \     return false;\n        }\n        i += 1;\n    }\n    return true;", " \
    \   if n < 2 {\n        return false;\n    }\n    if n == 2 {\n        return\
    \ true;\n    }\n    if n % 2 == 0 {\n        return false;\n    }\n    let mut\
    \ i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n            return\
    \ false;\n        }\n        i += 1;\n    }\n    return true;", "    if n < 2\
    \ {\n        return false;\n    }\n    if n == 2 {\n        return true;\n   \
    \ }\n    if n % 2 == 0 {\n        return false;\n    }\n    let mut i = 3;\n \
    \   while i <= n {\n        if n % i == 0 {\n            return false;\n     \
    \   }\n        i += 2;\n    }\n    return true;", "    if n < 2 {\n        return\
    \ false;\n    }\n    if n == 2 {\n        return true;\n    }\n    if n % 2 ==\
    \ 0 {\n        return false;\n    }\n    let mut i = 3;\n    while i <= n {\n\
    \        if n % i == 0 {\n            return false;\n        }\n        i += 1;\n\
    \    }\n    return true;", "    let mut i = 2;\n    while i <= n {\n        if\
    \ n % i == 0 {\n            return false;\n        }\n        i += 1;\n    }\n\
    \    true", "    let mut prime_checker = 1;\n    let mut i = 2;\n    while i <=\
    \ n {\n        if n % i == 0 {\n            prime_checker += 1;\n        }\n \
    \       i += 1;\n    }\n    prime_checker == 1", "    let mut i = 2;\n    while\
    \ i <= n {\n        if n % i == 0 {\n            return false;\n        }\n  \
    \      i += 1;\n    }\n    true", "    if n < 2 {\n        return false;\n   \
    \ }\n    if n == 2 {\n        return true;\n    }\n    if n % 2 == 0 {\n     \
    \   return false;\n    }\n    let mut i = 3;\n    while i * i <= n {\n       \
    \ if n % i == 0 {\n            return false;\n        }\n        i += 1;\n   \
    \ }\n    return true;", "    if n < 2 {\n        return false;\n    }\n\n    let\
    \ mut i = 2;\n    while i <= n {\n        if n % i == 0 {\n            return\
    \ false;\n        }\n        i += 1;\n    }\n    true", "    if n < 2 {\n    \
    \    return false;\n    }\n    if n == 2 {\n        return true;\n    }\n    if\
    \ n % 2 == 0 {\n        return false;\n    }\n    let mut i = 3;\n    while i\
    \ <= n {\n        if n % i == 0 {\n            return false;\n        }\n    \
    \    i += 2;\n    }\n    return true;", "    if n < 2 {\n        return false;\n\
    \    }\n\n    let mut i = 2;\n    while i <= n {\n        if n % i == 0 {\n  \
    \          return false;\n        }\n        i += 1;\n    }\n    true", "    let\
    \ mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n            return\
    \ false;\n        }\n        i += 1;\n    }\n    true", "    let mut i = 2;\n\
    \    while i <= n {\n        if n % i == 0 {\n            return false;\n    \
    \    }\n        i += 1;\n    }\n    true", "    let mut prime = true;\n    for\
    \ i in 2..n {\n        if n % i == 0 {\n            prime = false;\n         \
    \   break;\n        }\n    }\n    prime", "    if n < 2 {\n        return false;\n\
    \    }\n    let mut i = 2;\n    while i <= n {\n        if n % i == 0 {\n    \
    \        return false;\n        }\n        i += 1;\n    }\n    true", "    let\
    \ mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n            return\
    \ false;\n        }\n        i += 1;\n    }\n    true", "    if n < 2 {\n    \
    \    return false;\n    }\n\n    let mut i = 2;\n    while i * i <= n {\n    \
    \    if n % i == 0 {\n            return false;\n        }\n        i += 1;\n\
    \    }\n\n    true", "    if n < 2 {\n        return false;\n    }\n    if n ==\
    \ 2 {\n        return true;\n    }\n    if n % 2 == 0 {\n        return false;\n\
    \    }\n    let mut i = 3;\n    while i <= n {\n        if n % i == 0 {\n    \
    \        return false;\n        }\n        i += 2;\n    }\n    return true;",
  '    n >= 2 && is_prime(n - 1)', "    let mut prime = true;\n    let mut i = 2;\n\
    \    while i <= n {\n        if n % i == 0 {\n            prime = false;\n   \
    \         break;\n        }\n        i += 1;\n    }\n    prime"]
stop_tokens:
- "\n}"

language: rs
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut set = HashSet::new();\n    for i in l {\n     \
    \   if !set.insert(i) {\n            continue;\n        }\n        set.insert(i);\n\
    \    }\n    let mut v = Vec::new();\n    for i in set.iter() {\n        v.push(i);\n\
    \    }\n    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpow51o30y.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.sort_unstable();\n    l.iter().cloned().collect()\n}\n\
    \nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmp7juc94id.rs:5:5\n  |\n4 | fn unique(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |           - help: consider changing this to be mutable: `mut l`\n5 |\
    \     l.sort_unstable();\n  |     ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter()\n        .cloned()\n        .chain(l.iter().cloned())\n\
    \        .cloned()\n        .cloned()\n        .cloned()\n        .cloned()\n\
    \        .cloned()\n        .cloned()\n        .cloned()\n        .cloned()\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n --> /tmp/tmpnki752kf.rs:8:10\n  |\n8 |         .cloned()\n\
    \  |          ^^^^^^ expected reference, found `isize`\n  |\n  = note: expected\
    \ reference `&&_`\n             found reference `&isize`\n  = note: required because\
    \ of the requirements on the impl of `Iterator` for `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n  = note: 1 redundant requirement hidden\n  = note: required because\
    \ of the requirements on the impl of `Iterator` for `std::iter::Chain<Cloned<std::slice::Iter<'_,\
    \ isize>>, Cloned<std::slice::Iter<'_, isize>>>`\n\nerror[E0599]: the method `cloned`\
    \ exists for struct `Cloned<std::iter::Chain<Cloned<std::slice::Iter<'_, isize>>,\
    \ Cloned<std::slice::Iter<'_, isize>>>>`, but its trait bounds were not satisfied\n\
    \  --> /tmp/tmpnki752kf.rs:9:10\n   |\n9  |           .cloned()\n   |        \
    \    ^^^^^^ method cannot be called on `Cloned<std::iter::Chain<Cloned<std::slice::Iter<'_,\
    \ isize>>, Cloned<std::slice::Iter<'_, isize>>>>` due to unsatisfied trait bounds\n\
    \   |\n   = note: the following trait bounds were not satisfied:\n           `<std::iter::Chain<Cloned<std::slice::Iter<'_,\
    \ isize>>, Cloned<std::slice::Iter<'_, isize>>> as Iterator>::Item = &_`\n   \
    \        which is required by `Cloned<std::iter::Chain<Cloned<std::slice::Iter<'_,\
    \ isize>>, Cloned<std::slice::Iter<'_, isize>>>>: Iterator`\n           `Cloned<std::iter::Chain<Cloned<std::slice::Iter<'_,\
    \ isize>>, Cloned<std::slice::Iter<'_, isize>>>>: Iterator`\n           which\
    \ is required by `&mut Cloned<std::iter::Chain<Cloned<std::slice::Iter<'_, isize>>,\
    \ Cloned<std::slice::Iter<'_, isize>>>>: Iterator`\n\nerror: aborting due to 2\
    \ previous errors\n\nSome errors have detailed explanations: E0271, E0599.\nFor\
    \ more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut unique = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    l.iter().cloned().filter(|&x| {\n        if seen.insert(x) {\n          \
    \  unique.push(x)\n        } else {\n            false\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpdej_vw_9.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpdej_vw_9.rs:9:13\n  |\n9 |             unique.push(x)\n\
    \  |             ^^^^^^^^^^^^^^ expected `bool`, found `()`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0433.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut unique = vec![];\n    for i in l.iter() {\n   \
    \     if !unique.contains(&i) {\n            unique.push(i);\n        }\n    }\n\
    \    unique\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp7q7stlcv.rs:11:5\n   |\n\
    4  | fn unique(l: Vec<isize>) -> Vec<isize> {\n   |                          \
    \   ---------- expected `Vec<isize>` because of return type\n...\n11 |     unique\n\
    \   |     ^^^^^^ expected `isize`, found `&isize`\n   |\n   = note: expected struct\
    \ `Vec<isize>`\n              found struct `Vec<&isize>`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp3q3oyyj0.rs:5:23\n  |\n5 |     l.iter().cloned().dedup()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in l {\n        if !v.contains(&i)\
    \ {\n            v.push(&i);\n        }\n    }\n    v\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpmqwiqnb6.rs:8:20\n  |\n8 |\
    \             v.push(&i);\n  |                    ^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider removing the borrow\n  |\n8 -             v.push(&i);\n8\
    \ +             v.push(i);\n  | \n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut it = l.iter().cloned();\n    it.sort_unstable();\n\
    \    let mut seen = vec![];\n    loop {\n        if seen.iter().all(|&x| x ==\
    \ &*it.next().unwrap()) {\n            break;\n        }\n        seen.push(it.next().unwrap());\n\
    \    }\n    seen.into_iter().collect()\n}\n\nfn main() {\n    let candidate =\
    \ unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_unstable` found for struct `Cloned`\
    \ in the current scope\n --> /tmp/tmpfow6qfqx.rs:6:8\n  |\n6 |     it.sort_unstable();\n\
    \  |        ^^^^^^^^^^^^^ method not found in `Cloned<std::slice::Iter<'_, isize>>`\n\
    \nerror[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmpfow6qfqx.rs:9:39\n\
    \  |\n9 |         if seen.iter().all(|&x| x == &*it.next().unwrap()) {\n  |  \
    \                                     ^^^^^^^^^^^^^^^^^^^\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0599, E0614.\n\
    For more information about an error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut a = l;\n    a.sort_unstable();\n    let mut i =\
    \ 0;\n    while i < a.len() {\n        let b = i;\n        while i + 1 < a.len()\
    \ && a[i] < a[i + 1] {\n            i += 1;\n        }\n        if i == b {\n\
    \            b.swap(b.succ_mut());\n        }\n        i += 1;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `swap` found for type `usize` in the current\
    \ scope\n  --> /tmp/tmpdyp9pye5.rs:14:15\n   |\n14 |             b.swap(b.succ_mut());\n\
    \   |               ^^^^ method not found in `usize`\n\nerror[E0599]: no method\
    \ named `succ_mut` found for type `usize` in the current scope\n  --> /tmp/tmpdyp9pye5.rs:14:22\n\
    \   |\n14 |             b.swap(b.succ_mut());\n   |                      ^^^^^^^^\
    \ method not found in `usize`\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976488
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut r = vec![];\n    l.sort_unstable();\n    for i\
    \ in l {\n        if !r.contains(i) {\n            r.push(i);\n        }\n   \
    \ }\n    r\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_kq435yt.rs:8:24\n  |\n8 |\
    \         if !r.contains(i) {\n  |                        ^\n  |             \
    \           |\n  |                        expected reference, found `isize`\n\
    \  |                        help: consider borrowing here: `&i`\n  |\n  = note:\
    \ expected reference `&_`\n                  found type `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut set = vec![];\n    for i in l {\n        if !set.contains(i)\
    \ {\n            set.push(i);\n        }\n    }\n    set\n}\n\nfn main() {\n \
    \   let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp060twvbm.rs:7:26\n  |\n7 |\
    \         if !set.contains(i) {\n  |                          ^\n  |         \
    \                 |\n  |                          expected reference, found `isize`\n\
    \  |                          help: consider borrowing here: `&i`\n  |\n  = note:\
    \ expected reference `&_`\n                  found type `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut uniques = HashSet::new();\n    for e in l.iter()\
    \ {\n        if !uniques.insert(e).is_some() {\n            uniques.insert(e);\n\
    \        }\n    }\n    uniques.into_iter().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp41eoxvyg.rs:5:23\n  |\n5 |     let mut uniques = HashSet::new();\n \
    \ |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().copied().collect().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n --> /tmp/tmpkoq4404j.rs:5:23\n\
    \  |\n5 |     l.iter().copied().collect().sort_unstable().collect()\n  |     \
    \                  ^^^^^^^ cannot infer type for type parameter `B` declared on\
    \ the associated function `collect`\n  |\n  = note: type must be known at this\
    \ point\nhelp: consider specifying the type argument in the method call\n  |\n\
    5 |     l.iter().copied().collect::<B>().sort_unstable().collect()\n  |      \
    \                        +++++\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().unique().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpgb0y6phb.rs:5:23\n  |\n5 |     l.iter().cloned().unique().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().filter(|&x| l.iter().any(|&y| y != x)).cloned()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n --> /tmp/tmp8y1ynysd.rs:5:62\n  |\n5 |     l.iter().cloned().filter(|&x|\
    \ l.iter().any(|&y| y != x)).cloned()\n  |                                   \
    \                           ^^^^^^ expected reference, found `isize`\n  |\n  =\
    \ note: expected reference `&&_`\n             found reference `&isize`\n  = note:\
    \ required because of the requirements on the impl of `Iterator` for `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n  = note: 1 redundant requirement hidden\n  = note: required because\
    \ of the requirements on the impl of `Iterator` for `Filter<Cloned<std::slice::Iter<'_,\
    \ isize>>, [closure@/tmp/tmp8y1ynysd.rs:5:30: 5:60]>`\n\nerror[E0631]: type mismatch\
    \ in closure arguments\n --> /tmp/tmp8y1ynysd.rs:5:62\n  |\n5 |     l.iter().cloned().filter(|&x|\
    \ l.iter().any(|&y| y != x)).cloned()\n  |                              ------------------------------\
    \  ^^^^^^ expected signature of `for<'r> fn(&'r &_) -> _`\n  |               \
    \               |\n  |                              found signature of `for<'r>\
    \ fn(&'r isize) -> _`\n  |\n  = note: required because of the requirements on\
    \ the impl of `Iterator` for `Filter<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmp8y1ynysd.rs:5:30:\
    \ 5:60]>`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp8y1ynysd.rs:5:5\n  |\n\
    4 | fn unique(l: Vec<isize>) -> Vec<isize> {\n  |                            \
    \ ---------- expected `Vec<isize>` because of return type\n5 |     l.iter().cloned().filter(|&x|\
    \ l.iter().any(|&y| y != x)).cloned()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found struct `Cloned`\n  |\n  = note: expected struct\
    \ `Vec<isize>`\n             found struct `Cloned<Filter<Cloned<std::slice::Iter<'_,\
    \ isize>>, [closure@/tmp/tmp8y1ynysd.rs:5:30: 5:60]>>`\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0271, E0308,\
    \ E0631.\nFor more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().cloned()\n}\n\nfn\
    \ main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpyciilvi9.rs:5:43\n\
    \    |\n5   |       l.iter().cloned().collect::<Vec<_>>().cloned()\n    |    \
    \                                         ^^^^^^ `Vec<isize>` is not an iterator\n\
    \    |\n    = note: the following trait bounds were not satisfied:\n         \
    \   `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>:\
    \ Iterator`\n            `[isize]: Iterator`\n            which is required by\
    \ `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmp_h75do41.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `is_sorted`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \n    for i in l {\n        if !seen.insert(i) {\n            result.push(i);\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp3wcflim5.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = vec![];\n    for i in l.iter() {\n        if\
    \ !v.contains(&i) {\n            v.push(i as isize);\n        }\n    }\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8aui7drv.rs:8:20\n  |\n8 |\
    \             v.push(i as isize);\n  |                    ^^^^^^^^^^\n  |    \
    \                |\n  |                    expected `&isize`, found `isize`\n\
    \  |                    help: consider borrowing here: `&(i as isize)`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp8aui7drv.rs:11:5\n   |\n4  | fn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n   |                             ---------- expected `Vec<isize>`\
    \ because of return type\n...\n11 |     v\n   |     ^ expected `isize`, found\
    \ `&isize`\n   |\n   = note: expected struct `Vec<isize>`\n              found\
    \ struct `Vec<&isize>`\n\nerror[E0606]: casting `&isize` as `isize` is invalid\n\
    \ --> /tmp/tmp8aui7drv.rs:8:20\n  |\n8 |             v.push(i as isize);\n  |\
    \                    -^^^^^^^^^\n  |                    |\n  |               \
    \     cannot cast `&isize` as `isize`\n  |                    help: dereference\
    \ the expression: `*i`\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0606.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().dedup().collect()\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp6hhiy6c2.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().dedup().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().dedup().collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpisu0ac3n.rs:5:14\n  |\n5 |     l.iter().dedup().collect()\n\
    \  |              ^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut unique = vec![];\n    for el in l {\n        if\
    \ !unique.contains(&el) {\n            unique.push(el);\n        }\n    }\n  \
    \  unique\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpk3rda77v.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().unique().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpgb0y6phb.rs:5:23\n  |\n5 |     l.iter().cloned().unique().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut set = HashSet::new();\n    for i in l {\n     \
    \   if !set.contains(&i) {\n            set.insert(i);\n        }\n    }\n   \
    \ set.iter().cloned().collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmposgug_yp.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().filter(|&v| v != l.iter().next().unwrap()).collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpa71x3177.rs:5:40\n  |\n5 |\
    \     l.iter().cloned().filter(|&v| v != l.iter().next().unwrap()).collect()\n\
    \  |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n\
    5 |     l.iter().cloned().filter(|&v| v != *l.iter().next().unwrap()).collect()\n\
    \  |                                        +\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut s = HashSet::new();\n    l.into_iter().for_each(|e|\
    \ {\n        if !s.insert(e) {\n            s.insert(e);\n        }\n    });\n\
    \    s.into_iter().collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp8q84up8i.rs:5:17\n  |\n5 |     let mut s = HashSet::new();\n  |    \
    \             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut ret: Vec<isize> = l.into_iter().collect();\n  \
    \  let mut seen: HashSet<_> = HashSet::new();\n    for v in ret[..] {\n      \
    \  if !seen.insert(v).expect(\"Duplicate element\") {\n            ret.push(v);\n\
    \        }\n    }\n    ret\n}\n\nfn main() {\n    let candidate = unique;\n  \
    \  assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9,\
    \ 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpu2h4jjph.rs:6:19\n\
    \  |\n6 |     let mut seen: HashSet<_> = HashSet::new();\n  |                \
    \   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpu2h4jjph.rs:6:32\n  |\n6 |  \
    \   let mut seen: HashSet<_> = HashSet::new();\n  |                          \
    \      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0277]: the size for values\
    \ of type `[isize]` cannot be known at compilation time\n --> /tmp/tmpu2h4jjph.rs:7:14\n\
    \  |\n7 |     for v in ret[..] {\n  |              ^^^^^^^ expected an implementor\
    \ of trait `IntoIterator`\n  |\n  = note: the trait bound `[isize]: IntoIterator`\
    \ is not satisfied\n  = note: required because of the requirements on the impl\
    \ of `IntoIterator` for `[isize]`\nhelp: consider borrowing here\n  |\n7 |   \
    \  for v in &ret[..] {\n  |              +\n7 |     for v in &mut ret[..] {\n\
    \  |              ++++\n\nerror[E0277]: `[isize]` is not an iterator\n --> /tmp/tmpu2h4jjph.rs:7:14\n\
    \  |\n7 |     for v in ret[..] {\n  |              ^^^^^^^ expected an implementor\
    \ of trait `IntoIterator`\n  |\n  = note: the trait bound `[isize]: IntoIterator`\
    \ is not satisfied\n  = note: required because of the requirements on the impl\
    \ of `IntoIterator` for `[isize]`\nhelp: consider borrowing here\n  |\n7 |   \
    \  for v in &ret[..] {\n  |              +\n7 |     for v in &mut ret[..] {\n\
    \  |              ++++\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0412, E0433.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmp_h75do41.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `is_sorted`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<isize>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpvabjc96g.rs:5:47\n  |\n5 |     l.iter().cloned().collect::<Vec<isize>>().sorted().collect()\n\
    \  |                                               ^^^^^^ help: there is an associated\
    \ function with a similar name: `is_sorted`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut ret = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for el in l {\n        if !seen.insert(el).is_inserted() {\n            ret.push(el);\n\
    \        }\n    }\n    ret\n}\n\nfn main() {\n    let candidate = unique;\n  \
    \  assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9,\
    \ 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpbzr3andj.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut s = vec![];\n    for i in l {\n        if !s.contains(&i)\
    \ {\n            s.push(i);\n        }\n    }\n    s\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpehib5lal.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.sort_unstable();\n    let mut l = l;\n    l.retain(|&x|\
    \ *x == l.first().unwrap());\n    l\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmpyvst5oxg.rs:7:19\n\
    \  |\n7 |     l.retain(|&x| *x == l.first().unwrap());\n  |                  \
    \ ^^\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    vec!l.iter().cloned().dedup().collect()\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `(`, `[`, or `{`, found `l`\n --> /tmp/tmp7akky2f6.rs:5:9\n\
    \  |\n5 |     vec!l.iter().cloned().dedup().collect()\n  |         ^ expected\
    \ one of `(`, `[`, or `{`\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut unique_elems = vec![l.len()];\n    for e in l {\n\
    \        unique_elems[e] = e;\n    }\n    unique_elems.sort();\n    unique_elems\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[usize]` cannot be indexed by `isize`\n --> /tmp/tmpenfeu98_.rs:7:9\n\
    \  |\n7 |         unique_elems[e] = e;\n  |         ^^^^^^^^^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[usize]>`\
    \ is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<usize>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpenfeu98_.rs:10:5\n\
    \   |\n4  | fn unique(l: Vec<isize>) -> Vec<isize> {\n   |                   \
    \          ---------- expected `Vec<isize>` because of return type\n...\n10 |\
    \     unique_elems\n   |     ^^^^^^^^^^^^ expected `isize`, found `usize`\n  \
    \ |\n   = note: expected struct `Vec<isize>`\n              found struct `Vec<usize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    let\
    \ mut v: Vec<_> = l.iter().cloned().collect();\n\n    v.sort_unstable();\n   \
    \ v.dedup();\n\n    for v in v {\n        if !seen.insert(v).is_ok() {\n     \
    \       v.push(i32::MIN);\n        }\n    }\n\n    v.iter().cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpwm98x6gp.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpwm98x6gp.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0599]: no\
    \ method named `push` found for type `isize` in the current scope\n  --> /tmp/tmpwm98x6gp.rs:13:15\n\
    \   |\n13 |             v.push(i32::MIN);\n   |               ^^^^ method not\
    \ found in `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0412, E0433, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut s = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for elt in l {\n        if seen.insert(elt).is_ok() {\n            s.push(elt);\n\
    \        }\n    }\n    s\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp9xsfxn5z.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut a = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  a.sort_unstable();\n    a.dedup();\n    a\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for i in\
    \ l {\n        if !result.contains(&i) {\n            result.push(i);\n      \
    \  }\n    }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpjefr15ht.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = vec![];\n    for i in l {\n        if !v.contains(&i)\
    \ {\n            v.push(i as isize);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp7e5h5sxz.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    l.iter().cloned().filter(|&i|\
    \ {\n        if !seen.contains(i) {\n            seen.insert(i);\n           \
    \ true\n        } else {\n            false\n        }\n    }).collect()\n}\n\n\
    fn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpn0xne51b.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpn0xne51b.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.to_vec();\n    v.sort();\n    v.dedup();\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut iter = l.iter();\n    iter.sort_unstable();\n\n\
    \    let mut res = Vec::new();\n    let mut current_item = 0;\n    let mut previous\
    \ = Some(iter.next().unwrap());\n\n    for val in iter {\n        if previous\
    \ != Some(val) {\n            previous = Some(val);\n            res.push(val);\n\
    \            current_item++;\n        } else {\n            // Skip duplicates\n\
    \            continue;\n        }\n    }\n\n    res.truncate(current_item);\n\
    \    res\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmp6g3z2cac.rs:16:25\n\
    \   |\n16 |             current_item++;\n   |                         ^^ not a\
    \ valid postfix operator\n   |\nhelp: use `+= 1` instead\n   |\n16 |         \
    \    { let tmp = current_item; current_item += 1; tmp };\n   |             +++++++++++\
    \             ~~~~~~~~~~~~~~~~~~~~~~~~~~\n16 -             current_item++;\n16\
    \ +             current_item += 1;\n   | \n\nerror[E0599]: no method named `sort_unstable`\
    \ found for struct `std::slice::Iter` in the current scope\n --> /tmp/tmp6g3z2cac.rs:6:10\n\
    \  |\n6 |     iter.sort_unstable();\n  |          ^^^^^^^^^^^^^ method not found\
    \ in `std::slice::Iter<'_, isize>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp6g3z2cac.rs:24:5\n\
    \   |\n4  | fn unique(l: Vec<isize>) -> Vec<isize> {\n   |                   \
    \          ---------- expected `Vec<isize>` because of return type\n...\n24 |\
    \     res\n   |     ^^^ expected `isize`, found `&isize`\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<&isize>`\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    vec!l.iter().cloned().dedup().collect()\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `(`, `[`, or `{`, found `l`\n --> /tmp/tmp7akky2f6.rs:5:9\n\
    \  |\n5 |     vec!l.iter().cloned().dedup().collect()\n  |         ^ expected\
    \ one of `(`, `[`, or `{`\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for e in l.iter().cloned()\
    \ {\n        if !v.contains(&e) {\n            v.push(e);\n        }\n    }\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9l3fhb6w.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for (i, elt) in l.into_iter().enumerate()\
    \ {\n        if !v.contains(elt) {\n            v.push(elt);\n        }\n    }\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvaxqo3cm.rs:7:24\n  |\n7 |\
    \         if !v.contains(elt) {\n  |                        ^^^\n  |         \
    \               |\n  |                        expected reference, found `isize`\n\
    \  |                        help: consider borrowing here: `&elt`\n  |\n  = note:\
    \ expected reference `&_`\n                  found type `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.iter().cloned().collect::<Vec<isize>>()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 2, 3, 3, 3, 5, 5, 9, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp8z4smcza.rs:12:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `()` is not an iterator\n --> /tmp/tmpr0vqc0g0.rs:5:59\n\
    \  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort_unstable().collect()\n\
    \  |                                                           ^^^^^^^ `()` is\
    \ not an iterator\n  |\n  = note: the following trait bounds were not satisfied:\n\
    \          `(): Iterator`\n          which is required by `&mut (): Iterator`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: Vec<isize> = Vec::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.contains(&x)).cloned().collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n --> /tmp/tmp2t8pdluu.rs:6:55\n  |\n6 |     l.iter().cloned().filter(|&x|\
    \ !seen.contains(&x)).cloned().collect()\n  |                                \
    \                       ^^^^^^ expected reference, found `isize`\n  |\n  = note:\
    \ expected reference `&&_`\n             found reference `&isize`\n  = note: required\
    \ because of the requirements on the impl of `Iterator` for `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n  = note: 1 redundant requirement hidden\n  = note: required because\
    \ of the requirements on the impl of `Iterator` for `Filter<Cloned<std::slice::Iter<'_,\
    \ isize>>, [closure@/tmp/tmp2t8pdluu.rs:6:30: 6:53]>`\n\nerror[E0631]: type mismatch\
    \ in closure arguments\n --> /tmp/tmp2t8pdluu.rs:6:55\n  |\n6 |     l.iter().cloned().filter(|&x|\
    \ !seen.contains(&x)).cloned().collect()\n  |                              -----------------------\
    \  ^^^^^^ expected signature of `for<'r> fn(&'r &_) -> _`\n  |               \
    \               |\n  |                              found signature of `for<'r>\
    \ fn(&'r isize) -> _`\n  |\n  = note: required because of the requirements on\
    \ the impl of `Iterator` for `Filter<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmp2t8pdluu.rs:6:30:\
    \ 6:53]>`\n\nerror[E0599]: the method `collect` exists for struct `Cloned<Filter<Cloned<std::slice::Iter<'_,\
    \ isize>>, [closure@/tmp/tmp2t8pdluu.rs:6:30: 6:53]>>`, but its trait bounds were\
    \ not satisfied\n  --> /tmp/tmp2t8pdluu.rs:6:64\n   |\n6  |        l.iter().cloned().filter(|&x|\
    \ !seen.contains(&x)).cloned().collect()\n   |                               \
    \                                    ^^^^^^^ method cannot be called on `Cloned<Filter<Cloned<std::slice::Iter<'_,\
    \ isize>>, [closure@/tmp/tmp2t8pdluu.rs:6:30: 6:53]>>` due to unsatisfied trait\
    \ bounds\n   |\n   = note: the following trait bounds were not satisfied:\n  \
    \         `<Filter<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmp2t8pdluu.rs:6:30:\
    \ 6:53]> as Iterator>::Item = &_`\n           which is required by `Cloned<Filter<Cloned<std"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp3q3oyyj0.rs:5:23\n  |\n5 |     l.iter().cloned().dedup()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l.into_iter().cloned().collect::<Vec<_>>();\n\
    \    l.sort_unstable();\n    l.dedup();\n    l\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::vec::IntoIter<isize> as Iterator>::Item\
    \ == &_`\n    --> /tmp/tmpvms0mcua.rs:5:31\n     |\n5    |     let mut l = l.into_iter().cloned().collect::<Vec<_>>();\n\
    \     |                               ^^^^^^ expected reference, found `isize`\n\
    \     |\n     = note: expected reference `&_`\n                     found type\
    \ `isize`\nnote: required by a bound in `cloned`\n\nerror[E0599]: the method `collect`\
    \ exists for struct `Cloned<std::vec::IntoIter<isize>>`, but its trait bounds\
    \ were not satisfied\n  --> /tmp/tmpvms0mcua.rs:5:40\n   |\n5  |       let mut\
    \ l = l.into_iter().cloned().collect::<Vec<_>>();\n   |                      \
    \                    ^^^^^^^ method cannot be called on `Cloned<std::vec::IntoIter<isize>>`\
    \ due to unsatisfied trait bounds\n   |\n   = note: the following trait bounds\
    \ were not satisfied:\n           `<std::vec::IntoIter<isize> as Iterator>::Item\
    \ = &_`\n           which is required by `Cloned<std::vec::IntoIter<isize>>: Iterator`\n\
    \           `Cloned<std::vec::IntoIter<isize>>: Iterator`\n           which is\
    \ required by `&mut Cloned<std::vec::IntoIter<isize>>: Iterator`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0271, E0599.\n\
    For more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().unique()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpvbisjmx0.rs:5:23\n  |\n5 |     l.iter().cloned().unique()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.dedup().collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `()` is not an iterator\n --> /tmp/tmpd8cc5sqn.rs:5:15\n\
    \  |\n5 |     l.dedup().collect()\n  |               ^^^^^^^ `()` is not an iterator\n\
    \  |\n  = note: the following trait bounds were not satisfied:\n          `():\
    \ Iterator`\n          which is required by `&mut (): Iterator`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut set = Set::new();\n    let mut res = Vec::new();\n\
    \    for (i, _) in l.iter().enumerate() {\n        if !set.insert(l[i]) {\n  \
    \          res.push(l[i]);\n        }\n    }\n    res\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Set`\n --> /tmp/tmpp8wb4xlr.rs:5:19\n\
    \  |\n5 |     let mut set = Set::new();\n  |                   ^^^ use of undeclared\
    \ type `Set`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = vec![];\n    for i in l.iter() {\n      \
    \  if !res.contains(i) {\n            res.push(i);\n        }\n    }\n    res\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpl6im8186.rs:8:22\n  |\n8 |\
    \             res.push(i);\n  |                      ^ expected `isize`, found\
    \ `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n8 |           \
    \  res.push(*i);\n  |                      +\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut i = Vec::new();\n    let mut j = l.len();\n   \
    \ while i != j {\n        let mut k = i;\n        while !k.is_empty() && k.last().unwrap()\
    \ <= k.last().unwrap() + 1 {\n            i.remove(k.last().unwrap());\n     \
    \       j.insert(k.last().unwrap(), k.last().unwrap());\n        }\n        j\
    \ -= 1;\n    }\n    j\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `Vec<_>` with `usize`\n --> /tmp/tmppss28biq.rs:7:13\n\
    \  |\n7 |     while i != j {\n  |             ^^ no implementation for `Vec<_>\
    \ == usize`\n  |\n  = help: the trait `PartialEq<usize>` is not implemented for\
    \ `Vec<_>`\n  = help: the following other types implement trait `PartialEq<Rhs>`:\n\
    \            <Vec<T, A1> as PartialEq<Vec<U, A2>>>\n            <Vec<T, A> as\
    \ PartialEq<&[U; N]>>\n            <Vec<T, A> as PartialEq<&[U]>>\n          \
    \  <Vec<T, A> as PartialEq<&mut [U]>>\n            <Vec<T, A> as PartialEq<[U;\
    \ N]>>\n            <Vec<T, A> as PartialEq<[U]>>\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmppss28biq.rs:10:22\n   |\n10 |             i.remove(k.last().unwrap());\n\
    \   |                      ^^^^^^^^^^^^^^^^^ expected `usize`, found reference\n\
    \   |\n   = note:   expected type `usize`\n           found reference `&_`\nhelp:\
    \ consider dereferencing the borrow\n   |\n10 |             i.remove(*k.last().unwrap());\n\
    \   |                      +\n\nerror[E0599]: no method named `insert` found for\
    \ type `usize` in the current scope\n  --> /tmp/tmppss28biq.rs:11:15\n   |\n11\
    \ |             j.insert(k.last().unwrap(), k.last().unwrap());\n   |        \
    \       ^^^^^^ method not found in `usize`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmppss28biq.rs:15:5\n   |\n4  | fn unique(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |                             ---------- expected `Vec<isize>` because\
    \ of return type\n...\n15 |     j\n   |     ^ expected struct `Vec`, found `usize`\n\
    \   |\n   = note: expected struct `Vec<isize>`\n                found type `usize`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308, E0599.\nFor more information about an error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmp_h75do41.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `is_sorted`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l.clone();\n    l.sort();\n    l.dedup();\n\
    \    l\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.sort_unstable();\n\
    \    let mut l = l;\n    while let Some(el) = l.iter().cloned() {\n        if\
    \ !seen.insert(el).inserted {\n            l.retain(|x| x == el);\n        }\n\
    \    }\n    l\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpgqxjl7wd.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpgqxjl7wd.rs:8:15\n  |\n8 |     while let Some(el) = l.iter().cloned()\
    \ {\n  |               ^^^^^^^^   ----------------- this expression has type `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n  |               |\n  |               expected struct `Cloned`, found\
    \ enum `Option`\n  |\n  = note: expected struct `Cloned<std::slice::Iter<'_, isize>>`\n\
    \               found enum `Option<_>`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0433.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<isize>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpvabjc96g.rs:5:47\n  |\n5 |     l.iter().cloned().collect::<Vec<isize>>().sorted().collect()\n\
    \  |                                               ^^^^^^ help: there is an associated\
    \ function with a similar name: `is_sorted`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for (i, &e) in l.iter().enumerate()\
    \ {\n        if !v.contains(&e) {\n            v.push(e);\n        }\n    }\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpjzrw_b8w.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut ret = l;\n    ret.sort();\n    ret.dedup();\n \
    \   ret\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976488
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.iter().cloned().collect();\n    v.sort();\n\
    \    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n --> /tmp/tmpe6ufmbp7.rs:6:5\n \
    \ |\n5 |     let mut v = l.iter().cloned().collect();\n  |         ----- consider\
    \ giving `v` a type\n6 |     v.sort();\n  |     ^ cannot infer type\n  |\n  =\
    \ note: type must be known at this point\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut unique = l.clone();\n    unique.sort();\n    unique\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 2, 3, 3, 3, 5, 5, 9, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp53sxa5rf.rs:12:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter()\n        .cloned()\n        .enumerate()\n   \
    \     .filter_map(|(i, e)| {\n            if *e == i { return None } else { Some(*e)\
    \ }\n        })\n        .collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmp6kfac7bc.rs:9:16\n\
    \  |\n9 |             if *e == i { return None } else { Some(*e) }\n  |      \
    \          ^^\n\nerror[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmp6kfac7bc.rs:9:52\n\
    \  |\n9 |             if *e == i { return None } else { Some(*e) }\n  |      \
    \                                              ^^\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0614`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<isize>>().iter()\n    \
    \    .cloned().filter(|&x| *x != l.last().unwrap()).collect::<Vec<isize>>()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmp723zekp8.rs:6:31\n\
    \  |\n6 |         .cloned().filter(|&x| *x != l.last().unwrap()).collect::<Vec<isize>>()\n\
    \  |                               ^^\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    result.push(*l.iter().cloned().collect::<Vec<_>>());\n\
    \    let mut last = Vec::new();\n    for v in l {\n        if !result.contains(&v)\
    \ {\n            result.push(v);\n            last.push(v);\n        }\n    }\n\
    \    if !last.is_empty() {\n        result.push(*last.iter().cloned().collect::<Vec<_>>());\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the size for values of type `[isize]` cannot be known at\
    \ compilation time\n   --> /tmp/tmp98gou9w3.rs:6:17\n    |\n6   |     result.push(*l.iter().cloned().collect::<Vec<_>>());\n\
    \    |            ---- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size\
    \ known at compile-time\n    |            |\n    |            required by a bound\
    \ introduced by this call\n    |\n    = help: the trait `Sized` is not implemented\
    \ for `[isize]`\nnote: required by a bound in `Vec::<T, A>::push`\n\nerror[E0277]:\
    \ the size for values of type `[isize]` cannot be known at compilation time\n\
    \   --> /tmp/tmp98gou9w3.rs:5:22\n    |\n5   |     let mut result = Vec::new();\n\
    \    |                      ^^^^^^^^ doesn't have a size known at compile-time\n\
    \    |\n    = help: the trait `Sized` is not implemented for `[isize]`\nnote:\
    \ required by a bound in `Vec::<T>::new`\n\nerror[E0277]: the size for values\
    \ of type `[isize]` cannot be known at compilation time\n   --> /tmp/tmp98gou9w3.rs:5:22\n\
    \    |\n5   |     let mut result = Vec::new();\n    |                      ^^^\
    \ doesn't have a size known at compile-time\n    |\n    = help: the trait `Sized`\
    \ is not implemented for `[isize]`\nnote: required by a bound in `Vec`\n\nerror[E0599]:\
    \ no method named `contains` found for struct `Vec` in the current scope\n -->\
    \ /tmp/tmp98gou9w3.rs:9:20\n  |\n9 |         if !result.contains(&v) {\n  |  \
    \                  ^^^^^^^^ method not found in `Vec<[isize]>`\n\nerror[E0599]:\
    \ the method `push` exists for struct `Vec<[isize]>`, but its trait bounds were\
    \ not satisfied\n  --> /tmp/tmp98gou9w3.rs:10:20\n   |\n10 |             result.push(v);\n\
    \   |                    ^^^^ method cannot be called on `Vec<[isize]>` due to\
    \ unsatisfied trait bounds\n   |\n   = note: the following trait bounds were not\
    \ satisfied:\n           `[isize]: Sized`\n\nerror[E0599]: the method `push` exists\
    \ for struct `Vec<[isize]>`, but its trait bounds were not satisfied\n  --> /tmp/tmp98gou9w3.rs:15:16\n\
    \   |\n15 |         result.push(*last.iter().cloned().collect::<Vec<_>>());\n\
    \   |                ^^^^ method cannot be called"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    seen.insert(0);\n\
    \    l.sort_unstable();\n    l.dedup(&mut seen);\n    vec![..seen.iter().cloned().collect::<Vec<_>>()]\
    \ // cloned so we don't borrow any lifetimes\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp3nqpxlic.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp3nqpxlic.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0061]: this\
    \ function takes 0 arguments but 1 argument was supplied\n    --> /tmp/tmp3nqpxlic.rs:8:7\n\
    \     |\n8    |     l.dedup(&mut seen);\n     |       ^^^^^ --------- supplied\
    \ 1 argument\n     |       |\n     |       expected 0 arguments\n     |\nnote:\
    \ associated function defined here\n\nerror[E0308]: mismatched types\n --> /tmp/tmp3nqpxlic.rs:9:10\n\
    \  |\n9 |     vec![..seen.iter().cloned().collect::<Vec<_>>()] // cloned so we\
    \ don't borrow any lifetimes\n  |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found struct `RangeTo`\n  |\n  = note: expected type `isize`\n\
    \           found struct `RangeTo<_>`\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0061, E0308, E0412, E0433.\nFor more\
    \ information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    if let Some(ref mut m) = HashMap::new() {\n        for\
    \ elt in l {\n            if let Some(&mut v) = m.entry(elt).or_insert(()) {\n\
    \                v.push(i32::min_value());\n            } else {\n           \
    \     let mut v: Vec<isize> = Vec::new();\n                v.push(i32::min_value());\n\
    \                m.insert(elt, v);\n            }\n        }\n        for (elt,\
    \ v) in m.iter() {\n            if !v.is_empty() {\n                v.sort();\n\
    \            }\n        }\n        let mut r = vec![];\n        for elt in m.keys()\
    \ {\n            if let Some(&mut v) = m.entry(elt).or_insert(()) {\n        \
    \        if !v.is_empty() {\n                    v.sort();\n                 \
    \   for v in v.into_iter() {\n                        r.push(*v);\n          \
    \          }\n                }\n            }\n        }\n        r\n    } else\
    \ {\n        l\n    }\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpbtz29tcs.rs:5:30\n  |\n5 |     if let Some(ref mut m) = HashMap::new()\
    \ {\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpbtz29tcs.rs:11:24\n   |\n11 |\
    \                 v.push(i32::min_value());\n   |                        ^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `i32`\n   |\nhelp: you can convert an `i32` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n11 |                 v.push(i32::min_value().try_into().unwrap());\n\
    \   |                                        ++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0433.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmp_h75do41.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `is_sorted`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().unique().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpgb0y6phb.rs:5:23\n  |\n5 |     l.iter().cloned().unique().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort_unstable().dedup()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for unit type `()` in the current\
    \ scope\n --> /tmp/tmprr1rlyea.rs:5:59\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort_unstable().dedup()\n\
    \  |                                                           ^^^^^ method not\
    \ found in `()`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    loop {\n        let mut v\
    \ = l;\n        while !v.is_empty() {\n            if !result.contains(&v[0])\
    \ {\n                result.push(v[0]);\n            }\n            v = v.iter().skip(1);\n\
    \        }\n        if result.is_empty() {\n            break;\n        }\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpotrkyavx.rs:12:17\n   |\n\
    7  |         let mut v = l;\n   |                     - expected due to this value\n\
    ...\n12 |             v = v.iter().skip(1);\n   |                 ^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found struct `Skip`\n   |\n   = note: expected struct\
    \ `Vec<isize>`\n              found struct `Skip<std::slice::Iter<'_, isize>>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 2, 3, 3, 3, 5, 5, 9, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpeh_1q9d4.rs:12:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().cloned().enumerate().filter(|(_, x)|\
    \ x.is_unique())\n        .map(|(_, x)| x).collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n    --> /tmp/tmpcdml9t85.rs:5:23\n     |\n5    |  \
    \   l.iter().cloned().cloned().enumerate().filter(|(_, x)| x.is_unique())\n  \
    \   |                       ^^^^^^ expected reference, found `isize`\n     |\n\
    \     = note: expected reference `&&_`\n                found reference `&isize`\n\
    \     = note: required because of the requirements on the impl of `Iterator` for\
    \ `Cloned<std::slice::Iter<'_, isize>>`\nnote: required by a bound in `cloned`\n\
    \nerror[E0599]: the method `enumerate` exists for struct `Cloned<Cloned<std::slice::Iter<'_,\
    \ isize>>>`, but its trait bounds were not satisfied\n  --> /tmp/tmpcdml9t85.rs:5:32\n\
    \   |\n5  |       l.iter().cloned().cloned().enumerate().filter(|(_, x)| x.is_unique())\n\
    \   |                                  ^^^^^^^^^ method cannot be called on `Cloned<Cloned<std::slice::Iter<'_,\
    \ isize>>>` due to unsatisfied trait bounds\n   |\n   = note: the following trait\
    \ bounds were not satisfied:\n           `<Cloned<std::slice::Iter<'_, isize>>\
    \ as Iterator>::Item = &_`\n           which is required by `Cloned<Cloned<std::slice::Iter<'_,\
    \ isize>>>: Iterator`\n           `Cloned<Cloned<std::slice::Iter<'_, isize>>>:\
    \ Iterator`\n           which is required by `&mut Cloned<Cloned<std::slice::Iter<'_,\
    \ isize>>>: Iterator`\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0271, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().dedup().collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpisu0ac3n.rs:5:14\n  |\n5 |     l.iter().dedup().collect()\n\
    \  |              ^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    vec!{\n        for i in l {\n            if !l.contains(i)\
    \ {\n                *i\n            }\n        }\n    }\n}\n\nfn main() {\n \
    \   let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqqi789qo.rs:7:28\n  |\n7 |\
    \             if !l.contains(i) {\n  |                            ^\n  |     \
    \                       |\n  |                            expected `&isize`, found\
    \ `isize`\n  |                            help: consider borrowing here: `&i`\n\
    \nerror[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmpqqi789qo.rs:8:17\n\
    \  |\n8 |                 *i\n  |                 ^^\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpqqi789qo.rs:6:9\n   |\n6  | /         for i in l {\n7 \
    \ | |             if !l.contains(i) {\n8  | |                 *i\n9  | |     \
    \        }\n10 | |         }\n   | |_________^ expected `isize`, found `()`\n\n\
    error: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0614.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    let mut prev_val = None;\n\
    \    for i in l {\n        if prev_val == Some(i as isize) {\n            continue;\n\
    \        }\n        prev_val = Some(i as isize);\n        v.push(i);\n    }\n\
    \    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpyywe7mid.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sort_unstable().collect()\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_unstable` found for struct `Cloned`\
    \ in the current scope\n --> /tmp/tmp6l_2mqa7.rs:5:23\n  |\n5 |     l.iter().cloned().sort_unstable().collect()\n\
    \  |                       ^^^^^^^^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut i = 0;\n  \
    \  let mut vec = Vec::new();\n    while i < l.len() {\n        if seen.insert(l[i..].iter().cloned().collect()).is_some()\
    \ {\n            vec.push(l[i..i].clone());\n            i += 1;\n        } else\
    \ {\n            i += 1;\n        }\n    }\n    vec\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpsvx4w8mt.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0599]: no\
    \ method named `clone` found for slice `[isize]` in the current scope\n  --> /tmp/tmpsvx4w8mt.rs:10:30\n\
    \   |\n10 |             vec.push(l[i..i].clone());\n   |                     \
    \         ^^^^^ method not found in `[isize]`\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0433, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().dedup().collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpisu0ac3n.rs:5:14\n  |\n5 |     l.iter().dedup().collect()\n\
    \  |              ^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut set = HashSet::new();\n    for e in l {\n     \
    \   set.insert(e);\n    }\n    set.into_iter().cloned().collect()\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpliiwm9e2.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.sort_unstable_by(|a, b| a.partial_cmp(b).unwrap())\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8bo44pn_.rs:5:5\n  |\n4 |\
    \ fn unique(l: Vec<isize>) -> Vec<isize> {\n  |                             ----------\
    \ expected `Vec<isize>` because of return type\n5 |     l.sort_unstable_by(|a,\
    \ b| a.partial_cmp(b).unwrap())\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n\
    \          found unit type `()`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter()\n        .enumerate()\n        .filter_map(|(idx,\
    \ val)| if val == idx { None } else { Some(val) })\n        .cloned()\n      \
    \  .collect()\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpz9uxgdup.rs:7:44\n  |\n7 |\
    \         .filter_map(|(idx, val)| if val == idx { None } else { Some(val) })\n\
    \  |                                            ^^^ expected `isize`, found `usize`\n\
    \nerror[E0277]: can't compare `&isize` with `usize`\n --> /tmp/tmpz9uxgdup.rs:7:41\n\
    \  |\n7 |         .filter_map(|(idx, val)| if val == idx { None } else { Some(val)\
    \ })\n  |                                         ^^ no implementation for `&isize\
    \ == usize`\n  |\n  = help: the trait `PartialEq<usize>` is not implemented for\
    \ `&isize`\n  = help: the following other types implement trait `PartialEq<Rhs>`:\n\
    \            f32\n            f64\n            i128\n            i16\n       \
    \     i32\n            i64\n            i8\n            isize\n          and 6\
    \ others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for elt in l {\n        if !seen.insert(elt).unwrap() {\n            result.push(elt);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpt92a90hc.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.into_iter().collect::<Vec<_>>().into_iter().cloned().dedup().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::vec::IntoIter<isize> as Iterator>::Item\
    \ == &_`\n    --> /tmp/tmp3wxog71l.rs:5:51\n     |\n5    |     l.into_iter().collect::<Vec<_>>().into_iter().cloned().dedup().collect()\n\
    \     |                                                   ^^^^^^ expected reference,\
    \ found `isize`\n     |\n     = note: expected reference `&_`\n              \
    \       found type `isize`\nnote: required by a bound in `cloned`\n\nerror[E0599]:\
    \ no method named `dedup` found for struct `Cloned` in the current scope\n -->\
    \ /tmp/tmp3wxog71l.rs:5:60\n  |\n5 |     l.into_iter().collect::<Vec<_>>().into_iter().cloned().dedup().collect()\n\
    \  |                                                            ^^^^^ method not\
    \ found in `Cloned<std::vec::IntoIter<isize>>`\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0271, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut iter = l.iter().cloned();\n    iter.dedup();\n\
    \    iter\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpzcjpcxqv.rs:6:10\n  |\n6 |     iter.dedup();\n \
    \ |          ^^^^^ method not found in `Cloned<std::slice::Iter<'_, isize>>`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpzcjpcxqv.rs:7:5\n  |\n4 | fn unique(l:\
    \ Vec<isize>) -> Vec<isize> {\n  |                             ---------- expected\
    \ `Vec<isize>` because of return type\n...\n7 |     iter\n  |     ^^^^ expected\
    \ struct `Vec`, found struct `Cloned`\n  |\n  = note: expected struct `Vec<isize>`\n\
    \             found struct `Cloned<std::slice::Iter<'_, isize>>`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().copied().collect::<Vec<isize>>().sorted().dedup()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpugyuv2cs.rs:5:47\n  |\n5 |     l.iter().copied().collect::<Vec<isize>>().sorted().dedup()\n\
    \  |                                               ^^^^^^ help: there is an associated\
    \ function with a similar name: `is_sorted`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut it = l.iter().cloned().collect::<BTreeSet<_>>();\n\
    \    it.sort();\n    it\n        .into_iter()\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `BTreeSet` in this scope\n --> /tmp/tmpruh1c6tv.rs:5:46\n\
    \  |\n5 |     let mut it = l.iter().cloned().collect::<BTreeSet<_>>();\n  |  \
    \                                            ^^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::BTreeSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    l.sort_unstable();\n\
    \    l.dedup_by(|x| seen.insert(x));\n    l.iter().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp_2r1ir9p.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp_2r1ir9p.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0593]: closure\
    \ is expected to take 2 arguments, but it takes 1 argument\n --> /tmp/tmp_2r1ir9p.rs:7:7\n\
    \  |\n7 |     l.dedup_by(|x| seen.insert(x));\n  |       ^^^^^^^^ --- takes 1\
    \ argument\n  |       |\n  |       expected closure that takes 2 arguments\n\n\
    error[E0277]: a value of type `Vec<isize>` cannot be built from an iterator over\
    \ elements of type `&isize`\n    --> /tmp/tmp_2r1ir9p.rs:8:14\n     |\n8    |\
    \     l.iter().collect()\n     |              ^^^^^^^ value of type `Vec<isize>`\
    \ cannot be built from `std::iter::Iterator<Item=&isize>`\n     |\n     = help:\
    \ the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n     =\
    \ help: the trait `FromIterator<T>` is implemented for `Vec<T>`\nnote: required\
    \ by a bound in `collect`\n\nerror: aborting due to 4 previous errors\n\nSome\
    \ errors have detailed explanations: E0277, E0412, E0433, E0593.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().dedup()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmp6yhhrgld.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().dedup()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `is_sorted`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut d = std::collections::HashSet::new();\n    for\
    \ &x in l {\n        d.insert(x);\n    }\n    d.into_iter().collect()\n}\n\nfn\
    \ main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9fpy3085.rs:6:9\n  |\n6 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut vec = l.iter().cloned().collect::<Vec<_>>();\n\
    \    vec.sort();\n    vec\n}\n\nfn main() {\n    let candidate = unique;\n   \
    \ assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9,\
    \ 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 2, 3, 3, 3, 5, 5, 9, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpr19l5j54.rs:12:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l.to_owned();\n    let mut unique = Vec::new();\n\
    \    while l.len() > 0 {\n        let k = l[0];\n        let index = unique.iter().position(|&x|\
    \ *x == k).unwrap();\n        if index == 0 {\n            unique.push(k);\n \
    \       } else {\n            l.remove(0); // remove from original list\n    \
    \        unique[index] = k;\n        }\n    }\n    unique\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed for `&T`\n --> /tmp/tmpdqkebvdm.rs:9:45\n\
    \  |\n9 |         let index = unique.iter().position(|&x| *x == k).unwrap();\n\
    \  |                                             ^^ consider giving this closure\
    \ parameter the explicit type `&T`, with the type parameters specified\n  |\n\
    \  = note: type must be known at this point\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    let mut curr = l[0];\n  \
    \  result.push(curr);\n    for el in &l[1..] {\n        if curr == el {\n    \
    \        continue;\n        }\n        result.push(curr);\n        curr = el;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp13in5654.rs:9:20\n  |\n9 |\
    \         if curr == el {\n  |                    ^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n9 |         if curr == *el\
    \ {\n  |                    +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp13in5654.rs:13:16\n\
    \   |\n6  |     let mut curr = l[0];\n   |                    ---- expected due\
    \ to this value\n...\n13 |         curr = el;\n   |                ^^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    13 |         curr = *el;\n   |                +\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut vec = Vec::new();\n    for elt in l {\n       \
    \ if !vec.contains(&elt) {\n            vec.push(elt);\n        }\n    }\n   \
    \ vec\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp7vr2l_0x.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().dedup().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `()` is not an iterator\n --> /tmp/tmpg979d4hp.rs:5:51\n\
    \  |\n5 |     l.iter().cloned().collect::<Vec<_>>().dedup().collect()\n  |   \
    \                                                ^^^^^^^ `()` is not an iterator\n\
    \  |\n  = note: the following trait bounds were not satisfied:\n          `():\
    \ Iterator`\n          which is required by `&mut (): Iterator`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut ret = vec![];\n    let mut seen = vec![];\n\n \
    \   for (i, elt) in l.iter().enumerate() {\n        if !seen.contains(&elt) {\n\
    \            ret.push(elt);\n            seen.push(elt);\n        }\n    }\n \
    \   ret\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpjik9zg8w.rs:14:5\n   |\n\
    4  | fn unique(l: Vec<isize>) -> Vec<isize> {\n   |                          \
    \   ---------- expected `Vec<isize>` because of return type\n...\n14 |     ret\n\
    \   |     ^^^ expected `isize`, found `&isize`\n   |\n   = note: expected struct\
    \ `Vec<isize>`\n              found struct `Vec<&isize>`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut s = std::collections::HashSet::new();\n    for\
    \ elt in l {\n        if !s.insert(elt).is_some() {\n            s.push(elt);\n\
    \        }\n    }\n    s.into_iter().cloned().collect()\n}\n\nfn main() {\n  \
    \  let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_some` found for type `bool` in the current\
    \ scope\n --> /tmp/tmp_pejnk32.rs:7:27\n  |\n7 |         if !s.insert(elt).is_some()\
    \ {\n  |                           ^^^^^^^ method not found in `bool`\n\nerror[E0599]:\
    \ no method named `push` found for struct `HashSet` in the current scope\n -->\
    \ /tmp/tmp_pejnk32.rs:8:15\n  |\n8 |             s.push(elt);\n  |           \
    \    ^^^^ method not found in `HashSet<isize>`\n\nerror[E0271]: type mismatch\
    \ resolving `<std::collections::hash_set::IntoIter<isize> as Iterator>::Item ==\
    \ &_`\n    --> /tmp/tmp_pejnk32.rs:11:19\n     |\n11   |     s.into_iter().cloned().collect()\n\
    \     |                   ^^^^^^ expected reference, found `isize`\n     |\n \
    \    = note: expected reference `&_`\n                     found type `isize`\n\
    note: required by a bound in `cloned`\n\nerror[E0599]: the method `collect` exists\
    \ for struct `Cloned<std::collections::hash_set::IntoIter<isize>>`, but its trait\
    \ bounds were not satisfied\n    --> /tmp/tmp_pejnk32.rs:11:28\n     |\n11   |\
    \       s.into_iter().cloned().collect()\n     |                             \
    \ ^^^^^^^ method cannot be called on `Cloned<std::collections::hash_set::IntoIter<isize>>`\
    \ due to unsatisfied trait bounds\n     |\n     = note: the following trait bounds\
    \ were not satisfied:\n             `<std::collections::hash_set::IntoIter<isize>\
    \ as Iterator>::Item = &_`\n             which is required by `Cloned<std::collections::hash_set::IntoIter<isize>>:\
    \ Iterator`\n             `Cloned<std::collections::hash_set::IntoIter<isize>>:\
    \ Iterator`\n             which is required by `&mut Cloned<std::collections::hash_set::IntoIter<isize>>:\
    \ Iterator`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed\
    \ explanations: E0271, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.dedup().collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `()` is not an iterator\n --> /tmp/tmpd8cc5sqn.rs:5:15\n\
    \  |\n5 |     l.dedup().collect()\n  |               ^^^^^^^ `()` is not an iterator\n\
    \  |\n  = note: the following trait bounds were not satisfied:\n          `():\
    \ Iterator`\n          which is required by `&mut (): Iterator`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<isize>>().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `()` is not an iterator\n --> /tmp/tmpktfdlgs6.rs:5:63\n\
    \  |\n5 |     l.iter().cloned().collect::<Vec<isize>>().sort_unstable().collect()\n\
    \  |                                                               ^^^^^^^ `()`\
    \ is not an iterator\n  |\n  = note: the following trait bounds were not satisfied:\n\
    \          `(): Iterator`\n          which is required by `&mut (): Iterator`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut vec = l.iter().cloned().collect::<Vec<_>>();\n\
    \    std::mem::swap(&mut vec, &mut vec.sort());\n    vec\n}\n\nfn main() {\n \
    \   let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpuxybwzjo.rs:6:30\n  |\n6 |\
    \     std::mem::swap(&mut vec, &mut vec.sort());\n  |                        \
    \      ^^^^^^^^^^^^^^^ expected struct `Vec`, found `()`\n  |\n  = note: expected\
    \ mutable reference `&mut Vec<isize>`\n             found mutable reference `&mut\
    \ ()`\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpai89edlp.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpai89edlp.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    v.extend_from_slice(l.iter().cloned());\n    for x in &mut v {\n        if\
    \ !seen.insert(x).unwrap_or(false) {\n            *x = *x;\n        }\n    }\n\
    \    v.iter().collect()\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpgz19q3mu.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpgz19q3mu.rs:7:25\n  |\n7 |     v.extend_from_slice(l.iter().cloned());\n\
    \  |                         ^^^^^^^^^^^^^^^^^ expected `&[_]`, found struct `Cloned`\n\
    \  |\n  = note: expected reference `&[_]`\n                found struct `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&_`\n    --> /tmp/tmpgz19q3mu.rs:13:14\n\
    \     |\n13   |     v.iter().collect()\n     |              ^^^^^^^ value of type\
    \ `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&_>`\n     |\n \
    \    = help: the trait `FromIterator<&_>` is not implemented for `Vec<isize>`\n\
    \     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\nnote: required\
    \ by a bound in `collect`\n\nerror: aborting due to 3 previous errors\n\nSome\
    \ errors have detailed explanations: E0277, E0308, E0433.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut set = HashSet::new();\n    set.insert(l.iter().cloned().collect::<Vec<_>>());\n\
    \    l.iter().filter(|x| !set.remove(x)).cloned().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp9zevnnwh.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut s = l.to_vec();\n    unique(&mut s).unwrap()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxcss9tbe.rs:6:12\n  |\n6 |\
    \     unique(&mut s).unwrap()\n  |            ^^^^^^ expected struct `Vec`, found\
    \ `&mut Vec<isize>`\n  |\n  = note:         expected struct `Vec<isize>`\n   \
    \       found mutable reference `&mut Vec<isize>`\nhelp: consider removing the\
    \ borrow\n  |\n6 -     unique(&mut s).unwrap()\n6 +     unique(s).unwrap()\n \
    \ | \n\nerror[E0599]: no method named `unwrap` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmpxcss9tbe.rs:6:20\n  |\n6 |     unique(&mut s).unwrap()\n\
    \  |                    ^^^^^^ help: there is an associated function with a similar\
    \ name: `swap`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0308, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l.clone();\n    l.sort();\n    l.dedup();\n\
    \    l\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    std::mem::swap(&mut v, &mut v.iter_mut());\n\
    \    v.sort_unstable();\n    let mut v = v;\n    v.dedup();\n    v\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpf7fgl90g.rs:6:28\n  |\n6 |\
    \     std::mem::swap(&mut v, &mut v.iter_mut());\n  |                        \
    \    ^^^^^^^^^^^^^^^^^ expected struct `Vec`, found struct `std::slice::IterMut`\n\
    \  |\n  = note: expected mutable reference `&mut Vec<isize>`\n             found\
    \ mutable reference `&mut std::slice::IterMut<'_, isize>`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `()` is not an iterator\n --> /tmp/tmpd1st6hst.rs:5:50\n\
    \  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort().collect()\n  |    \
    \                                              ^^^^^^^ `()` is not an iterator\n\
    \  |\n  = note: the following trait bounds were not satisfied:\n          `():\
    \ Iterator`\n          which is required by `&mut (): Iterator`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut set = HashSet::new();\n    for x in l {\n     \
    \   if !set.insert(x) {\n            *set.entry(x).or_insert(0) as usize + x\n\
    \        }\n    }\n    set.into_iter().collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpb63tp2qq.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    for i in l.iter() {\n\
    \        if seen.insert(i).is_err() {\n            continue;\n        }\n    \
    \    l.retain(|&i| i != i);\n    }\n    l\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpagn4r9q7.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut r = l.clone();\n\
    \    r.sort_unstable();\n    let mut i = 0;\n    while i < r.len() {\n       \
    \ if seen.insert(r[i..i + 1]).is_some() {\n            i += 1;\n        } else\
    \ {\n            i += 1;\n        }\n    }\n    r\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpokpwdeui.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter()\n        .cloned()\n        .chain(l.into_iter().filter(|&x|\
    \ l.iter().any(|&y| y != x)))\n        .cloned()\n        .collect()\n}\n\nfn\
    \ main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n --> /tmp/tmpsg2_48ra.rs:8:10\n  |\n8 |         .cloned()\n\
    \  |          ^^^^^^ expected reference, found `isize`\n  |\n  = note: expected\
    \ reference `&&_`\n             found reference `&isize`\n  = note: required because\
    \ of the requirements on the impl of `Iterator` for `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n  = note: 1 redundant requirement hidden\n  = note: required because\
    \ of the requirements on the impl of `Iterator` for `std::iter::Chain<Cloned<std::slice::Iter<'_,\
    \ isize>>, Filter<std::vec::IntoIter<isize>, [closure@/tmp/tmpsg2_48ra.rs:7:37:\
    \ 7:67]>>`\n\nerror[E0271]: type mismatch resolving `<Filter<std::vec::IntoIter<isize>,\
    \ [closure@/tmp/tmpsg2_48ra.rs:7:37: 7:67]> as Iterator>::Item == &_`\n --> /tmp/tmpsg2_48ra.rs:8:10\n\
    \  |\n8 |         .cloned()\n  |          ^^^^^^ expected reference, found `isize`\n\
    \  |\n  = note: expected reference `&_`\n                  found type `isize`\n\
    \  = note: required because of the requirements on the impl of `Iterator` for\
    \ `std::iter::Chain<Cloned<std::slice::Iter<'_, isize>>, Filter<std::vec::IntoIter<isize>,\
    \ [closure@/tmp/tmpsg2_48ra.rs:7:37: 7:67]>>`\n\nerror[E0599]: the method `collect`\
    \ exists for struct `Cloned<std::iter::Chain<Cloned<std::slice::Iter<'_, isize>>,\
    \ Filter<std::vec::IntoIter<isize>, [closure@/tmp/tmpsg2_48ra.rs:7:37: 7:67]>>>`,\
    \ but its trait bounds were not satisfied\n  --> /tmp/tmpsg2_48ra.rs:9:10\n  \
    \ |\n9  |           .collect()\n   |            ^^^^^^^ method cannot be called\
    \ on `Cloned<std::iter::Chain<Cloned<std::slice::Iter<'_, isize>>, Filter<std::vec::IntoIter<isize>,\
    \ [closure@/tmp/tmpsg2_48ra.rs:7:37: 7:67]>>>` due to unsatisfied trait bounds\n\
    \   |\n   = note: the following trait bounds were not satisfied:\n           `<std::iter::Chain<Cloned<std::slice::Iter<'_,\
    \ isize>>, Filter<std::vec::IntoIter<isize>, [closure@/tmp/tmpsg2_48ra.rs:7:37:\
    \ 7:67]>> as Iterator>::Item = &_`\n           which is required by `Cloned<std::iter::Chain<Cloned<std::slice::Iter<'_,\
    \ isize>>, Filter<std::ve"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = BTreeMap::new();\n    l.iter().filter(|&e|\
    \ seen.insert(e).is_ok()).cloned().collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `BTreeMap`\n -->\
    \ /tmp/tmpogyprmxt.rs:5:20\n  |\n5 |     let mut seen = BTreeMap::new();\n  |\
    \                    ^^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::BTreeMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmp_h75do41.rs:5:43\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sorted().collect()\n\
    \  |                                           ^^^^^^ help: there is an associated\
    \ function with a similar name: `is_sorted`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    l.sort_unstable();\n\
    \    let mut unique = l.to_vec();\n    let mut i = 0;\n    while i < unique.len()\
    \ {\n        if seen.contains(&unique[i]) {\n            unique.remove(i);\n \
    \       } else {\n            seen.insert(unique[i]);\n            i += 1;\n \
    \       }\n    }\n    unique\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpzo3gnx3l.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpzo3gnx3l.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x)).collect()\n}\n\nfn main() {\n    let candidate = unique;\n \
    \   assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfls58664.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut a = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  a.sort();\n    a.dedup();\n    a\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n\n    for e in l {\n    \
    \    if !result.contains(&e) {\n            result.push(e);\n        }\n    }\n\
    \n    result\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpb6ig73kj.rs:18:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().cloned().sort_unstable().collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp6fa9zp86.rs:5:43\n\
    \    |\n5   |       l.iter().cloned().collect::<Vec<_>>().cloned().sort_unstable().collect()\n\
    \    |                                             ^^^^^^ `Vec<isize>` is not\
    \ an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n\
    \            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>:\
    \ Iterator`\n            `[isize]: Iterator`\n            which is required by\
    \ `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().enumerate().filter(|&(i, _)| i == 0 ||\
    \ l[i] != l[i-1]).map(|&(_, i)| i).collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqh1r9y8v.rs:5:83\n  |\n5 |\
    \     l.iter().cloned().enumerate().filter(|&(i, _)| i == 0 || l[i] != l[i-1]).map(|&(_,\
    \ i)| i).collect()\n  |                                                      \
    \                             ^^^^^^-\n  |                                   \
    \                                                |     |\n  |                \
    \                                                                   |     expected\
    \ due to this\n  |                                                           \
    \                        expected tuple, found reference\n  |\n  = note:  expected\
    \ tuple `(usize, isize)`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ *x != *x).cloned().map(|x| *x).collect::<Vec<_>>().iter().cloned().cloned().filter(|&x|\
    \ *x != *x).cloned().map(|x| *x).collect::<Vec<_>>().into_iter().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().cloned().clone\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqdecanhl.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0614]: type\
    \ `isize` cannot be dereferenced\n --> /tmp/tmpqdecanhl.rs:6:35\n  |\n6 |    \
    \ l.iter().cloned().filter(|&x| *x != *x).cloned().map(|x| *x).collect::<Vec<_>>().iter().cloned().cloned().filter(|&x|\
    \ *x != *x).clone...\n  |                                   ^^\n\nerror[E0614]:\
    \ type `isize` cannot be dereferenced\n --> /tmp/tmpqdecanhl.rs:6:41\n  |\n6 |\
    \     l.iter().cloned().filter(|&x| *x != *x).cloned().map(|x| *x).collect::<Vec<_>>().iter().cloned().cloned().filter(|&x|\
    \ *x != *x).clone...\n  |                                         ^^\n\nerror[E0271]:\
    \ type mismatch resolving `<std::slice::Iter<'_, isize> as Iterator>::Item ==\
    \ &&_`\n --> /tmp/tmpqdecanhl.rs:6:45\n  |\n6 |     l.iter().cloned().filter(|&x|\
    \ *x != *x).cloned().map(|x| *x).collect::<Vec<_>>().iter().cloned().cloned().filter(|&x|\
    \ *x != *x).clone...\n  |                                             ^^^^^^ expected\
    \ reference, found `isize`\n  |\n  = note: expected reference `&&_`\n        \
    \     found reference `&isize`\n  = note: required because of the requirements\
    \ on the impl of `Iterator` for `Cloned<std::slice::Iter<'_, isize>>`\n  = note:\
    \ 1 redundant requirement hidden\n  = note: required because of the requirements\
    \ on the impl of `Iterator` for `Filter<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmpqdecanhl.rs:6:30:\
    \ 6:43]>`\n\nerror[E0631]: type mismatch in closure arguments\n --> /tmp/tmpqdecanhl.rs:6:45\n\
    \  |\n6 |     l.iter().cloned().filter(|&x| *x != *x).cloned().map(|x| *x).collect::<Vec<_>>().iter().cloned().cloned().filter(|&x|\
    \ *x != *x).clone...\n  |                              -------------  ^^^^^^ expected\
    \ signature of `for<'r> fn(&'r &_) -> _`\n  |                              |\n\
    \  |                              found signature of `for<'r> fn(&'r isize) ->\
    \ _`\n  |\n  = note"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut set = HashSet::new();\n    for &x in l {\n    \
    \    set.insert(x);\n    }\n    set.into_iter().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp9nuuns6g.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp9nuuns6g.rs:6:9\n  |\n6 |     for &x in l {\n  |       \
    \  ^^    - this expression has type `Option<isize>`\n  |         |\n  |      \
    \   expected `isize`, found reference\n  |         help: you can probably remove\
    \ the explicit borrow: `x`\n  |\n  = note:   expected type `isize`\n         \
    \ found reference `&_`\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0433.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter()\n        .cloned()\n        .copied()\n      \
    \  .collect::<Vec<isize>>()\n        .sort();\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n    --> /tmp/tmpl8edu085.rs:7:10\n     |\n7    |  \
    \       .copied()\n     |          ^^^^^^ expected reference, found `isize`\n\
    \     |\n     = note: expected reference `&&_`\n                found reference\
    \ `&isize`\n     = note: required because of the requirements on the impl of `Iterator`\
    \ for `Cloned<std::slice::Iter<'_, isize>>`\nnote: required by a bound in `copied`\n\
    \nerror[E0599]: the method `collect` exists for struct `Copied<Cloned<std::slice::Iter<'_,\
    \ isize>>>`, but its trait bounds were not satisfied\n  --> /tmp/tmpl8edu085.rs:8:10\n\
    \   |\n8  |           .collect::<Vec<isize>>()\n   |            ^^^^^^^ method\
    \ cannot be called on `Copied<Cloned<std::slice::Iter<'_, isize>>>` due to unsatisfied\
    \ trait bounds\n   |\n   = note: the following trait bounds were not satisfied:\n\
    \           `<Cloned<std::slice::Iter<'_, isize>> as Iterator>::Item = &_`\n \
    \          which is required by `Copied<Cloned<std::slice::Iter<'_, isize>>>:\
    \ Iterator`\n           `Copied<Cloned<std::slice::Iter<'_, isize>>>: Iterator`\n\
    \           which is required by `&mut Copied<Cloned<std::slice::Iter<'_, isize>>>:\
    \ Iterator`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpl8edu085.rs:4:29\n\
    \  |\n4 | fn unique(l: Vec<isize>) -> Vec<isize> {\n  |    ------            \
    \       ^^^^^^^^^^ expected struct `Vec`, found `()`\n  |    |\n  |    implicitly\
    \ returns `()` as its body has no tail or `return` expression\n  |\n  = note:\
    \ expected struct `Vec<isize>`\n          found unit type `()`\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0271, E0308,\
    \ E0599.\nFor more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut c = HashSet::new();\n    for x in l {\n       \
    \ c.insert(*x);\n    }\n    c.iter().copied().collect()\n}\n\nfn main() {\n  \
    \  let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmppui474n5.rs:5:17\n  |\n5 |     let mut c = HashSet::new();\n  |    \
    \             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n --> /tmp/tmppui474n5.rs:7:18\n  |\n7 |         c.insert(*x);\n\
    \  |                  ^^\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0433, E0614.\nFor more information about an error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v: Vec<isize> = Vec::new();\n    for i in l {\n\
    \        if !v.contains(&i) {\n            v.push(i as isize);\n        }\n  \
    \  }\n    v\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpd1yvx_i6.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.par_iter().cloned().filter(|x|\
    \ seen.insert(x).is_some()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4cnu9qpq.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0599]: no\
    \ method named `par_iter` found for struct `Vec<isize>` in the current scope\n\
    \ --> /tmp/tmp4cnu9qpq.rs:6:7\n  |\n6 |     l.par_iter().cloned().filter(|x| seen.insert(x).is_some()).collect()\n\
    \  |       ^^^^^^^^ help: there is an associated function with a similar name:\
    \ `iter`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0433, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    l.iter().for_each(|x| {\n\
    \        if !result.contains(&x) {\n            result.push(x);\n        }\n \
    \   });\n    result\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpqbwsnrxo.rs:11:5\n   |\n\
    4  | fn unique(l: Vec<isize>) -> Vec<isize> {\n   |                          \
    \   ---------- expected `Vec<isize>` because of return type\n...\n11 |     result\n\
    \   |     ^^^^^^ expected `isize`, found `&isize`\n   |\n   = note: expected struct\
    \ `Vec<isize>`\n              found struct `Vec<&isize>`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut i = 0;\n    let mut j = 1;\n    let mut cur = *l;\n\
    \    while i < l.len() {\n        while j < l.len() && cur == l[j] {\n       \
    \     j += 1; // j is incremented below\n        }\n        if j == l.len() {\n\
    \            l.push(cur);\n            i += 1;\n            cur = *l;\n      \
    \      j = 1;\n        }\n        else {\n            if cur > l[j] {\n      \
    \          cur = l[j];\n                i += 1;\n            }\n            else\
    \ {\n                j += 1;\n            }\n        }\n    }\n    l\n}\n\nfn\
    \ main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the size for values of type `[isize]` cannot be known at\
    \ compilation time\n --> /tmp/tmpbg8uzbfi.rs:7:9\n  |\n7 |     let mut cur = *l;\n\
    \  |         ^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help:\
    \ the trait `Sized` is not implemented for `[isize]`\n  = note: all local variables\
    \ must have a statically known size\n  = help: unsized locals are gated as an\
    \ unstable feature\n\nerror[E0277]: can't compare `[isize]` with `isize`\n -->\
    \ /tmp/tmpbg8uzbfi.rs:9:34\n  |\n9 |         while j < l.len() && cur == l[j]\
    \ {\n  |                                  ^^ no implementation for `[isize] ==\
    \ isize`\n  |\n  = help: the trait `PartialEq<isize>` is not implemented for `[isize]`\n\
    \  = help: the following other types implement trait `PartialEq<Rhs>`:\n     \
    \       <&[B] as PartialEq<[A; N]>>\n            <&[T] as PartialEq<Vec<U, A>>>\n\
    \            <&mut [B] as PartialEq<[A; N]>>\n            <&mut [T] as PartialEq<Vec<U,\
    \ A>>>\n            <[A; N] as PartialEq<&[B]>>\n            <[A; N] as PartialEq<&mut\
    \ [B]>>\n            <[A; N] as PartialEq<[B; N]>>\n            <[A; N] as PartialEq<[B]>>\n\
    \          and 3 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpbg8uzbfi.rs:13:20\n\
    \   |\n13 |             l.push(cur);\n   |                    ^^^ expected `isize`,\
    \ found slice `[isize]`\n\nerror[E0277]: the size for values of type `[isize]`\
    \ cannot be known at compilation time\n  --> /tmp/tmpbg8uzbfi.rs:15:13\n   |\n\
    15 |             cur = *l;\n   |             ^^^ doesn't have a size known at\
    \ compile-time\n   |\n   = help: the trait `Sized` is not implemented for `[isize]`\n\
    \   = note: the left-hand-side of an assignment must have a statically known size\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpbg8uzbfi.rs:19:22\n   |\n19 |\
    \             if cur > l[j] {\n   |                      ^^^^ expected slice `[isize]`,\
    \ found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpbg8uzbfi.rs:20:23\n\
    \   |\n7  |     let mut cur = *l;\n   |                   -- expected due to this\
    \ value\n...\n20 |                 cur = l[j];\n   |                       ^^^^\
    \ expected"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ seen.insert(x).is_some()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpa0sfher0.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: Vec<bool> = vec![false; l.len()];\n    for\
    \ i in l {\n        if !seen[i] {\n            seen[i] = true;\n            vec![i]\n\
    \        } else {\n            continue\n        }\n    }\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[bool]` cannot be indexed by `isize`\n --> /tmp/tmpt44to9aw.rs:7:13\n\
    \  |\n7 |         if !seen[i] {\n  |             ^^^^^^^ slice indices are of\
    \ type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[bool]>`\
    \ is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<bool>`\n\nerror[E0277]: the type `[bool]` cannot be indexed by `isize`\n\
    \ --> /tmp/tmpt44to9aw.rs:8:13\n  |\n8 |             seen[i] = true;\n  |    \
    \         ^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n\
    \  = help: the trait `SliceIndex<[bool]>` is not implemented for `isize`\n  =\
    \ help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required\
    \ because of the requirements on the impl of `Index<isize>` for `Vec<bool>`\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpt44to9aw.rs:9:13\n   |\n7  | / \
    \        if !seen[i] {\n8  | |             seen[i] = true;\n9  | |           \
    \  vec![i]\n   | |             ^^^^^^^ expected `()`, found struct `Vec`\n10 |\
    \ |         } else {\n11 | |             continue\n12 | |         }\n   | |_________-\
    \ expected this to be `()`\n   |\n   = note: expected unit type `()`\n       \
    \          found struct `Vec<isize>`\n   = note: this error originates in the\
    \ macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)\n\
    help: consider using a semicolon here\n   |\n12 |         };\n   |          +\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpt44to9aw.rs:6:5\n   |\n4  |  \
    \ fn unique(l: Vec<isize>) -> Vec<isize> {\n   |                             \
    \  ---------- expected `Vec<isize>` because of return type\n5  |       let mut\
    \ seen: Vec<bool> = vec![false; l.len()];\n6  | /     for i in l {\n7  | |   \
    \      if !seen[i] {\n8  | |             seen[i] = true;\n9  | |             vec![i]\n\
    ...  |\n12 | |         }\n13 | |     }\n   | |_____^ expected struct `Vec`, found\
    \ `()`\n   |\n   = note: expected struct `Vec<isize>`\n           found unit type\
    \ `()`\n\nerror: aborting due to 4 pr"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.sort_unstable();\n\
    \    l.dedup();\n    l.iter().cloned().filter(|&x| seen.insert(x)).collect()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp3uve2xd7.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().chain(l).dedup().collect()\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `std::iter::Chain`\
    \ in the current scope\n --> /tmp/tmpj5sijgmh.rs:5:32\n  |\n5 |     l.iter().cloned().chain(l).dedup().collect()\n\
    \  |                                ^^^^^ method not found in `std::iter::Chain<Cloned<std::slice::Iter<'_,\
    \ isize>>, std::vec::IntoIter<isize>>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.dedup_by(|a, b| a.cmp(&b))\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjf69asjj.rs:5:23\n  |\n5 |\
    \     l.dedup_by(|a, b| a.cmp(&b))\n  |                       ^^^^^^^^^ expected\
    \ `bool`, found enum `std::cmp::Ordering`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpjf69asjj.rs:5:5\n  |\n4 | fn unique(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |                             ---------- expected `Vec<isize>` because\
    \ of return type\n5 |     l.dedup_by(|a, b| a.cmp(&b))\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n\
    \          found unit type `()`\nnote: method `dedup_by` modifies its receiver\
    \ in-place\n --> /tmp/tmpjf69asjj.rs:5:7\n  |\n5 |     l.dedup_by(|a, b| a.cmp(&b))\n\
    \  |     - ^^^^^^^^ this call modifies `l` in-place\n  |     |\n  |     you probably\
    \ want to use this value after calling the method...\n  = note: ...instead of\
    \ the `()` output of method `dedup_by`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut hash_set = HashSet::new();\n    for elt in l {\n\
    \        if let Ok(hash) = hash_set.insert(&elt).unwrap() {\n            hash_set.insert(hash);\n\
    \        }\n    }\n    hash_set.iter().cloned().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpg_li_v_q.rs:5:24\n  |\n5 |     let mut hash_set = HashSet::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().dedup()\n}\n\nfn\
    \ main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgg2s70xt.rs:5:5\n  |\n4 |\
    \ fn unique(l: Vec<isize>) -> Vec<isize> {\n  |                             ----------\
    \ expected `Vec<isize>` because of return type\n5 |     l.iter().cloned().collect::<Vec<_>>().dedup()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `Vec`,\
    \ found `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit\
    \ type `()`\nnote: method `dedup` modifies its receiver in-place\n --> /tmp/tmpgg2s70xt.rs:5:43\n\
    \  |\n5 |     l.iter().cloned().collect::<Vec<_>>().dedup()\n  |     -------------------------------------\
    \ ^^^^^ this call modifies its receiver in-place\n  |     |\n  |     you probably\
    \ want to use this value after calling the method...\n  = note: ...instead of\
    \ the `()` output of method `dedup`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976488
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().dedup().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmp41hc8f49.rs:5:23\n  |\n5 |     l.iter().cloned().dedup().collect()\n\
    \  |                       ^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut i = -1;\n   \
    \ loop {\n        i += 1;\n        if i > l.len() {\n            break;\n    \
    \    }\n        result.push(l[i]);\n        let pos = i;\n        for (j, element)\
    \ in l.iter().enumerate() {\n            if element == l[pos] {\n            \
    \    result.remove(&i);\n                let new_pos = j;\n                let\
    \ tmp_index = i;\n                for k in 0..new_pos {\n                    if\
    \ k != new_pos {\n                        result[tmp_index] = l[k];\n        \
    \                tmp_index += 1;\n                    }\n                }\n \
    \               break;\n            }\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `usize: Neg` is not satisfied\n --> /tmp/tmp6yc6lgyu.rs:6:17\n\
    \  |\n6 |     let mut i = -1;\n  |                 ^^ the trait `Neg` is not implemented\
    \ for `usize`\n  |\n  = help: the following other types implement trait `Neg`:\n\
    \            &f32\n            &f64\n            &i128\n            &i16\n   \
    \         &i32\n            &i64\n            &i8\n            &isize\n      \
    \    and 8 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp6yc6lgyu.rs:16:31\n\
    \   |\n16 |                 result.remove(&i);\n   |                         \
    \      ^^ expected `usize`, found `&usize`\n   |\nhelp: consider removing the\
    \ borrow\n   |\n16 -                 result.remove(&i);\n16 +                \
    \ result.remove(i);\n   | \n\nerror[E0277]: can't compare `&isize` with `isize`\n\
    \  --> /tmp/tmp6yc6lgyu.rs:15:24\n   |\n15 |             if element == l[pos]\
    \ {\n   |                        ^^ no implementation for `&isize == isize`\n\
    \   |\n   = help: the trait `PartialEq<isize>` is not implemented for `&isize`\n\
    \   = help: the following other types implement trait `PartialEq<Rhs>`:\n    \
    \         f32\n             f64\n             i128\n             i16\n       \
    \      i32\n             i64\n             i8\n             isize\n          \
    \ and 6 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0308.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashMap::new();\n    for x in l {\n    \
    \    if !seen.contains_key(x) {\n            seen.insert(x, x);\n        }\n \
    \   }\n    seen.values()\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp22g02q11.rs:5:20\n  |\n5 |     let mut seen = HashMap::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    // TODO\n    vec![]\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpyh_ofcu8.rs:11:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.into_iter().distinct().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `distinct` found for struct `std::vec::IntoIter`\
    \ in the current scope\n --> /tmp/tmp4ztz03sn.rs:5:19\n  |\n5 |     l.into_iter().distinct().collect()\n\
    \  |                   ^^^^^^^^ method not found in `std::vec::IntoIter<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    if l.len() < 1 {\n        return vec![];\n    }\n    let\
    \ mut seen: HashSet<isize> = HashSet::new();\n    for e in l.iter() {\n      \
    \  if seen.insert(e).is_some() {\n            continue;\n        }\n        seen.insert(e);\n\
    \        vec![e]\n    }\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpd13r6tqe.rs:8:19\n\
    \  |\n8 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpd13r6tqe.rs:8:36\n  |\n8 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpd13r6tqe.rs:14:9\n   |\n14 |         vec![e]\n   |    \
    \     ^^^^^^^ expected `()`, found struct `Vec`\n   |\n   = note: expected unit\
    \ type `()`\n                 found struct `Vec<&isize>`\n   = note: this error\
    \ originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace\
    \ for more info)\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpd13r6tqe.rs:9:5\n\
    \   |\n4  |   fn unique(l: Vec<isize>) -> Vec<isize> {\n   |                 \
    \              ---------- expected `Vec<isize>` because of return type\n...\n\
    9  | /     for e in l.iter() {\n10 | |         if seen.insert(e).is_some() {\n\
    11 | |             continue;\n12 | |         }\n13 | |         seen.insert(e);\n\
    14 | |         vec![e]\n15 | |     }\n   | |_____^ expected struct `Vec`, found\
    \ `()`\n   |\n   = note: expected struct `Vec<isize>`\n           found unit type\
    \ `()`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0412, E0433.\nFor more information about an error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l.to_owned();\n    l.sort();\n    l.unique();\n\
    \    l\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `Vec<isize>` in\
    \ the current scope\n --> /tmp/tmp26pjzioe.rs:7:7\n  |\n7 |     l.unique();\n\
    \  |       ^^^^^^ method not found in `Vec<isize>`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 0
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976488
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut s = HashSet::new();\n    for e in l {\n       \
    \ s.insert(e);\n    }\n    s.into_iter().cloned().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfdtcixlc.rs:5:17\n  |\n5 |     let mut s = HashSet::new();\n  |    \
    \             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for el in l {\n        if\
    \ !v.contains(&el) {\n            v.push(el);\n        }\n    }\n    v\n}\n\n\
    fn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp48k419s8.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect::<Vec<_>>().sort_unstable().dedup()\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for unit type `()` in the current\
    \ scope\n --> /tmp/tmprr1rlyea.rs:5:59\n  |\n5 |     l.iter().cloned().collect::<Vec<_>>().sort_unstable().dedup()\n\
    \  |                                                           ^^^^^ method not\
    \ found in `()`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut set = HashSet::new();\n    for el in l {\n    \
    \    set.insert(el);\n    }\n    let mut result = vec![];\n    for el in set.iter()\
    \ {\n        result.push(el);\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmppvbscrf9.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n\
    \    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpfrk2ok7n.rs:5:23\n  |\n5 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 101
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp9vdihke5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976523
- exit_code: 1
  program: "/// Return sorted unique elements in a vector\n/// >>> unique(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n/// vec![0, 2, 3, 5, 9, 123]\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut unique: Vec<isize> = vec![];\n    for &i in l {\n\
    \        if !unique.contains(&i) {\n            unique.push(i as isize);\n   \
    \     }\n    }\n    unique\n}\n\nfn main() {\n    let candidate = unique;\n  \
    \  assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9,\
    \ 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2wh905gs.rs:6:9\n  |\n6 |\
    \     for &i in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `i`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976523

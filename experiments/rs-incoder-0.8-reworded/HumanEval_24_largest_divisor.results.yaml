language: rs
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut small = n as usize;\n    let mut large = n as usize;\n\
    \    let mut d = n / 2;\n    while d % 2 == 0 {\n        d /= 2;\n        small\
    \ = d / small;\n    }\n    while d % 3 == 0 {\n        d /= 3;\n        large\
    \ = d / large;\n    }\n    large\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2qhu4_lp.rs:10:21\n   |\n\
    10 |         small = d / small;\n   |                     ^^^^^ expected `isize`,\
    \ found `usize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2qhu4_lp.rs:10:17\n\
    \   |\n5  |     let mut small = n as usize;\n   |                     ----------\
    \ expected due to this value\n...\n10 |         small = d / small;\n   |     \
    \            ^^^^^^^^^ expected `usize`, found `isize`\n\nerror[E0277]: cannot\
    \ divide `isize` by `usize`\n  --> /tmp/tmp2qhu4_lp.rs:10:19\n   |\n10 |     \
    \    small = d / small;\n   |                   ^ no implementation for `isize\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `isize`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp2qhu4_lp.rs:14:21\n   |\n14 |         large\
    \ = d / large;\n   |                     ^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp2qhu4_lp.rs:14:17\n   |\n6  |\
    \     let mut large = n as usize;\n   |                     ---------- expected\
    \ due to this value\n...\n14 |         large = d / large;\n   |              \
    \   ^^^^^^^^^ expected `usize`, found `isize`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp2qhu4_lp.rs:16:5\n   |\n4  | fn largest_divisor(n: isize) -> isize\
    \ {\n   |                                 ----- expected `isize` because of return\
    \ type\n...\n16 |     large\n   |     ^^^^^ expected `isize`, found `usize`\n\
    \   |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n16 |     large.try_into().unwrap()\n   |          ++++++++++++++++++++\n\
    \nerror[E0277]: cannot divide `isize` by `usize`\n  --> /tmp/tmp2qhu4_lp.rs:14:19\n\
    \   |\n14 |         large = d / large;\n   |       "
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    loop {\n        if n % largest ==\
    \ 0 {\n            return largest;\n        }\n        largest *= 2;\n       \
    \ if largest < n {\n            return largest;\n        }\n    }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp73cwlfsp.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.iter().cloned().fold(n, |max_div, n| {\n        assert!(n\
    \ % max_div != 0);\n        n / max_div\n    })\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpejnc0itd.rs:5:7\n  |\n5 |     n.iter().cloned().fold(n,\
    \ |max_div, n| {\n  |       ^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).rfold(|a, b| {\n        let mut c = a;\n        loop\
    \ {\n            if a % b == 0 {\n                return c;\n            }\n \
    \           c += 1;\n        }\n    }, 0)\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `FnMut<(_, isize)>` closure, found `{integer}`\n\
    \   --> /tmp/tmpfwu7lnwo.rs:13:8\n    |\n5   |     (1..=n).rfold(|a, b| {\n  \
    \  |             ----- required by a bound introduced by this call\n...\n13  |\
    \     }, 0)\n    |        ^ expected an `FnMut<(_, isize)>` closure, found `{integer}`\n\
    \    |\n    = help: the trait `FnMut<(_, isize)>` is not implemented for `{integer}`\n\
    note: required by a bound in `rfold`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpfwu7lnwo.rs:5:19\n   |\n5  |       (1..=n).rfold(|a, b| {\n   |  ___________________^\n\
    6  | |         let mut c = a;\n7  | |         loop {\n8  | |             if a\
    \ % b == 0 {\n...  |\n12 | |         }\n13 | |     }, 0)\n   | |_____^ expected\
    \ `isize`, found closure\n   |\n   = note: expected type `isize`\n           found\
    \ closure `[closure@/tmp/tmpfwu7lnwo.rs:5:19: 13:6]`\n\nerror: aborting due to\
    \ 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut d: isize = 1;\n    let mut x: isize = 1;\n    while\
    \ x * x <= n {\n        if n % x == 0 {\n            d = x;\n            x /=\
    \ x;\n        }\n        else {\n            x += 1;\n        }\n    }\n    d\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008909
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div = &n;\n    for i in 1..=n.leading_zeros() {\n\
    \        if n % i == 0 {\n            max_div = i;\n        }\n    }\n    max_div\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxq8kjfjg.rs:7:16\n  |\n7 |\
    \         if n % i == 0 {\n  |                ^ expected `isize`, found `u32`\n\
    \nerror[E0277]: cannot mod `isize` by `u32`\n --> /tmp/tmpxq8kjfjg.rs:7:14\n \
    \ |\n7 |         if n % i == 0 {\n  |              ^ no implementation for `isize\
    \ % u32`\n  |\n  = help: the trait `Rem<u32>` is not implemented for `isize`\n\
    \  = help: the following other types implement trait `Rem<Rhs>`:\n           \
    \ <&'a f32 as Rem<f32>>\n            <&'a f64 as Rem<f64>>\n            <&'a i128\
    \ as Rem<i128>>\n            <&'a i16 as Rem<i16>>\n            <&'a i32 as Rem<i32>>\n\
    \            <&'a i64 as Rem<i64>>\n            <&'a i8 as Rem<i8>>\n        \
    \    <&'a isize as Rem<isize>>\n          and 54 others\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpxq8kjfjg.rs:8:23\n  |\n5 |     let mut max_div = &n;\n \
    \ |                       -- expected due to this value\n...\n8 |            \
    \ max_div = i;\n  |                       ^ expected `&isize`, found `u32`\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpxq8kjfjg.rs:11:5\n   |\n4  | fn\
    \ largest_divisor(n: isize) -> isize {\n   |                                 -----\
    \ expected `isize` because of return type\n...\n11 |     max_div\n   |     ^^^^^^^\
    \ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n\
    \   |\n11 |     *max_div\n   |     +\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..).filter(|&i| n % i == 0).max().unwrap()\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008909
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 0isize;\n\n    for d in 1..=n+1 {\n\
    \        if n % d == 0 {\n            if largest_divisor == 0 {\n            \
    \    largest_divisor = d;\n            } else {\n                largest_divisor\
    \ = if largest_divisor == d {\n                    d\n                } else {\n\
    \                    if n % largest_divisor == 0 {\n                        n\n\
    \                    } else {\n                        largest_divisor\n     \
    \               }\n                };\n            }\n        }\n    }\n    if\
    \ largest_divisor == 0 {\n        n\n    } else {\n        largest_divisor\n \
    \   }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp0vgqnz31.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 == 0, \"n must be even\");\n    let mut\
    \ i = 4;\n    while i < n {\n        if n % i == 0 {\n            i = i + 1;\n\
    \        } else {\n            i = i;\n        }\n    }\n    i\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''n must be even'', /tmp/tmp_f3_167o.rs:5:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008904
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor_max = n;\n    for divisor in 1..=n / 2 {\n \
    \       if n % divisor == 0 {\n            divisor_max = divisor;\n        }\n\
    \    }\n    divisor_max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    for divisor in 2..=n / 2 {\n     \
    \   if n % divisor == 0 {\n            largest = divisor;\n            break;\n\
    \        }\n    }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpw24pghr8.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return n;\n    }\n    \n    let mut n =\
    \ n as usize;\n    loop {\n        let d = n / 2;\n        if n % d == 0 {\n \
    \           n = d;\n        } else {\n            break;\n        }\n    }\n \
    \   n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp7e2tm96d.rs:18:5\n   |\n\
    4  | fn largest_divisor(n: isize) -> isize {\n   |                           \
    \      ----- expected `isize` because of return type\n...\n18 |     n\n   |  \
    \   ^ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to\
    \ an `isize` and panic if the converted value doesn't fit\n   |\n18 |     n.try_into().unwrap()\n\
    \   |      ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut result = n;\n    let mut max_divisor = 1;\n\n    while\
    \ result == 0 {\n        max_divisor *= max_divisor;\n        result -= max_divisor;\n\
    \    }\n\n    result\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpv_vd_z07.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n\n    let mut i = 1;\n    while i\
    \ <= n {\n        if n % i == 0 {\n            if max_divisor < i {\n        \
    \        max_divisor = i;\n            }\n        }\n        i += 1;\n    }\n\n\
    \    if max_divisor == 0 {\n        println!(\"The largest divisor is 0!\");\n\
    \    } else {\n        println!(\"The largest divisor is {}\", max_divisor);\n\
    \    }\n    return max_divisor;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmphcklj612.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: 'The largest divisor is 3

    '
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return n;\n    }\n\n    let mut i = 1;\n\
    \    let mut max_div = i;\n\n    while i <= n {\n        if n % i == 0 {\n   \
    \         if max_div < i {\n                max_div = i;\n            }\n    \
    \    }\n        i += 1;\n    }\n    max_div\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp4dxq280y.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut res = n;\n    for d in 2..=int(n / 2) as isize {\n \
    \       if n % d == 0 {\n            res = d;\n        }\n    }\n    res\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `int` in this scope\n --> /tmp/tmpya1i8r2h.rs:6:18\n\
    \  |\n6 |     for d in 2..=int(n / 2) as isize {\n  |                  ^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    match n {\n     \
    \   n if n % 2 == 0 => 2 * largest_divisor(n / 2),\n        _ => {\n         \
    \   let mut m = n;\n            m += 1;\n            largest_divisor(m)\n    \
    \    }\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmpb_jw7w7e.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // we could use a loop and go through all divisors but that\
    \ would be too slow\n    let mut result = 1; // smallest divisor to start with\n\
    \    for divisor in n.iter().rev() { // loop through numbers in reverse\n    \
    \    // if we already saw this divisor before, just go to the next one\n     \
    \   if n % divisor == 0 {\n            continue;\n        }\n\n        // else\
    \ if this one is larger than our current smallest divisor, update the smallest\
    \ divisor\n        if result > divisor {\n            result = divisor;\n    \
    \    }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpjvwlf_86.rs:7:22\n  |\n7 |     for divisor in n.iter().rev()\
    \ { // loop through numbers in reverse\n  |                      ^^^^ method not\
    \ found in `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n = n;\n    let mut i = 10;\n    while n % i == 0 {\n\
    \        n /= i;\n    }\n    i\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp_wz9cs3z.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut ans = isize::MAX;\n    for divisor in &[isize::MIN,\
    \ isize::MAX..isize::MAX/2]\n    .iter()\n    .filter(|x| x.is_even())\n    .filter_map(|x|\
    \ x / n)\n    .take_while(|x| x % n == 0)\n    {\n        if x % n == 0 {\n  \
    \          ans = *divisor;\n            break;\n        }\n    }\n    ans\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `x` in this scope\n  --> /tmp/tmp8umjlrp0.rs:12:12\n\
    \   |\n12 |         if x % n == 0 {\n   |            ^ help: a local variable\
    \ with a similar name exists: `n`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp8umjlrp0.rs:6:34\n\
    \  |\n6 |     for divisor in &[isize::MIN, isize::MAX..isize::MAX/2]\n  |    \
    \                              ^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ struct `std::ops::Range`\n  |\n  = note: expected type `isize`\n           found\
    \ struct `std::ops::Range<isize>`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 0;\n    let mut smaller_divisor =\
    \ n;\n    while smaller_divisor % 2 == 0 {\n        largest_divisor += 1;\n  \
    \      smaller_divisor /= 2;\n    }\n    largest_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp1ai71ojq.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut i = 1;\n    while i <= n {\n        if n % i == 0 {\n           \
    \ max_divisor = i;\n            max_divisor_index = i;\n        }\n        i +=\
    \ 1;\n    }\n    if max_divisor == 0 {\n        max_divisor = 1;\n    }\n    return\
    \ max_divisor;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmppmz9k7_h.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut high = n;\n    let mut low = 1;\n    while n > high\
    \ {\n        high = (high * 3) + 1; // 1, 2, 4, 5, 8, 16, ...\n        low = (low\
    \ * 3) + 1; // 1, 2, 3, 4, 6, 8, ...\n        if high % low == 0 {\n         \
    \   return high;\n        }\n    }\n    // We reach this point only when the number\
    \ is 1\n    if n != 1 {\n        return n;\n    }\n    // if n is 1, then this\
    \ loop is just to ensure the test is exhausted\n    // we could avoid it by returning\
    \ n here\n    while high != 1 {\n        high = (high / 3) + 1; // 1, 2, 4, 5,\
    \ 8, 16, ...\n        low = (low / 3) + 1; // 1, 2, 3, 4, 6, 8, ...\n        if\
    \ high % low == 0 {\n            return high;\n        }\n    }\n    // We reach\
    \ this point only when the number is 1\n    if n != 1 {\n        return n;\n \
    \   }\n    loop {\n        let high = (high / 3) + 1; // 1, 2, 4, 5, 8, 16, ...\n\
    \        let low = (low / 3) + 1; // 1, 2, 3, 4, 6, 8, ...\n        if high %\
    \ low == 0 {\n            return high;\n        }\n        high = (high * 3) +\
    \ 1; // 1, 2, 4, 5, 8, 16, ...\n        low = (low * 3) + 1; // 1, 2, 3, 4, 6,\
    \ 8, ...\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "warning: value assigned to `high` is never read\n  --> /tmp/tmpak1wf9ys.rs:37:9\n\
    \   |\n37 |         high = (high * 3) + 1; // 1, 2, 4, 5, 8, 16, ...\n   |   \
    \      ^^^^\n   |\n   = note: `#[warn(unused_assignments)]` on by default\n  \
    \ = help: maybe it is overwritten before being read?\n\nwarning: value assigned\
    \ to `low` is never read\n  --> /tmp/tmpak1wf9ys.rs:38:9\n   |\n38 |         low\
    \ = (low * 3) + 1; // 1, 2, 3, 4, 6, 8, ...\n   |         ^^^\n   |\n   = help:\
    \ maybe it is overwritten before being read?\n\nerror[E0384]: cannot assign twice\
    \ to immutable variable `high`\n  --> /tmp/tmpak1wf9ys.rs:37:9\n   |\n32 |   \
    \      let high = (high / 3) + 1; // 1, 2, 4, 5, 8, 16, ...\n   |            \
    \ ----\n   |             |\n   |             first assignment to `high`\n   |\
    \             help: consider making this binding mutable: `mut high`\n...\n37\
    \ |         high = (high * 3) + 1; // 1, 2, 4, 5, 8, 16, ...\n   |         ^^^^^^^^^^^^^^^^^^^^^\
    \ cannot assign twice to immutable variable\n\nerror[E0384]: cannot assign twice\
    \ to immutable variable `low`\n  --> /tmp/tmpak1wf9ys.rs:38:9\n   |\n33 |    \
    \     let low = (low / 3) + 1; // 1, 2, 3, 4, 6, 8, ...\n   |             ---\n\
    \   |             |\n   |             first assignment to `low`\n   |        \
    \     help: consider making this binding mutable: `mut low`\n...\n38 |       \
    \  low = (low * 3) + 1; // 1, 2, 3, 4, 6, 8, ...\n   |         ^^^^^^^^^^^^^^^^^^^\
    \ cannot assign twice to immutable variable\n\nerror: aborting due to 2 previous\
    \ errors; 2 warnings emitted\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 1;\n    }\n\n    loop {\n      \
    \  let m = n / 2;\n        if m == 0 {\n            return n;\n        } else\
    \ if m > n {\n            return m;\n        }\n        n = m;\n    }\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmphc669ox1.rs:16:9\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n16 |         n = m;\n\
    \   |         ^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n == 0 || n % 2 == 0, \"number should evenly divide\
    \ n\");\n\n    loop {\n        if n % 4 == 0 {\n            return n;\n      \
    \  }\n        n /= 2;\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpaphmjm1z.rs:11:9\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n11 |         n /=\
    \ 2;\n   |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in (1..n).rev() {\n        if n % i == 0 {\n         \
    \   return i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008805
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return n;\n    }\n\n    let mut max_divisor:\
    \ isize = 0;\n\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n  \
    \          if divisor > max_divisor {\n                max_divisor = divisor;\n\
    \            }\n        }\n    }\n\n    max_divisor\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpnzn2injj.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(2).unwrap().checked_mul(n).unwrap().checked_div(2).unwrap()\n\
    \        .unwrap_or(1)\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unwrap_or` found for type `isize` in the\
    \ current scope\n --> /tmp/tmpfajiwc97.rs:6:10\n  |\n6 |         .unwrap_or(1)\n\
    \  |          ^^^^^^^^^ method not found in `isize`\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    while n > 1 {\n        if n % 2 == 0 {\n            n /= 2;\n\
    \        } else {\n            n -= 1;\n        }\n    }\n    n\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpbu5_jy36.rs:7:13\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |             n /= 2;\n\
    \  |             ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n --> /tmp/tmpbu5_jy36.rs:9:13\n  |\n4 | fn\
    \ largest_divisor(n: isize) -> isize {\n  |                    - help: consider\
    \ making this binding mutable: `mut n`\n...\n9 |             n -= 1;\n  |    \
    \         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut ndiv = n;\n    let mut max_divisor = 1;\n\n    while\
    \ ndiv > max_divisor {\n        max_divisor += 1;\n        ndiv = max_divisor\
    \ as isize;\n    }\n    ndiv\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpf9t7jgu6.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut d: isize = 1;\n    while d * d <= n {\n        d = d\
    \ + 1;\n    }\n    d\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmphlwzoudz.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (n as usize + n - 1) % n\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg25oog25.rs:5:19\n  |\n5 |\
    \     (n as usize + n - 1) % n\n  |                   ^ expected `usize`, found\
    \ `isize`\n\nerror[E0277]: cannot add `isize` to `usize`\n --> /tmp/tmpg25oog25.rs:5:17\n\
    \  |\n5 |     (n as usize + n - 1) % n\n  |                 ^ no implementation\
    \ for `usize + isize`\n  |\n  = help: the trait `Add<isize>` is not implemented\
    \ for `usize`\n  = help: the following other types implement trait `Add<Rhs>`:\n\
    \            <&'a f32 as Add<f32>>\n            <&'a f64 as Add<f64>>\n      \
    \      <&'a i128 as Add<i128>>\n            <&'a i16 as Add<i16>>\n          \
    \  <&'a i32 as Add<i32>>\n            <&'a i64 as Add<i64>>\n            <&'a\
    \ i8 as Add<i8>>\n            <&'a isize as Add<isize>>\n          and 48 others\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpg25oog25.rs:5:28\n  |\n5 |    \
    \ (n as usize + n - 1) % n\n  |                            ^ expected `usize`,\
    \ found `isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpg25oog25.rs:5:5\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                       \
    \          ----- expected `isize` because of return type\n5 |     (n as usize\
    \ + n - 1) % n\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \  |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n  |\n5 |     ((n as usize + n - 1) % n).try_into().unwrap()\n\
    \  |     +                        +++++++++++++++++++++\n\nerror[E0277]: cannot\
    \ mod `usize` by `isize`\n --> /tmp/tmpg25oog25.rs:5:26\n  |\n5 |     (n as usize\
    \ + n - 1) % n\n  |                          ^ no implementation for `usize %\
    \ isize`\n  |\n  = help: the trait `Rem<isize>` is not implemented for `usize`\n\
    \  = help: the following other types implement trait `Rem<Rhs>`:\n           \
    \ <&'a f32 as Rem<f32>>\n            <&'a f64 as Rem<f64>>\n            <&'a i128\
    \ as Rem<i128>>\n            <&'a i16 as Rem<i16>>\n            <&'a i32 as Rem<i32>>\n\
    \            <&'a i64 as Rem<i64>>\n            <&'a i8 as Rem<i8>>\n        \
    \    <&'a isize as Rem<isize>>\n          and 54 others\n\nerror: abortin"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut num = 1;\n    let mut den = 1;\n    while den * num\
    \ < n {\n        num = num + 1;\n        den = den * 2;\n    }\n    while den\
    \ > n {\n        den = den / 2;\n    }\n    den\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpgv6zi84_.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n as isize;\n    let mut max_divisor_prime\
    \ = max_divisor;\n    for i in 2..=max_divisor {\n        if n % i == 0 {\n  \
    \          max_divisor = i;\n        }\n        if max_divisor > max_divisor_prime\
    \ {\n            max_divisor_prime = max_divisor;\n        }\n    }\n    max_divisor_prime\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpjy5t_hkp.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n = n as isize;\n    let mut divisor = 1;\n    let mut\
    \ max_divisor = 1;\n    let mut max_divisor_ind = 1;\n    while n % divisor ==\
    \ 0 {\n        divisor *= 2;\n        n /= divisor;\n    }\n    while n > 1 {\n\
    \        if n % divisor == 0 {\n            max_divisor = divisor;\n         \
    \   max_divisor_ind = divisor;\n        }\n        divisor *= 2;\n        n /=\
    \ divisor;\n    }\n    *max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpafpmq934.rs:21:5\n\
    \   |\n21 |     *max_divisor\n   |     ^^^^^^^^^^^^\n   |\nhelp: parentheses are\
    \ required to parse this as an expression\n   |\n13 ~     (while n > 1 {\n14 |\
    \         if n % divisor == 0 {\n15 |             max_divisor = divisor;\n16 |\
    \             max_divisor_ind = divisor;\n17 |         }\n18 |         divisor\
    \ *= 2;\n ...\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 {\n        n\n    } else {\n        largest_divisor(n\
    \ - 1) / 2\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2cyynm1h.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..).reverse().first(|&x| n % x == 0).unwrap()\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `reverse` found for struct `RangeFrom` in\
    \ the current scope\n --> /tmp/tmpi4ymaxhg.rs:5:11\n  |\n5 |     (1..).reverse().first(|&x|\
    \ n % x == 0).unwrap()\n  |           ^^^^^^^ method not found in `RangeFrom<{integer}>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut current_divisor = 1;\n\
    \n    while current_divisor < n {\n        if n % current_divisor == 0 {\n   \
    \         current_divisor *= 2;\n            if current_divisor > max_divisor\
    \ {\n                max_divisor = current_divisor;\n            }\n        }\
    \ else {\n            current_divisor++;\n        }\n    }\n\n    if max_divisor\
    \ == 1 {\n        max_divisor\n    } else {\n        max_divisor - 1\n    }\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmpwogyuid9.rs:15:28\n\
    \   |\n15 |             current_divisor++;\n   |                            ^^\
    \ not a valid postfix operator\n   |\nhelp: use `+= 1` instead\n   |\n15 |   \
    \          { let tmp = current_divisor; current_divisor += 1; tmp };\n   |   \
    \          +++++++++++                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n15 -    \
    \         current_divisor++;\n15 +             current_divisor += 1;\n   | \n\n\
    error: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut prev_divisor = 1;\n\n    for\
    \ divisor in 2..=n {\n        if n % divisor == 0 {\n            if largest <\
    \ divisor {\n                largest = divisor;\n            }\n        } else\
    \ {\n            if largest == prev_divisor {\n                break;\n      \
    \      }\n            prev_divisor = divisor;\n        }\n    }\n\n    largest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpk2vi53wt.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = 0;\n    let mut max_divisor = 0;\n    for\
    \ i in 1..=n {\n        let div = (n+i) / i;\n        if div > max_divisor {\n\
    \            largest = i;\n            max_divisor = div;\n        }\n    }\n\
    \    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpvisv1la3.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor: isize = 1;\n    let mut max_divisor2 =\
    \ 1;\n\n    for i in 2..=n {\n        if n % i == 0 {\n            if max_divisor2\
    \ == max_divisor {\n                max_divisor = i;\n            } else {\n \
    \               max_divisor2 = max_divisor;\n            }\n        }\n    }\n\
    \n    max_divisor2\n}\n\nfn main() {\n    let candidate = largest_divisor;\n \
    \   assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmp6kmackm_.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // find smallest divisor larger than n\n    let mut smallest_divisor\
    \ = n;\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n          \
    \  smallest_divisor = divisor;\n            break;\n        }\n    }\n    for\
    \ divisor in 2..=smallest_divisor {\n        if n % divisor == 0 {\n         \
    \   smallest_divisor = divisor;\n        }\n    }\n    smallest_divisor\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp_k8xohr_.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..n).max_by_key(|i| {\n        let d = i / 2;\n        if\
    \ d % 2 == 0 {\n            d\n        } else {\n            i + (i - d) / 2\n\
    \        }\n    })\n}\n\nfn main() {\n    let candidate = largest_divisor;\n \
    \   assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpobls4lj_.rs:5:5\n   |\n4\
    \  |   fn largest_divisor(n: isize) -> isize {\n   |                         \
    \          ----- expected `isize` because of return type\n5  | /     (1..n).max_by_key(|i|\
    \ {\n6  | |         let d = i / 2;\n7  | |         if d % 2 == 0 {\n8  | |   \
    \          d\n...  |\n11 | |         }\n12 | |     })\n   | |______^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 { return n }\n    for i in 2..(n - 1){\n     \
    \   if n % i == 0 { return i }\n    }\n    n\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpglnco_h_.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).iter().enumerate().max_by(|a, b| {\n        b.1.is_power_of_two()\
    \ &&\n            a.1.is_power_of_two() &&\n            a.0 % b.0 == 0 && b.0\
    \ * a.1.clone() <= n\n    })\n    .unwrap().0\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for struct `RangeInclusive`\
    \ in the current scope\n --> /tmp/tmpop0t35hx.rs:5:13\n  |\n5 |     (1..=n).iter().enumerate().max_by(|a,\
    \ b| {\n  |             ^^^^ method not found in `RangeInclusive<isize>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max: isize = n;\n    let mut i = 2;\n    while i * i\
    \ <= n {\n        if n % i == 0 {\n            max = i;\n        }\n        i\
    \ += 1;\n    }\n    max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpzh63ch1s.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 2..(n as usize / 2) {\n        if n % i == 0 {\n  \
    \          return i;\n        }\n    }\n\n    n\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6mf9_u1r.rs:6:16\n  |\n6 |\
    \         if n % i == 0 {\n  |                ^ expected `isize`, found `usize`\n\
    \nerror[E0277]: cannot mod `isize` by `usize`\n --> /tmp/tmp6mf9_u1r.rs:6:14\n\
    \  |\n6 |         if n % i == 0 {\n  |              ^ no implementation for `isize\
    \ % usize`\n  |\n  = help: the trait `Rem<usize>` is not implemented for `isize`\n\
    \  = help: the following other types implement trait `Rem<Rhs>`:\n           \
    \ <&'a f32 as Rem<f32>>\n            <&'a f64 as Rem<f64>>\n            <&'a i128\
    \ as Rem<i128>>\n            <&'a i16 as Rem<i16>>\n            <&'a i32 as Rem<i32>>\n\
    \            <&'a i64 as Rem<i64>>\n            <&'a i8 as Rem<i8>>\n        \
    \    <&'a isize as Rem<isize>>\n          and 54 others\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp6mf9_u1r.rs:7:20\n  |\n7 |             return i;\n  |  \
    \                  ^ expected `isize`, found `usize`\n  |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n  |\n\
    7 |             return i.try_into().unwrap();\n  |                     ++++++++++++++++++++\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n as isize;\n    let mut smaller = n / 2;\n\
    \    loop {\n        if smaller % 2 == 0 {\n            smaller = smaller / 2;\n\
    \        } else {\n            largest = smaller;\n            smaller = n / smaller;\n\
    \        }\n        if largest > n as isize {\n            break;\n        }\n\
    \    }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008909
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 1..=n {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp7gq970rl.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut s = isize::MAX;\n    let mut r = 1;\n    while r < n\
    \ {\n        if n % r == 0 {\n            s += r;\n            n /= r;\n     \
    \   }\n        r *= 2;\n    }\n    s\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpy_xhqfa5.rs:10:13\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |             n\
    \ /= r;\n   |             ^^^^^^ cannot assign to immutable argument\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 0..n {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpdnuu8ilf.rs:6:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (2..=n).filter(|&i| i%2 == 0).max_by(|&i, &i| i)\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0415]: identifier `i` is bound more than once in this parameter\
    \ list\n --> /tmp/tmpmhqmw7e5.rs:5:48\n  |\n5 |     (2..=n).filter(|&i| i%2 ==\
    \ 0).max_by(|&i, &i| i)\n  |                                                ^\
    \ used as parameter more than once\n\nerror[E0308]: mismatched types\n --> /tmp/tmpmhqmw7e5.rs:5:51\n\
    \  |\n5 |     (2..=n).filter(|&i| i%2 == 0).max_by(|&i, &i| i)\n  |          \
    \                                         ^ expected enum `std::cmp::Ordering`,\
    \ found `isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpmhqmw7e5.rs:5:5\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                       \
    \          ----- expected `isize` because of return type\n5 |     (2..=n).filter(|&i|\
    \ i%2 == 0).max_by(|&i, &i| i)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found enum `Option`\n  |\n  = note: expected type `isize`\n\
    \             found enum `Option<isize>`\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0415.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // find largest divisor less than or equal to n\n    let mut\
    \ max = 1;\n    let mut max_d = 1;\n    let mut max_n = 0;\n    for d in 2..n\
    \ {\n        if n % d == 0 {\n            if d > max_d {\n                max_d\
    \ = d;\n                max_n = n;\n            }\n        }\n    }\n    if max_n\
    \ != n {\n        max_d = 1;\n        max_n = n;\n    }\n    if max_d == 1 {\n\
    \        max_d = 2;\n        max_n = n;\n    }\n    max_d\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpnkssoajj.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).iter().fold(0, |mut n, x| {\n        let q = &n.abs()\
    \ / x;\n        if q.is_positive() {\n            n = q;\n        } else {\n \
    \           x = x;\n        }\n        x\n    })\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for struct `RangeInclusive`\
    \ in the current scope\n --> /tmp/tmpj36_xkjg.rs:5:13\n  |\n5 |     (1..=n).iter().fold(0,\
    \ |mut n, x| {\n  |             ^^^^ method not found in `RangeInclusive<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut counter: isize = 1;\n    while counter <= n {\n    \
    \    if n % counter == 0 {\n            return counter;\n        }\n        counter\
    \ += 1;\n    }\n    n - 1\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpw8t2zyv0.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n: isize = n;\n    while n > 1 {\n        n /= 2;\n\
    \        if n % 2 == 0 {\n            return n;\n        }\n    }\n    n\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmp19rpc5dg.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor_divisor: isize = 0;\n    for i in 1..=n\
    \ {\n        if n % i == 0 {\n            if largest_divisor_divisor == 0 || largest_divisor_divisor\
    \ > i {\n                largest_divisor_divisor = i;\n            }\n       \
    \ }\n    }\n    largest_divisor_divisor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpeg1oggzh.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 3 { return 1; }\n    let mut max_divisor = 0;\n    for\
    \ i in (1..n).rev() {\n        if n % i == 0 {\n            max_divisor = i;\n\
    \            break;\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n   \
    \ let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = n;\n    for d in 2..largest_divisor.clone()\
    \ {\n        if n % d == 0 {\n            largest_divisor = d;\n        }\n  \
    \  }\n    largest_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp48r1b012.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.iter().rev().fold1(|mut v, d| {\n        if v % d == 0 {\n\
    \            if v < d {\n                *d = v\n            }\n        } else\
    \ {\n            *d = d\n        }\n        v\n    })\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpjllv7e5x.rs:5:7\n  |\n5 |     n.iter().rev().fold1(|mut\
    \ v, d| {\n  |       ^^^^ method not found in `isize`\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n / 2i;\n    while n / largest % 2i != 0 {\n\
    \        largest += 2i;\n    }\n    largest\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: invalid suffix `i` for number literal\n --> /tmp/tmp0iygkyw3.rs:5:27\n\
    \  |\n5 |     let mut largest = n / 2i;\n  |                           ^^ invalid\
    \ suffix `i`\n  |\n  = help: the suffix must be one of the numeric types (`u32`,\
    \ `isize`, `f32`, etc.)\n\nerror: invalid suffix `i` for number literal\n -->\
    \ /tmp/tmp0iygkyw3.rs:6:25\n  |\n6 |     while n / largest % 2i != 0 {\n  |  \
    \                       ^^ invalid suffix `i`\n  |\n  = help: the suffix must\
    \ be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n\nerror: invalid\
    \ suffix `i` for number literal\n --> /tmp/tmp0iygkyw3.rs:7:20\n  |\n7 |     \
    \    largest += 2i;\n  |                    ^^ invalid suffix `i`\n  |\n  = help:\
    \ the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n\n\
    error: aborting due to 3 previous errors\n\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (0..(n-1)).max().unwrap() + 1\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpt7abu90x.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max = 1;\n    let mut div = n;\n    while div > 1 {\n\
    \        max += 1;\n        div = div >> 1;\n    }\n    max\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp65fs0s48.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Find the largest divisor less than or equal to n\n    loop\
    \ {\n        // Find the smallest divisor greater than or equal to n\n       \
    \ let mut i: usize = n;\n        let mut div: usize = 1;\n        while i < n\
    \ / div {\n            i -= 1;\n            div += 1;\n        }\n\n        //\
    \ If we found a divisor that divides n evenly then return it\n        if i ==\
    \ 0 {\n            return div;\n        }\n\n        // If n is not a factor of\
    \ any divisor greater than or equal to n\n        if n % div == 0 {\n        \
    \    break;\n        }\n\n        // If n is a factor of at least one divisor\
    \ then return it\n        if div > 1 {\n            return div;\n        }\n \
    \   }\n\n    // If we reach this point then n is not a factor of any divisor\n\
    \    return n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpyq856h5x.rs:8:28\n  |\n8 |\
    \         let mut i: usize = n;\n  |                    -----   ^ expected `usize`,\
    \ found `isize`\n  |                    |\n  |                    expected due\
    \ to this\n  |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n  |\n8 |         let mut i: usize = n.try_into().unwrap();\n\
    \  |                             ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpyq856h5x.rs:10:23\n   |\n10 |         while i < n / div\
    \ {\n   |                       ^^^ expected `isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpyq856h5x.rs:10:19\n   |\n10 |         while\
    \ i < n / div {\n   |                   ^^^^^^^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n10 |         while i < (n / div).try_into().unwrap()\
    \ {\n   |                   +       +++++++++++++++++++++\n\nerror[E0277]: cannot\
    \ divide `isize` by `usize`\n  --> /tmp/tmpyq856h5x.rs:10:21\n   |\n10 |     \
    \    while i < n / div {\n   |                     ^ no implementation for `isize\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `isize`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpyq856h5x.rs:17:20\n   |\n17 |             return\
    \ div;\n   |                    ^^^ expected `isize`, found `usize`\n   |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n17 |             return div.try_into().unwrap();\n   |          \
    \             ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyq856h5x.rs:21:16\n\
    \   |\n21 |         if n "
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(1).ok().unwrap_or(1)\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `ok` found for enum `Option` in the current\
    \ scope\n --> /tmp/tmps2mqo9_2.rs:5:22\n  |\n5 |     n.checked_div(1).ok().unwrap_or(1)\n\
    \  |                      ^^ help: there is an associated function with a similar\
    \ name: `or`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 { 1 }\n    else { largest_divisor(n / 2) }\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpmbhyp05u.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut factor = 1;\n    let mut largest_divisor = 1;\n    for\
    \ i in 2..=n {\n        if n % i == 0 {\n            factor = i;\n           \
    \ largest_divisor = i;\n        }\n    }\n    largest_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpcfb66w5v.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    for i in 2..=m {\n        if m%i == 0 {\n\
    \            m = i;\n        }\n    }\n    m\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp48jkhud3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(2).unwrap()\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpzlmifs8m.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut counter = 0;\n\n    while\
    \ largest % 2 == 0 && counter < MAX_DIVISION {\n        largest /= 2;\n      \
    \  counter += 1;\n    }\n\n    while largest % 3 == 0 && counter < MAX_DIVISION\
    \ {\n        largest /= 3;\n        counter += 1;\n    }\n\n    while largest\
    \ % 5 == 0 && counter < MAX_DIVISION {\n        largest /= 5;\n        counter\
    \ += 1;\n    }\n\n    while largest % 7 == 0 && counter < MAX_DIVISION {\n   \
    \     largest /= 7;\n        counter += 1;\n    }\n\n    while largest % 11 ==\
    \ 0 && counter < MAX_DIVISION {\n        largest /= 11;\n        counter += 1;\n\
    \    }\n\n    while largest % 13 == 0 && counter < MAX_DIVISION {\n        largest\
    \ /= 13;\n        counter += 1;\n    }\n\n    while largest % 17 == 0 && counter\
    \ < MAX_DIVISION {\n        largest /= 17;\n        counter += 1;\n    }\n\n \
    \   largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `MAX_DIVISION` in this scope\n --> /tmp/tmp_ofgfon2.rs:8:41\n\
    \  |\n8 |     while largest % 2 == 0 && counter < MAX_DIVISION {\n  |        \
    \                                 ^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `MAX_DIVISION` in this scope\n  --> /tmp/tmp_ofgfon2.rs:13:41\n\
    \   |\n13 |     while largest % 3 == 0 && counter < MAX_DIVISION {\n   |     \
    \                                    ^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `MAX_DIVISION` in this scope\n  --> /tmp/tmp_ofgfon2.rs:18:41\n\
    \   |\n18 |     while largest % 5 == 0 && counter < MAX_DIVISION {\n   |     \
    \                                    ^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `MAX_DIVISION` in this scope\n  --> /tmp/tmp_ofgfon2.rs:23:41\n\
    \   |\n23 |     while largest % 7 == 0 && counter < MAX_DIVISION {\n   |     \
    \                                    ^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `MAX_DIVISION` in this scope\n  --> /tmp/tmp_ofgfon2.rs:28:42\n\
    \   |\n28 |     while largest % 11 == 0 && counter < MAX_DIVISION {\n   |    \
    \                                      ^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `MAX_DIVISION` in this scope\n  --> /tmp/tmp_ofgfon2.rs:33:42\n\
    \   |\n33 |     while largest % 13 == 0 && counter < MAX_DIVISION {\n   |    \
    \                                      ^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `MAX_DIVISION` in this scope\n  --> /tmp/tmp_ofgfon2.rs:38:42\n\
    \   |\n38 |     while largest % 17 == 0 && counter < MAX_DIVISION {\n   |    \
    \                                      ^^^^^^^^^^^^ not found in this scope\n\n\
    error: aborting due to 7 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = std::i32::MAX;\n\n    for i in 1..=n {\n\
    \        if n % i == 0 {\n            if i > (max_divisor as isize)/n as isize\
    \ {\n                max_divisor = i;\n            }\n        }\n    }\n\n   \
    \ max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2tca_o8a.rs:10:31\n   |\n\
    5  |     let mut max_divisor = std::i32::MAX;\n   |                          \
    \ ------------- expected due to this value\n...\n10 |                 max_divisor\
    \ = i;\n   |                               ^ expected `i32`, found `isize`\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmp2tca_o8a.rs:15:5\n   |\n4  | fn\
    \ largest_divisor(n: isize) -> isize {\n   |                                 -----\
    \ expected `isize` because of return type\n...\n15 |     max_divisor\n   |   \
    \  ^^^^^^^^^^^ expected `isize`, found `i32`\n   |\nhelp: you can convert an `i32`\
    \ to an `isize` and panic if the converted value doesn't fit\n   |\n15 |     max_divisor.try_into().unwrap()\n\
    \   |                ++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // https://ethanschoonover.com/number-theory-faq/#largest_divisor\n\
    \    debug_assert!(n > 1);\n    if n % 2 == 0 {\n        n / 2\n    } else {\n\
    \        let mut i = 1;\n        let mut div = n + 1;\n        loop {\n      \
    \      if i % 2 == 0 {\n                if div == n {\n                    return\
    \ div;\n                }\n            }\n            if div % 2 == 0 {\n    \
    \            return div / 2;\n            }\n            i += 1;\n           \
    \ div += 1;\n        }\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpn1kszc4s.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div = 0;\n\n    for div in 1..=n {\n        if div\
    \ % 2 != 0 {\n            if div > max_div {\n                max_div = div;\n\
    \            }\n        } else {\n            max_div = max_div;\n        }\n\
    \    }\n\n    return max_div;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpodikf5gu.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest: isize = 0;\n\n    // the smallest possible\
    \ divisor is 1, the largest\n    // possible divisor is n - 1\n    for d in (1..=n)\n\
    \        .filter(|&d| d % 2 != 0)\n        .rev()\n    {\n        let n = d.clone();\n\
    \n        // if the divisor is even, find its smallest divisor\n        // and\
    \ so on\n        while n % 2 == 0 {\n            n /= 2;\n        }\n\n      \
    \  // if the divisor is odd, find its largest divisor and\n        // so on\n\
    \        while n % 2 == 1 {\n            n = n / 2;\n        }\n\n        largest\
    \ = if n > largest { n } else { largest };\n    }\n    largest\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign twice to immutable variable `n`\n  --> /tmp/tmp3prihwel.rs:18:13\n\
    \   |\n13 |         let n = d.clone();\n   |             -\n   |             |\n\
    \   |             first assignment to `n`\n   |             help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 2;\n   |         \
    \    ^^^^^^ cannot assign twice to immutable variable\n\nerror[E0384]: cannot\
    \ assign twice to immutable variable `n`\n  --> /tmp/tmp3prihwel.rs:24:13\n  \
    \ |\n13 |         let n = d.clone();\n   |             -\n   |             |\n\
    \   |             first assignment to `n`\n   |             help: consider making\
    \ this binding mutable: `mut n`\n...\n24 |             n = n / 2;\n   |      \
    \       ^^^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return n;\n    }\n    let mut l: isize =\
    \ 1;\n    let mut d: isize = 2;\n    while d <= n {\n        if n % d == 0 {\n\
    \            if d > l {\n                l = d;\n            }\n        } else\
    \ {\n            d += 1;\n        }\n    }\n    l\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008909
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div = 1;\n    let mut max_n = n;\n    while max_n\
    \ % max_div != 0 {\n        max_div *= 2;\n    }\n    max_n\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2uc20f1k.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div = n as usize;\n    let mut max_rem = n as usize;\n\
    \    for divisor in &[n - 1, n - 2, n - 3, n - 4, n - 5, n - 6, n - 7, n - 8]\
    \ {\n        if divisor < n {\n            max_div = std::cmp::max(max_div, divisor);\n\
    \        } else {\n            max_rem = std::cmp::max(max_rem, n - divisor);\n\
    \        }\n    }\n    std::cmp::max(max_div, max_rem)\n}\n\nfn main() {\n   \
    \ let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1cyri0hd.rs:8:22\n  |\n8 |\
    \         if divisor < n {\n  |                      ^\n  |                  \
    \    |\n  |                      expected `&isize`, found `isize`\n  |       \
    \               help: consider borrowing here: `&n`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp1cyri0hd.rs:9:46\n  |\n9 |             max_div = std::cmp::max(max_div,\
    \ divisor);\n  |                                              ^^^^^^^ expected\
    \ `usize`, found `&isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1cyri0hd.rs:11:46\n\
    \   |\n11 |             max_rem = std::cmp::max(max_rem, n - divisor);\n   | \
    \                                             ^^^^^^^^^^^ expected `usize`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n   |\n11 |             max_rem = std::cmp::max(max_rem,\
    \ (n - divisor).try_into().unwrap());\n   |                                  \
    \            +           +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp1cyri0hd.rs:14:19\n   |\n14 |     std::cmp::max(max_div, max_rem)\n\
    \   |                   ^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you\
    \ can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n14 |     std::cmp::max(max_div.try_into().unwrap(), max_rem)\n  \
    \ |                          ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp1cyri0hd.rs:14:28\n   |\n14 |     std::cmp::max(max_div,\
    \ max_rem)\n   |                            ^^^^^^^ expected `isize`, found `usize`\n\
    \   |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n14 |     std::cmp::max(max_div, max_rem.try_into().unwrap())\n\
    \   |                                   ++++++++++++++++++++\n\nerror: aborting\
    \ due to 5 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 0 { return 0; }\n    let mut max_div = 0;\n    let mut\
    \ max_div_n = 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if\
    \ max_div < i {\n                max_div = i;\n                max_div_n = n;\n\
    \            }\n        }\n    }\n    return max_div_n - max_div;\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp2pdhpp5d.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut v = n;\n    while n % v == 0 {\n        v += 1;\n  \
    \  }\n    v\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmpu8i5qj43.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        let mut n = n;\n        if n % 2 == 0 {\n  \
    \          n = n / 2;\n        } else {\n            n = n * 3 + 1\n        };\n\
    \        if n % 4 == 0 {\n            return n;\n        }\n    }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008909
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Start with the largest number that divides n evenly\n   \
    \ let mut largest: isize = (n as isize) / 2;\n    // If the number is even, the\
    \ largest number is the same as the number itself and dividing by 2 is not necessary\n\
    \    if n % 2 == 0 {\n        largest = n;\n    } else {\n        // The number\
    \ is odd, so find the largest number that is smaller than n\n        while n /\
    \ 2 > largest {\n            largest = n / 2;\n        }\n    }\n    largest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmptmpfjepc.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut current_divisor = 1;\n\n    while current_divisor <= n {\n      \
    \  // if the current divisor divides n evenly, keep it\n        if n % current_divisor\
    \ == 0 {\n            max_divisor = current_divisor;\n            max_divisor_size\
    \ = n;\n        }\n        // if not, increment the divisor\n        current_divisor\
    \ *= 2;\n    }\n\n    // if the number is even, add the largest divisor to the\
    \ number\n    if max_divisor_size == n {\n        max_divisor += 1;\n    }\n\n\
    \    // return the largest divisor\n    max_divisor\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpcx_5zxod.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    for i in 1..n {\n        if n % i\
    \ == 0 {\n            if largest < i {\n                largest = i;\n       \
    \     }\n        }\n    }\n    largest\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1fukkkfv.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(2).unwrap_or(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkhy7n81h.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 == 0, \"The largest divisor is 2 when n\
    \ is even\");\n    if n <= 2 {\n        return n;\n    }\n    largest_divisor(n\
    \ / 2)\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''The largest divisor is 2 when n is even'',
    /tmp/tmp69um1rsx.rs:5:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div = 0;\n    let mut max_div2 = 1;\n    let mut\
    \ max_div3 = 2;\n\n    for i in 2..=n {\n        if n % i == 0 {\n           \
    \ if max_div < i {\n                max_div = i;\n            }\n        }\n \
    \   }\n\n    for i in 3..=n {\n        if n % i == 0 {\n            if max_div2\
    \ < i {\n                max_div2 = i;\n            }\n        }\n    }\n\n  \
    \  for i in 5..=n {\n        if n % i == 0 {\n            if max_div3 < i {\n\
    \                max_div3 = i;\n            }\n        }\n    }\n\n    max_div\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmptk6u9ftu.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut d = n - 1;\n    while d % 2 == 0 {\n        d /= 2;\n\
    \    }\n    d\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp5w62gvcn.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = 1u64.pow(n);\n    while i < 2u64.pow(n as usize)\
    \ {\n        if i % 2 == 0 {\n            return i;\n        }\n        i += 1;\n\
    \    }\n    i;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpto13m24j.rs:5:26\n  |\n5 |\
    \     let mut i = 1u64.pow(n);\n  |                          ^ expected `u32`,\
    \ found `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if\
    \ the converted value doesn't fit\n  |\n5 |     let mut i = 1u64.pow(n.try_into().unwrap());\n\
    \  |                           ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpto13m24j.rs:6:24\n  |\n6 |     while i < 2u64.pow(n as usize)\
    \ {\n  |                        ^^^^^^^^^^ expected `u32`, found `usize`\n  |\n\
    help: you can convert a `usize` to a `u32` and panic if the converted value doesn't\
    \ fit\n  |\n6 |     while i < 2u64.pow((n as usize).try_into().unwrap()) {\n \
    \ |                        +          +++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpto13m24j.rs:8:20\n  |\n8 |             return i;\n  |  \
    \                  ^ expected `isize`, found `u64`\n  |\nhelp: you can convert\
    \ a `u64` to an `isize` and panic if the converted value doesn't fit\n  |\n8 |\
    \             return i.try_into().unwrap();\n  |                     ++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpto13m24j.rs:4:33\n  |\n4 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 4 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 == 0);\n\n    if n == 1 { 1 }\n    else\
    \ if n % 3 == 0 { largest_divisor(n / 3) }\n    else if n % 5 == 0 { largest_divisor(n\
    \ / 5) }\n    else { n }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n % 2 == 0'', /tmp/tmpg8t26h48.rs:5:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor = 1usize;\n    for i in 1..=n {\n        if\
    \ n % i == 0 {\n            divisor = i;\n        }\n    }\n    divisor\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp91sm0gy7.rs:8:23\n  |\n5 |\
    \     let mut divisor = 1usize;\n  |                       ------ expected due\
    \ to this value\n...\n8 |             divisor = i;\n  |                      \
    \ ^ expected `usize`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp91sm0gy7.rs:11:5\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n11 |     divisor\n\
    \   |     ^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    11 |     divisor.try_into().unwrap()\n   |            ++++++++++++++++++++\n\n\
    error: aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut prime_numbers = vec![n];\n    prime_numbers[0] = 1;\n\
    \    prime_numbers[1] = 2;\n    for i in 2..=n {\n        let mut prime_number:\
    \ isize = prime_numbers[i - 1];\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                prime_number += j;\n            }\n        }\n     \
    \   prime_numbers[i] = prime_number;\n    }\n    let mut max_divisor = prime_numbers[n\
    \ - 1];\n    for i in 2..=n {\n        if prime_numbers[i] > max_divisor {\n \
    \           max_divisor = prime_numbers[i];\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp9kbrwttb.rs:9:39\n\
    \  |\n9 |         let mut prime_number: isize = prime_numbers[i - 1];\n  |   \
    \                                    ^^^^^^^^^^^^^^^^^^^^ slice indices are of\
    \ type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n\
    \  --> /tmp/tmp9kbrwttb.rs:15:9\n   |\n15 |         prime_numbers[i] = prime_number;\n\
    \   |         ^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n\
    \  --> /tmp/tmp9kbrwttb.rs:17:27\n   |\n17 |     let mut max_divisor = prime_numbers[n\
    \ - 1];\n   |                           ^^^^^^^^^^^^^^^^^^^^ slice indices are\
    \ of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmp9kbrwttb.rs:19:12\n   |\n19 |         if prime_numbers[i]\
    \ > max_divisor {\n   |            ^^^^^^^^^^^^^^^^ slice indices are of type\
    \ `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmp9kbrwttb.r"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Initialize largest divisor\n    let mut largest = n.pow(2.0).unwrap();\n\
    \n    // Initialize count of divisors\n    let mut cnt = 0;\n\n    // Iterate\
    \ over all numbers from 2 to n / 2\n    for i in 2..n/2 {\n        // Check if\
    \ the number has any divisor other than the current largest divisor\n        if\
    \ n % i == 0 {\n            // Update largest and count\n            largest =\
    \ i;\n            cnt += 1;\n        }\n    }\n\n    // Return the largest divisor\
    \ and number of divisors\n    largest * cnt\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkpe88gic.rs:6:29\n  |\n6 |\
    \     let mut largest = n.pow(2.0).unwrap();\n  |                            \
    \ ^^^ expected `u32`, found floating-point number\n\nerror[E0599]: no method named\
    \ `unwrap` found for type `isize` in the current scope\n --> /tmp/tmpkpe88gic.rs:6:34\n\
    \  |\n6 |     let mut largest = n.pow(2.0).unwrap();\n  |                    \
    \              ^^^^^^ method not found in `isize`\n\nerror: aborting due to 2\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_div = 0;\n    let mut largest_div2 = 0;\n  \
    \  let mut div = 1;\n    while div < n {\n        let mut div2 = div * div;\n\
    \        if div2 < largest_div2 {\n            largest_div2 = div2;\n        \
    \    largest_div = div;\n        }\n        div += 1;\n    }\n    largest_div\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp5hxe6_dz.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..(n/2)).max().unwrap_or(n)\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb0uvil46.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).rfold(0, |a, b| if b > a { b } else { a })\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpa1bmvva3.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n)\n        .map(|x| {\n            if n / x < x {\n  \
    \              x / n\n            } else {\n                n\n            }\n\
    \        })\n        .max()\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpchpisx2j.rs:5:5\n   |\n4\
    \  |   fn largest_divisor(n: isize) -> isize {\n   |                         \
    \          ----- expected `isize` because of return type\n5  | /     (1..=n)\n\
    6  | |         .map(|x| {\n7  | |             if n / x < x {\n8  | |         \
    \        x / n\n...  |\n12 | |         })\n13 | |         .max()\n   | |______________^\
    \ expected `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n\
    \              found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (0..).filter(|&x| n % x == 0).last()\n}\n\nfn main() {\n   \
    \ let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjv1jc73y.rs:5:5\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n5 |     (0..).filter(|&x| n\
    \ % x == 0).last()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found enum `Option`\n  |\n  = note: expected type `isize`\n             found\
    \ enum `Option<isize>`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = n;\n    while n > 0 {\n        if\
    \ n % largest_divisor == 0 {\n            largest_divisor = largest_divisor as\
    \ isize;\n        }\n        n /= largest_divisor;\n    }\n    largest_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpn6kd8woz.rs:10:9\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ largest_divisor;\n   |         ^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return n;\n    }\n    let mut largest_divisor:\
    \ Option<isize> = None;\n    let mut current_divisor: isize = 1;\n    let mut\
    \ current_n: isize = 1;\n    while current_n > 0 {\n        if n % current_divisor\
    \ == 0 {\n            current_n /= current_divisor;\n            if current_n\
    \ <= n {\n                largest_divisor = Some(current_divisor);\n         \
    \   } else {\n                return current_n;\n            }\n        }\n  \
    \      current_divisor *= 10;\n    }\n    largest_divisor\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpv5xazfza.rs:22:5\n   |\n\
    4  | fn largest_divisor(n: isize) -> isize {\n   |                           \
    \      ----- expected `isize` because of return type\n...\n22 |     largest_divisor\n\
    \   |     ^^^^^^^^^^^^^^^ expected `isize`, found enum `Option`\n   |\n   = note:\
    \ expected type `isize`\n              found enum `Option<isize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).fold(0, |acc, x| if x % x == 0 { acc } else { x + acc\
    \ })\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp_ad78dtw.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        let d = (n as i64).checked_div(2);\n       \
    \ if d < n {\n            return d;\n        }\n        n -= d;\n    }\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg6l2jsza.rs:7:16\n  |\n7 |\
    \         if d < n {\n  |                ^ expected enum `Option`, found `isize`\n\
    \  |\n  = note: expected enum `Option<i64>`\n             found type `isize`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpg6l2jsza.rs:8:20\n  |\n8 |    \
    \         return d;\n  |                    ^ expected `isize`, found enum `Option`\n\
    \  |\n  = note: expected type `isize`\n             found enum `Option<i64>`\n\
    \nerror[E0277]: cannot subtract-assign `Option<i64>` from `isize`\n  --> /tmp/tmpg6l2jsza.rs:10:11\n\
    \   |\n10 |         n -= d;\n   |           ^^ no implementation for `isize -=\
    \ Option<i64>`\n   |\n   = help: the trait `SubAssign<Option<i64>>` is not implemented\
    \ for `isize`\n   = help: the following other types implement trait `SubAssign<Rhs>`:\n\
    \             <f32 as SubAssign<&f32>>\n             <f32 as SubAssign>\n    \
    \         <f64 as SubAssign<&f64>>\n             <f64 as SubAssign>\n        \
    \     <i128 as SubAssign<&i128>>\n             <i128 as SubAssign>\n         \
    \    <i16 as SubAssign<&i16>>\n             <i16 as SubAssign>\n           and\
    \ 20 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n\n    while largest % 2 == 0 {\n     \
    \   largest /= 2;\n    }\n    while largest % 3 == 0 {\n        largest /= 3;\n\
    \    }\n    while largest % 5 == 0 {\n        largest /= 5;\n    }\n\n    largest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp6xoyzrtq.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(n as usize)\n        .ok_or(Error::<T>::InvalidArgument(\"\
    Number must be positive and less than n\"))?\n        .ceil()\n        .ok_or(Error::<T>::InvalidArgument(\"\
    Number is too large\"))?\n        .floor()\n        .ok_or(Error::<T>::InvalidArgument(\"\
    Number is too small\"))?\n        .abs()\n        .ok_or(Error::<T>::InvalidArgument(\"\
    Number is too large\"))?\n        .try_into()\n        .unwrap()\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Error`\n --> /tmp/tmpem5m8znf.rs:6:16\n\
    \  |\n6 |         .ok_or(Error::<T>::InvalidArgument(\"Number must be positive\
    \ and less than n\"))?\n  |                ^^^^^ not found in this scope\n  |\n\
    help: consider importing one of these items\n  |\n1 | use std::error::Error;\n\
    \  |\n1 | use std::fmt::Error;\n  |\n1 | use std::io::Error;\n  |\n\nerror[E0412]:\
    \ cannot find type `T` in this scope\n --> /tmp/tmpem5m8znf.rs:6:24\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |                   - help: you might\
    \ be missing a type parameter: `<T>`\n5 |     n.checked_div(n as usize)\n6 | \
    \        .ok_or(Error::<T>::InvalidArgument(\"Number must be positive and less\
    \ than n\"))?\n  |                        ^ not found in this scope\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Error`\n --> /tmp/tmpem5m8znf.rs:8:16\n\
    \  |\n8 |         .ok_or(Error::<T>::InvalidArgument(\"Number is too large\"))?\n\
    \  |                ^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ one of these items\n  |\n1 | use std::error::Error;\n  |\n1 | use std::fmt::Error;\n\
    \  |\n1 | use std::io::Error;\n  |\n\nerror[E0412]: cannot find type `T` in this\
    \ scope\n --> /tmp/tmpem5m8znf.rs:8:24\n  |\n4 | fn largest_divisor(n: isize)\
    \ -> isize {\n  |                   - help: you might be missing a type parameter:\
    \ `<T>`\n...\n8 |         .ok_or(Error::<T>::InvalidArgument(\"Number is too large\"\
    ))?\n  |                        ^ not found in this scope\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `Error`\n  --> /tmp/tmpem5m8znf.rs:10:16\n\
    \   |\n10 |         .ok_or(Error::<T>::InvalidArgument(\"Number is too small\"\
    ))?\n   |                ^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ one of these items\n   |\n1  | use std::error::Error;\n   |\n1  | use std::fmt::Error;\n\
    \   |\n1  | use std::io::Error;\n   |\n\nerror[E0412]: cannot find type `T` in\
    \ this scope\n  --> /tmp/tmpem5m8znf.rs:10:24\n   |\n4  | fn largest_divisor(n:\
    \ isize) -> isize {\n   |                   - help: you might be missing a type\
    \ parameter: `<T>`\n...\n10 |      "
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    let mut i = 1;\n    while i <= m {\n   \
    \     if n % i == 0 {\n            m = i;\n        }\n        i += 1;\n    }\n\
    \    m\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp1a094bpy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).find(|i| n % i == 0).unwrap()\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpfqqf4yyd.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = n;\n    for d in divisors(n) {\n \
    \       if n % d == 0 {\n            largest_divisor = d;\n            break;\n\
    \        }\n    }\n    largest_divisor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp8psmn_nh.rs:6:14\n\
    \  |\n6 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut smaller_divisor = 1;\n    let mut largest_divisor =\
    \ n;\n    while smaller_divisor < n / 2 {\n        smaller_divisor *= 2;\n   \
    \     if n % smaller_divisor == 0 {\n            break;\n        }\n        largest_divisor\
    \ /= 2;\n    }\n    largest_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpg7m97hkl.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = n;\n\n    while max_divisor_remainder != 0 {\n        if max_divisor_remainder\
    \ % 2 != 0 {\n            max_divisor = max_divisor_remainder;\n        }\n\n\
    \        max_divisor_remainder = max_divisor_remainder / 2;\n    }\n\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmplpg9_dsc.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).fold(1, |a, b| if n % b == 0 { b } else { a })\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8bkmq7vz.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.iter().enumerate().max_by_key(|&i, _| {\n        let mut i\
    \ = i;\n        let mut d = i;\n        while d % 2 != 0 {\n            d /= 2;\n\
    \        }\n        d + i;\n    })\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp9nyqowuz.rs:5:7\n  |\n5 |     n.iter().enumerate().max_by_key(|&i,\
    \ _| {\n  |       ^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n; // start with the largest number\n    let\
    \ mut largest_index = 1;\n    let mut num_largest = 1;\n    let mut is_largest\
    \ = true;\n\n    for i in 1..(n / largest) {\n        // check if there is a divisor\
    \ that divides i evenly\n        // if there isn't, then increment the largest\
    \ number\n        // if there is, then check if the new number is larger than\
    \ the largest\n        // if not, then reset the largest number and keep incrementing\
    \ until a divisor is found\n        if n % i == 0 {\n            largest = i;\n\
    \            largest_index += 1;\n            num_largest = 1;\n            is_largest\
    \ = true;\n        } else {\n            if num_largest == 1 {\n             \
    \   // if the new number is equal to the largest number, then set the new number\
    \ to 1\n                is_largest = false;\n            }\n            num_largest\
    \ += 1;\n        }\n    }\n\n    // add the largest number divided by the largest\
    \ index to the largest number\n    largest += largest_index * (largest / largest_index);\n\
    \n    // if the largest number is larger than n, then add one to the largest number\n\
    \    if largest > n {\n        largest += 1;\n    }\n\n    // return the largest\
    \ number\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp6skq9kj2.rs:43:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 1;\n    for divisor in divisors(n)\
    \ {\n        if n % divisor == 0 {\n            largest_divisor = divisor;\n \
    \           break;\n        }\n    }\n    largest_divisor\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpn7bmc3en.rs:6:20\n\
    \  |\n6 |     for divisor in divisors(n) {\n  |                    ^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // This number is guaranteed to be evenly divisible by 2, since\
    \ 2 is the smallest divisor of 15\n    if n % 2 == 0 {\n        return n;\n  \
    \  }\n\n    let mut m = n / 2;\n    // While m divides n evenly, the largest divisor\
    \ of n that is smaller than m\n    while m % n == 0 {\n        m = m / n;\n  \
    \  }\n    m\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpad6sf1fx.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut factor = 1;\n    let mut current_divisor = 1;\n    let\
    \ mut current_divisor_value = n;\n\n    while current_divisor_value != 0 {\n \
    \       if n % current_divisor_value == 0 {\n            factor += 1;\n      \
    \      current_divisor_value = current_divisor_value / factor;\n        } else\
    \ {\n            current_divisor_value *= factor;\n        }\n    }\n\n    if\
    \ current_divisor_value > n {\n        return n;\n    }\n    return current_divisor_value;\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgib03szx.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n\n    for i in 2..=n\
    \ {\n        if n % i == 0 {\n            return i;\n        }\n    }\n\n    n\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpp6efpzgl.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_init = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_init = i;\n\
    \            }\n            if max_divisor == i {\n                if i != 1 {\n\
    \                    max_divisor_init = i;\n                }\n            }\n\
    \        }\n    }\n    if max_divisor_init == n {\n        max_divisor_init =\
    \ 1;\n    }\n    max_divisor_init\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpmx0joz_j.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (**n*).floor() as isize\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `)`\n --> /tmp/tmplxlcb2zb.rs:5:10\n\
    \  |\n5 |     (**n*).floor() as isize\n  |          ^ expected expression\n\n\
    error: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div = 1;\n    let mut div = 1;\n    while div *\
    \ div <= n {\n        if n % div == 0 {\n            max_div = div;\n        }\n\
    \        div += 1;\n    }\n    max_div\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmpvsns4j6x.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max = 0;\n    let mut num_divisor = 1;\n\n    while\
    \ num_divisor <= n {\n        if n % num_divisor == 0 {\n            num_divisor\
    \ *= 2;\n        }\n        else {\n            num_divisor++;\n        }\n\n\
    \        if num_divisor > max {\n            max = num_divisor;\n        }\n \
    \   }\n\n    max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmpmztjslpg.rs:13:24\n\
    \   |\n13 |             num_divisor++;\n   |                        ^^ not a valid\
    \ postfix operator\n   |\nhelp: use `+= 1` instead\n   |\n13 |             { let\
    \ tmp = num_divisor; num_divisor += 1; tmp };\n   |             +++++++++++  \
    \          ~~~~~~~~~~~~~~~~~~~~~~~~~\n13 -             num_divisor++;\n13 +  \
    \           num_divisor += 1;\n   | \n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return n;\n    }\n\n    let mut max_divisor\
    \ = 0;\n\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n        \
    \    max_divisor = divisor;\n        }\n    }\n\n    return max_divisor;\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmptwk499ri.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Find first odd divisor with odd number\n    let mut max_divisor\
    \ = 0;\n    let mut div_num = n as usize;\n    while div_num > 0 {\n        if\
    \ div_num % 2 == 0 {\n            div_num -= 1;\n            continue;\n     \
    \   }\n        max_divisor = div_num;\n        div_num -= 1;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpiou2teuq.rs:16:5\n   |\n\
    4  | fn largest_divisor(n: isize) -> isize {\n   |                           \
    \      ----- expected `isize` because of return type\n...\n16 |     max_divisor\n\
    \   |     ^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    16 |     max_divisor.try_into().unwrap()\n   |                ++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    while largest % 2 == 0 {\n       \
    \ largest /= 2;\n    }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpvrezpzmu.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 {\n        n / 2\n    } else {\n        let mut\
    \ m = n as isize;\n        let mut j = n + 1;\n        while j < n {\n       \
    \     m += j;\n            j /= 2;\n        }\n        m\n    }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpc8h4fymw.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Calculate the divisors from 1 to n.\n    let divisors = vec![1..n];\n\
    \    divisors.sort();\n    divisors.iter().rev().skip_while(|&d| n % d == 0).next()\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `std::ops::Range<isize>: Ord` is not satisfied\n\
    \   --> /tmp/tmpdmxhunsl.rs:7:14\n    |\n7   |     divisors.sort();\n    |   \
    \           ^^^^ the trait `Ord` is not implemented for `std::ops::Range<isize>`\n\
    \    |\nnote: required by a bound in `slice::<impl [T]>::sort`\n\nerror[E0277]:\
    \ cannot mod `isize` by `&std::ops::Range<isize>`\n --> /tmp/tmpdmxhunsl.rs:8:45\n\
    \  |\n8 |     divisors.iter().rev().skip_while(|&d| n % d == 0).next()\n  |  \
    \                                           ^ no implementation for `isize % &std::ops::Range<isize>`\n\
    \  |\n  = help: the trait `Rem<&std::ops::Range<isize>>` is not implemented for\
    \ `isize`\n  = help: the following other types implement trait `Rem<Rhs>`:\n \
    \           <&'a f32 as Rem<f32>>\n            <&'a f64 as Rem<f64>>\n       \
    \     <&'a i128 as Rem<i128>>\n            <&'a i16 as Rem<i16>>\n           \
    \ <&'a i32 as Rem<i32>>\n            <&'a i64 as Rem<i64>>\n            <&'a i8\
    \ as Rem<i8>>\n            <&'a isize as Rem<isize>>\n          and 54 others\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpdmxhunsl.rs:8:5\n  |\n4 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |                                 ----- expected `isize`\
    \ because of return type\n...\n8 |     divisors.iter().rev().skip_while(|&d| n\
    \ % d == 0).next()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found enum `Option`\n  |\n  = note: expected type `isize`\n\
    \             found enum `Option<&std::ops::Range<isize>>`\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 2..=n/2 {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp4pt6t2am.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 0;\n\n    for i in 1..=n {\n     \
    \   if n % i == 0 {\n            if i > (largest_divisor) {\n                largest_divisor\
    \ = i;\n            }\n        }\n    }\n    largest_divisor\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmposvbdfc6.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // n is evenly divisible by 2 if n is evenly divisible by 3\
    \ if n is evenly divisible by 5 if n is evenly divisible by 7 if n is evenly divisible\
    \ by 11 if n is evenly divisible by 13 if n is evenly divisible by 17 if n is\
    \ evenly divisible by 19 if n is evenly divisible by 23 if n is evenly divisible\
    \ by 29 if n is evenly divisible by 39 if n is evenly divisible by 49 if n is\
    \ evenly divisible by 59 if n is evenly divisible by 69 if n is evenly divisible\
    \ by 89 if n is evenly divisible by 99 if n is evenly divisible by 159 if n is\
    \ evenly divisible by 251 if n is evenly divisible by 429 if n is evenly divisible\
    \ by 729 if n is evenly divisible by 1429 if n is evenly divisible by 2831 if\
    \ n is evenly divisible by 5931 if n is evenly divisible by 10311\n    // n is\
    \ evenly divisible by 2 if n is evenly divisible by 3 if n is evenly divisible\
    \ by 5 if n is evenly divisible by 7 if n is evenly divisible by 9 if n is evenly\
    \ divisible by 11 if n is evenly divisible by 13 if n is evenly divisible by 15\
    \ if n is evenly divisible by 17 if n is evenly divisible by 19 if n is evenly\
    \ divisible by 21 if n is evenly divisible by 23 if n is evenly divisible by 25\
    \ if n is evenly divisible by 27 if n is evenly divisible by 29 if n is evenly\
    \ divisible by 31 if n is evenly divisible by 33 if n is evenly divisible by 35\
    \ if n is evenly divisible by 37 if n is evenly divisible by 39 if n is evenly\
    \ divisible by 41 if n is evenly divisible by 43 if n is evenly divisible by 45\
    \ if n is evenly divisible by 47 if n is evenly divisible by 49 if n is evenly\
    \ divisible by 51 if n is evenly divisible by 53 if n is evenly divisible by 55\
    \ if n is evenly divisible by 57 if n is evenly divisible by 59 if n is evenly\
    \ divisible by 61 if n is evenly divisible by \n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpk6_q3dmk.rs:4:33\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |    ---------------            \
    \  ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut ndiv = n + 1;\n    let mut d = 2;\n    while d * d <=\
    \ ndiv {\n        ndiv *= d;\n        d += 2;\n    }\n    ndiv\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `1`', /tmp/tmp75luygp0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut div = n.clone();\n    while div != 0 {\n        if n\
    \ % div == 0 {\n            div = div >> 1;\n        } else {\n            div\
    \ = div / 2;\n        }\n    }\n    div\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp66ccqpot.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max = n;\n    for i in 2..n {\n        if n % i == 0\
    \ {\n            if max > i {\n                max = i;\n            }\n     \
    \   }\n    }\n    max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpx3ow858k.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n as isize;\n    let mut primes = vec![];\n\
    \    let mut i = 2isize;\n    while i < n::isize {\n        if n % i == 0 {\n\
    \            primes.push(i);\n            if largest < i {\n                largest\
    \ = i;\n            }\n        }\n        i += 2isize;\n    }\n    primes[primes.len()-1]\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `n`\n\
    \ --> /tmp/tmpg0jlzs5q.rs:8:15\n  |\n8 |     while i < n::isize {\n  |       \
    \        ^ use of undeclared crate or module `n`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n1 = n;\n    let mut n2 = n;\n\n    while n2 > 1 {\n\
    \        if n2 % n1 == 0 {\n            n1 += 1;\n            n2 /= n1;\n    \
    \    } else {\n            n1 -= 1;\n            n2 /= n1;\n        }\n    }\n\
    \n    n1\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmpdmlemny4.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = 0;\n    let mut divisor = 1;\n    while i < n &&\
    \ divisor < n {\n        divisor = divisor + 1;\n        i = i + 1;\n    }\n \
    \   divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpaz9ebwl_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return 1;\n    }\n\n    let mut result =\
    \ 1;\n\n    for i in 2..=n / 2 {\n        if n % i == 0 {\n            result\
    \ = i;\n            break;\n        }\n    }\n\n    result\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmpm2iimxqx.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        let div = &n % &(n as usize);\n        if div\
    \ > 0 {\n            return *div;\n        }\n        n = (n / &(n as usize))\
    \ as isize;\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n \
    \   assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp803qdo0m.rs:6:24\n  |\n6 |\
    \         let div = &n % &(n as usize);\n  |                        ^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n\nerror[E0277]: cannot mod `&isize` by `&usize`\n\
    \ --> /tmp/tmp803qdo0m.rs:6:22\n  |\n6 |         let div = &n % &(n as usize);\n\
    \  |                      ^ no implementation for `&isize % &usize`\n  |\n  =\
    \ help: the trait `Rem<&usize>` is not implemented for `&isize`\n  = help: the\
    \ following other types implement trait `Rem<Rhs>`:\n            <&'a f32 as Rem<f32>>\n\
    \            <&'a f64 as Rem<f64>>\n            <&'a i128 as Rem<i128>>\n    \
    \        <&'a i16 as Rem<i16>>\n            <&'a i32 as Rem<i32>>\n          \
    \  <&'a i64 as Rem<i64>>\n            <&'a i8 as Rem<i8>>\n            <&'a isize\
    \ as Rem<isize>>\n          and 54 others\n\nerror[E0614]: type `isize` cannot\
    \ be dereferenced\n --> /tmp/tmp803qdo0m.rs:8:20\n  |\n8 |             return\
    \ *div;\n  |                    ^^^^\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp803qdo0m.rs:10:18\n   |\n10 |         n = (n / &(n as usize)) as isize;\n\
    \   |                  ^^^^^^^^^^^^^ expected `isize`, found `usize`\n\nerror[E0277]:\
    \ cannot divide `isize` by `&usize`\n  --> /tmp/tmp803qdo0m.rs:10:16\n   |\n10\
    \ |         n = (n / &(n as usize)) as isize;\n   |                ^ no implementation\
    \ for `isize / &usize`\n   |\n   = help: the trait `Div<&usize>` is not implemented\
    \ for `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308, E0614.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut res = n;\n    while res != 1 {\n        res /= 2;\n\
    \        if res == 0 {\n            return res;\n        }\n    }\n    return\
    \ res;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmptg43hgt2.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i: isize = 1;\n    let mut remain = n;\n    let mut\
    \ factor = 1;\n    while remain > 0 {\n        remain %= factor;\n        i +=\
    \ 1;\n        factor *= i;\n    }\n    i\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp_zflxnal.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    let mut n = n;\n    while n > 1 {\n    \
    \    if n % 2 == 0 {\n            m += 1;\n            n /= 2;\n        }\n  \
    \      if n % 3 == 0 {\n            m += 1;\n            n /= 3;\n        }\n\
    \        if n % 5 == 0 {\n            m += 1;\n            n /= 5;\n        }\n\
    \    }\n    m\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmpph8x9su6.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // We begin by finding the largest factor that is less than\
    \ the number n\n    // because we only care about dividing by factors of n and\
    \ larger\n    let mut factor = 1;\n    while n > factor * 2 {\n        n /= factor;\n\
    \        factor *= 2;\n    }\n\n    let mut largest = factor;\n    while n % largest\
    \ == 0 {\n        largest <<= 1;\n    }\n    largest\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpx6fkn475.rs:9:9\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= factor;\n\
    \  |         ^^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor: isize = 1;\n    let mut i: isize =\
    \ 2;\n    while i <= n {\n        if n % i == 0 {\n            largest_divisor\
    \ = i;\n        }\n        i += 1;\n    }\n    largest_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp0koz_f6k.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_value = n;\
    \ // the largest integer that divides n evenly\n\n    // Find the largest integer\
    \ that divides n evenly\n    while max_divisor % 2 == 0 {\n        max_divisor\
    \ /= 2;\n        max_divisor_value = 2;\n    }\n\n    // Find the largest integer\
    \ that divides n evenly before n is a multiple of 2\n    while max_divisor_value\
    \ % 2 == 0 && max_divisor != 1 {\n        max_divisor /= 2;\n        max_divisor_value\
    \ = 2;\n    }\n\n    max_divisor_value\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpdu7jd64a.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    largest_divisors(vec![(n, ())], 0)\n    .unwrap()\n    .1\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `largest_divisors` in this scope\n -->\
    \ /tmp/tmp6b1qyjwq.rs:5:5\n  |\n5 |     largest_divisors(vec![(n, ())], 0)\n \
    \ |     ^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut ld = vec![n];\n    ld[0] = 1;\n    for i in 1..ld.len()\
    \ {\n        for j in i..ld.len() {\n            if ld[j] % ld[i] == 0 {\n   \
    \             ld[j] += 1;\n                break;\n            }\n        }\n\
    \    }\n    ld[0] -= 1;\n    ld[0]\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpoh9tseb9.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 1;\n    }\n    let mut i = 1;\n\
    \    while i * i <= n {\n        i *= 2;\n    }\n    i - 1\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpxz07pi_o.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    let mut q = n;\n    let mut r = n;\n\n \
    \   while q != 0 {\n        if n % q == 0 {\n            m = q;\n        } else\
    \ {\n            r = q;\n        }\n        q = m / r;\n    }\n    r\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp41kp2k0m.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return n;\n    }\n\n    let mut cur = n\
    \ as usize;\n    let mut rem = n / 2;\n\n    while rem != 0 {\n        cur = rem;\n\
    \        rem = n % cur;\n    }\n\n    cur\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmphdcl3kem.rs:13:15\n   |\n\
    9  |     let mut cur = n as usize;\n   |                   ---------- expected\
    \ due to this value\n...\n13 |         cur = rem;\n   |               ^^^ expected\
    \ `usize`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmphdcl3kem.rs:14:19\n\
    \   |\n14 |         rem = n % cur;\n   |                   ^^^ expected `isize`,\
    \ found `usize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmphdcl3kem.rs:17:5\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n17 |     cur\n\
    \   |     ^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize`\
    \ to an `isize` and panic if the converted value doesn't fit\n   |\n17 |     cur.try_into().unwrap()\n\
    \   |        ++++++++++++++++++++\n\nerror[E0277]: cannot mod `isize` by `usize`\n\
    \  --> /tmp/tmphdcl3kem.rs:14:17\n   |\n14 |         rem = n % cur;\n   |    \
    \             ^ no implementation for `isize % usize`\n   |\n   = help: the trait\
    \ `Rem<usize>` is not implemented for `isize`\n   = help: the following other\
    \ types implement trait `Rem<Rhs>`:\n             <&'a f32 as Rem<f32>>\n    \
    \         <&'a f64 as Rem<f64>>\n             <&'a i128 as Rem<i128>>\n      \
    \       <&'a i16 as Rem<i16>>\n             <&'a i32 as Rem<i32>>\n          \
    \   <&'a i64 as Rem<i64>>\n             <&'a i8 as Rem<i8>>\n             <&'a\
    \ isize as Rem<isize>>\n           and 54 others\n\nerror: aborting due to 4 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n: isize = 0;\n    let mut max_i: isize = 0;\n    for\
    \ d in 1..=n {\n        if n % d == 0 {\n            if n < d {\n            \
    \    max_i = d;\n            }\n            n = d;\n        }\n    }\n    if n\
    \ < n {\n        max_i = n;\n    }\n    max_i\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpxs8w7e0d.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n as usize;\n    loop {\n        if max_divisor\
    \ % 2 == 0 {\n            max_divisor /= 2;\n        } else {\n            break;\n\
    \        }\n    }\n    if max_divisor < n {\n        max_divisor\n    } else {\n\
    \        max_divisor\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp7q0pofut.rs:13:22\n   |\n\
    13 |     if max_divisor < n {\n   |                      ^ expected `usize`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n   |\n13 |     if max_divisor < n.try_into().unwrap()\
    \ {\n   |                       ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp7q0pofut.rs:14:9\n   |\n4  | fn largest_divisor(n: isize)\
    \ -> isize {\n   |                                 ----- expected `isize` because\
    \ of return type\n...\n14 |         max_divisor\n   |         ^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n14 |         max_divisor.try_into().unwrap()\n\
    \   |                    ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp7q0pofut.rs:16:9\n   |\n4  | fn largest_divisor(n: isize) -> isize\
    \ {\n   |                                 ----- expected `isize` because of return\
    \ type\n...\n16 |         max_divisor\n   |         ^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n16 |         max_divisor.try_into().unwrap()\n\
    \   |                    ++++++++++++++++++++\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    while n % 2 == 0 {\n        n /= 2;\n    }\n\n    n\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp3y3zhfu9.rs:6:9\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n5 |     while n % 2 == 0 {\n\
    6 |         n /= 2;\n  |         ^^^^^^ cannot assign to immutable argument\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        let max_divisor = n / 2;\n        if n % max_divisor\
    \ == 0 {\n            return max_divisor;\n        }\n        n = max_divisor;\n\
    \    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpndi7rlzu.rs:10:9\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n = max_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    let mut largest = m * 2;\n\n    while largest\
    \ % m != 0 {\n        m = largest / m;\n        largest += 1;\n    }\n\n    largest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `1`', /tmp/tmpw68vrdkk.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut div: isize = 0;\n    for\
    \ d in &[isize::MIN, isize::MAX, isize::MAX / 2, isize::MAX / 3] {\n        if\
    \ n % d == 0 {\n            div = d;\n            if max_divisor < div {\n   \
    \             max_divisor = div;\n            }\n        }\n    }\n    div\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp6gx1nii.rs:9:19\n  |\n6 |\
    \     let mut div: isize = 0;\n  |                  ----- expected due to this\
    \ type\n...\n9 |             div = d;\n  |                   ^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n9 |     \
    \        div = *d;\n  |                   +\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut factor = 1;\n    while n % factor == 0 {\n        factor\
    \ = factor * 2 + 1;\n    }\n    factor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpofbo0puk.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).iter().fold(\n        || {\n            let mut smaller:\
    \ isize = 0;\n            let mut larger: isize = n;\n\n            for x in 0..n\
    \ / 2 {\n                if n % x == 0 {\n                    smaller += x;\n\
    \                } else {\n                    larger -= x;\n                }\n\
    \            }\n\n            larger\n        },\n        |a, i| if i % a == 0\
    \ {\n            a - 1\n        } else {\n            a\n        },\n    )\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for struct `RangeInclusive`\
    \ in the current scope\n --> /tmp/tmple9jmk_7.rs:5:13\n  |\n5 |     (1..=n).iter().fold(\n\
    \  |             ^^^^ method not found in `RangeInclusive<isize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut divisor = 1;\n    while divisor\
    \ <= n {\n        if n % divisor == 0 {\n            largest = divisor;\n    \
    \    }\n        divisor *= 2;\n    }\n    largest\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmp3neru9jt.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    for i in 2..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor > i {\n                max_divisor =\
    \ i;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n   \
    \ let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp97s9wk8t.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut ans = n;\n    let mut q = 1; // q = n / 2\n    while\
    \ q > 0 {\n        if n % q == 0 {\n            ans = q;\n        }\n        q\
    \ += 1;\n    }\n    ans\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008910
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_mul(|v| v % 2).unwrap().next()\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpmgjo9qp2.rs:5:19\n  |\n5 |\
    \     n.checked_mul(|v| v % 2).unwrap().next()\n  |                   ^^^^^^^^^\
    \ expected `isize`, found closure\n  |\n  = note: expected type `isize`\n    \
    \      found closure `[closure@/tmp/tmpmgjo9qp2.rs:5:19: 5:28]`\n\nerror[E0599]:\
    \ no method named `next` found for type `isize` in the current scope\n --> /tmp/tmpmgjo9qp2.rs:5:39\n\
    \  |\n5 |     n.checked_mul(|v| v % 2).unwrap().next()\n  |                  \
    \                     ^^^^ method not found in `isize`\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max = 0;\n    for i in 2..=n {\n        if n % i ==\
    \ 0 {\n            if max < i {\n                max = i;\n            }\n   \
    \     }\n    }\n    max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2vjnwpa6.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = n;\n\n    for i in 1..=n {\n     \
    \   if n % (i + 1) == 0 {\n            largest_divisor = i;\n            break;\n\
    \        }\n    }\n\n    largest_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpkj_wcqb8.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).find(|&i| n % i == 0).unwrap() // n is divisible by\
    \ i\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpap40mp7z.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).find_max_by(|x| x / &[x as isize; 1])\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `find_max_by` found for struct `RangeInclusive`\
    \ in the current scope\n --> /tmp/tmp5ekvqrij.rs:5:13\n  |\n5 |     (1..=n).find_max_by(|x|\
    \ x / &[x as isize; 1])\n  |             ^^^^^^^^^^^ method not found in `RangeInclusive<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    use std::cmp::Ordering;\n\n    let mut i = n;\n    let mut largest_divisor\
    \ = 1;\n\n    while i > largest_divisor {\n        let mut next_divisor = 2;\n\
    \        while next_divisor < i {\n            if i / next_divisor == 0 {\n  \
    \              i += 1;\n                break;\n            }\n\n            next_divisor\
    \ += 1;\n        }\n\n        if next_divisor > largest_divisor {\n          \
    \  largest_divisor = next_divisor;\n        }\n    }\n\n    i\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpk1u1y9tk.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n%2 == 0 {\n        return n/2;\n    }\n    for i in 3..n/2\
    \ {\n        if n % i == 0 {\n            return i;\n        }\n    }\n    n\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpie9z_q5y.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    fn gcd(mut n: isize, mut d: isize) -> isize {\n        while\
    \ d > 0 {\n            if n % d == 0 {\n                n = d % n;\n         \
    \       d /= n;\n            } else {\n                d *= d;\n            }\n\
    \        }\n        n\n    }\n\n    let mut d = n;\n    let mut n = 1;\n\n   \
    \ while d % 2 != 0 {\n        d = gcd(n, d);\n        n += 1;\n    }\n    n\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to multiply with overflow'', /tmp/tmpjk0zxkum.rs:11:17

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return 1;\n    }\n\n    let mut max_div\
    \ = 1;\n\n    for d in 2..=(n/2).min() {\n        if n % d == 0 {\n          \
    \  if d > max_div {\n                max_div = d;\n            }\n        }\n\
    \    }\n    max_div\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmp0j9akxm1.rs:11:24\n    |\n11  |     for d in 2..=(n/2).min() {\n\
    \    |                        ^^^- supplied 0 arguments\n    |               \
    \         |\n    |                        expected 1 argument\n    |\nnote: associated\
    \ function defined here\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    largest_divisor_iter::<isize>(n, 0).unwrap()\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `largest_divisor_iter` in this scope\n\
    \ --> /tmp/tmprwodeml6.rs:5:5\n  |\n5 |     largest_divisor_iter::<isize>(n, 0).unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        if n % 2 == 0 {\n            return n;\n   \
    \     }\n        n /= 2;\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpq3t6sjb2.rs:9:9\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 2;\n  |\
    \         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 2..=n / 2 {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpqrd1uvl2.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = 1;\n    let mut max_div = 1;\n    while i <= n {\n\
    \        if n % i == 0 {\n            if i % max_div == 0 {\n                max_div\
    \ = i;\n            }\n        } else {\n            i += 1;\n        }\n    }\n\
    \    max_div\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008910
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    while m != 0 {\n        m /= 2;\n    }\n\
    \    m\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpb0s_86xo.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        let mut dividend = n;\n        let mut divisor\
    \ = 1;\n\n        // Iterate up to dividend is 1, and dividend is 1 evenly (this\
    \ is guaranteed to be the case as long as n is prime)\n        while dividend\
    \ % divisor == 0 && divisor != 1 {\n            divisor += 1;\n        }\n\n \
    \       // Return n if divisor is equal to 1 or larger\n        if divisor <=\
    \ 1 {\n            return n;\n        }\n\n        // Update dividend and divisor\
    \ with next multiples of divisor\n        dividend /= divisor;\n        divisor\
    \ += 1;\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpobgqmt8q.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 1);\n\n    let mut max_div = n;\n    for\
    \ divisor in 1..=max_div {\n        if n / divisor == 0 {\n            return\
    \ divisor;\n        }\n        if n / divisor > max_div {\n            max_div\
    \ = n / divisor;\n        }\n    }\n\n    if n / max_div == 0 {\n        return\
    \ max_div;\n    }\n\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpba8tr05w.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return n;\n    }\n\n    let mut s = isize::MAX;\n\
    \    let mut d = 1;\n    while d <= n {\n        if n % d == 0 {\n           \
    \ d += 1;\n        }\n        else {\n            s = d;\n            n = n /\
    \ d;\n        }\n    }\n    s\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp76inhr82.rs:17:13\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n17 |             n\
    \ = n / d;\n   |             ^^^^^^^^^ cannot assign to immutable argument\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut curr_divisor = 1;\n\n\
    \    while curr_divisor < max_divisor {\n        if n % curr_divisor == 0 {\n\
    \            break;\n        }\n\n        curr_divisor *= 2;\n    }\n\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmphviszwdt.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(2).unwrap_or(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkhy7n81h.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008904
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i: isize = 1;\n    let mut max_divisor: isize = 1;\n\
    \    while i <= n {\n        if n % i == 0 {\n            if max_divisor > i {\n\
    \                max_divisor = i;\n            }\n        }\n        i += 1;\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpnijyg62_.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n / 2\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp790mn4kf.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).rev().find(|x| n % x == 0)\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6a4bsd0o.rs:5:5\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n5 |     (1..=n).rev().find(|x|\
    \ n % x == 0)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ enum `Option`\n  |\n  = note: expected type `isize`\n             found enum\
    \ `Option<isize>`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut i = 1;\n    while i <= n {\n\
    \        if n % i == 0 {\n            if largest == n {\n                return\
    \ i;\n            }\n            largest = i;\n        }\n        i += 1;\n  \
    \  }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpr2k8it7k.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 1usize;\n    for d in (1..n).rev()\
    \ {\n        if n % d == 0 {\n            if d > largest_divisor {\n         \
    \       largest_divisor = d;\n            }\n        }\n    }\n    largest_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpt4pneqlb.rs:8:20\n  |\n8 |\
    \             if d > largest_divisor {\n  |                    ^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n8 |             if\
    \ d > largest_divisor.try_into().unwrap() {\n  |                             \
    \      ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n --> /tmp/tmpt4pneqlb.rs:9:35\n\
    \  |\n5 |     let mut largest_divisor = 1usize;\n  |                         \
    \      ------ expected due to this value\n...\n9 |                 largest_divisor\
    \ = d;\n  |                                   ^ expected `usize`, found `isize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpt4pneqlb.rs:13:5\n   |\n4  | fn\
    \ largest_divisor(n: isize) -> isize {\n   |                                 -----\
    \ expected `isize` because of return type\n...\n13 |     largest_divisor\n   |\
    \     ^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    13 |     largest_divisor.try_into().unwrap()\n   |                    ++++++++++++++++++++\n\
    \nerror: aborting due to 3 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_sub(2).ok_or(Error::NegativeDivisor).unwrap()\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Error`\n --> /tmp/tmpomik1x4f.rs:5:28\n\
    \  |\n5 |     n.checked_sub(2).ok_or(Error::NegativeDivisor).unwrap()\n  |   \
    \                         ^^^^^ use of undeclared type `Error`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 2..n / 2 {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpnownjd0n.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut i = 2;\n\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            i += 1;\n        } else {\n\
    \            max_divisor = i;\n        }\n    }\n\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpivimnd72.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n\n    while largest % 2 == 0 {\n     \
    \   largest /= 2;\n    }\n\n    while largest % 5 == 0 {\n        largest /= 5;\n\
    \    }\n\n    while largest % 6 == 0 {\n        largest /= 6;\n    }\n\n    largest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpsgnvzbt_.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n    let mut max_div:\
    \ usize = 1;\n    let mut max_div_ind = 1;\n    for div_ind in 1..=n {\n     \
    \   let div = n / div_ind;\n        if div > max_div {\n            max_div =\
    \ div;\n            max_div_ind = div_ind;\n        }\n    }\n    max_div_ind\
    \ as usize\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp8xosfixz.rs:12:18\n   |\n\
    12 |         if div > max_div {\n   |                  ^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n12 |         if div > max_div.try_into().unwrap()\
    \ {\n   |                         ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp8xosfixz.rs:13:23\n   |\n8  |     let mut max_div: usize\
    \ = 1;\n   |                      ----- expected due to this type\n...\n13 | \
    \            max_div = div;\n   |                       ^^^ expected `usize`,\
    \ found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8xosfixz.rs:17:5\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n17 |     max_div_ind\
    \ as usize\n   |     ^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n  \
    \ |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n17 |     (max_div_ind as usize).try_into().unwrap()\n\
    \   |     +                    +++++++++++++++++++++\n\nerror: aborting due to\
    \ 3 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max: isize = 0;\n    let mut prime_div = 1;\n    let\
    \ mut prime: isize = 1;\n\n    while prime_div <= n {\n        prime_div = prime;\n\
    \        prime += 2;\n        while prime <= n && n % prime == 0 {\n         \
    \   prime += 2;\n        }\n        if prime > max {\n            max = prime;\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpztid5fkn.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut result = n;\n    let mut m = n;\n    for _ in 0..4 {\n\
    \        m /= 2;\n        if m == 1 {\n            return m;\n        }\n    }\n\
    \    while m != 0 {\n        m /= 2;\n        result = result * 2 + m;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp8pjpwvdr.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 1);\n    debug_assert!(n % 2 != 0);\n   \
    \ let mut max_divisor = 0;\n    let mut max_n = n;\n    for divisor in 2..=max_n\
    \ {\n        let remainder = n % divisor;\n        if remainder == 0 {\n     \
    \       max_divisor = divisor;\n            max_n = n - divisor;\n        }\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpo34zi61t.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n as isize;\n    loop {\n        if m % 2 != 0 {\n\
    \            return m;\n        }\n        m /= 2;\n    }\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp0cbcdgb1.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut ans = 1;\n    let mut div = n;\n\n    for _ in 0..=n\
    \ {\n        if div%2 == 0 {\n            ans = *ans;\n        }\n\n        div\
    \ = div / 2;\n    }\n\n    ans\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0614]: type `{integer}` cannot be dereferenced\n  --> /tmp/tmpxa6u6ra2.rs:10:19\n\
    \   |\n10 |             ans = *ans;\n   |                   ^^^^\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0614`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        let candidate = n / 2; // n is even\n      \
    \  if n / candidate == candidate {\n            return candidate;\n        }\n\
    \        n = candidate;\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpzhraktx3.rs:10:9\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n = candidate;\n\
    \   |         ^^^^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..(n + 1)).filter(|d| n % d == 0).max()\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4ugbjaxz.rs:5:5\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n5 |     (1..(n + 1)).filter(|d|\
    \ n % d == 0).max()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n  |\n  = note: expected type `isize`\n       \
    \      found enum `Option<isize>`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(2isize).unwrap_or(-1isize)\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpga70v8yo.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max = 0;\n    for &n in &[n; n] {\n        if n % 2\
    \ != 0 {\n            continue;\n        }\n        for &n in &[n; n] {\n    \
    \        if n % 2 == 0 {\n                max = n;\n                break;\n \
    \           }\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0435]: attempt to use a non-constant value in a constant\n --> /tmp/tmp1ih7bo0j.rs:6:20\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - this\
    \ would need to be a `const`\n5 |     let mut max = 0;\n6 |     for &n in &[n;\
    \ n] {\n  |                    ^\n\nerror[E0435]: attempt to use a non-constant\
    \ value in a constant\n  --> /tmp/tmp1ih7bo0j.rs:10:24\n   |\n6  |     for &n\
    \ in &[n; n] {\n   |          - this would need to be a `const`\n...\n10 |   \
    \      for &n in &[n; n] {\n   |                        ^\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0435`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in (1..n).rev() {\n        if n % i == 0 {\n         \
    \   return i;\n        }\n    }\n\n    n\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008905
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 == 0);\n    let mut i: usize = 1;\n    while\
    \ i * i <= n {\n        i += 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbiko07y8.rs:7:20\n  |\n7 |\
    \     while i * i <= n {\n  |                    ^ expected `usize`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n  |\n7 |     while i * i <= n.try_into().unwrap() {\n  |\
    \                     ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpbiko07y8.rs:10:5\n   |\n4  | fn largest_divisor(n: isize) -> isize\
    \ {\n   |                                 ----- expected `isize` because of return\
    \ type\n...\n10 |     i\n   |     ^ expected `isize`, found `usize`\n   |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n10 |     i.try_into().unwrap()\n   |      ++++++++++++++++++++\n\n\
    error: aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 1..=n {\n        if n%i == 0 {\n            return\
    \ i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp3rk8za8y.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008905
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n\n    fn largest_divisor_inner(n: isize)\
    \ -> isize {\n        if n%2 == 0 { 2 }\n        else if n < 10 { 1 }\n      \
    \  else if n <= 16 { 2 }\n        else if n <= 26 { 3 }\n        else if n <=\
    \ 35 { 4 }\n        else if n <= 40 { 5 }\n        else { 6 }\n    }\n\n    let\
    \ mut largest = n;\n\n    for divisor in &[isize::MIN, 2, 3, 4, 5, 6] {\n    \
    \    if n / divisor > largest {\n            largest = n / divisor;\n        }\n\
    \    }\n\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpgtrlo87c.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008906
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n: isize = 0;\n    for divisor in &[2, 3, 5, 7, 11,\
    \ 13, 17, 19] {\n        if n % divisor == 0 {\n            n = divisor;\n   \
    \     }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3m3o0g6w.rs:8:17\n  |\n5 |\
    \     let mut n: isize = 0;\n  |                ----- expected due to this type\n\
    ...\n8 |             n = divisor;\n  |                 ^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n8 |     \
    \        n = *divisor;\n  |                 +\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008905

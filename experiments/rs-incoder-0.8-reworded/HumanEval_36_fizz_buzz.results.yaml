language: rs
name: HumanEval_36_fizz_buzz
results:
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut i = 0;\n    while i < n {\n        let d = i % 11;\n        let a = i %\
    \ 13;\n        i += 1;\n        if d == 7 || a == 7 {\n            return i;\n\
    \        }\n    }\n    return i;\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp1luldr7d.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpldhoqjhq.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ as isize / 11.0) * 11\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n  \
    \  assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpj37kla8a.rs:9:17\n\
    \  |\n9 |     (n as isize / 11.0) * 11\n  |                 ^ no implementation\
    \ for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented\
    \ for `isize`\n  = help: the following other types implement trait `Div<Rhs>`:\n\
    \            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n      \
    \      <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n          \
    \  <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a\
    \ i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + (n / 11)\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `0`', /tmp/tmpvh15mrge.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        let digit = n % 10;\n        if\
    \ digit == 7 {\n            counter += 1;\n        }\n        n = n / 10;\n  \
    \  }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp0xa_ilme.rs:15:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n15 |         n = n / 10;\n   |  \
    \       ^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut x = 1;\n    while x != n {\n        count += !(n\
    \ % x);\n        x <<= 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmp112rjux8.rs:12:19

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 {\n        if n % 13 == 0 {\n            return 1;\n        }\n\
    \        else {\n            return 0;\n        }\n    }\n    if n % 13 == 0 {\n\
    \        return 0;\n    }\n    if n % 11 != 0 {\n        return 1;\n    }\n  \
    \  return n;\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpw13q0y_t.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count: usize = 0;\n    for d in n.digits().filter(|&n| n % 11 == 0 || n\
    \ % 13 == 0) {\n        count += 1\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `digits` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp9ye94f95.rs:10:16\n   |\n10 |     for d in n.digits().filter(|&n|\
    \ n % 11 == 0 || n % 13 == 0) {\n   |                ^^^^^^ method not found in\
    \ `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp9ye94f95.rs:13:5\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |                          \
    \ ----- expected `isize` because of return type\n...\n13 |     count\n   |   \
    \  ^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize`\
    \ to an `isize` and panic if the converted value doesn't fit\n   |\n13 |     count.try_into().unwrap()\n\
    \   |          ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        return 0;\n    }\n    let mut result =\
    \ 0;\n    for i in 1..=n {\n        if i % 11 == 0 || i % 13 == 0 {\n        \
    \    result += 1;\n        }\n    }\n    return result;\n}\n\nfn main() {\n  \
    \  let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpnsegv1qr.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut result = 0;\n    for i in 1..=n {\n        if n % i == 0 || i % 11 == 0\
    \ {\n            result += i;\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `203`,\n right: `0`', /tmp/tmp3t8a8vke.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    n\
    \ / 11 as isize\n        + n % 11 / 13 as isize\n        + n % 13\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `15`,\n right: `0`', /tmp/tmpp3zzfktr.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &n in &n {\n        if n % 7 == 0 {\n            counter\
    \ += 1;\n        }\n        if n % 11 == 0 || n % 13 == 0 {\n            counter\
    \ += 2;\n        }\n    }\n    return counter;\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n  --> /tmp/tmpxo3t80ar.rs:10:15\n\
    \   |\n10 |     for &n in &n {\n   |               ^^ `&isize` is not an iterator\n\
    \   |\n   = help: the trait `Iterator` is not implemented for `&isize`\n   = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..n).filter(|i|\
    \ i % 11 == 0 || i % 13 == 0).count()\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpn1x2se9i.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (1..n).filter(|i| i % 11 == 0 || i %\
    \ 13 == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (1..n).filter(|i|\
    \ i % 11 == 0 || i % 13 == 0).count().try_into().unwrap()\n  |               \
    \                                           ++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 10 == 0 && n % 100 != 0 && n % 100 != 10 && n % 100 != 100 && n % 100 != 1000);\n\
    \    n / 10\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `0`', /tmp/tmpgza_elzj.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n <= 0 { 0 }\n    else if n % 11 == 0 || n % 13 == 0 {\n        n\n    }\n \
    \   else {\n        fizz_buzz(n - 1) as isize\n    }\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmp4cxvm6j5.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut i = 0;\n    while i < n {\n        if i % 11 == 0 ||\n           i % 13\
    \ == 0\n        {\n            i += 1;\n        } else {\n            i += 3;\n\
    \        }\n    }\n    i\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `52`,\n right: `0`', /tmp/tmppckw2l3n.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 9 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count++;\n        }\n        n /= 10;\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmpf8bfm23h.rs:12:18\n\
    \   |\n12 |             count++;\n   |                  ^^ not a valid postfix\
    \ operator\n   |\nhelp: use `+= 1` instead\n   |\n12 |             { let tmp =\
    \ count; count += 1; tmp };\n   |             +++++++++++      ~~~~~~~~~~~~~~~~~~~\n\
    12 -             count++;\n12 +             count += 1;\n   | \n\nerror: aborting\
    \ due to previous error\n\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ - 1) % 11 == 0 || (n - 1) % 13 == 0 || (n - 1) % 14 == 0 ? 0 : 1 + fizz_buzz(n\
    \ - 1)\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `0`\n\
    \ --> /tmp/tmp68fg5os0.rs:9:67\n  |\n9 |     (n - 1) % 11 == 0 || (n - 1) % 13\
    \ == 0 || (n - 1) % 14 == 0 ? 0 : 1 + fizz_buzz(n - 1)\n  |                  \
    \                                                 ^ expected one of `.`, `;`,\
    \ `?`, `}`, or an operator\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 && n % 13 == 0 {\n        0\n    } else if n % 11 != 0 {\n     \
    \   1\n    } else {\n        2\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpi2m4zmgq.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n as isize + 7\n    } else {\n       \
    \ n as isize + 5\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n  \
    \  assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `55`,\n right: `0`', /tmp/tmplml6570z.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ - n % 11) % 13 == 0 ? 0 : 2 + (n - n % 11) % 13 == 1 ? 3 : ((n - n % 11) % 13\
    \ == 2) ? 4 : 0\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `0`\n\
    \ --> /tmp/tmprtajzaei.rs:9:30\n  |\n9 |     (n - n % 11) % 13 == 0 ? 0 : 2 +\
    \ (n - n % 11) % 13 == 1 ? 3 : ((n - n % 11) % 13 == 2) ? 4 : 0\n  |         \
    \                     ^ expected one of `.`, `;`, `?`, `}`, or an operator\n\n\
    error: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0);\n    debug_assert!(n % 13 == 0);\n    let mut c = 0;\n    while\
    \ n != 0 {\n        if n % 10 == 7 {\n            c += 1;\n        }\n       \
    \ n /= 10;\n    }\n    c\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp4n5k2aan.rs:16:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n16 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    fn\
    \ check_divisor(x: isize) -> bool {\n        match x {\n            x if x % 11\
    \ == 0 || x % 13 == 0 => true,\n            _ => false,\n        }\n    }\n  \
    \  (1..n).filter(|x| check_divisor(x)).count() as isize\n}\n\nfn main() {\n  \
    \  let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpx3h4ld8k.rs:15:37\n   |\n\
    15 |     (1..n).filter(|x| check_divisor(x)).count() as isize\n   |          \
    \                           ^ expected `isize`, found `&isize`\n   |\nhelp: consider\
    \ dereferencing the borrow\n   |\n15 |     (1..n).filter(|x| check_divisor(*x)).count()\
    \ as isize\n   |                                     +\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n\n    for i in 0..n {\n        let digit = if i % 13 == 0\
    \ || i % 11 == 0 {\n            7\n        } else {\n            i as u8\n   \
    \     };\n\n        if digit == 7 {\n            counter += 1;\n        }\n  \
    \  }\n\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `0`', /tmp/tmpw_0041xx.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ * 2) / 3 + (n % 3 == 0 || n % 5 == 0 ? 0 : 1)\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `)`, `,`, `.`, `?`, or an operator, found `0`\n\
    \ --> /tmp/tmptwhsiz6x.rs:9:47\n  |\n9 |     (n * 2) / 3 + (n % 3 == 0 || n %\
    \ 5 == 0 ? 0 : 1)\n  |                                               ^ expected\
    \ one of `)`, `,`, `.`, `?`, or an operator\n\nerror: expected one of `!`, `&&`,\
    \ `&`, `(`, `)`, `*`, `...`, `.`, `;`, `<`, `?`, `[`, `_`, `async`, `const`, `dyn`,\
    \ `extern`, `fn`, `for`, `impl`, `unsafe`, `}`, `~`, an operator, lifetime, or\
    \ path, found `1`\n --> /tmp/tmptwhsiz6x.rs:9:51\n  |\n9 |     (n * 2) / 3 + (n\
    \ % 3 == 0 || n % 5 == 0 ? 0 : 1)\n  |                                       \
    \            ^ expected one of 26 possible tokens\n\nerror: aborting due to 2\
    \ previous errors\n\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n <= 0 { 0 }\n    else if n % 10 == 7 || n % 10 == 11 || n % 10 == 13 { 1 }\n\
    \    else if n % 10 == 0 || n % 10 == 1 { 0 }\n    else if n % 10 == 2 || n %\
    \ 10 == 3 || n % 10 == 5 || n % 10 == 7 || n % 10 == 9 || n % 10 == 11 { 2 }\n\
    \    else if n % 10 == 4 || n % 10 == 6 || n % 10 == 8 || n % 10 == 10 || n %\
    \ 10 == 12 { 3 }\n    else if n % 10 == 5 || n % 10 == 6 || n % 10 == 9 || n %\
    \ 10 == 11 { 4 }\n    else { 5 }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `2`', /tmp/tmpem7edptt.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ - 1)\n        .checked_mul(11)\n        .checked_mul(13)\n        .checked_add(1)\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `checked_mul` found for enum `Option` in\
    \ the current scope\n  --> /tmp/tmpxvw5ibb6.rs:11:10\n   |\n11 |         .checked_mul(13)\n\
    \   |          ^^^^^^^^^^^ method not found in `Option<isize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    loop\
    \ {\n        let mut n = n as usize;\n        if n % 11 == 0 { n /= 11; }\n  \
    \      if n % 13 == 0 { n /= 13; }\n        n %= 9;\n        if n == 0 { break;\
    \ }\n        n as isize\n    }\n    0\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp0ptaywk3.rs:15:9\n   |\n\
    15 |         n as isize\n   |         ^^^^^^^^^^ expected `()`, found `isize`\n\
    \   |\nhelp: you might have meant to return this value\n   |\n15 |         return\
    \ n as isize;\n   |         ++++++           +\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..=n).filter(|i|\
    \ {\n        if i % 11 == 0 || i % 13 == 0 {\n            true\n        } else\
    \ {\n            false\n        }\n    }).count()\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp67xvkk87.rs:9:5\n   |\n8\
    \  |   fn fizz_buzz(n: isize) -> isize {\n   |                             -----\
    \ expected `isize` because of return type\n9  | /     (1..=n).filter(|i| {\n10\
    \ | |         if i % 11 == 0 || i % 13 == 0 {\n11 | |             true\n12 | |\
    \         } else {\n13 | |             false\n14 | |         }\n15 | |     }).count()\n\
    \   | |______________^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    15 |     }).count().try_into().unwrap()\n   |               ++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &c in &n {\n        if c % 11 == 0 || c % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n  --> /tmp/tmp2lsbkzmr.rs:10:15\n\
    \   |\n10 |     for &c in &n {\n   |               ^^ `&isize` is not an iterator\n\
    \   |\n   = help: the trait `Iterator` is not implemented for `&isize`\n   = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for n in 0..n {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp7c6w0_t0.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 11 || n == 13 {\n        n\n    } else {\n        let mut counter = 0;\n\
    \        let mut remain = n;\n        let mut divider = 1;\n        while remain\
    \ > 0 {\n            if remain % divider == 0 {\n                counter += 1;\n\
    \            }\n            remain /= divider;\n            divider += 1;\n  \
    \      }\n        counter\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmp5kicvghu.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count: usize = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 ==\
    \ 0 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2lsv_779.rs:16:5\n   |\n\
    8  | fn fizz_buzz(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n16 |     count\n   |     ^^^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n16 |     count.try_into().unwrap()\n\
    \   |          ++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 && n % 13 == 0 {\n        return 0;\n    }\n    if n % 11 == 0 {\n\
    \        return 1;\n    }\n    if n % 13 == 0 {\n        return 2;\n    }\n  \
    \  3\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmptp72ezeg.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    n\
    \ / 11 as usize\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpoqzjlq2q.rs:9:9\n  |\n9 |\
    \     n / 11 as usize\n  |         ^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0277]: cannot divide `isize` by `usize`\n --> /tmp/tmpoqzjlq2q.rs:9:7\n\
    \  |\n9 |     n / 11 as usize\n  |       ^ no implementation for `isize / usize`\n\
    \  |\n  = help: the trait `Div<usize>` is not implemented for `isize`\n  = help:\
    \ the following other types implement trait `Div<Rhs>`:\n            <&'a f32\
    \ as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n\
    \            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n      \
    \      <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a\
    \ isize as Div<isize>>\n          and 54 others\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        n / 11\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `0`', /tmp/tmp970m0ers.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ + 1) as isize\n        .checked_div(11)\n        .ok()\n        .and_then(|n|\
    \ n.checked_div(13).ok())\n        .unwrap_or(0)\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: casts cannot be followed by a method call\n --> /tmp/tmpa79s6msa.rs:9:5\n\
    \  |\n9 |     (n + 1) as isize\n  |     ^^^^^^^^^^^^^^^^\n  |\nhelp: try surrounding\
    \ the expression in parentheses\n  |\n9 |     ((n + 1) as isize)\n  |     +  \
    \              +\n\nerror[E0599]: no method named `ok` found for enum `Option`\
    \ in the current scope\n  --> /tmp/tmpa79s6msa.rs:11:10\n   |\n11 |         .ok()\n\
    \   |          ^^ help: there is an associated function with a similar name: `or`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter: isize = 0;\n\n    while n > 0 {\n        if n % 11 == 0 {\n   \
    \         counter += 1;\n        }\n        if n % 13 == 0 {\n            counter\
    \ += 1;\n        }\n        n /= 10;\n    }\n    counter\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpprl29dbr.rs:18:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n18 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    let mut counter = 0;\n    while n > 0 {\n        if\
    \ n % 11 == 0 || n % 13 == 0 {\n            counter += 1;\n        }\n       \
    \ n /= 10;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "warning: unused import: `std::cmp::Ordering`\n --> /tmp/tmpmds29b15.rs:9:9\n\
    \  |\n9 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpmds29b15.rs:15:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n15 |         n /= 10;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ core::cmp::Ordering;\n    let mut result = n.checked_add(1, Ordering::Greater).unwrap();\n\
    \    if n % 11 == 0 || n % 13 == 0 {\n        result = 0;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: maybe a missing crate `core`?\n --> /tmp/tmp1fwxgcic.rs:9:9\n\
    \  |\n9 |     use core::cmp::Ordering;\n  |         ^^^^ maybe a missing crate\
    \ `core`?\n\nerror[E0061]: this function takes 1 argument but 2 arguments were\
    \ supplied\n   --> /tmp/tmp1fwxgcic.rs:10:24\n    |\n10  |     let mut result\
    \ = n.checked_add(1, Ordering::Greater).unwrap();\n    |                     \
    \   ^^^^^^^^^^^ -  ----------------- supplied 2 arguments\n    |             \
    \           |\n    |                        expected 1 argument\n    |\nnote:\
    \ associated function defined here\n    = note: this error originates in the macro\
    \ `int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n\
    error: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0061, E0433.\nFor more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 0 || n % 11 == 0 || n % 13 == 0 {\n        return 0;\n    }\n\n    if n\
    \ % 11 > 0 && n % 13 > 0 {\n        return 2;\n    }\n\n    3\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpls9hsvdw.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut result = if n % 13 == 0 || n % 11 == 0 {\n        0\n    } else {\n    \
    \    1\n    };\n\n    for i in (0..(n % 10))..=10 {\n        if n % i == 0 ||\
    \ i % 3 == 0 || i % 5 == 0 || i % 7 == 0 {\n            result += i;\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n   \
    \ assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwvnkgv8o.rs:15:30\n   |\n\
    15 |     for i in (0..(n % 10))..=10 {\n   |                              ^^ expected\
    \ struct `std::ops::Range`, found integer\n   |\n   = note: expected struct `std::ops::Range<isize>`\n\
    \                found type `{integer}`\n\nerror[E0277]: the trait bound `std::ops::Range<isize>:\
    \ Step` is not satisfied\n  --> /tmp/tmpwvnkgv8o.rs:15:14\n   |\n15 |     for\
    \ i in (0..(n % 10))..=10 {\n   |              ^^^^^^^^^^^^^^^^^^ the trait `Step`\
    \ is not implemented for `std::ops::Range<isize>`\n   |\n   = help: the following\
    \ other types implement trait `Step`:\n             char\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n             u128\n           and 5 others\n   = note: required\
    \ because of the requirements on the impl of `Iterator` for `RangeInclusive<std::ops::Range<isize>>`\n\
    \   = note: required because of the requirements on the impl of `IntoIterator`\
    \ for `RangeInclusive<std::ops::Range<isize>>`\n\nerror[E0277]: cannot mod `isize`\
    \ by `std::ops::Range<isize>`\n  --> /tmp/tmpwvnkgv8o.rs:16:14\n   |\n16 |   \
    \      if n % i == 0 || i % 3 == 0 || i % 5 == 0 || i % 7 == 0 {\n   |       \
    \       ^ no implementation for `isize % std::ops::Range<isize>`\n   |\n   = help:\
    \ the trait `Rem<std::ops::Range<isize>>` is not implemented for `isize`\n   =\
    \ help: the following other types implement trait `Rem<Rhs>`:\n             <&'a\
    \ f32 as Rem<f32>>\n             <&'a f64 as Rem<f64>>\n             <&'a i128\
    \ as Rem<i128>>\n             <&'a i16 as Rem<i16>>\n             <&'a i32 as\
    \ Rem<i32>>\n             <&'a i64 as Rem<i64>>\n             <&'a i8 as Rem<i8>>\n\
    \             <&'a isize as Rem<isize>>\n           and 54 others\n\nerror[E0369]:\
    \ cannot mod `std::ops::Range<isize>` by `{integer}`\n  --> /tmp/tmpwvnkgv8o.rs:16:28\n\
    \   |\n16 |         if n % i == 0 || i % 3 == 0 || i % 5 == 0 || i % 7 == 0 {\n\
    \   |                          - ^ - {integer}\n   |                         \
    \ |\n   |                          std::ops::Range<isize>\n\nerror[E0369]: cann"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        return 0;\n    }\n    let mut count =\
    \ 0;\n    for i in (0..n).step_by(11) {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `0`', /tmp/tmpcv3zie5k.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 10 == 0);\n    debug_assert!(n >= 0);\n    let mut n1: isize = 0;\n    let\
    \ mut n2: isize = 0;\n    let mut n3: isize = 0;\n    let mut n4: isize = 0;\n\
    \    let mut n5: isize = 0;\n    let mut n6: isize = 0;\n    let mut n7: isize\
    \ = 0;\n\n    for num in 0..=n {\n        if num % 11 == 0 {\n            n1 +=\
    \ 1;\n        } else if num % 13 == 0 {\n            n2 += 1;\n        } else\
    \ if num % 17 == 0 {\n            n3 += 1;\n        } else if num % 21 == 0 {\n\
    \            n4 += 1;\n        } else if num % 25 == 0 {\n            n5 += 1;\n\
    \        } else if num % 29 == 0 {\n            n6 += 1;\n        } else if num\
    \ % 33 == 0 {\n            n7 += 1;\n        } else {\n            continue;\n\
    \        }\n    }\n    n7\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n % 10 == 0'', /tmp/tmpzsmiic10.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    //\
    \ Check n is a natural number greater than zero\n    if n < 0 {\n        panic!(\"\
    fizz_buzz was called with invalid parameter: {}\", n);\n    }\n    // Check n\
    \ is a multiple of 11 or 13\n    if n % 11 == 0 || n % 13 == 0 {\n        return\
    \ 0;\n    }\n    // Check n is a multiple of 31 or 7\n    if n % 31 == 0 || n\
    \ % 7 == 0 {\n        return 0;\n    }\n    // Check n is a multiple of 100\n\
    \    if n % 100 == 0 {\n        return 0;\n    }\n    // Check n is a multiple\
    \ of 400\n    if n % 400 == 0 {\n        return 0;\n    }\n    // Check n is a\
    \ multiple of 500\n    if n % 500 == 0 {\n        return 0;\n    }\n    // Check\
    \ n is a multiple of 1000\n    if n % 1000 == 0 {\n        return 0;\n    }\n\
    \    // Check n is a multiple of 2000\n    if n % 2000 == 0 {\n        return\
    \ 0;\n    }\n    // Check n is a multiple of 4000\n    if n % 4000 == 0 {\n  \
    \      return 0;\n    }\n    // Check n is a multiple of 5000\n    if n % 5000\
    \ == 0 {\n        return 0;\n    }\n    // Check n is a multiple of 10000\n  \
    \  if n % 10000 == 0 {\n        return 0;\n    }\n    // Check n is a multiple\
    \ of 100000\n    if n % 100000 == 0 {\n        return 0;\n    }\n    // Check\
    \ n is a multiple of 1000000\n    if n % 1000000 == 0 {\n        return 0;\n \
    \   }\n    // Check n is a multiple of 10000000\n    if n % 10000000 == 0 {\n\
    \        return 0;\n    }\n    // Check n is a multiple of 100000000\n    if n\
    \ % 100000000 == 0 {\n        return 0;\n    }\n    // Check n is a multiple of\
    \ 1000000000\n    if n % 1000000000 == 0 {\n        return 0;\n    }\n    // Check\
    \ n is a multiple of 10000000000\n    if n % 10000000000 == 0 {\n        return\
    \ 0;\n    }\n    // Check n is a multiple of 100000000000\n    if n % 100000000000\
    \ == 0 {\n        return 0;\n    }\n    // Check n is a multiple of 1000000000000\n\
    \    if n % 1000000000000 == 0 {\n        return 0;\n    }\n    // Check n is\
    \ a multiple of 10000000000000\n    if n % 10000000000000 == 0 {\n        return\
    \ 0;\n    }\n    // Check n is a multiple of 100000000000000\n    if n % 100000000000000\
    \ == 0 {\n        return 0;\n    }\n    // Check n is a multiple of 1000000000000000\n\
    \    if n % 1000000000000000 == 0 {\n        return 0;\n    }\n    // Check n\
    \ is a multiple of 10000000000000000\n    if n % 10000000000000000 == 0 {\n  \
    \      return 0;\n    }\n    // Check n is a multiple of 100000000000000000\n\
    \    if n % 100000000000000000 == 0 {\n        return 0;\n    }\n    // Check\
    \ n is a multiple of 1000000000000000000\n    if n % 1000000000000000000 == 0\
    \ {\n        return 0;\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n   \
    \ assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpypq1z1tk.rs:120:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n106 |     if n % 1000000000000000000 ==\
    \ 0 {\n    |                                     - this delimiter might not be\
    \ properly closed...\n107 |         return 0;\n108 | }\n    | - ...as it matches\
    \ this but it has different indentation\n...\n120 | }\n    |   ^\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpypq1z1tk.rs:8:27\n  |\n8 | fn fizz_buzz(n: isize)\
    \ -> isize {\n  |    ---------              ^^^^^ expected `isize`, found `()`\n\
    \  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    if n % 11 == 0 {\n        fizz_buzz_helper(n,\
    \ &[11, 13, 7])\n    } else {\n        fizz_buzz_helper(n, &[7, 13, 11])\n   \
    \ }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_helper` in this scope\n \
    \ --> /tmp/tmpj9jfx9nj.rs:11:9\n   |\n11 |         fizz_buzz_helper(n, &[11, 13,\
    \ 7])\n   |         ^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `fizz_buzz_helper` in this scope\n  --> /tmp/tmpj9jfx9nj.rs:13:9\n\
    \   |\n13 |         fizz_buzz_helper(n, &[7, 13, 11])\n   |         ^^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    fn\
    \ check_and_add_one(x: u32, y: u32) -> u32 {\n        let x = if x == y { x }\
    \ else { x + 1 };\n        let y = if y == 11 { y } else { y + 1 };\n        x\n\
    \    }\n\n    let mut nfizzbuzz = n;\n    let mut i = 1;\n    let mut found =\
    \ false;\n\n    // loop while there are still integers to test and fizzbuzz has\
    \ been found or there are none left to test\n    while !found && nfizzbuzz > 0\
    \ {\n        // test the current integer and increment the counter\n        if\
    \ i % 3 == 0 && i % 5 == 0 && i % 7 == 0 {\n            nfizzbuzz -= 1;\n    \
    \        i += 1;\n        } else if i % 3 == 0 {\n            nfizzbuzz -= 1;\n\
    \            i += 1;\n        } else if i % 5 == 0 {\n            nfizzbuzz -=\
    \ 1;\n            i += 1;\n        } else if i % 7 == 0 {\n            nfizzbuzz\
    \ -= 1;\n            i += 1;\n        } else {\n            i += 1;\n        }\n\
    \    }\n\n    if nfizzbuzz == 0 {\n        found = true;\n    }\n\n    check_and_add_one(nfizzbuzz,\
    \ i) as isize\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpdlxfqbyt.rs:43:23\n   |\n\
    43 |     check_and_add_one(nfizzbuzz, i) as isize\n   |                      \
    \ ^^^^^^^^^ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n   |\n43 |     check_and_add_one(nfizzbuzz.try_into().unwrap(),\
    \ i) as isize\n   |                                ++++++++++++++++++++\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut digits = 0;\n    let mut count = 0;\n    while n > 0 {\n        let mut\
    \ d = n % 10;\n        if d < 7 {\n            count += 1;\n        }\n      \
    \  n /= 10;\n    }\n    digits\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "warning: variable `count` is assigned to, but never used\n  --> /tmp/tmpkjnottik.rs:10:13\n\
    \   |\n10 |     let mut count = 0;\n   |             ^^^^^\n   |\n   = note: `#[warn(unused_variables)]`\
    \ on by default\n   = note: consider using `_count` instead\n\nwarning: variable\
    \ does not need to be mutable\n --> /tmp/tmpkjnottik.rs:9:9\n  |\n9 |     let\
    \ mut digits = 0;\n  |         ----^^^^^^\n  |         |\n  |         help: remove\
    \ this `mut`\n  |\n  = note: `#[warn(unused_mut)]` on by default\n\nwarning: variable\
    \ does not need to be mutable\n  --> /tmp/tmpkjnottik.rs:12:13\n   |\n12 |   \
    \      let mut d = n % 10;\n   |             ----^\n   |             |\n   | \
    \            help: remove this `mut`\n\nerror[E0384]: cannot assign to immutable\
    \ argument `n`\n  --> /tmp/tmpkjnottik.rs:16:9\n   |\n8  | fn fizz_buzz(n: isize)\
    \ -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n16 |         n /= 10;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error; 3 warnings emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    n\
    \ / 11\n        + n % 11\n        + n / 13\n        - n % 13\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpt7rjpntx.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in n.checked_add(-1, |x| {\n        count += x.is_multiple_of(11)\
    \ || x.is_multiple_of(13);\n        count += x.is_multiple_of(7);\n    }) {\n\
    \        count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate =\
    \ fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmpaiog1xcl.rs:10:33\n\
    \   |\n10 |     for i in n.checked_add(-1, |x| {\n   |                       \
    \          ^ consider giving this closure parameter a type\n   |\n   = note: type\
    \ must be known at this point\n\nerror[E0277]: cannot add-assign `bool` to `{integer}`\n\
    \  --> /tmp/tmpaiog1xcl.rs:11:15\n   |\n11 |         count += x.is_multiple_of(11)\
    \ || x.is_multiple_of(13);\n   |               ^^ no implementation for `{integer}\
    \ += bool`\n   |\n   = help: the trait `AddAssign<bool>` is not implemented for\
    \ `{integer}`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n    \
    \         <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n        \
    \     <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n         \
    \    <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and\
    \ 20 others\n\nerror[E0061]: this function takes 1 argument but 2 arguments were\
    \ supplied\n   --> /tmp/tmpaiog1xcl.rs:10:16\n    |\n10  |       for i in n.checked_add(-1,\
    \ |x| {\n    |  ________________^^^^^^^^^^^_--__-\n    | |                |\n\
    \    | |                expected 1 argument\n11  | |         count += x.is_multiple_of(11)\
    \ || x.is_multiple_of(13);\n12  | |         count += x.is_multiple_of(7);\n13\
    \  | |     }) {\n    | |_____- supplied 2 arguments\n    |\nnote: associated function\
    \ defined here\n    = note: this error originates in the macro `int_impl` (in\
    \ Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0061, E0277,\
    \ E0282.\nFor more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    (1..=n).filter(|&i| {\n        i / 13 == 0 || i / 11\
    \ == 0 || i % 11 == 0 || i % 13 == 0\n    }).count(Ordering::Equal)\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 0 arguments but 1 argument was supplied\n\
    \   --> /tmp/tmpea2j4v9l.rs:12:8\n    |\n12  |     }).count(Ordering::Equal)\n\
    \    |        ^^^^^ --------------- supplied 1 argument\n    |        |\n    |\
    \        expected 0 arguments\n    |\nnote: associated function defined here\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpea2j4v9l.rs:10:5\n   |\n8  | \
    \  fn fizz_buzz(n: isize) -> isize {\n   |                             ----- expected\
    \ `isize` because of return type\n9  |       use std::cmp::Ordering;\n10 | / \
    \    (1..=n).filter(|&i| {\n11 | |         i / 13 == 0 || i / 11 == 0 || i % 11\
    \ == 0 || i % 13 == 0\n12 | |     }).count(Ordering::Equal)\n   | |_____________________________^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n12 |     }).count(Ordering::Equal).try_into().unwrap()\n\
    \   |                              ++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0061, E0308.\n\
    For more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: -1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut i = n;\n    while i != 0 {\n        i %= 11;\n        i %= 13;\n\n     \
    \   i /= 11;\n        i /= 13;\n        i += 1;\n    }\n\n    i\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976589
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    n.checked_mul(11).and_then(|n|\
    \ {\n        n.checked_mul(13).and_then(|n| {\n            n.checked_mul(11).and_then(|n|\
    \ {\n                n.checked_mul(13).and_then(|n| {\n                    n.checked_mul(11).and_then(|n|\
    \ {\n                        n.checked_mul(13).and_then(|n| {\n              \
    \              n.checked_mul(11).and_then(|n| {\n                            \
    \    n.checked_mul(13).and_then(|n| {\n                                    n.checked_mul(11).and_then(|n|\
    \ {\n                                        n.checked_mul(13).and_then(|n| {\n\
    \                                            n.checked_mul(11).and_then(|n| {\n\
    \                                                n.checked_mul(13).and_then(|n|\
    \ {\n                                                    n.checked_mul(11)\n \
    \                                               })\n                         \
    \                   })\n                                        })\n         \
    \                           })\n                                })\n         \
    \                   })\n                        })\n                    })\n \
    \               })\n            })\n        })\n    })\n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpl2qdhy83.rs:9:5\n   |\n8\
    \  |   fn fizz_buzz(n: isize) -> isize {\n   |                             -----\
    \ expected `isize` because of return type\n9  | /     n.checked_mul(11).and_then(|n|\
    \ {\n10 | |         n.checked_mul(13).and_then(|n| {\n11 | |             n.checked_mul(11).and_then(|n|\
    \ {\n12 | |                 n.checked_mul(13).and_then(|n| {\n...  |\n32 | | \
    \        })\n33 | |     })\n   | |______^ expected `isize`, found enum `Option`\n\
    \   |\n   = note: expected type `isize`\n              found enum `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 10 {\n        return n;\n    }\n\n    let mut n1 = n % 11;\n    let mut\
    \ n2 = n % 13;\n    (n1, n2)\n        .iter()\n        .filter(|&x| x == 7)\n\
    \        .count_if(|&x| x % 11 == 0 || x % 13 == 0)\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for tuple `(isize, isize)` in\
    \ the current scope\n  --> /tmp/tmpp488hkd1.rs:16:10\n   |\n16 |         .iter()\n\
    \   |          ^^^^ method not found in `(isize, isize)`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut nums: Vec<isize> = vec![0; 1000];\n    nums[n as usize] |= 1 << 0;\n   \
    \ nums[n as usize] |= 1 << 1;\n    nums[n as usize] |= 1 << 2;\n    nums[n as\
    \ usize] |= 1 << 3;\n    nums[n as usize] |= 1 << 4;\n    nums[n as usize] |=\
    \ 1 << 5;\n    nums[n as usize] |= 1 << 6;\n    nums[n as usize] |= 1 << 7;\n\
    \    nums[n as usize] |= 1 << 8;\n    nums[n as usize] |= 1 << 9;\n    nums[n\
    \ as usize] |= 1 << 10;\n    nums[n as usize] |= 1 << 11;\n    nums[n as usize]\
    \ |= 1 << 12;\n    nums[n as usize] |= 1 << 13;\n    nums[n as usize] |= 1 <<\
    \ 14;\n    nums[n as usize] |= 1 << 15;\n    nums[n as usize] |= 1 << 16;\n  \
    \  nums[n as usize] |= 1 << 17;\n    nums[n as usize] |= 1 << 18;\n    nums[n\
    \ as usize] |= 1 << 19;\n    nums[n as usize] |= 1 << 20;\n    nums[n as usize]\
    \ |= 1 << 21;\n    nums[n as usize] |= 1 << 22;\n    nums[n as usize] |= 1 <<\
    \ 23;\n    nums[n as usize] |= 1 << 24;\n    nums[n as usize] |= 1 << 25;\n  \
    \  nums[n as usize] |= 1 << 26;\n    nums[n as usize] |= 1 << 27;\n    nums[n\
    \ as usize] |= 1 << 28;\n    nums[n as usize] |= 1 << 29;\n    nums[n as usize]\
    \ |= 1 << 30;\n    nums[n as usize] |= 1 << 31;\n    nums[n as usize] |= 1 <<\
    \ 32;\n    nums[n as usize] |= 1 << 33;\n    nums[n as usize] |= 1 << 34;\n  \
    \  nums[n as usize] |= 1 << 35;\n    nums[n as usize] |= 1 << 36;\n    nums[n\
    \ as usize] |= 1 << 37;\n    nums[n as usize] |= 1 << 38;\n    nums[n as usize]\
    \ |= 1 << 39;\n    nums[n as usize] |= 1 << 40;\n    nums[n as usize] |= 1 <<\
    \ 41;\n    nums[n as usize] |= 1 << 42;\n    nums[n as usize] |= 1 << 43;\n  \
    \  nums[n as usize] |= 1 << 44;\n    nums[n as usize] |= 1 << 45;\n    nums[n\
    \ as usize] |= 1 << \n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpdb78o7km.rs:57:1\n\
    \   |\n57 | }\n   | ^ expected expression\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        if n % 11 == 0 {\n            1\n    \
    \    } else {\n            2\n        }\n    } else {\n        0\n    }\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `3`', /tmp/tmpon972p25.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..i).filter(|&i|\
    \ i % 11 == 0 || i % 13 == 0).count() as isize\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `i` in this scope\n --> /tmp/tmpwq3q_yrm.rs:9:9\n\
    \  |\n9 |     (0..i).filter(|&i| i % 11 == 0 || i % 13 == 0).count() as isize\n\
    \  |         ^ help: a local variable with a similar name exists: `n`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut fb = 1;\n    while fb < n {\n        if n % fb == 0 {\n            fb +=\
    \ 2;\n        } else {\n            fb += 1;\n        }\n    }\n    return fb;\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmpveq91n2t.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        counter = n % 10;\n        if counter\
    \ == 7 {\n            return counter + 1;\n        }\n        n /= 10;\n    }\n\
    \    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpcpq1p5am.rs:15:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n15 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 { 1 }\n    else if n % 13 == 0 { 2 }\n    else { 0 }\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `3`', /tmp/tmp0l5pek26.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0, \"Invalid input!\");\n    let mut counter = 0;\n \
    \   while n /= 11 {\n        counter += 1;\n        n /= 13;\n    }\n    counter\
    \ += n % 11 > 0 ? 1 : 0;\n    counter += 1;\n    counter\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `1`\n\
    \  --> /tmp/tmp0mi424ix.rs:15:29\n   |\n15 |     counter += n % 11 > 0 ? 1 : 0;\n\
    \   |                             ^ expected one of `.`, `;`, `?`, `}`, or an\
    \ operator\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp0mi424ix.rs:11:11\n\
    \   |\n11 |     while n /= 11 {\n   |           ^^^^^^^ expected `bool`, found\
    \ `()`\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ (n % 11, n % 13) {\n        (Some(11), Some(13)) => 1,\n        (Some(11), None)\
    \ => 0,\n        (None, Some(13)) => 0,\n        (None, None) => 0,\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpyu3j8qjj.rs:10:10\n   |\n\
    9  |     match (n % 11, n % 13) {\n   |           ---------------- this expression\
    \ has type `(isize, isize)`\n10 |         (Some(11), Some(13)) => 1,\n   |   \
    \       ^^^^^^^^ expected `isize`, found enum `Option`\n   |\n   = note: expected\
    \ type `isize`\n              found enum `Option<_>`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpyu3j8qjj.rs:10:20\n   |\n9  |     match (n % 11, n % 13)\
    \ {\n   |           ---------------- this expression has type `(isize, isize)`\n\
    10 |         (Some(11), Some(13)) => 1,\n   |                    ^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<_>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyu3j8qjj.rs:11:10\n\
    \   |\n9  |     match (n % 11, n % 13) {\n   |           ---------------- this\
    \ expression has type `(isize, isize)`\n10 |         (Some(11), Some(13)) => 1,\n\
    11 |         (Some(11), None) => 0,\n   |          ^^^^^^^^ expected `isize`,\
    \ found enum `Option`\n   |\n   = note: expected type `isize`\n              found\
    \ enum `Option<_>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyu3j8qjj.rs:11:20\n\
    \   |\n9  |     match (n % 11, n % 13) {\n   |           ---------------- this\
    \ expression has type `(isize, isize)`\n10 |         (Some(11), Some(13)) => 1,\n\
    11 |         (Some(11), None) => 0,\n   |                    ^^^^ expected `isize`,\
    \ found enum `Option`\n   |\n   = note: expected type `isize`\n              found\
    \ enum `Option<_>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyu3j8qjj.rs:12:10\n\
    \   |\n9  |     match (n % 11, n % 13) {\n   |           ---------------- this\
    \ expression has type `(isize, isize)`\n...\n12 |         (None, Some(13)) =>\
    \ 0,\n   |          ^^^^ expected `isize`, found enum `Option`\n   |\n   = note:\
    \ expected type `isize`\n              found enum `Option<_>`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpyu3j8qjj.rs:12:16\n   |\n9  |     match (n %\
    \ 11, n % 13) {\n   |           ---------------- this expression has type `(isize,\
    \ isize)`\n...\n12 |         (None,"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    if remainder == 0 {\n\
    \        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder ==\
    \ 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 13;\n    }\n    if remainder\
    \ == 0 {\n        counter += 1;\n        remainder = n % 11;\n    }\n    if remainder\
    \ == \n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n   --> /tmp/tmpuu3f32ss.rs:116:1\n\
    \    |\n116 | }\n    | ^ expected expression\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 { 0 }\n    else if n % 13 == 0 { 1 }\n    else { 0 }\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpfm5w7lx5.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ as usize).checked_mul(11).checked_add(13).checked_mul(11).unwrap_or(n - 78)\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `checked_add` found for enum `Option` in\
    \ the current scope\n --> /tmp/tmpa0gi56y1.rs:9:34\n  |\n9 |     (n as usize).checked_mul(11).checked_add(13).checked_mul(11).unwrap_or(n\
    \ - 78)\n  |                                  ^^^^^^^^^^^ method not found in\
    \ `Option<usize>`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 ||\n            n\
    \ % 13 == 0 {\n            count += 1;\n        }\n        n /= 10;\n    }\n \
    \   count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpmn2h2_lq.rs:15:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n15 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    loop {\n        match n % 10 {\n            7 => count =\
    \ count + 1,\n            8 => count = count + 1,\n            9 => count = count\
    \ + 1,\n            other => count = count + 1,\n        }\n        n /= 10;\n\
    \        if n == 0 { break; }\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: unused variable: `other`\n  --> /tmp/tmp3tn9r5jd.rs:15:13\n  \
    \ |\n15 |             other => count = count + 1,\n   |             ^^^^^ help:\
    \ if this is intentional, prefix it with an underscore: `_other`\n   |\n   = note:\
    \ `#[warn(unused_variables)]` on by default\n\nerror[E0384]: cannot assign to\
    \ immutable argument `n`\n  --> /tmp/tmp3tn9r5jd.rs:17:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n17 |         n /= 10;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0 as usize;\n    for &digit in n.to_string().chars().skip(1) {\n\
    \        if digit == b'9' || digit == b'7' {\n            count += 1;\n      \
    \  }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n   \
    \ assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzrjrpzzo.rs:10:9\n   |\n\
    10 |     for &digit in n.to_string().chars().skip(1) {\n   |         ^^^^^^  \
    \  ----------------------------- this expression has type `Option<char>`\n   |\
    \         |\n   |         expected `char`, found reference\n   |         help:\
    \ you can probably remove the explicit borrow: `digit`\n   |\n   = note:   expected\
    \ type `char`\n           found reference `&_`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpzrjrpzzo.rs:15:5\n   |\n8  | fn fizz_buzz(n: isize) -> isize {\n\
    \   |                           ----- expected `isize` because of return type\n\
    ...\n15 |     count\n   |     ^^^^^ expected `isize`, found `usize`\n   |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n15 |     count.try_into().unwrap()\n   |          ++++++++++++++++++++\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        0\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `78`,\n right: `2`', /tmp/tmpli1i_bix.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut rem = n % 11;\n    let mut mod1 = n % 13;\n  \
    \  while rem != 0 || mod1 != 0 {\n        if rem != 0 {\n            if rem ==\
    \ 7 {\n                counter = counter + 1;\n            }\n            counter\
    \ = counter + 1;\n        }\n        rem = rem / 13;\n        mod1 = mod1 % 11;\n\
    \    }\n    counter + (mod1 != 0)\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot add `bool` to `{integer}`\n  --> /tmp/tmpi27xowgd.rs:22:13\n\
    \   |\n22 |     counter + (mod1 != 0)\n   |             ^ no implementation for\
    \ `{integer} + bool`\n   |\n   = help: the trait `Add<bool>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `Add<Rhs>`:\n\
    \             <&'a f32 as Add<f32>>\n             <&'a f64 as Add<f64>>\n    \
    \         <&'a i128 as Add<i128>>\n             <&'a i16 as Add<i16>>\n      \
    \       <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n          \
    \   <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n           and\
    \ 48 others\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut i = 10;\n    let mut result = 0;\n    while i <= n {\n        if i % 11\
    \ == 0 && i % 13 == 0 {\n            result += 1;\n        }\n        i += 1;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp3cdbtcnu.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    //\
    \ Find a multiple of 3 that fits in the range of n.\n    let mut counter = 0;\n\
    \    while n > 9 {\n        n /= 3;\n        counter += 1;\n    }\n    if n %\
    \ 11 == 0 {\n        counter = counter + 1;\n    }\n    if n % 13 == 0 {\n   \
    \     counter = counter + 1;\n    }\n    counter\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpwylwww2w.rs:12:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n12 |         n /= 3;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for number in 1..=n {\n        if number % 11 == 0 ||\
    \ number % 13 == 0 {\n            counter += 1;\n        }\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpckkviudp.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n {\n        0 => 0,\n        _ => if n % 11 == 0 || n % 13 == 0 {\n       \
    \     if n == 7 || n == 13 {\n                0\n            } else {\n      \
    \          1 + fizz_buzz(n - 1)\n            }\n        } else {\n           \
    \ fizz_buzz(n - 1)\n        }\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `0`', /tmp/tmpnrrws5gt.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ > 0);\n\n    if n % 11 == 0 || n % 13 == 0 {\n        return 1;\n    }\n   \
    \ if n % 10 == 0 {\n        return 0;\n    }\n\n    if n % 5 == 0 {\n        return\
    \ 0;\n    }\n\n    return fizz_buzz(n - 1) + (n / 5);\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpsicepfsv.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n%11\
    \ == 0 && (n%13 == 0 || n < 10)) || n % 7\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpf6rzjr3_.rs:9:45\n  |\n9 |\
    \     (n%11 == 0 && (n%13 == 0 || n < 10)) || n % 7\n  |                     \
    \                        ^^^^^ expected `bool`, found `isize`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpf6rzjr3_.rs:9:5\n  |\n8 | fn fizz_buzz(n: isize)\
    \ -> isize {\n  |                           ----- expected `isize` because of\
    \ return type\n9 |     (n%11 == 0 && (n%13 == 0 || n < 10)) || n % 7\n  |    \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `bool`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..n).filter(|&n|\
    \ n % 11 == 0 || n % 13 == 0).count();\n}\n\nfn main() {\n    let candidate =\
    \ fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9gn_afvi.rs:8:27\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has\
    \ no tail or `return` expression\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 11 || n % 11 == 0 {\n        0\n    } else if n < 13 || n % 13 == 0 {\n\
    \        1\n    } else {\n        2\n    }\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpnh3ieuc4.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 10 {\n        return n;\n    }\n    if n % 11 == 0 || n % 13 == 0 {\n  \
    \      return n\n    } else {\n        return fizz_buzz(n - 10)\n    }\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `78`,\n right: `2`', /tmp/tmp869hcd12.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n\n    for i in 0..n {\n        if i % 13 == 0 || i % 11 == 0\
    \ {\n            count += 1;\n        }\n    }\n\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpd2az2dxk.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ n % 11 {\n        0 => n % 13,\n        _ => 0,\n    }\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp9rnk6ttf.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..=n).filter(|x|\
    \ x.is_multiple_of(7)).count(|x| x.is_multiple_of(11) || x.is_multiple_of(13))\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_multiple_of` found for reference `&isize`\
    \ in the current scope\n --> /tmp/tmp76u0twxz.rs:9:26\n  |\n9 |     (1..=n).filter(|x|\
    \ x.is_multiple_of(7)).count(|x| x.is_multiple_of(11) || x.is_multiple_of(13))\n\
    \  |                          ^^^^^^^^^^^^^^ help: there is an associated function\
    \ with a similar name: `next_multiple_of`\n\nerror[E0061]: this function takes\
    \ 0 arguments but 1 argument was supplied\n   --> /tmp/tmp76u0twxz.rs:9:45\n \
    \   |\n9   |     (1..=n).filter(|x| x.is_multiple_of(7)).count(|x| x.is_multiple_of(11)\
    \ || x.is_multiple_of(13))\n    |                                            \
    \ ^^^^^ ------------------------------------------------ supplied 1 argument\n\
    \    |                                             |\n    |                  \
    \                           expected 0 arguments\n    |\nnote: associated function\
    \ defined here\n\nerror[E0308]: mismatched types\n --> /tmp/tmp76u0twxz.rs:9:5\n\
    \  |\n8 | fn fizz_buzz(n: isize) -> isize {\n  |                           -----\
    \ expected `isize` because of return type\n9 |     (1..=n).filter(|x| x.is_multiple_of(7)).count(|x|\
    \ x.is_multiple_of(11) || x.is_multiple_of(13))\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (1..=n).filter(|x|\
    \ x.is_multiple_of(7)).count(|x| x.is_multiple_of(11) || x.is_multiple_of(13)).try_into().unwrap()\n\
    \  |                                                                         \
    \                           ++++++++++++++++++++\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0061, E0308, E0599.\nFor\
    \ more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n <= 11 || n % 11 == 0 {\n        n\n    } else {\n        n / 11 + 1\n    }\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `0`', /tmp/tmpqemnbz0x.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..n)\n\
    \        .filter(|&d| n % 10 != 7 && n % 10 != 9)\n        .filter(|&d| d % 11\
    \ == 0 || d % 13 == 0)\n        .count() + 1\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpb0xcv2q6.rs:9:5\n   |\n8\
    \  |   fn fizz_buzz(n: isize) -> isize {\n   |                             -----\
    \ expected `isize` because of return type\n9  | /     (0..n)\n10 | |         .filter(|&d|\
    \ n % 10 != 7 && n % 10 != 9)\n11 | |         .filter(|&d| d % 11 == 0 || d %\
    \ 13 == 0)\n12 | |         .count() + 1\n   | |____________________^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n9  ~     ((0..n)\n10 | \
    \        .filter(|&d| n % 10 != 7 && n % 10 != 9)\n11 |         .filter(|&d| d\
    \ % 11 == 0 || d % 13 == 0)\n12 ~         .count() + 1).try_into().unwrap()\n\
    \   |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut n1 = n - 1;\n    let mut n2 = n - 2;\n    let mut n3 = n - 3;\n    let mut\
    \ n4 = n - 4;\n    let mut n5 = n - 5;\n    let mut n6 = n - 6;\n    let mut n7\
    \ = n - 7;\n    let mut n8 = n - 8;\n    let mut n9 = n - 9;\n\n    if n % 11\
    \ == 0 || n % 13 == 0 {\n        if n == 9 {\n            *n7 += 1;\n        }\n\
    \        if n == 8 {\n            *n6 += 1;\n        }\n        if n == 7 {\n\
    \            *n5 += 1;\n        }\n        if n == 6 {\n            *n4 += 1;\n\
    \        }\n        if n == 5 {\n            *n3 += 1;\n        }\n        if\
    \ n == 4 {\n            *n2 += 1;\n        }\n        if n == 3{\n           \
    \ *n1 += 1;\n        }\n    }\n\n    match n % 10 {\n        0 => n1,\n      \
    \  1 => n2,\n        2 => n3,\n        3 => n4,\n        4 => n5,\n        5 =>\
    \ n6,\n        6 => n7,\n        7 => n8,\n        8 => n9,\n        9 => n7,\n\
    \        10 => n7,\n        11 => n7,\n        12 => n7,\n        13 => n7,\n\
    \        _ => n7,\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpgn9t4npd.rs:21:13\n\
    \   |\n21 |             *n7 += 1;\n   |             ^^^\n\nerror[E0614]: type\
    \ `isize` cannot be dereferenced\n  --> /tmp/tmpgn9t4npd.rs:24:13\n   |\n24 |\
    \             *n6 += 1;\n   |             ^^^\n\nerror[E0614]: type `isize` cannot\
    \ be dereferenced\n  --> /tmp/tmpgn9t4npd.rs:27:13\n   |\n27 |             *n5\
    \ += 1;\n   |             ^^^\n\nerror[E0614]: type `isize` cannot be dereferenced\n\
    \  --> /tmp/tmpgn9t4npd.rs:30:13\n   |\n30 |             *n4 += 1;\n   |     \
    \        ^^^\n\nerror[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpgn9t4npd.rs:33:13\n\
    \   |\n33 |             *n3 += 1;\n   |             ^^^\n\nerror[E0614]: type\
    \ `isize` cannot be dereferenced\n  --> /tmp/tmpgn9t4npd.rs:36:13\n   |\n36 |\
    \             *n2 += 1;\n   |             ^^^\n\nerror[E0614]: type `isize` cannot\
    \ be dereferenced\n  --> /tmp/tmpgn9t4npd.rs:39:13\n   |\n39 |             *n1\
    \ += 1;\n   |             ^^^\n\nerror: aborting due to 7 previous errors\n\n\
    For more information about this error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for _ in 0..n {\n        match n % 11 {\n            0 =>\
    \ count += 1,\n            1 => count += 1,\n            2 => count += 1,\n  \
    \          _ => (),\n        }\n        match n % 13 {\n            0 => count\
    \ += 1,\n            1 => count += 1,\n            2 => count += 1,\n        \
    \    3 => count += 1,\n            4 => count += 1,\n            _ => (),\n  \
    \      }\n        n /= 11;\n        n /= 13;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp7pqhnamm.rs:25:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n25 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmp7pqhnamm.rs:26:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n26 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut n = (n % 10);\n    if n % 11 == 0 || n % 13 == 0 {\n        n += 1;\n  \
    \  }\n    n\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpx26c0u_d.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 1..=n {\n        if i % 11 == 0 || i % 13 == 0\
    \ {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmppmxhnhqp.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    //\
    \ Only return value if divisible by 11 or 13\n    if n % 11 == 0 || n % 13 ==\
    \ 0 {\n        return 0;\n    }\n    // Add 1 if the number n is divisible by\
    \ 7\n    if n % 7 == 0 {\n        return 1;\n    }\n    // Add 2 if the number\
    \ n is divisible by 3\n    if n % 3 == 0 {\n        return 2;\n    }\n    // Add\
    \ 3 if the number n is divisible by 5\n    if n % 5 == 0 {\n        return 3;\n\
    \    }\n    // Add 4 is the number n is divisible by 3 and 5\n    if n % 3 ==\
    \ 0 && n % 5 == 0 {\n        return 4;\n    }\n    // Add 5 is the number n is\
    \ divisible by 3 and 7\n    if n % 3 == 0 && n % 7 == 0 {\n        return 5;\n\
    \    }\n    // Add 6 is the number n is divisible by 5 and 7\n    if n % 5 ==\
    \ 0 && n % 7 == 0 {\n        return 6;\n    }\n    // Add 7 is the number n is\
    \ divisible by 7\n    if n % 7 == 0 {\n        return 7;\n    }\n    // Add 8\
    \ if n is divisible by 11\n    if n % 11 == 0 {\n        return 8;\n    }\n  \
    \  // Add 9 if n is divisible by 13\n    if n % 13 == 0 {\n        return 9;\n\
    \    }\n    // Add 10 if n is divisible by 3 and 5\n    if n % 3 == 0 && n % 5\
    \ == 0 {\n        return 10;\n    }\n    // Add 11 if n is divisible by 3 and\
    \ 7\n    if n % 3 == 0 && n % 7 == 0 {\n        return 11;\n    }\n    // Add\
    \ 12 if n is divisible by 5 and 7\n    if n % 5 == 0 && n % 7 == 0 {\n       \
    \ return 12;\n    }\n    // Add 13 if n is divisible by 7\n    if n % 7 == 0 {\n\
    \        return 13;\n    }\n    // Add 14 if n is divisible by 11\n    if n %\
    \ 11 == 0 {\n        return 14;\n    }\n    // Add 15 if n is divisible by 13\n\
    \    if n % 13 == 0 {\n        return 15;\n    }\n    // Add 16 if n is divisible\
    \ by 3 and 5\n    if n % 3 == 0 && n % 5 == 0 {\n        return 16;\n    }\n \
    \   // Add 17 if n is divisible by 3 and 7\n    if n % 3 == 0 && n % 7 == 0 {\n\
    \        return 17;\n    }\n    // Add 18 if n is divisible by 5 and 7\n    if\
    \ n % 5 == 0 && n % 7 == 0 {\n        return 18;\n    }\n    // Add 19 if n is\
    \ divisible by 7\n    if n % 7 == 0 {\n        return 19;\n    }\n    // Add 20\
    \ if n is divisible by 11\n    if n % 11 == 0 {\n\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp66246lgh.rs:104:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n90  |     if n % 11 == 0 {\n    |      \
    \              - this delimiter might not be properly closed...\n91  | \n92  |\
    \ }\n    | - ...as it matches this but it has different indentation\n...\n104\
    \ | }\n    |   ^\n\nerror[E0308]: mismatched types\n --> /tmp/tmp66246lgh.rs:8:27\n\
    \  |\n8 | fn fizz_buzz(n: isize) -> isize {\n  |    ---------              ^^^^^\
    \ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its\
    \ body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count_divisors = 0;\n\n    for n in n..=10 {\n        let d = n % 11;\n\
    \        if d != 0 {\n            count_divisors += 1;\n        }\n\n        d\
    \ = n % 13;\n        if d != 0 {\n            count_divisors += 1;\n        }\n\
    \    }\n\n    if count_divisors == 3 {\n        return n - 1;\n    }\n    if count_divisors\
    \ == 5 {\n        return n - 3;\n    }\n    if count_divisors == 7 {\n       \
    \ return n - 5;\n    }\n    if count_divisors == 9 {\n        return n - 7;\n\
    \    }\n    if count_divisors == 11 {\n        return n - 9;\n    }\n    if count_divisors\
    \ == 13 {\n        return n - 11;\n    }\n\n    0\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign twice to immutable variable `d`\n  --> /tmp/tmpqkie2efi.rs:17:9\n\
    \   |\n12 |         let d = n % 11;\n   |             -\n   |             |\n\
    \   |             first assignment to `d`\n   |             help: consider making\
    \ this binding mutable: `mut d`\n...\n17 |         d = n % 13;\n   |         ^^^^^^^^^^\
    \ cannot assign twice to immutable variable\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n == 0 || n == 1 || n == 2 || n % 11 == 0 || n % 13 == 0 {\n        return 0;\n\
    \    }\n    if n % 7 == 0 {\n        return 1;\n    }\n    if n % 3 == 0 && n\
    \ != 7 {\n        return 1;\n    }\n    if n % 5 == 0 {\n        return 2;\n \
    \   }\n    if n % 3 == 0 && n % 5 != 0 {\n        return 2;\n    }\n    return\
    \ 3;\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpgyoz8o4q.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut digit_divisor = 11 * 13 + 1;\n    while n >= digit_divisor\
    \ {\n        if n % digit_divisor == 7 {\n            counter += 1;\n        }\n\
    \        digit_divisor += 11;\n    }\n    counter\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpzevdh52g.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 {\n        0\n    } else if n % 13 == 0 {\n        1\n    } else\
    \ {\n        2\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmptdo6vzis.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n\n    let ordering = Ordering::Greater;\n    let mut count\
    \ = 0;\n\n    for n in n.step_by(2) {\n        count += 1 if (n % 11 == 0 || n\
    \ % 13 == 0);\n    }\n\n    count + count + count\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found keyword\
    \ `if`\n  --> /tmp/tmpnaolxhzx.rs:15:20\n   |\n15 |         count += 1 if (n %\
    \ 11 == 0 || n % 13 == 0);\n   |                    ^^ expected one of `.`, `;`,\
    \ `?`, `}`, or an operator\n\nerror[E0599]: `isize` is not an iterator\n  -->\
    \ /tmp/tmpnaolxhzx.rs:14:16\n   |\n14 |     for n in n.step_by(2) {\n   |    \
    \            ^^^^^^^ `isize` is not an iterator\n   |\n   = note: the following\
    \ trait bounds were not satisfied:\n           `isize: Iterator`\n           which\
    \ is required by `&mut isize: Iterator`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    //\
    \ Find the least power of ten less than the given number.\n    let mut min_pow10\
    \ = 10usize;\n    for d in 0..=9 {\n        if n / d < min_pow10 {\n         \
    \   min_pow10 = (n % d) as usize;\n        }\n    }\n\n    let mut num_buzz =\
    \ 0;\n\n    // Find how many times each digit is equal to 7.\n    for d in 0..=9\
    \ {\n        if n / d < min_pow10 {\n            continue;\n        }\n      \
    \  loop {\n            if n % d == 7 {\n                num_buzz += 1;\n     \
    \           break;\n            }\n            if d == 9 {\n                break;\n\
    \            }\n            d += 1;\n        }\n    }\n\n    // Add 1 for each\
    \ time a digit is divisible by 11 or 13.\n    num_buzz += fizz_buzz_count(n -\
    \ min_pow10 + 1) + fizz_buzz_count(n - min_pow10);\n    num_buzz\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_count` in this scope\n  -->\
    \ /tmp/tmppkbgk6er.rs:37:17\n   |\n37 |     num_buzz += fizz_buzz_count(n - min_pow10\
    \ + 1) + fizz_buzz_count(n - min_pow10);\n   |                 ^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `fizz_buzz_count`\
    \ in this scope\n  --> /tmp/tmppkbgk6er.rs:37:54\n   |\n37 |     num_buzz += fizz_buzz_count(n\
    \ - min_pow10 + 1) + fizz_buzz_count(n - min_pow10);\n   |                   \
    \                                   ^^^^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmppkbgk6er.rs:12:20\n   |\n12 |  \
    \       if n / d < min_pow10 {\n   |                    ^^^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n12 |         if n / d < min_pow10.try_into().unwrap()\
    \ {\n   |                             ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmppkbgk6er.rs:21:20\n   |\n21 |         if n / d < min_pow10\
    \ {\n   |                    ^^^^^^^^^ expected `isize`, found `usize`\n   |\n\
    help: you can convert a `usize` to an `isize` and panic if the converted value\
    \ doesn't fit\n   |\n21 |         if n / d < min_pow10.try_into().unwrap() {\n\
    \   |                             ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmppkbgk6er.rs:37:37\n   |\n37 |     num_buzz += fizz_buzz_count(n\
    \ - min_pow10 + 1) + fizz_buzz_count(n - min_pow10);\n   |                   \
    \                  ^^^^^^^^^ expected `isize`, found `usize`\n\nerror[E0277]:\
    \ cannot subtract `usize` from `isize`\n  --> /tmp/tmppkbgk6er.rs:37:35\n   |\n\
    37 |     num_buzz += fizz_buzz_count(n - min_pow10 + 1) + fizz_buzz_count(n -\
    \ min_pow10);\n   |                                   ^ no implementation for\
    \ `isize - usize`\n   |\n   = help: the trait `Sub<usize>` is not implemented\
    \ for `isize`\n   = help: the following other types implement trait `Sub<Rhs>`:\n\
    \             <&'a f32 as Sub<f32>>\n             <&'a f64 as Sub<f64>>\n    \
    \         <&'a i128 as Sub<i"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ - 1) / 11 + n % 11 == 0 || n % 13 == 0\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo336wtqi.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (n - 1) / 11 + n % 11 == 0 || n % 13\
    \ == 0\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `bool`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n\n    let mut primes = vec![true; 101usize];\n    primes[0]\
    \ = false;\n\n    for &prime in primes.iter_mut() {\n        if n == prime {\n\
    \            count++;\n        }\n    }\n\n    if n % 11 == 0 || n % 13 == 0 {\n\
    \        count += 1;\n    }\n\n    count\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmph9m7thdf.rs:16:18\n\
    \   |\n16 |             count++;\n   |                  ^^ not a valid postfix\
    \ operator\n   |\nhelp: use `+= 1` instead\n   |\n16 |             { let tmp =\
    \ count; count += 1; tmp };\n   |             +++++++++++      ~~~~~~~~~~~~~~~~~~~\n\
    16 -             count++;\n16 +             count += 1;\n   | \n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmph9m7thdf.rs:14:9\n   |\n14 |     for &prime\
    \ in primes.iter_mut() {\n   |         ^^^^^^    ----------------- this expression\
    \ has type `Option<&mut bool>`\n   |         |\n   |         types differ in mutability\n\
    \   |         help: you can probably remove the explicit borrow: `prime`\n   |\n\
    \   = note: expected mutable reference `&mut bool`\n                      found\
    \ reference `&_`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut n = 0;\n    while n > 0 && (n % 11 == 0 || n % 13 == 0) {\n        n /=\
    \ 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpqc428lu0.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n\n    for _ in 0..n {\n        let remainder = n % 10;\n\n\
    \        if remainder == 7 {\n            counter += 1;\n        }\n\n       \
    \ if remainder == 3 || remainder == 7 {\n            counter += 1;\n        }\n\
    \n        if remainder == 11 || remainder == 13 {\n            counter += 1;\n\
    \        }\n\n        n /= 10;\n    }\n\n    counter\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpzo4636x3.rs:26:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n26 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for num in 0..n {\n        let digit = n % 10;\n       \
    \ if digit == 7 || digit == 11 || digit == 13 {\n            count += 1;\n   \
    \     }\n        n /= 10;\n    }\n    return count;\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: unused variable: `num`\n  --> /tmp/tmps57i2jn8.rs:10:9\n   |\n\
    10 |     for num in 0..n {\n   |         ^^^ help: if this is intentional, prefix\
    \ it with an underscore: `_num`\n   |\n   = note: `#[warn(unused_variables)]`\
    \ on by default\n\nerror[E0384]: cannot assign to immutable argument `n`\n  -->\
    \ /tmp/tmps57i2jn8.rs:15:9\n   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |\
    \              - help: consider making this binding mutable: `mut n`\n...\n15\
    \ |         n /= 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error; 1 warning emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n\n    for n in n.checked_mul(11).checked_mul(13).unwrap()\
    \ {\n        if n % 10 == 7 && n % 100 == 0 {\n            counter = counter +\
    \ 1;\n        }\n    }\n\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `checked_mul` found for enum `Option` in\
    \ the current scope\n  --> /tmp/tmp_mddsh3a.rs:11:32\n   |\n11 |     for n in\
    \ n.checked_mul(11).checked_mul(13).unwrap() {\n   |                         \
    \       ^^^^^^^^^^^ method not found in `Option<isize>`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..n).filter(|x|\
    \ x.is_multiple_of_bigger_than_or_equal_to(11) || x.is_multiple_of_bigger_than_or_equal_to(13)).count()\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_multiple_of_bigger_than_or_equal_to`\
    \ found for reference `&isize` in the current scope\n --> /tmp/tmp7xhayirv.rs:9:25\n\
    \  |\n9 |     (0..n).filter(|x| x.is_multiple_of_bigger_than_or_equal_to(11) ||\
    \ x.is_multiple_of_bigger_than_or_equal_to(13)).count()\n  |                 \
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&isize`\n\
    \nerror[E0599]: no method named `is_multiple_of_bigger_than_or_equal_to` found\
    \ for reference `&isize` in the current scope\n --> /tmp/tmp7xhayirv.rs:9:73\n\
    \  |\n9 |     (0..n).filter(|x| x.is_multiple_of_bigger_than_or_equal_to(11) ||\
    \ x.is_multiple_of_bigger_than_or_equal_to(13)).count()\n  |                 \
    \                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ method not found in `&isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7xhayirv.rs:9:5\n\
    \  |\n8 | fn fizz_buzz(n: isize) -> isize {\n  |                           -----\
    \ expected `isize` because of return type\n9 |     (0..n).filter(|x| x.is_multiple_of_bigger_than_or_equal_to(11)\
    \ || x.is_multiple_of_bigger_than_or_equal_to(13)).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (0..n).filter(|x|\
    \ x.is_multiple_of_bigger_than_or_equal_to(11) || x.is_multiple_of_bigger_than_or_equal_to(13)).count().try_into().unwrap()\n\
    \  |                                                                         \
    \                                                   ++++++++++++++++++++\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz_helper(n\
    \ - 11, &mut 0)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n   \
    \ assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_helper` in this scope\n \
    \ --> /tmp/tmpcuo_qai9.rs:12:9\n   |\n12 |         fizz_buzz_helper(n - 11, &mut\
    \ 0)\n   |         ^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    match\
    \ (n % 11, n % 13) {\n        (2, 0) -> 0,\n        (2, 1) -> 1,\n        (3,\
    \ 0) -> 2,\n        (3, 1) -> 3,\n        (4, 0) -> 4,\n        (4, 1) -> 5,\n\
    \        (5, 0) -> 6,\n        (5, 1) -> 7,\n        (6, 0) -> 8,\n        (6,\
    \ 1) -> 9,\n        (7, 0) -> 10,\n        (7, 1) -> 11,\n        (8, 0) -> 12,\n\
    \        (8, 1) -> 13,\n        _ => n.clone(),\n    }\n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `=>`, `if`, or `|`, found `->`\n  --> /tmp/tmpieew61qo.rs:10:16\n\
    \   |\n10 |         (2, 0) -> 0,\n   |                ^^\n   |               \
    \ |\n   |                expected one of `=>`, `if`, or `|`\n   |            \
    \    help: try using a fat arrow here: `=>`\n\nerror: expected one of `=>`, `if`,\
    \ or `|`, found `->`\n  --> /tmp/tmpieew61qo.rs:11:16\n   |\n11 |         (2,\
    \ 1) -> 1,\n   |                ^^\n   |                |\n   |              \
    \  expected one of `=>`, `if`, or `|`\n   |                help: try using a fat\
    \ arrow here: `=>`\n\nerror: expected one of `=>`, `if`, or `|`, found `->`\n\
    \  --> /tmp/tmpieew61qo.rs:12:16\n   |\n12 |         (3, 0) -> 2,\n   |      \
    \          ^^\n   |                |\n   |                expected one of `=>`,\
    \ `if`, or `|`\n   |                help: try using a fat arrow here: `=>`\n\n\
    error: expected one of `=>`, `if`, or `|`, found `->`\n  --> /tmp/tmpieew61qo.rs:13:16\n\
    \   |\n13 |         (3, 1) -> 3,\n   |                ^^\n   |               \
    \ |\n   |                expected one of `=>`, `if`, or `|`\n   |            \
    \    help: try using a fat arrow here: `=>`\n\nerror: expected one of `=>`, `if`,\
    \ or `|`, found `->`\n  --> /tmp/tmpieew61qo.rs:14:16\n   |\n14 |         (4,\
    \ 0) -> 4,\n   |                ^^\n   |                |\n   |              \
    \  expected one of `=>`, `if`, or `|`\n   |                help: try using a fat\
    \ arrow here: `=>`\n\nerror: expected one of `=>`, `if`, or `|`, found `->`\n\
    \  --> /tmp/tmpieew61qo.rs:15:16\n   |\n15 |         (4, 1) -> 5,\n   |      \
    \          ^^\n   |                |\n   |                expected one of `=>`,\
    \ `if`, or `|`\n   |                help: try using a fat arrow here: `=>`\n\n\
    error: expected one of `=>`, `if`, or `|`, found `->`\n  --> /tmp/tmpieew61qo.rs:16:16\n\
    \   |\n16 |         (5, 0) -> 6,\n   |                ^^\n   |               \
    \ |\n   |                expected one of `=>`, `if`, or `|`\n   |            \
    \    help: try using a fat arrow here: `=>`\n\nerror: expected one of `=>`, `if`,\
    \ or `|`, found `->`\n  --> /tmp/tmpieew61qo.rs:17:16\n   |\n17 |         (5,\
    \ 1"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 11) + buzz(n - 13)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `buzz` in this scope\n  --> /tmp/tmp26mn4322.rs:12:29\n\
    \   |\n12 |         fizz_buzz(n - 11) + buzz(n - 13)\n   |                   \
    \          ^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::{Eq, Ord, Ordering};\n\n    if n < 10 {\n        return n;\n    }\n\
    \n    if n % 11 == 0 || (n % 13 == 0 && n % 11 != 0) {\n        return fizz_buzz(n/11)\
    \ + 1;\n    }\n\n    if n % 13 == 0 {\n        return fizz_buzz(n/13) + 1;\n \
    \   }\n\n    0\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `2`', /tmp/tmp77ociz7v.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    n.checked_mul(3)\n\
    \        .filter(|x| *x as usize == 7)\n        .count()\n}\n\nfn main() {\n \
    \   let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: `Option<isize>` is not an iterator\n   --> /tmp/tmpqti8g7d_.rs:11:10\n\
    \    |\n11  |           .count()\n    |            ^^^^^ `Option<isize>` is not\
    \ an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n\
    \            `Option<isize>: Iterator`\n            which is required by `&mut\
    \ Option<isize>: Iterator`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n <= 0 {\n        return 0;\n    }\n\n    if n % 11 == 0 {\n        return fizz_buzz_digits_11(n);\n\
    \    }\n\n    if n % 13 == 0 {\n        return fizz_buzz_digits_13(n);\n    }\n\
    \n    0 as isize\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_digits_11` in this scope\n\
    \  --> /tmp/tmpytityuix.rs:14:16\n   |\n14 |         return fizz_buzz_digits_11(n);\n\
    \   |                ^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `fizz_buzz_digits_13` in this scope\n  --> /tmp/tmpytityuix.rs:18:16\n\
    \   |\n18 |         return fizz_buzz_digits_13(n);\n   |                ^^^^^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ core::cmp::Ordering;\n\n    fn fizz_buzz(i: isize) -> isize {\n        if i\
    \ % 11 == 0 && i % 13 == 0 {\n            1\n        } else {\n            i\n\
    \        }\n    }\n\n    let mut counter = fizz_buzz(n);\n    let mut counter2\
    \ = fizz_buzz(n);\n\n    if n % 11 > 0 {\n        counter = fizz_buzz(n);\n  \
    \  }\n\n    if n % 13 > 0 {\n        counter2 = fizz_buzz(n);\n    }\n\n    if\
    \ counter > counter2 {\n        counter = counter2;\n    }\n    counter\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: maybe a missing crate `core`?\n --> /tmp/tmplbyv0bag.rs:9:9\n\
    \  |\n9 |     use core::cmp::Ordering;\n  |         ^^^^ maybe a missing crate\
    \ `core`?\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut i = 0;\n    while i < n {\n        i += 1;\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            i += 1;\n        }\n    }\n    i\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmptwoosj6k.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ as isize).checked_mul(11.).checked_mul(13.).expect(\"integer must be divisible\
    \ by 11 or 13\")\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfoid4dab.rs:9:30\n  |\n9 |\
    \     (n as isize).checked_mul(11.).checked_mul(13.).expect(\"integer must be\
    \ divisible by 11 or 13\")\n  |                              ^^^ expected `isize`,\
    \ found floating-point number\n\nerror[E0599]: no method named `checked_mul` found\
    \ for enum `Option` in the current scope\n --> /tmp/tmpfoid4dab.rs:9:35\n  |\n\
    9 |     (n as isize).checked_mul(11.).checked_mul(13.).expect(\"integer must be\
    \ divisible by 11 or 13\")\n  |                                   ^^^^^^^^^^^\
    \ method not found in `Option<isize>`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else if n % 11 == 1 {\n     \
    \   1\n    } else if n % 13 == 1 {\n        2\n    } else {\n        n + 1\n \
    \   }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `51`,\n right: `0`', /tmp/tmpuik06dvr.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut result = n;\n    if n % 11 == 0 {\n        result *= 11;\n    }\n    if\
    \ n % 13 == 0 {\n        result *= 13;\n    }\n    result / 13.0\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `isize` by `{float}`\n  --> /tmp/tmpvv4h52ly.rs:16:12\n\
    \   |\n16 |     result / 13.0\n   |            ^ no implementation for `isize\
    \ / {float}`\n   |\n   = help: the trait `Div<{float}>` is not implemented for\
    \ `isize`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n <= 0 || n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        (n\
    \ - 1) % 11 + 1\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n   \
    \ assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpk34k4atx.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut cur = n;\n\n    while cur > 0 {\n        count =\
    \ count + (cur % 11 == 0 || cur % 13 == 0);\n        cur = cur / 11;\n    }\n\
    \    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot add `bool` to `{integer}`\n  --> /tmp/tmp55s65miz.rs:13:23\n\
    \   |\n13 |         count = count + (cur % 11 == 0 || cur % 13 == 0);\n   |  \
    \                     ^ no implementation for `{integer} + bool`\n   |\n   = help:\
    \ the trait `Add<bool>` is not implemented for `{integer}`\n   = help: the following\
    \ other types implement trait `Add<Rhs>`:\n             <&'a f32 as Add<f32>>\n\
    \             <&'a f64 as Add<f64>>\n             <&'a i128 as Add<i128>>\n  \
    \           <&'a i16 as Add<i16>>\n             <&'a i32 as Add<i32>>\n      \
    \       <&'a i64 as Add<i64>>\n             <&'a i8 as Add<i8>>\n            \
    \ <&'a isize as Add<isize>>\n           and 48 others\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debugln!(\"\
    fizz_buzz({})\", n);\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0;\n\
    \    }\n    let mut i = 1;\n    while i < n {\n        if i % 11 == 0 {\n    \
    \        return i;\n        }\n        if i % 13 == 0 {\n            return n\
    \ + i;\n        }\n        i += 1;\n    }\n    n - 1\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: cannot find macro `debugln` in this scope\n --> /tmp/tmpdsd126f4.rs:9:5\n\
    \  |\n9 |     debugln!(\"fizz_buzz({})\", n);\n  |     ^^^^^^^\n\nerror: aborting\
    \ due to previous error\n\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 13 {\n        0\n    } else if n < 17 {\n        1\n    } else if n < 47\
    \ {\n        2\n    } else if n < 57 {\n        3\n    } else {\n        n\n \
    \   }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmpmf079z_e.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..n).filter(|i|\n\
    \        if i % 11 == 0 || i % 13 == 0 { 1 } else { 0 }\n    ).count()\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1l8dbqt8.rs:10:41\n   |\n\
    10 |         if i % 11 == 0 || i % 13 == 0 { 1 } else { 0 }\n   |            \
    \                             ^ expected `bool`, found integer\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp1l8dbqt8.rs:10:52\n   |\n10 |         if i %\
    \ 11 == 0 || i % 13 == 0 { 1 } else { 0 }\n   |                              \
    \                      ^ expected `bool`, found integer\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp1l8dbqt8.rs:9:5\n   |\n8  |   fn fizz_buzz(n: isize) ->\
    \ isize {\n   |                             ----- expected `isize` because of\
    \ return type\n9  | /     (0..n).filter(|i|\n10 | |         if i % 11 == 0 ||\
    \ i % 13 == 0 { 1 } else { 0 }\n11 | |     ).count()\n   | |_____________^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n11 |     ).count().try_into().unwrap()\n\
    \   |              ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..=n).filter(|i|\
    \ i % 11 == 0 || i % 13 == 0).count()\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpacjtsi2d.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (1..=n).filter(|i| i % 11 == 0 || i\
    \ % 13 == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (1..=n).filter(|i|\
    \ i % 11 == 0 || i % 13 == 0).count().try_into().unwrap()\n  |               \
    \                                            ++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ - n % 10).checked_mul(10).checked_mul(10).unwrap()\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `checked_mul` found for enum `Option` in\
    \ the current scope\n --> /tmp/tmpg3gy9pig.rs:9:34\n  |\n9 |     (n - n % 10).checked_mul(10).checked_mul(10).unwrap()\n\
    \  |                                  ^^^^^^^^^^^ method not found in `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..n).filter(|&i|\
    \ i % 11 == 0 || i % 13 == 0).count()\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6hgvoem7.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (1..n).filter(|&i| i % 11 == 0 || i\
    \ % 13 == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (1..n).filter(|&i|\
    \ i % 11 == 0 || i % 13 == 0).count().try_into().unwrap()\n  |               \
    \                                            ++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        return 0;\n    }\n\n    let mut fb_sum:\
    \ isize = 0;\n    let mut fb_count: isize = 0;\n    let mut fb_counter: isize\
    \ = 0;\n\n    for i in 1..n {\n        if i % 11 == 0 || i % 13 == 0 {\n     \
    \       fb_sum += i;\n            fb_count = 1;\n        } else {\n          \
    \  fb_sum += i * (i % 11);\n            fb_count += 1;\n        }\n        fb_counter\
    \ += 1;\n    }\n\n    if fb_counter == 0 {\n        fb_sum += 1;\n        fb_count\
    \ += 1;\n    }\n\n    fb_sum += fb_sum * (n % 11);\n\n    // if the sum is divisible\
    \ by 11, the number must be divisible by 13, too\n    if fb_sum % 11 == 0 {\n\
    \        fb_sum += fb_sum % 13;\n    }\n\n    // if the sum is divisible by 13,\
    \ the number must be divisible by 11, too\n    if fb_sum % 13 == 0 {\n       \
    \ fb_sum += fb_sum % 11;\n    }\n\n    fb_count += 1;\n\n    if fb_count > 2 {\n\
    \        return fb_count;\n    } else {\n        return 0;\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpjh9d6lj1.rs:56:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert_eq!(n\
    \ > 0, true);\n\n    let mut counter = 0;\n    let mut result = n as isize;\n\
    \    for i in 0..=result {\n        if i % 11 == 0 || i % 13 == 0 {\n        \
    \    counter += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmp26xga836.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        return 0;\n    }\n    let mut result =\
    \ n;\n    for d in [7, 11..=13].iter().cloned() {\n        result = result / d;\n\
    \        if result % d != 0 {\n            return result % d + d;\n        }\n\
    \    }\n    return result;\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp0kk5ey35.rs:13:18\n   |\n\
    13 |     for d in [7, 11..=13].iter().cloned() {\n   |                  ^^^^^^^\
    \ expected integer, found struct `RangeInclusive`\n   |\n   = note: expected type\
    \ `{integer}`\n            found struct `RangeInclusive<{integer}>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut i = 0;\n\n    while i < n {\n        if n % 11 == 0 {\n            i +=\
    \ 1;\n        } else if n % 13 == 0 {\n            i += 1;\n        } else {\n\
    \            i += 3;\n        }\n\n        n /= 11;\n        n /= 13;\n    }\n\
    \n    i;\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmphezeyebn.rs:8:27\n   |\n\
    8  | fn fizz_buzz(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n...\n24 |     i;\n   |      - help: remove\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut cnt = 0;\n    for n in 0..n {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            cnt += 1;\n        }\n    }\n    return cnt;\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpcb5zenmk.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    //\
    \ check whether n is divisible by 11 or 13\n    let mut count = n as usize;\n\
    \    if n % 11 == 0 || n % 13 == 0 {\n        count += 1;\n    }\n    for _ in\
    \ 0..(n as usize) {\n        if n % 10 == 7 { count += 1 }\n        n /= 10;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp3fxgxgp4.rs:18:5\n   |\n\
    8  | fn fizz_buzz(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n18 |     count\n   |     ^^^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n18 |     count.try_into().unwrap()\n\
    \   |          ++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        (n as i32).checked_mul(11).checked_mul(13).unwrap_or(0)\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `checked_mul` found for enum `Option` in\
    \ the current scope\n  --> /tmp/tmpzozfm6si.rs:12:36\n   |\n12 |         (n as\
    \ i32).checked_mul(11).checked_mul(13).unwrap_or(0)\n   |                    \
    \                ^^^^^^^^^^^ method not found in `Option<i32>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: -1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 2 { return 0 }\n    if n % 11 == 0 || n % 13 == 0 { return 1 }\n    n /\
    \ 11 + fizz_buzz(n % 11)\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976590
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut sum = 0;\n    for _ in 0..n {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            sum += 1;\n        }\n        n /= 10;\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpfk_cp47v.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n\n    for n in 2..=n {\n        if n % 11 == 0 || n % 13 ==\
    \ 0 {\n            count += 1;\n        }\n    }\n\n    return count;\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpp9p_pccn.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        (n - 1) % 10\
    \ + 1\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `0`', /tmp/tmpxse6gw9j.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 0 {\n        return 0;\n    }\n    use std::cmp::{Ord, Ordering};\n    use\
    \ std::cmp::Ordering::*;\n    let mut counter = 0;\n    let mut limit = n * 11\
    \ + 13 + 1;\n    let mut div = 1;\n    while limit > div {\n        if n % div\
    \ == 0 {\n            counter += 1;\n        }\n        div *= 11;\n        limit\
    \ /= div;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpg67kme4y.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut i = 1;\n    let mut result = 1;\n    while i <= n {\n        if n % 10 ==\
    \ 7 {\n            result = (result * 3 + 1) as isize;\n        }\n        if\
    \ i % 11 == 0 {\n            result = (result * 3 + 1) as isize;\n        }\n\
    \        if i % 13 == 0 {\n            result = (result * 3 + 1) as isize;\n \
    \       }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3280`,\n right: `0`', /tmp/tmp1vs8tr94.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut n = 1usize;\n    let mut z = 0;\n    while n <= n {\n        if n % 11 ==\
    \ 0 && n % 13 == 0 {\n            n += z * 2;\n            z += 1\n        } else\
    \ if n % 11 == 0 {\n            n += z * 2;\n            z += 1;\n        } else\
    \ if n % 13 == 0 {\n            n += z * 2;\n            z += 1;\n        } else\
    \ {\n            n += z;\n            z += 1\n        }\n    }\n    n\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxpdgfmry.rs:26:5\n   |\n\
    8  | fn fizz_buzz(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n26 |     n\n   |     ^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n26 |     n.try_into().unwrap()\n \
    \  |      ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count++;\n        }\n\n        n /= 10;\n    }\n\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmp2mfic7do.rs:13:18\n\
    \   |\n13 |             count++;\n   |                  ^^ not a valid postfix\
    \ operator\n   |\nhelp: use `+= 1` instead\n   |\n13 |             { let tmp =\
    \ count; count += 1; tmp };\n   |             +++++++++++      ~~~~~~~~~~~~~~~~~~~\n\
    13 -             count++;\n13 +             count += 1;\n   | \n\nerror: aborting\
    \ due to previous error\n\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut num = 0;\n    let mut i = 0;\n    while i < n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            num += 1\n        }\n        i += 1;\n    }\n\
    \    num\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp6jwyo3pl.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut num_times_seven = 0;\n    while n != 0 {\n        match n % 11 {\n     \
    \       0 => num_times_seven += 1,\n            _ => break\n        }\n      \
    \  n /= 11;\n    }\n    if n % 13 == 0 {\n        num_times_seven += 1;\n    }\n\
    \    num_times_seven\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp6_y6bob_.rs:15:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n15 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    0\
    \ as isize\n        .checked_mul(11)\n        .checked_mul(13)\n        .checked_add(n\
    \ as isize)\n        .ok()\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error: casts cannot be followed by a method call\n --> /tmp/tmpji46jyld.rs:9:5\n\
    \  |\n9 |     0 as isize\n  |     ^^^^^^^^^^\n  |\nhelp: try surrounding the expression\
    \ in parentheses\n  |\n9 |     (0 as isize)\n  |     +          +\n\nerror[E0599]:\
    \ no method named `checked_mul` found for enum `Option` in the current scope\n\
    \  --> /tmp/tmpji46jyld.rs:11:10\n   |\n11 |         .checked_mul(13)\n   |  \
    \        ^^^^^^^^^^^ method not found in `Option<isize>`\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n == 0 || n % 11 == 0 {\n        return 0;\n    }\n    if n % 13 == 0 {\n  \
    \      return 2;\n    }\n    if n % 11 % 13 == 0 {\n        return 3;\n    }\n\
    \    3\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmpmvjmh2ih.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmp_4xtbeyb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ as u32 / 11) - if n % 11 == 0 { 1 } else { 0 }\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwdewtbu5.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (n as u32 / 11) - if n % 11 == 0 { 1\
    \ } else { 0 }\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `u32`\n  |\nhelp: you can convert a `u32` to an `isize` and panic\
    \ if the converted value doesn't fit\n  |\n9 |     ((n as u32 / 11) - if n % 11\
    \ == 0 { 1 } else { 0 }).try_into().unwrap()\n  |     +                      \
    \                           +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 0..n {\n        if n % i == 0 || n % i == 1 ||\
    \ n % i == 2 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmp18kilyb7.rs:11:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 && n % 13 == 0 {\n        return 0;\n    }\n    let mut num: usize\
    \ = 1;\n    while num * 11 < n {\n        num = num * 11 + 10;\n    }\n    let\
    \ mut num2: usize = num * 11;\n    while num2 % 13 == 0 {\n        num2 = num2\
    \ * 11 + 10;\n    }\n    num2\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpouqf3ot5.rs:13:22\n   |\n\
    13 |     while num * 11 < n {\n   |                      ^ expected `usize`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n   |\n13 |     while num * 11 < n.try_into().unwrap()\
    \ {\n   |                       ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpouqf3ot5.rs:20:5\n   |\n8  | fn fizz_buzz(n: isize) ->\
    \ isize {\n   |                           ----- expected `isize` because of return\
    \ type\n...\n20 |     num2\n   |     ^^^^ expected `isize`, found `usize`\n  \
    \ |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n20 |     num2.try_into().unwrap()\n   |         ++++++++++++++++++++\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..=n).filter(|x|\
    \ x % 11 == 0 || x % 13 == 0).count()\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvgmu72s6.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (1..=n).filter(|x| x % 11 == 0 || x\
    \ % 13 == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (1..=n).filter(|x|\
    \ x % 11 == 0 || x % 13 == 0).count().try_into().unwrap()\n  |               \
    \                                            ++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n /\
    \ 10)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `78`,\n right: `2`', /tmp/tmps8kuz7zz.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 11 {\n        if n % 11 == 0 {\n            0\n        } else {\n      \
    \      0\n        }\n    } else if n < 13 {\n        if n % 13 == 0 {\n      \
    \      0\n        } else {\n            0\n        }\n    } else {\n        if\
    \ n % 13 == 0 {\n            if n % 11 == 0 {\n                1\n           \
    \ } else {\n                0\n            }\n        } else {\n            0\n\
    \        }\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpexbq7__1.rs:37:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 0..n {\n        if i / 13 == 0 || i % 13 == 0 {\n\
    \            count += 1;\n        } else if i % 11 == 0 {\n            count +=\
    \ 1;\n        } else if i % 7 == 0 {\n            count += 1;\n        }\n   \
    \ }\n    return count;\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n   \
    \ assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `25`,\n right: `0`', /tmp/tmp0kzcg5ws.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..n).filter(|&x|\
    \ x%3 == 0 || x%5 == 0 || x%7 == 0).count()\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwhj97vfs.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (0..n).filter(|&x| x%3 == 0 || x%5 ==\
    \ 0 || x%7 == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (0..n).filter(|&x|\
    \ x%3 == 0 || x%5 == 0 || x%7 == 0).count().try_into().unwrap()\n  |         \
    \                                                        ++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut result: isize = 0;\n    for c in n.to_string()\
    \ {\n        counter = counter.saturating_add((c.is_digit(10)).clone());\n   \
    \     result = result.saturating_add((if counter >= 11 { 1 } else { 0 }).clone());\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: `String` is not an iterator\n  --> /tmp/tmphaxsvsep.rs:11:14\n\
    \   |\n11 |     for c in n.to_string() {\n   |              ^^^^^^^^^^^^^ `String`\
    \ is not an iterator; try calling `.chars()` or `.bytes()`\n   |\n   = help: the\
    \ trait `Iterator` is not implemented for `String`\n   = note: required because\
    \ of the requirements on the impl of `IntoIterator` for `String`\n\nerror[E0689]:\
    \ can't call method `saturating_add` on ambiguous numeric type `{integer}`\n \
    \ --> /tmp/tmphaxsvsep.rs:12:27\n   |\n12 |         counter = counter.saturating_add((c.is_digit(10)).clone());\n\
    \   |                           ^^^^^^^^^^^^^^\n   |\nhelp: you must specify a\
    \ type for this binding, like `i32`\n   |\n9  |     let mut counter: i32 = 0;\n\
    \   |         ~~~~~~~~~~~~~~~~\n\nerror: aborting due to 2 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0689.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..=n).filter(|x|\
    \ x.is_multiple_of(11) || x.is_multiple_of(13)).count()\n}\n\nfn main() {\n  \
    \  let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_multiple_of` found for reference `&isize`\
    \ in the current scope\n --> /tmp/tmpcl_emn25.rs:9:26\n  |\n9 |     (1..=n).filter(|x|\
    \ x.is_multiple_of(11) || x.is_multiple_of(13)).count()\n  |                 \
    \         ^^^^^^^^^^^^^^ help: there is an associated function with a similar\
    \ name: `next_multiple_of`\n\nerror[E0599]: no method named `is_multiple_of` found\
    \ for reference `&isize` in the current scope\n --> /tmp/tmpcl_emn25.rs:9:50\n\
    \  |\n9 |     (1..=n).filter(|x| x.is_multiple_of(11) || x.is_multiple_of(13)).count()\n\
    \  |                                                  ^^^^^^^^^^^^^^ help: there\
    \ is an associated function with a similar name: `next_multiple_of`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpcl_emn25.rs:9:5\n  |\n8 | fn fizz_buzz(n: isize)\
    \ -> isize {\n  |                           ----- expected `isize` because of\
    \ return type\n9 |     (1..=n).filter(|x| x.is_multiple_of(11) || x.is_multiple_of(13)).count()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (1..=n).filter(|x|\
    \ x.is_multiple_of(11) || x.is_multiple_of(13)).count().try_into().unwrap()\n\
    \  |                                                                         \
    \    ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\nSome\
    \ errors have detailed explanations: E0308, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n <= 3 {\n        n\n    } else {\n        n % 7 == 3 && n / 7 == 3 || n % 7\
    \ == 6 && n / 7 == 6 || n % 7 == 9 && n / 7 == 9\n            || n % 7 == 0 &&\
    \ n / 7 == 0\n            ? n\n            : fizz_buzz(n - 1)\n    }\n}\n\nfn\
    \ main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `n`\n\
    \  --> /tmp/tmpzy_xtmgc.rs:14:15\n   |\n14 |             ? n\n   |           \
    \    ^ expected one of `.`, `;`, `?`, `}`, or an operator\n\nerror: aborting due\
    \ to previous error\n\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..n).filter(|x|\
    \ x % 11 == 0).filter(|x| x % 13 == 0).count() * 12 + n % 11\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxlqia9y2.rs:9:75\n  |\n9 |\
    \     (1..n).filter(|x| x % 11 == 0).filter(|x| x % 13 == 0).count() * 12 + n\
    \ % 11\n  |                                                                  \
    \         ^^^^^^ expected `usize`, found `isize`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpxlqia9y2.rs:9:5\n  |\n8 | fn fizz_buzz(n: isize) -> isize {\n  |\
    \                           ----- expected `isize` because of return type\n9 |\
    \     (1..n).filter(|x| x % 11 == 0).filter(|x| x % 13 == 0).count() * 12 + n\
    \ % 11\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     ((1..n).filter(|x|\
    \ x % 11 == 0).filter(|x| x % 13 == 0).count() * 12 + n % 11).try_into().unwrap()\n\
    \  |     +                                                                   \
    \         +++++++++++++++++++++\n\nerror[E0277]: cannot add `isize` to `usize`\n\
    \ --> /tmp/tmpxlqia9y2.rs:9:73\n  |\n9 |     (1..n).filter(|x| x % 11 == 0).filter(|x|\
    \ x % 13 == 0).count() * 12 + n % 11\n  |                                    \
    \                                     ^ no implementation for `usize + isize`\n\
    \  |\n  = help: the trait `Add<isize>` is not implemented for `usize`\n  = help:\
    \ the following other types implement trait `Add<Rhs>`:\n            <&'a f32\
    \ as Add<f32>>\n            <&'a f64 as Add<f64>>\n            <&'a i128 as Add<i128>>\n\
    \            <&'a i16 as Add<i16>>\n            <&'a i32 as Add<i32>>\n      \
    \      <&'a i64 as Add<i64>>\n            <&'a i8 as Add<i8>>\n            <&'a\
    \ isize as Add<isize>>\n          and 48 others\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n\n    let mut n: int = 0usize;\n    let mut i: isize =\
    \ 0;\n    let mut s: isize = 0;\n    let mut e: int = 0;\n\n    while n < n {\n\
    \        i = n % 11;\n        s = i % 3;\n        e = n % 7;\n\n        if e ==\
    \ 0 && i != 0 {\n            n += 1;\n        } else if e != 0 {\n           \
    \ n += 2;\n        } else {\n            n += 1;\n        }\n        n += s *\
    \ 3 + i;\n        n += e * 7;\n    }\n\n    n\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `int` in this scope\n  --> /tmp/tmpskw2jrcb.rs:11:16\n\
    \   |\n11 |     let mut n: int = 0usize;\n   |                ^^^\n   |      \
    \          |\n   |                not found in this scope\n   |              \
    \  help: perhaps you intended to use this type: `i32`\n\nerror[E0412]: cannot\
    \ find type `int` in this scope\n  --> /tmp/tmpskw2jrcb.rs:14:16\n   |\n14 | \
    \    let mut e: int = 0;\n   |                ^^^\n   |                |\n   |\
    \                not found in this scope\n   |                help: perhaps you\
    \ intended to use this type: `i32`\n\nwarning: unused import: `std::cmp::Ordering`\n\
    \ --> /tmp/tmpskw2jrcb.rs:9:9\n  |\n9 |     use std::cmp::Ordering;\n  |     \
    \    ^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\
    \nerror: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter: usize = 0;\n    while n % 11 == 0 || n % 13 == 0 {\n        n /=\
    \ 11\n    }\n    while n > 0 {\n        if n % 11 == 0 && n % 13 == 0 {\n    \
    \        n /= 11\n        } else {\n            n /= 13\n        }\n        counter\
    \ += 1\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpco6o3er6.rs:21:5\n   |\n\
    8  | fn fizz_buzz(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n21 |     counter\n   |     ^^^^^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n21 |     counter.try_into().unwrap()\n\
    \   |            ++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 && n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n/11)\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpmb1adfk9.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        n + fizz_buzz(n\
    \ % 10) * 11\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `50`,\n right: `0`', /tmp/tmpgw2axn2z.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut fizz_buzz: usize = 0;\n\n    for num in 0..n {\n        let digit = num\
    \ % 11;\n\n        if digit == 7 || digit == 8 {\n            fizz_buzz += 1;\n\
    \        }\n    }\n\n    return fizz_buzz;\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxbxt5d8i.rs:19:12\n   |\n\
    8  | fn fizz_buzz(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n19 |     return fizz_buzz;\n   |      \
    \      ^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    19 |     return fizz_buzz.try_into().unwrap();\n   |                     ++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: -1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut num = 1;\n    let mut result = 1;\n    while num < n {\n        num <<=\
    \ 1;\n        result |= 1 << (num % 11);\n        num >>= 1;\n        result |=\
    \ 1 << (num % 13);\n    }\n    result\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976590
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..=n/13\
    \ - n/11 - 1).filter(|x| *x%11 == *x).count()\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpc25a1odm.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (0..=n/13 - n/11 - 1).filter(|x| *x%11\
    \ == *x).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (0..=n/13\
    \ - n/11 - 1).filter(|x| *x%11 == *x).count().try_into().unwrap()\n  |       \
    \                                                   ++++++++++++++++++++\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..n).filter(|i|\
    \ i % 11 == 0 || i % 13 == 0).count()\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8xptw64m.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (0..n).filter(|i| i % 11 == 0 || i %\
    \ 13 == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (0..n).filter(|i|\
    \ i % 11 == 0 || i % 13 == 0).count().try_into().unwrap()\n  |               \
    \                                           ++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    if n < 13 {\n        if n % 11 == 0 {\n           \
    \ 2\n        } else if n % 13 == 0 {\n            3\n        } else {\n      \
    \      0\n        }\n    } else {\n        fizz_buzz_iter(n, Ordering::Less)\n\
    \    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_iter` in this scope\n  -->\
    \ /tmp/tmp37p9vtcz.rs:19:9\n   |\n19 |         fizz_buzz_iter(n, Ordering::Less)\n\
    \   |         ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        return 0;\n    }\n    if n % 7 == 0 {\n\
    \        return 2;\n    }\n    if n % 5 == 0 {\n        return 3;\n    }\n   \
    \ n / 7\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmpwvgqbi9d.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpbq5a02lt.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: -1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut i = n;\n    while i > 0 {\n        if i / 13 == 0 {\n            i += 1;\n\
    \        } else if i / 11 == 0 {\n            i += 1;\n        } else {\n    \
    \        i -= 1;\n        }\n    }\n    i\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976590
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = n.checked_mul(2).floor();\n    loop {\n        if counter % 11\
    \ == 0 || counter % 13 == 0 {\n            return counter;\n        }\n      \
    \  counter /= 10;\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for enum `Option` in the current\
    \ scope\n --> /tmp/tmp7bpto8ko.rs:9:40\n  |\n9 |     let mut counter = n.checked_mul(2).floor();\n\
    \  |                                        ^^^^^ method not found in `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ - 13) / 11.0\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmptdxvlar8.rs:9:14\n\
    \  |\n9 |     (n - 13) / 11.0\n  |              ^ no implementation for `isize\
    \ / {float}`\n  |\n  = help: the trait `Div<{float}>` is not implemented for `isize`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut result: isize = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13\
    \ == 0 {\n            result += 1;\n        }\n        n /= 10;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp3iv2da5o.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    let mut i = 0;\n \
    \   let mut j = 0;\n    let mut k = 0;\n    let mut nm = n / 11;\n    let mut\
    \ nd = n / 13;\n    let mut nf = n / 15;\n\n    while i < nm {\n        if i %\
    \ 11 == 0 {\n            i += 1;\n            if j == 0 {\n                j +=\
    \ 1;\n                if k == 0 {\n                    k += 1;\n             \
    \       i += 1;\n                }\n            } else {\n                i +=\
    \ 1;\n            }\n        }\n        i += 1;\n    }\n\n    while j < nd {\n\
    \        if j % 13 == 0 {\n            j += 1;\n            if k == 0 {\n    \
    \            k += 1;\n                j += 1;\n            } else {\n        \
    \        j += 1;\n            }\n        } else {\n            j += 1;\n     \
    \   }\n    }\n\n    while k < nf {\n        if k % 15 == 0 {\n            k +=\
    \ 1;\n            if i == 0 {\n                i += 1;\n                if j ==\
    \ 0 {\n                    j += 1;\n                    if k == 0 {\n        \
    \                k += 1;\n                        i += 1;\n                  \
    \  }\n                } else {\n                    i += 1;\n                }\n\
    \            } else {\n                i += 1;\n            }\n        } else\
    \ {\n            k += 1;\n        }\n    }\n\n    i;\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: unused import: `std::cmp::Ordering`\n --> /tmp/tmpuv7fg11s.rs:9:9\n\
    \  |\n9 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nwarning: the item `PartialOrd`\
    \ is imported redundantly\n   --> /tmp/tmpuv7fg11s.rs:10:9\n    |\n10  |     use\
    \ std::cmp::PartialOrd;\n    |         ^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused\
    \ import: `std::cmp::PartialOrd`\n  --> /tmp/tmpuv7fg11s.rs:10:9\n   |\n10 | \
    \    use std::cmp::PartialOrd;\n   |         ^^^^^^^^^^^^^^^^^^^^\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpuv7fg11s.rs:8:27\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |    ---------              ^^^^^ expected `isize`, found\
    \ `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail or\
    \ `return` expression\n...\n71 |     i;\n   |      - help: remove this semicolon\n\
    \nerror: aborting due to previous error; 3 warnings emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..n).filter(|&i|\
    \ i % 11 == 0 || i % 13 == 0).count()\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpotil_nv8.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (0..n).filter(|&i| i % 11 == 0 || i\
    \ % 13 == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (0..n).filter(|&i|\
    \ i % 11 == 0 || i % 13 == 0).count().try_into().unwrap()\n  |               \
    \                                            ++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0);\n    debug_assert!(n % 13 == 0);\n\n    let mut n_in = n;\n    let\
    \ mut n_out = n;\n\n    if n_in % 11 == 0 {\n        n_in /= 11;\n        n_out\
    \ /= 11;\n    }\n    if n_in % 13 == 0 {\n        n_in /= 13;\n        n_out /=\
    \ 13;\n    }\n    while n_in != 0 {\n        if n_out % 11 == 0 && n_out % 13\
    \ == 0 {\n            n_out /= 11;\n        } else {\n            n_out /= 13;\n\
    \        }\n    }\n    n_out\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n % 11 == 0'', /tmp/tmpocchfucm.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    n\
    \ / 11 * 11 + n - n % 11 % 11 / 13\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `94`,\n right: `0`', /tmp/tmpwn1gjieu.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 {\n        return 0;\n    }\n\n    if n % 13 == 0 {\n        return\
    \ 2;\n    }\n\n    3\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmpjs9h6dll.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..n).filter(|x|\
    \ x % 11 == 0).filter(|x| x % 13 == 0).count()\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpechkry2q.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (1..n).filter(|x| x % 11 == 0).filter(|x|\
    \ x % 13 == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (1..n).filter(|x|\
    \ x % 11 == 0).filter(|x| x % 13 == 0).count().try_into().unwrap()\n  |      \
    \                                                             ++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: -1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    loop {\n        let mut n = n - 7;\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1;\n        }\n        n = n;\n   \
    \ }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976590
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    use std::fmt::{self, Display};\n\n    const DIGITS_FIFTEEN:\
    \ &'static [&'static str] = &[\n        \"15\",\n        \"16\",\n        \"17\"\
    ,\n        \"18\",\n        \"19\",\n        \"20\",\n        \"21\",\n      \
    \  \"22\",\n        \"23\",\n        \"24\",\n        \"25\",\n        \"26\"\
    ,\n        \"27\",\n        \"28\",\n        \"29\",\n        \"30\",\n      \
    \  \"31\",\n        \"32\",\n        \"33\",\n        \"34\",\n        \"35\"\
    ,\n        \"36\",\n        \"37\",\n        \"38\",\n        \"39\",\n      \
    \  \"40\",\n        \"41\",\n        \"42\",\n        \"43\",\n        \"44\"\
    ,\n        \"45\",\n        \"46\",\n        \"47\",\n        \"48\",\n      \
    \  \"49\",\n    ];\n    const DIGITS_TEN: &'static [&'static str] = &[\"10\",\
    \ \"11\", \"12\", \"13\"];\n    const DIGITS_TWENTY: &'static [&'static str] =\
    \ &[\"20\", \"21\", \"22\", \"23\"];\n    const DIGITS_FORTY: &'static [&'static\
    \ str] = &[\"40\", \"41\", \"42\", \"43\"];\n    const DIGITS_FIFTY: &'static\
    \ [&'static str] = &[\"50\", \"51\", \"52\", \"53\"];\n    const DIGITS_FIFTEENTH:\
    \ &'static [&'static str] = &[\n        \"60\",\n        \"61\",\n        \"62\"\
    ,\n        \"63\",\n        \"64\",\n        \"65\",\n        \"66\",\n      \
    \  \"67\",\n        \"68\",\n        \"69\",\n        \"70\",\n        \"71\"\
    ,\n        \"72\",\n        \"73\",\n        \"74\",\n        \"75\",\n      \
    \  \"76\",\n        \"77\",\n        \"78\",\n        \"79\",\n    ];\n    const\
    \ DIGITS_FIFTEEN_FIRST: &'static [&'static str] = &[\n        \"80\",\n      \
    \  \"81\",\n        \"82\",\n        \"83\",\n        \"84\",\n        \"85\"\
    ,\n        \"86\",\n        \"87\",\n        \"88\",\n        \"89\",\n      \
    \  \"90\",\n        \"91\",\n        \"92\",\n        \"93\",\n        \"94\"\
    ,\n        \"95\",\n        \"96\",\n        \"97\",\n        \"98\",\n      \
    \  \"99\",\n    ];\n    const DIGITS_FIFTEEN_SECOND: &'static [&'static str] =\
    \ &[\n\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, or an operator, found `}`\n  -->\
    \ /tmp/tmpwdbtek9f.rs:99:1\n   |\n99 | }\n   | ^ expected one of `.`, `;`, `?`,\
    \ or an operator\n\nwarning: unused import: `std::cmp::Ordering`\n --> /tmp/tmpwdbtek9f.rs:9:9\n\
    \  |\n9 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused imports:\
    \ `Display`, `self`\n  --> /tmp/tmpwdbtek9f.rs:10:20\n   |\n10 |     use std::fmt::{self,\
    \ Display};\n   |                    ^^^^  ^^^^^^^\n\nerror: aborting due to previous\
    \ error; 2 warnings emitted\n\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    //\
    \ Find the prime factorization of n and store them as a Vec<usize>\n    let factors\
    \ = factorize(n);\n\n    // Iterate through the Vec<usize> and add all the fizz\
    \ buzz values for numbers less than n\n    let mut fizz_buzz = 0;\n    for factor\
    \ in &factors {\n        // If factor is a multiple of 11 or 13, we increment\
    \ the fizz_buzz count\n        if factor % 11 == 0 || factor % 13 == 0 {\n   \
    \         fizz_buzz += 1;\n        }\n    }\n\n    // Return the result\n    fizz_buzz\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorize` in this scope\n  --> /tmp/tmpt7qgwtmh.rs:10:19\n\
    \   |\n10 |     let factors = factorize(n);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    if n % 11 == 0 { 0 }\n    else if n % 13 ==\
    \ 0 { 1 }\n    else { n / 11 + fizz_buzz(n % 11) + fizz_buzz(n % 13) }\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n % 11 == 0 || n % 13 ==
    0'', /tmp/tmpc0y7r4yo.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ - 1) / 7\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpd4p06fa_.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 1 { \n        return 0\n    }\n\n    let mut counter = 1;\n    loop {\n\
    \        counter += n & 7;\n        n >>= 3;\n        if n == 0 {\n          \
    \  break counter;\n        }\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpq8j6lmt4.rs:16:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n16 |         n >>= 3;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for digit in n.to_string().chars().filter(|c| c.is_digit())\
    \ {\n        if digit == '7' {\n            count += 1;\n        } else if digit\
    \ == '8' {\n            count += 2;\n        } else if digit == '9' {\n      \
    \      count += 3;\n        } else if digit == '0' {\n            count += 4;\n\
    \        } else if digit == '3' {\n            count += 5;\n        } else if\
    \ digit == '4' {\n            count += 6;\n        } else if digit == '5' {\n\
    \            count += 7;\n        } else if digit == '6' {\n            count\
    \ += 8;\n        } else if digit == '1' {\n            count += 9;\n        }\
    \ else if digit == '2' {\n            count += 10;\n        } else if digit ==\
    \ '3' {\n            count += 11;\n        } else if digit == '4' {\n        \
    \    count += 12;\n        }\n    }\n    return count;\n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmpy88mxxam.rs:10:53\n    |\n10  |     for digit in n.to_string().chars().filter(|c|\
    \ c.is_digit()) {\n    |                                                     ^^^^^^^^-\
    \ supplied 0 arguments\n    |                                                \
    \     |\n    |                                                     expected 1\
    \ argument\n    |\nnote: associated function defined here\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0061`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    fn\
    \ helper(n: isize) -> isize {\n        if n <= 0 {\n            return 0;\n  \
    \      }\n        if n % 11 == 0 {\n            return 1;\n        }\n       \
    \ if n % 13 == 0 {\n            return 2;\n        }\n        return helper(n\
    \ - 1);\n    }\n    helper(n)\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmp8y3raz03.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..n).filter(|num|\
    \ num % 11 == 0 || num % 13 == 0).count()\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfpsm8wcs.rs:9:5\n  |\n8 |\
    \ fn fizz_buzz(n: isize) -> isize {\n  |                           ----- expected\
    \ `isize` because of return type\n9 |     (0..n).filter(|num| num % 11 == 0 ||\
    \ num % 13 == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |     (0..n).filter(|num|\
    \ num % 11 == 0 || num % 13 == 0).count().try_into().unwrap()\n  |           \
    \                                                     ++++++++++++++++++++\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut nums = vec![0; 12];\n\n    for i in 0..12 {\n        if n % i == 0 && (n%11\
    \ == 0 || n%13 == 0) {\n            nums[i] = nums[i] + 1;\n        }\n    }\n\
    \    for i in 0..12 {\n        if nums[i] == 3 {\n            return i;\n    \
    \    }\n    }\n    return -1;\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmp57bqxp5f.rs:13:13\n   |\n13 |             nums[i] = nums[i] + 1;\n \
    \  |             ^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmp57bqxp5f.rs:13:23\n\
    \   |\n13 |             nums[i] = nums[i] + 1;\n   |                       ^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the\
    \ trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because\
    \ of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp57bqxp5f.rs:18:20\n   |\n18 |             return\
    \ i;\n   |                    ^ expected `isize`, found `usize`\n   |\nhelp: you\
    \ can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n18 |             return i.try_into().unwrap();\n   |            \
    \         ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut last: usize = 0;\n    while n >= 7 {\n       \
    \ counter += 1;\n        last += 1;\n        n -= 7;\n    }\n    if n == 0 {\n\
    \        return 0;\n    }\n    if last == 0 || n % 11 == 0 {\n        return counter;\n\
    \    }\n    if n % 13 == 0 {\n        return counter + 3;\n    }\n    return counter;\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpgbbngvn_.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n -= 7;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ >= 1 && n <= 1000);\n\n    let mut digits = vec![String::from(\"0\")];\n\n \
    \   for &d in &n {\n        if d % 11 == 0 {\n            digits.push_str(\"11\"\
    );\n        } else if d % 13 == 0 {\n            digits.push_str(\"13\");\n  \
    \      } else {\n            digits.push_str(&format!(\"{}\", d));\n        }\n\
    \    }\n\n    let mut i = 0;\n    for d in &digits {\n        if i / 10 == (digits.len()\
    \ - 1) / 10 {\n            break;\n        }\n        i += 1;\n    }\n\n    i\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n  --> /tmp/tmpoh81e0xq.rs:13:15\n\
    \   |\n13 |     for &d in &n {\n   |               ^^ `&isize` is not an iterator\n\
    \   |\n   = help: the trait `Iterator` is not implemented for `&isize`\n   = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror[E0599]: no method named `push_str` found for struct `Vec<String>` in the\
    \ current scope\n  --> /tmp/tmpoh81e0xq.rs:15:20\n   |\n15 |             digits.push_str(\"\
    11\");\n   |                    ^^^^^^^^ help: there is an associated function\
    \ with a similar name: `push`\n\nerror[E0599]: no method named `push_str` found\
    \ for struct `Vec<String>` in the current scope\n  --> /tmp/tmpoh81e0xq.rs:17:20\n\
    \   |\n17 |             digits.push_str(\"13\");\n   |                    ^^^^^^^^\
    \ help: there is an associated function with a similar name: `push`\n\nerror[E0599]:\
    \ no method named `push_str` found for struct `Vec<String>` in the current scope\n\
    \  --> /tmp/tmpoh81e0xq.rs:19:20\n   |\n19 |             digits.push_str(&format!(\"\
    {}\", d));\n   |                    ^^^^^^^^ help: there is an associated function\
    \ with a similar name: `push`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpoh81e0xq.rs:31:5\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |                          \
    \ ----- expected `isize` because of return type\n...\n31 |     i\n   |     ^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n31 |     i.try_into().unwrap()\n\
    \   |      ++++++++++++++++++++\n\nerror: aborting due to 5 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        if n % 10 ==\
    \ 7 {\n            2\n        } else {\n            1 + fizz_buzz(n / 10)\n  \
    \      }\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmp9gymawjg.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpldhoqjhq.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976584
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        1\n    } else {\n        0\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpijngxq3g.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for i in 0..n {\n        let mut f = i % 11;\n       \
    \ if f == 7 { counter = counter + 1 }\n        let mut b = i % 13;\n        if\
    \ b == 7 {\n            counter = counter + 1;\n        }\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmprc9qf7k5.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        1\n    } else {\n        0\n    }\n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpijngxq3g.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        1\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmp3lru7vpf.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmp_p6bxkpv.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    if n % 11 == 0 && *(n % 11) != 7 {\n        1\n   \
    \ } else if n % 13 == 0 && *(n % 13) != 7 {\n        2\n    } else {\n       \
    \ 0\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "warning: unused import: `std::cmp::Ordering`\n --> /tmp/tmphibgwb86.rs:9:9\n\
    \  |\n9 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n  --> /tmp/tmphibgwb86.rs:10:23\n   |\n10 |     if n\
    \ % 11 == 0 && *(n % 11) != 7 {\n   |                       ^^^^^^^^^\n\nerror[E0614]:\
    \ type `isize` cannot be dereferenced\n  --> /tmp/tmphibgwb86.rs:12:30\n   |\n\
    12 |     } else if n % 13 == 0 && *(n % 13) != 7 {\n   |                     \
    \         ^^^^^^^^^\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\
    \nFor more information about this error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (0..=n)\n\
    \        .filter(|x|\n            x.is_power_of_two() &&\n                x.digits().iter().any(|d|\
    \ d != 7))\n        .count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_power_of_two` found for reference `&isize`\
    \ in the current scope\n  --> /tmp/tmp8pep546i.rs:11:15\n   |\n11 |          \
    \   x.is_power_of_two() &&\n   |               ^^^^^^^^^^^^^^^ method not found\
    \ in `&isize`\n\nerror[E0599]: no method named `digits` found for reference `&isize`\
    \ in the current scope\n  --> /tmp/tmp8pep546i.rs:12:19\n   |\n12 |          \
    \       x.digits().iter().any(|d| d != 7))\n   |                   ^^^^^^ method\
    \ not found in `&isize`\n\nerror[E0615]: attempted to take value of method `count`\
    \ on type `Filter<RangeInclusive<isize>, [closure@/tmp/tmp8pep546i.rs:10:17: 12:50]>`\n\
    \  --> /tmp/tmp8pep546i.rs:13:10\n   |\n13 |         .count\n   |          ^^^^^\
    \ method, not a field\n   |\nhelp: use parentheses to call the method\n   |\n\
    13 |         .count()\n   |               ++\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0599, E0615.\nFor more information\
    \ about an error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (1..=n).filter(|i|\
    \ i mod 11 == 0 || i mod 13 == 0).count() as isize\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator,\
    \ found keyword `mod`\n --> /tmp/tmp3z59h7b5.rs:9:26\n  |\n9 |     (1..=n).filter(|i|\
    \ i mod 11 == 0 || i mod 13 == 0).count() as isize\n  |                      \
    \    ^^^ expected one of 8 possible tokens\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: -1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    fn\
    \ fbuzz_loop(a: isize, b: isize) -> isize {\n        if a % 11 == 0 || a % 13\
    \ == 0 {\n            1 + fbuzz_loop(b, a % 11)\n        } else {\n          \
    \  fbuzz_loop(b, a % 13)\n        }\n    }\n\n    let mut a = 0;\n    let mut\
    \ b = 0;\n    for _ in 0..n {\n        b = a % 11;\n        a = fbuzz_loop(a,\
    \ b);\n    }\n    a\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976591
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 10 { 1 } else { fizz_buzz_digit(n, 11, 13) }\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fizz_buzz_digit` in this scope\n -->\
    \ /tmp/tmp5qgrbh6l.rs:9:28\n  |\n9 |     if n < 10 { 1 } else { fizz_buzz_digit(n,\
    \ 11, 13) }\n  |                            ^^^^^^^^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut nums: Vec<isize> = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\n    let mut\
    \ count = 0;\n    for num in nums.iter() {\n        count += if num % 11 == 0\
    \ || num % 13 == 0 {\n            num\n        } else {\n            0\n     \
    \   };\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `if` and `else` have incompatible types\n  --> /tmp/tmplwuuqfiy.rs:16:13\n\
    \   |\n13 |           count += if num % 11 == 0 || num % 13 == 0 {\n   |  __________________-\n\
    14 | |             num\n   | |             --- expected because of this\n15 |\
    \ |         } else {\n16 | |             0\n   | |             ^ expected `&isize`,\
    \ found integer\n17 | |         };\n   | |_________- `if` and `else` have incompatible\
    \ types\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976585
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    (n\
    \ as f64).f64() / 11.0 - 1.0\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `f64` found for type `f64` in the current\
    \ scope\n --> /tmp/tmpliympod1.rs:9:16\n  |\n9 |     (n as f64).f64() / 11.0 -\
    \ 1.0\n  |                ^^^ method not found in `f64`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976585

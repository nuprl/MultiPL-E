language: rs
name: HumanEval_83_starts_one_ends
results:
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for (start, end) in (1..=n).step_by(2)\
    \ {\n        if start == 1 {\n            count += end;\n        } else if end\
    \ == 1 {\n            count += start;\n        }\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8e4wjc22.rs:5:9\n  |\n5 |\
    \     for (start, end) in (1..=n).step_by(2) {\n  |         ^^^^^^^^^^^^    ------------------\
    \ this expression has type `Option<isize>`\n  |         |\n  |         expected\
    \ `isize`, found tuple\n  |\n  = note: expected type `isize`\n            found\
    \ tuple `(_, _)`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    use std::cmp::Ordering;\n    (1..=n).filter(|i| i % 10 == 1).count()\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "warning: unused import: `std::cmp::Ordering`\n --> /tmp/tmpmq5xey1y.rs:4:9\n\
    \  |\n4 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpmq5xey1y.rs:5:5\n  |\n3 | fn starts_one_ends(n: isize) ->\
    \ isize {\n  |                                 ----- expected `isize` because\
    \ of return type\n4 |     use std::cmp::Ordering;\n5 |     (1..=n).filter(|i|\
    \ i % 10 == 1).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n5 |     (1..=n).filter(|i| i\
    \ % 10 == 1).count().try_into().unwrap()\n  |                                \
    \            ++++++++++++++++++++\n\nerror: aborting due to previous error; 1\
    \ warning emitted\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut i = 0;\n    while i <= n {\n        if i % 101 == 1\
    \ {\n            i += 1;\n        } else if i % 101 == 0 {\n            i += 2;\n\
    \        } else {\n            i += 3;\n        }\n    }\n    i\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpfkoixl3h.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpjv4aiypf.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n > 100 {\n        assert!(n > 0);\n        1\n    } else\
    \ {\n        if n == 0 {\n            0\n        } else {\n            ((n - 1)\
    \ / n) + 1\n        }\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp77_4xg5_.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    loop {\n        n /= 10;\n        if n == 0 {\n            break;\n\
    \        }\n        if n % 10 == 1 {\n            n -= 1;\n            return\
    \ n + 1;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp2ppg3bd2.rs:5:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n4 |     loop {\n5 |         n\
    \ /= 10;\n  |         ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]:\
    \ cannot assign to immutable argument `n`\n  --> /tmp/tmp2ppg3bd2.rs:10:13\n \
    \  |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |             n\
    \ -= 1;\n   |             ^^^^^^ cannot assign to immutable argument\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n\n    let mut cnt: isize\
    \ = 0;\n    for i in 1..n {\n        if i % 10 == 1 {\n            cnt += 1;\n\
    \        }\n    }\n    cnt\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpxoih1cle.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    while n % 10 == 1 {\n        n /= 10;\n        count += 1;\n    }\n    if\
    \ n > 0 {\n        count += starts_one_ends(n / 10);\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpr5stpg69.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => n % 10 + starts_one_ends(n\
    \ / 10),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpk4xue10r.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|&i| i & 1).count()\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmprw5djc5_.rs:4:24\n  |\n4 |\
    \     (1..n).filter(|&i| i & 1).count()\n  |                        ^^^^^ expected\
    \ `bool`, found `isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmprw5djc5_.rs:4:5\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                       \
    \          ----- expected `isize` because of return type\n4 |     (1..n).filter(|&i|\
    \ i & 1).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n  |\n4 |     (1..n).filter(|&i| i & 1).count().try_into().unwrap()\n\
    \  |                                      ++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        0\n    } else {\n        let mut count =\
    \ n + 1;\n        for start in 0..n {\n            if start != 1 {\n         \
    \       count -= 1;\n            }\n            if start == n {\n            \
    \    return count;\n            }\n            count -= 1;\n        }\n      \
    \  0\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpakxrk48k.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n\n    let mut count =\
    \ 0;\n\n    while n > 0 {\n        count += n / 10 + 1;\n        n = n % 10;\n\
    \    }\n\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5w7cfcp2.rs:12:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n12 |         n = n\
    \ % 10;\n   |         ^^^^^^^^^^ cannot assign to immutable argument\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for digit in n.to_string().chars().skip(1)\
    \ {\n        if digit != '1' {\n            break;\n        }\n        count +=\
    \ 1;\n    }\n    return count;\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpzp3s23_a.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n * 10).count_digits(|d| d > 0)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `count_digits` found for type `isize` in\
    \ the current scope\n --> /tmp/tmpt4s2kalt.rs:4:14\n  |\n4 |     (n * 10).count_digits(|d|\
    \ d > 0)\n  |              ^^^^^^^^^^^^ help: there is an associated function\
    \ with a similar name: `count_ones`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut total = 0;\n    for i in 1..=n {\n        if i % 10\
    \ == 1 {\n            total += 1;\n        }\n    }\n    total\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp2qjk_vvi.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n - 1).count_if(|&i| i.is_power_of_two())\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `count_if` found for type `isize` in the\
    \ current scope\n --> /tmp/tmpsrh4oeno.rs:4:13\n  |\n4 |     (n - 1).count_if(|&i|\
    \ i.is_power_of_two())\n  |             ^^^^^^^^ method not found in `isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 {\n        return 0;\n    }\n\n    let mut n = (n\
    \ as u64) + 1; // \"9\" -> \"10\"\n    let mut count = 0;\n\n    while n != 0\
    \ {\n        count += n & 1;\n        n >>= 1;\n    }\n\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmprd0jtel2.rs:16:5\n   |\n\
    3  | fn starts_one_ends(n: isize) -> isize {\n   |                           \
    \      ----- expected `isize` because of return type\n...\n16 |     count\n  \
    \ |     ^^^^^ expected `isize`, found `u64`\n   |\nhelp: you can convert a `u64`\
    \ to an `isize` and panic if the converted value doesn't fit\n   |\n16 |     count.try_into().unwrap()\n\
    \   |          ++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut current = 1;\n    while current\
    \ < n {\n        if current % 10 == 1 && current != 1 {\n            count +=\
    \ 1;\n        }\n        current *= 10;\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp5ggvc5as.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|x| *x <= n).count()\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbisgfy1v.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..n).filter(|x| *x\
    \ <= n).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n  |\n4 |     (1..n).filter(|x| *x <= n).count().try_into().unwrap()\n\
    \  |                                       ++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 10 {\n        return 0;\n    }\n    if n % 10 == 1 {\n\
    \        if n % 100 == 0 {\n            return 1;\n        } else {\n        \
    \    return 1 + starts_one_ends(n / 100);\n        }\n    } else {\n        return\
    \ 1 + starts_one_ends(n / 10);\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpz81gla3o.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let limit = n.checked_sub(1);\n    loop\
    \ {\n        count += 1;\n        if n >= limit {\n            break;\n      \
    \  }\n        n -= 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbmii9g99.rs:8:17\n  |\n8 |\
    \         if n >= limit {\n  |                 ^^^^^ expected `isize`, found enum\
    \ `Option`\n  |\n  = note: expected type `isize`\n             found enum `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    let mut cnt = 0;\n\
    \    while n <= 10 {\n        if n % 10 == 1 {\n            cnt += 1;\n      \
    \  }\n        n /= 10;\n    }\n    cnt\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvu2h49ll.rs:12:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n12 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called for negative\
    \ input: {}\", n)\n    }\n    if n < 8 {\n        return n;\n    }\n    if n %\
    \ 8 == 0 {\n        return n-8;\n    }\n    if n % 8 == 7 {\n        return n-8;\n\
    \    }\n    if n % 8 == 6 {\n        return 8 + n - 8;\n    }\n    if n % 8 ==\
    \ 5 {\n        return 8 + n - 8;\n    }\n    if n % 8 == 4 {\n        return 8\
    \ + n - 8;\n    }\n    if n % 8 == 3 {\n        return 8 + n - 8;\n    }\n   \
    \ if n % 8 == 2 {\n        return 8 + n - 8;\n    }\n    if n % 8 == 1 {\n   \
    \     return 8 + n - 8;\n    }\n    panic!(\"Unexpected input: {}\", n)\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp_ecv7rxb.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 {\n        return 0;\n    }\n\n    let mut count =\
    \ 0;\n    let mut x = 1;\n    while x < n {\n        count += 1;\n        x +=\
    \ 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp9xsisg05.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n * (n - 1) / 2).pow(2)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp3b27k_s7.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    loop {\n        if n <= 1 {\n            return 0;\n       \
    \ }\n\n        let mut count = 1usize;\n        while n > 0 {\n            n =\
    \ n / 10;\n            count += 1usize;\n        }\n        return count;\n  \
    \  }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpsyw32tgg.rs:14:16\n   |\n\
    14 |         return count;\n   |                ^^^^^ expected `isize`, found\
    \ `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n   |\n14 |         return count.try_into().unwrap();\n\
    \   |                     ++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n - 1).count_digits(|x| if x > 9 { return 1; }).check()\n}\n\
    \nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `count_digits` found for type `isize` in\
    \ the current scope\n --> /tmp/tmp329lvjs4.rs:4:13\n  |\n4 |     (n - 1).count_digits(|x|\
    \ if x > 9 { return 1; }).check()\n  |             ^^^^^^^^^^^^ help: there is\
    \ an associated function with a similar name: `count_ones`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp329lvjs4.rs:4:30\n  |\n3 | fn starts_one_ends(n: isize)\
    \ -> isize {\n  |                                 ----- expected `_` because of\
    \ return type\n4 |     (n - 1).count_digits(|x| if x > 9 { return 1; }).check()\n\
    \  |                              ^^^^^^^^^^^^^^^^^^^^^^ expected integer, found\
    \ `()`\n  |\nnote: return type inferred to be `{integer}` here\n --> /tmp/tmp329lvjs4.rs:4:48\n\
    \  |\n4 |     (n - 1).count_digits(|x| if x > 9 { return 1; }).check()\n  |  \
    \                                              ^\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n as usize * 2 - ((n as usize).trailing_zeros() as usize)\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0js0sb8o.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     n as usize * 2 - ((n\
    \ as usize).trailing_zeros() as usize)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n4 |     (n as usize\
    \ * 2 - ((n as usize).trailing_zeros() as usize)).try_into().unwrap()\n  |   \
    \  +                                                         +++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    use std::cmp::Ordering;\n\n    let mut n1 = n - 1;\n    while\
    \ n1 > 0 {\n        if n1 % 10 == 1 {\n            n1 /= 10;\n        }\n    \
    \    else {\n            n1 *= 10;\n        }\n    }\n    let mut n2 = n;\n  \
    \  while n2 > 0 {\n        if n2 % 10 == 1 {\n            n2 /= 10;\n        }\n\
    \        else {\n            n2 *= 10;\n        }\n    }\n    n1 + n2\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpr9batghq.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    use std::cmp::Ordering;\n    use std::mem::transmute;\n\n  \
    \  if n < 10 {\n        return n;\n    }\n\n    let starts = n.count_ones();\n\
    \    let ends = n - starts;\n    let mut starts_ones = 0;\n    let mut ends_ones\
    \ = 0;\n\n    while starts < ends {\n        let mut pos = starts;\n        while\
    \ pos < ends && starts_ones < 10 {\n            if &starts_ones == 1 {\n     \
    \           return ends_ones;\n            }\n            pos += 1;\n        \
    \    starts_ones += 1;\n        }\n        starts += 1;\n        ends_ones +=\
    \ 1;\n    }\n    return ends_ones;\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: unused import: `std::cmp::Ordering`\n --> /tmp/tmpp4vm35as.rs:4:9\n\
    \  |\n4 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `std::mem::transmute`\n\
    \ --> /tmp/tmpp4vm35as.rs:5:9\n  |\n5 |     use std::mem::transmute;\n  |    \
    \     ^^^^^^^^^^^^^^^^^^^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpp4vm35as.rs:12:20\n\
    \   |\n12 |     let ends = n - starts;\n   |                    ^^^^^^ expected\
    \ `isize`, found `u32`\n\nerror[E0277]: cannot subtract `u32` from `isize`\n \
    \ --> /tmp/tmpp4vm35as.rs:12:18\n   |\n12 |     let ends = n - starts;\n   | \
    \                 ^ no implementation for `isize - u32`\n   |\n   = help: the\
    \ trait `Sub<u32>` is not implemented for `isize`\n   = help: the following other\
    \ types implement trait `Sub<Rhs>`:\n             <&'a f32 as Sub<f32>>\n    \
    \         <&'a f64 as Sub<f64>>\n             <&'a i128 as Sub<i128>>\n      \
    \       <&'a i16 as Sub<i16>>\n             <&'a i32 as Sub<i32>>\n          \
    \   <&'a i64 as Sub<i64>>\n             <&'a i8 as Sub<i8>>\n             <&'a\
    \ isize as Sub<isize>>\n           and 48 others\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpp4vm35as.rs:16:20\n   |\n16 |     while starts < ends {\n   | \
    \                   ^^^^ expected `u32`, found `isize`\n   |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n   |\n16\
    \ |     while starts < ends.try_into().unwrap() {\n   |                      \
    \  ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpp4vm35as.rs:18:21\n\
    \   |\n18 |         while pos < ends && starts_ones < 10 {\n   |             \
    \        ^^^^ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n   |\n18 |        \
    \ while pos < ends.try_into().unwrap() && starts_ones < 10 {\n   |           \
    \              ++++++++++++++++++++\n\nerror[E0277]: can't compare `&{integer}`\
    \ with `{integer}`\n  --> /tmp/tmpp4vm35as.rs:19:29\n   |\n19 |             if\
    \ &starts_ones == 1 {\n   |                         "
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..=n).filter(|x| x == 1 && n % x == 0).count()\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `&isize` with `{integer}`\n --> /tmp/tmpu86hnkjz.rs:4:26\n\
    \  |\n4 |     (1..=n).filter(|x| x == 1 && n % x == 0).count()\n  |          \
    \                ^^ no implementation for `&isize == {integer}`\n  |\n  = help:\
    \ the trait `PartialEq<{integer}>` is not implemented for `&isize`\n  = help:\
    \ the following other types implement trait `PartialEq<Rhs>`:\n            f32\n\
    \            f64\n            i128\n            i16\n            i32\n       \
    \     i64\n            i8\n            isize\n          and 6 others\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpu86hnkjz.rs:4:5\n  |\n3 | fn starts_one_ends(n:\
    \ isize) -> isize {\n  |                                 ----- expected `isize`\
    \ because of return type\n4 |     (1..=n).filter(|x| x == 1 && n % x == 0).count()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n4 |     (1..=n).filter(|x| x == 1 && n % x\
    \ == 0).count().try_into().unwrap()\n  |                                     \
    \                ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    loop {\n        if n % 10 == 1 {\n            n /= 10;\n   \
    \         if n == 1 {\n                return n;\n            }\n        } else\
    \ {\n            return 0;\n        }\n    }\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpetn937cf.rs:6:13\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n6 |             n /= 10;\n\
    \  |             ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut result = 0;\n    for i in 0..n {\n        if ((i > 0)\
    \ && (i & (i - 1)).is_zero()) {\n            result += 1;\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmpsulgdmda.rs:6:12\n\
    \  |\n6 |         if ((i > 0) && (i & (i - 1)).is_zero()) {\n  |            ^\
    \                                  ^\n  |\n  = note: `#[warn(unused_parens)]`\
    \ on by default\nhelp: remove these parentheses\n  |\n6 -         if ((i > 0)\
    \ && (i & (i - 1)).is_zero()) {\n6 +         if (i > 0) && (i & (i - 1)).is_zero()\
    \ {\n  | \n\nerror[E0599]: no method named `is_zero` found for type `isize` in\
    \ the current scope\n --> /tmp/tmpsulgdmda.rs:6:38\n  |\n6 |         if ((i >\
    \ 0) && (i & (i - 1)).is_zero()) {\n  |                                      ^^^^^^^\
    \ method not found in `isize`\n\nerror: aborting due to previous error; 1 warning\
    \ emitted\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + (starts_one_ends(n\
    \ - 1) >> 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp__h7remj.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // If the input number is negative, return 0.\n    if n <= 0\
    \ {\n        return 0;\n    }\n\n    let mut count = 1;\n\n    // Iterate through\
    \ the digits in the input number.\n    for i in 2..=n {\n        // If the current\
    \ digit is the first, add it to the count.\n        if i % 10 == 1 {\n       \
    \     count += 1;\n        }\n    }\n\n    // If the input number is negative,\
    \ add 1 to the count.\n    count + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp6bdq_3de.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        panic!(\"Invalid n!\");\n    }\n    let\
    \ mut nzeros = 1;\n    let mut nones = 0;\n    while nzeros <= n {\n        if\
    \ n % nzeros == 1 {\n            nones += 1;\n        }\n        nzeros += 1;\n\
    \    }\n    nones\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpif86yi4w.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut num = 1;\n    while num * n <= 1e9 {\n        num *=\
    \ 2;\n        n += 1;\n    }\n    num\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2rldfpf8.rs:5:22\n  |\n5 |\
    \     while num * n <= 1e9 {\n  |                      ^^^ expected `isize`, found\
    \ floating-point number\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    assert!(n >= 1);\n    let mut n = 0;\n    for i in 1..n {\n\
    \        if i % 10 == 1 {\n            n++;\n        } else if i % 10 == 0 {\n\
    \            n = 0;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n --> /tmp/tmpvrkgs3ig.rs:8:14\n\
    \  |\n8 |             n++;\n  |              ^^ not a valid postfix operator\n\
    \  |\nhelp: use `+= 1` instead\n  |\n8 |             { let tmp = n; n += 1; tmp\
    \ };\n  |             +++++++++++  ~~~~~~~~~~~~~~~\n8 -             n++;\n8 +\
    \             n += 1;\n  | \n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n as isize).count_range(|x| x <= 10 as isize)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `count_range` found for type `isize` in the\
    \ current scope\n --> /tmp/tmp_0rpebto.rs:4:18\n  |\n4 |     (n as isize).count_range(|x|\
    \ x <= 10 as isize)\n  |                  ^^^^^^^^^^^ method not found in `isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 2 * 2 + n % 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmphtzcqf5v.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // Start counting from 1\n    if n == 1 {\n        return 0;\n\
    \    }\n\n    // Start counting from n-1\n    let count = if n % 2 == 0 {\n  \
    \      n - 1\n    } else {\n        n/2\n    };\n\n    // Stop counting at 1 by\
    \ counting backwards from n-1\n    let count = count if n != 1;\n    count - 1\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator,\
    \ found keyword `if`\n  --> /tmp/tmpgohcfdo8.rs:17:23\n   |\n17 |     let count\
    \ = count if n != 1;\n   |                       ^^ expected one of 8 possible\
    \ tokens\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n as isize) / 4 + (n as isize) % 4 == 0\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpv48eks3t.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (n as isize) / 4 + (n\
    \ as isize) % 4 == 0\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `bool`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n.checked_mul(10).unwrap().checked_add(1).unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `1`', /tmp/tmpv4znjn_r.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n as usize * 100).checked_mul(3)\n        .checked_div(10)\n\
    \        .unwrap()\n        .checked_add(1)\n        .ok()\n        .unwrap_or(0)\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `checked_div` found for enum `Option` in\
    \ the current scope\n --> /tmp/tmp2xhfh60l.rs:5:10\n  |\n5 |         .checked_div(10)\n\
    \  |          ^^^^^^^^^^^ method not found in `Option<usize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n            n /= 10;\n        } else if n % 10\
    \ == 0 {\n            n /= 10;\n        } else {\n            break;\n       \
    \ }\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp5w0ojv4o.rs:8:13\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |             n /= 10;\n\
    \  |             ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]:\
    \ cannot assign to immutable argument `n`\n  --> /tmp/tmp5w0ojv4o.rs:10:13\n \
    \  |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |             n\
    \ /= 10;\n   |             ^^^^^^^ cannot assign to immutable argument\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660013047
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n)\n        .filter(|x| x.is_power_of_two())\n        .filter(|x|\
    \ x.is_power_of_two() && x % 2 != 0)\n        .count()\n}\n\nfn main() {\n   \
    \ let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_power_of_two` found for reference `&isize`\
    \ in the current scope\n --> /tmp/tmpb6rspxn6.rs:5:23\n  |\n5 |         .filter(|x|\
    \ x.is_power_of_two())\n  |                       ^^^^^^^^^^^^^^^ method not found\
    \ in `&isize`\n\nerror[E0599]: no method named `is_power_of_two` found for reference\
    \ `&isize` in the current scope\n --> /tmp/tmpb6rspxn6.rs:6:23\n  |\n6 |     \
    \    .filter(|x| x.is_power_of_two() && x % 2 != 0)\n  |                     \
    \  ^^^^^^^^^^^^^^^ method not found in `&isize`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpb6rspxn6.rs:4:5\n  |\n3 |   fn starts_one_ends(n: isize) -> isize\
    \ {\n  |                                   ----- expected `isize` because of return\
    \ type\n4 | /     (1..n)\n5 | |         .filter(|x| x.is_power_of_two())\n6 |\
    \ |         .filter(|x| x.is_power_of_two() && x % 2 != 0)\n7 | |         .count()\n\
    \  | |________________^ expected `isize`, found `usize`\n  |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n  |\n\
    7 |         .count().try_into().unwrap()\n  |                 ++++++++++++++++++++\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 || n == 1 {\n        return 0;\n    }\n    if n ==\
    \ 2 {\n        return 1;\n    }\n    loop {\n        if n % 10 == 1 {\n      \
    \      return n - 1;\n        }\n        n /= 10;\n    }\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5r3jrwwf.rs:14:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n14 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|x| n % x == 0).count()\n}\n\nfn main() {\n  \
    \  let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsaf6bdjl.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..n).filter(|x| n\
    \ % x == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n  |\n4 |     (1..n).filter(|x| n % x ==\
    \ 0).count().try_into().unwrap()\n  |                                        \
    \  ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: -1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert_eq!(n > 0, true);\n    debug_assert!(n % 10 ==\
    \ 1);\n\n    let mut n = 1isize;\n\n    while n <= 10isize {\n        if n % 10\
    \ == 1 {\n            n *= 10;\n            n += 1;\n        }\n        n /= 10;\n\
    \    }\n\n    n\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660013053
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n - 1).checked_mul(n as usize).unwrap()\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4bzyqprn.rs:4:25\n  |\n4 |\
    \     (n - 1).checked_mul(n as usize).unwrap()\n  |                         ^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n4 |     (n - 1).checked_mul((n\
    \ as usize).try_into().unwrap()).unwrap()\n  |                         +     \
    \     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut c = 0;\n    while n > 0 && n % 10 == 1 {\n        n\
    \ /= 10;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmprzcbcjyf.rs:6:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n6 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 || n == 1 { return 1; }\n    n as usize * 2 + 1\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpq6ad57mc.rs:5:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     if n == 0 || n == 1\
    \ { return 1; }\n5 |     n as usize * 2 + 1\n  |     ^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n5 |     (n as usize * 2 + 1).try_into().unwrap()\n\
    \  |     +                  +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    use std::cmp::min;\n    fn one_ends(x: isize) -> bool {\n  \
    \      if x != 1 {\n            one_ends(x - 1)\n        } else {\n          \
    \  true\n        }\n    }\n    if n < 10 {\n        min(n, 10).count(one_ends)\n\
    \    } else {\n        min(n, 9).count(one_ends)\n    }\n}\n\nfn main() {\n  \
    \  let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `isize` is not an iterator\n  --> /tmp/tmp6kzipjb0.rs:13:20\n\
    \   |\n13 |         min(n, 10).count(one_ends)\n   |                    ^^^^^\
    \ `isize` is not an iterator\n   |\n   = note: the following trait bounds were\
    \ not satisfied:\n           `isize: Iterator`\n           which is required by\
    \ `&mut isize: Iterator`\n\nerror[E0599]: `isize` is not an iterator\n  --> /tmp/tmp6kzipjb0.rs:15:19\n\
    \   |\n15 |         min(n, 9).count(one_ends)\n   |                   ^^^^^ `isize`\
    \ is not an iterator\n   |\n   = note: the following trait bounds were not satisfied:\n\
    \           `isize: Iterator`\n           which is required by `&mut isize: Iterator`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends with negative input:\
    \ {}\", n);\n    }\n\n    (1..n).filter(|x| {\n        if x % 10 == 1 {\n    \
    \        true\n        } else {\n            if x % 10 == 0 {\n              \
    \  if x.trailing_zeros() == 0 {\n                    true\n                } else\
    \ {\n                    false\n                }\n            } else {\n    \
    \            false\n            }\n        }\n    }).count()\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1q5s7ytx.rs:8:5\n   |\n3\
    \  |   fn starts_one_ends(n: isize) -> isize {\n   |                         \
    \          ----- expected `isize` because of return type\n...\n8  | /     (1..n).filter(|x|\
    \ {\n9  | |         if x % 10 == 1 {\n10 | |             true\n11 | |        \
    \ } else {\n...  |\n21 | |         }\n22 | |     }).count()\n   | |______________^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n22 |     }).count().try_into().unwrap()\n\
    \   |               ++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 1 { return 0; }\n    let mut cnt = 0;\n    while n !=\
    \ 1 {\n        cnt += 1;\n        n /= 10;\n    }\n    cnt\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp3er0hgau.rs:8:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|x| x % 10 == 1 && x != 0).count()\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `&isize` with `{integer}`\n --> /tmp/tmpmmy8e9hx.rs:4:40\n\
    \  |\n4 |     (1..n).filter(|x| x % 10 == 1 && x != 0).count()\n  |          \
    \                              ^^ no implementation for `&isize == {integer}`\n\
    \  |\n  = help: the trait `PartialEq<{integer}>` is not implemented for `&isize`\n\
    \  = help: the following other types implement trait `PartialEq<Rhs>`:\n     \
    \       f32\n            f64\n            i128\n            i16\n            i32\n\
    \            i64\n            i8\n            isize\n          and 6 others\n\n\
    error[E0308]: mismatched types\n --> /tmp/tmpmmy8e9hx.rs:4:5\n  |\n3 | fn starts_one_ends(n:\
    \ isize) -> isize {\n  |                                 ----- expected `isize`\
    \ because of return type\n4 |     (1..n).filter(|x| x % 10 == 1 && x != 0).count()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n4 |     (1..n).filter(|x| x % 10 == 1 && x\
    \ != 0).count().try_into().unwrap()\n  |                                     \
    \                ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|x| x % 10 == 1).count()\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpm1yji59h.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..n).filter(|x| x\
    \ % 10 == 1).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n4 |     (1..n).filter(|x| x %\
    \ 10 == 1).count().try_into().unwrap()\n  |                                  \
    \         ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut cnt = 0;\n    for i in 0..n {\n        if i / 10 ==\
    \ 1 || i / 10 == 0 {\n            cnt += 1;\n        }\n    }\n    cnt\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpfyjc21mi.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 1);\n    let mut count = 0;\n    for i in\
    \ (1..=n).rev() {\n        if i % 10 == 1 {\n            count += 1;\n       \
    \ } else if i % 10 == 0 {\n            break;\n        }\n    }\n    count\n}\n\
    \nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpthi9pk3u.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        if i / 10 ==\
    \ 1 {\n            count += 1;\n        }\n        if i % 10 == 1 && i != n {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpe59tr4ay.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match (n, true) {\n        (0u32, true) => 0u32,\n        (0u32,\
    \ false) => 1u32,\n        (_, _) => 0u32,\n    }\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu9cd5eaq.rs:5:10\n  |\n4 |\
    \     match (n, true) {\n  |           --------- this expression has type `(isize,\
    \ bool)`\n5 |         (0u32, true) => 0u32,\n  |          ^^^^ expected `isize`,\
    \ found `u32`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpu9cd5eaq.rs:6:10\n\
    \  |\n4 |     match (n, true) {\n  |           --------- this expression has type\
    \ `(isize, bool)`\n5 |         (0u32, true) => 0u32,\n6 |         (0u32, false)\
    \ => 1u32,\n  |          ^^^^ expected `isize`, found `u32`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpu9cd5eaq.rs:5:25\n  |\n3 | fn starts_one_ends(n: isize)\
    \ -> isize {\n  |                                 ----- expected `isize` because\
    \ of return type\n4 |     match (n, true) {\n5 |         (0u32, true) => 0u32,\n\
    \  |                         ^^^^ expected `isize`, found `u32`\n  |\nhelp: change\
    \ the type of the numeric literal from `u32` to `isize`\n  |\n5 |         (0u32,\
    \ true) => 0isize,\n  |                          ~~~~~\n\nerror: aborting due\
    \ to 3 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    loop {\n        if n % 10 == 1 {\n            return n;\n  \
    \      }\n        if n == 1 {\n            break;\n        }\n        n /= 10;\n\
    \    }\n    0\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvhk_7xmu.rs:11:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n11 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0 && n <= 32);\n    let mut count = 0;\n\
    \    for i in 0..n + 1 {\n        if i == 1 || (i < 2 && i == n) /* start */\n\
    \        || i == n || (i < n && i == n - 1) /* end */\n        || (i < n && i\
    \ == n - 1) && ((i + 1) % 2 == 0) /* middle */\n        {\n            count +=\
    \ 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp28jxbk3n.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n.checked_mul(10)\n        .ok()\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| n.checked_mul(10).ok())\n        .and_then(|n| n.checked_mul(10).ok())\n\
    \        .and_then(|n| \n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `)`\n  --> /tmp/tmpg5cwsu7h.rs:40:1\n\
    \   |\n40 | }\n   | ^ expected expression\n\nerror: mismatched closing delimiter:\
    \ `}`\n  --> /tmp/tmpg5cwsu7h.rs:39:18\n   |\n3  | fn starts_one_ends(n: isize)\
    \ -> isize {\n   |                                       - closing delimiter possibly\
    \ meant for this\n...\n39 |         .and_then(|n| \n   |                  ^ unclosed\
    \ delimiter\n40 | }\n   | ^ mismatched closing delimiter\n\nerror: aborting due\
    \ to 2 previous errors\n\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..=n).filter(|i| starts_one(i)).count()\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `starts_one` in this scope\n --> /tmp/tmpz88s6psk.rs:4:24\n\
    \  |\n4 |     (1..=n).filter(|i| starts_one(i)).count()\n  |                 \
    \       ^^^^^^^^^^ not found in this scope\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpz88s6psk.rs:4:5\n  |\n3 | fn starts_one_ends(n: isize) -> isize\
    \ {\n  |                                 ----- expected `isize` because of return\
    \ type\n4 |     (1..=n).filter(|i| starts_one(i)).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n4 |     (1..=n).filter(|i|\
    \ starts_one(i)).count().try_into().unwrap()\n  |                            \
    \                  ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n - 1).saturating_add(1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpjww_bo_9.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n)\n        .filter(|&i| i & 1)\n        .filter(|&i| i\
    \ / 10 == 1)\n        .count()\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgl9s8skh.rs:5:22\n  |\n5 |\
    \         .filter(|&i| i & 1)\n  |                      ^^^^^ expected `bool`,\
    \ found `isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpgl9s8skh.rs:4:5\n\
    \  |\n3 |   fn starts_one_ends(n: isize) -> isize {\n  |                     \
    \              ----- expected `isize` because of return type\n4 | /     (1..n)\n\
    5 | |         .filter(|&i| i & 1)\n6 | |         .filter(|&i| i / 10 == 1)\n7\
    \ | |         .count()\n  | |________________^ expected `isize`, found `usize`\n\
    \  |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n  |\n7 |         .count().try_into().unwrap()\n  |      \
    \           ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..=n).filter(|x| starts_with(&x, 1)).count() + ends_with(&n,\
    \ 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `starts_with` in this scope\n --> /tmp/tmprf0cfcdv.rs:4:24\n\
    \  |\n4 |     (1..=n).filter(|x| starts_with(&x, 1)).count() + ends_with(&n, 1)\n\
    \  |                        ^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `ends_with` in this scope\n --> /tmp/tmprf0cfcdv.rs:4:54\n\
    \  |\n4 |     (1..=n).filter(|x| starts_with(&x, 1)).count() + ends_with(&n, 1)\n\
    \  |                                                      ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0308]: mismatched types\n --> /tmp/tmprf0cfcdv.rs:4:5\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                       \
    \          ----- expected `isize` because of return type\n4 |     (1..=n).filter(|x|\
    \ starts_with(&x, 1)).count() + ends_with(&n, 1)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n4 |     ((1..=n).filter(|x|\
    \ starts_with(&x, 1)).count() + ends_with(&n, 1)).try_into().unwrap()\n  |   \
    \  +                                                                 +++++++++++++++++++++\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // The range starts with 1 or ends with 1.\n    if n <= 0 {\n\
    \        return 0;\n    }\n    if n >= 10 {\n        return 0;\n    }\n\n    let\
    \ mut count = 0;\n    for d in (1..=n).rev() {\n        if d % 10 == 1 {\n   \
    \         count += 1;\n        }\n    }\n    return count;\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp8anu3wcn.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n   \
    \     return 1;\n    }\n    if n % 2 == 0 {\n        if n / 2 != 1 {\n       \
    \     0\n        } else {\n            1 + starts_one_ends(n / 2)\n        }\n\
    \    } else {\n        starts_one_ends(n / 2)\n    }\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpjt4sl32x.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|x| x.starts_with(\"1\") || x.ends_with(\"1\"\
    )).count()\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `starts_with` found for reference `&isize`\
    \ in the current scope\n --> /tmp/tmptfr2eos4.rs:4:25\n  |\n4 |     (1..n).filter(|x|\
    \ x.starts_with(\"1\") || x.ends_with(\"1\")).count()\n  |                   \
    \      ^^^^^^^^^^^ method not found in `&isize`\n\nerror[E0599]: no method named\
    \ `ends_with` found for reference `&isize` in the current scope\n --> /tmp/tmptfr2eos4.rs:4:47\n\
    \  |\n4 |     (1..n).filter(|x| x.starts_with(\"1\") || x.ends_with(\"1\")).count()\n\
    \  |                                               ^^^^^^^^^ method not found\
    \ in `&isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmptfr2eos4.rs:4:5\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                       \
    \          ----- expected `isize` because of return type\n4 |     (1..n).filter(|x|\
    \ x.starts_with(\"1\") || x.ends_with(\"1\")).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n4 |     (1..n).filter(|x|\
    \ x.starts_with(\"1\") || x.ends_with(\"1\")).count().try_into().unwrap()\n  |\
    \                                                                      ++++++++++++++++++++\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n\n    let mut count =\
    \ 0;\n    while n % 10 == 1 && n != 0 {\n        n /= 10;\n        count += 1;\n\
    \    }\n    if n == 0 {\n        return 0;\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmperaj_w3o.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut m = n;\n\
    \    let mut n = 0;\n    while m > 1 {\n        m >>= 1;\n        n += 1;\n  \
    \  }\n    n\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpdgqtlvfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n.count_zeros() + n.count_ones() - n\n}\n\nfn main() {\n   \
    \ let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjx8jjvik.rs:4:40\n  |\n4 |\
    \     n.count_zeros() + n.count_ones() - n\n  |                              \
    \          ^ expected `u32`, found `isize`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpjx8jjvik.rs:4:5\n  |\n3 | fn starts_one_ends(n: isize) -> isize\
    \ {\n  |                                 ----- expected `isize` because of return\
    \ type\n4 |     n.count_zeros() + n.count_ones() - n\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `u32`\n  |\nhelp: you can convert a `u32` to an `isize`\
    \ and panic if the converted value doesn't fit\n  |\n4 |     (n.count_zeros()\
    \ + n.count_ones() - n).try_into().unwrap()\n  |     +                       \
    \             +++++++++++++++++++++\n\nerror[E0277]: cannot subtract `isize` from\
    \ `u32`\n --> /tmp/tmpjx8jjvik.rs:4:38\n  |\n4 |     n.count_zeros() + n.count_ones()\
    \ - n\n  |                                      ^ no implementation for `u32 -\
    \ isize`\n  |\n  = help: the trait `Sub<isize>` is not implemented for `u32`\n\
    \  = help: the following other types implement trait `Sub<Rhs>`:\n           \
    \ <&'a f32 as Sub<f32>>\n            <&'a f64 as Sub<f64>>\n            <&'a i128\
    \ as Sub<i128>>\n            <&'a i16 as Sub<i16>>\n            <&'a i32 as Sub<i32>>\n\
    \            <&'a i64 as Sub<i64>>\n            <&'a i8 as Sub<i8>>\n        \
    \    <&'a isize as Sub<isize>>\n          and 48 others\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    use core::fmt;\n    let mut n = 0;\n    while n < 100 {\n  \
    \      if n == 1 { n += 1; continue; }\n        if n == 0 { break; }\n       \
    \ let mut s = n;\n        while s > 10 {\n            s /= 10;\n            n\
    \ += 1;\n        }\n        if s == 0 {\n            n += 1;\n        } else {\n\
    \            n = s;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0432]: unresolved import `core`\n --> /tmp/tmp2w0m0yce.rs:4:9\n\
    \  |\n4 |     use core::fmt;\n  |         ^^^^ maybe a missing crate `core`?\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0432`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n.count_ones() as isize\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpr94ap7gc.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|&i| i / 10 == 1).count()\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpk6gg4hpl.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..n).filter(|&i| i\
    \ / 10 == 1).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n4 |     (1..n).filter(|&i| i\
    \ / 10 == 1).count().try_into().unwrap()\n  |                                \
    \            ++++++++++++++++++++\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        panic!(\"count of an odd number\");\n  \
    \  }\n    let mut count = 0\n    for d in &[1..n].rev() {\n        if *d != 1\
    \ {\n            break;\n        }\n        count += 1;\n    }\n    count\n}\n\
    \nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found keyword `for`\n --> /tmp/tmptjxn679m.rs:7:22\n\
    \  |\n7 |     let mut count = 0\n  |                      ^ help: add `;` here\n\
    8 |     for d in &[1..n].rev() {\n  |     --- unexpected token\n\nerror[E0599]:\
    \ `[std::ops::Range<isize>; 1]` is not an iterator\n --> /tmp/tmptjxn679m.rs:8:22\n\
    \  |\n8 |     for d in &[1..n].rev() {\n  |                      ^^^ `[std::ops::Range<isize>;\
    \ 1]` is not an iterator; try calling `.into_iter()` or `.iter()`\n  |\n  = note:\
    \ the following trait bounds were not satisfied:\n          `[std::ops::Range<isize>;\
    \ 1]: Iterator`\n          which is required by `&mut [std::ops::Range<isize>;\
    \ 1]: Iterator`\n          `[std::ops::Range<isize>]: Iterator`\n          which\
    \ is required by `&mut [std::ops::Range<isize>]: Iterator`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 10 + (n % 10 == 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot add `bool` to `isize`\n --> /tmp/tmp1f98jnwc.rs:4:12\n\
    \  |\n4 |     n / 10 + (n % 10 == 1)\n  |            ^ no implementation for `isize\
    \ + bool`\n  |\n  = help: the trait `Add<bool>` is not implemented for `isize`\n\
    \  = help: the following other types implement trait `Add<Rhs>`:\n           \
    \ <&'a f32 as Add<f32>>\n            <&'a f64 as Add<f64>>\n            <&'a i128\
    \ as Add<i128>>\n            <&'a i16 as Add<i16>>\n            <&'a i32 as Add<i32>>\n\
    \            <&'a i64 as Add<i64>>\n            <&'a i8 as Add<i8>>\n        \
    \    <&'a isize as Add<isize>>\n          and 48 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut n = 0;\n    let mut sum = 0;\n    let mut count = 0;\n\
    \n    while n > 0 {\n        count += 1;\n        sum += n / 10;\n        n %=\
    \ 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpolpxvciz.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n\n    if n == 1 {\n \
    \       return 1;\n    }\n\n    if n % 10 == 1 {\n        return starts_one_ends(n-1)\
    \ + 1;\n    }\n\n    let mut i = 1;\n    while n % 10 == 1 {\n        i += 1;\n\
    \        n /= 10;\n    }\n\n    starts_one_ends(n-1) + i\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmph3__k4lj.rs:19:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n19 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 { 1 }\n    else if n < 100 { 2 }\n    else if n <\
    \ 1000 { 3 }\n    else if n < 10000 { 4 }\n    else if n < 100000 { 5 }\n    else\
    \ if n < 1000000 { 6 }\n    else if n < 10000000 { 7 }\n    else if n < 100000000\
    \ { 8 }\n    else if n < 1000000000 { 9 }\n    else {\n        (*n).log10().ceil()\
    \ as isize + starts_one_ends(n / 10000).max(1)\n    }\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpnl5l18td.rs:14:9\n\
    \   |\n14 |         (*n).log10().ceil() as isize + starts_one_ends(n / 10000).max(1)\n\
    \   |         ^^^^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n * (n + 1) / 2 - (n % 2)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmprhdepdby.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // The counts of numbers that start with 1 and end with 1\n\
    \    let mut cnt1 = 1; // counts of numbers starting with 1 and ending with 1\n\
    \    let mut cnt2 = 0; // counts of numbers starting with 2 and ending with 2\n\
    \    if n == 1 { // n is 1\n        cnt1 += 1;\n        cnt2 += 1;\n    }\n  \
    \  if n % 2 == 1 { // n mod 2 == 1\n        cnt1 += 1;\n    }\n    if n % 3 ==\
    \ 1 { // n mod 3 == 2\n        cnt1 += 1;\n    }\n    if n % 4 == 0 { // n mod\
    \ 4 == 0\n        cnt2 += 1;\n    }\n    if n % 5 == 0 { // n mod 5 == 0\n   \
    \     cnt2 += 1;\n    }\n    if n % 6 == 0 { // n mod 6 == 0\n        cnt2 +=\
    \ 1;\n    }\n    if n % 7 == 0 { // n mod 7 == 0\n        cnt2 += 1;\n    }\n\
    \    if n % 8 == 0 { // n mod 8 == 0\n        cnt2 += 1;\n    }\n    if n % 9\
    \ == 0 { // n mod 9 == 0\n        cnt2 += 1;\n    }\n    if n % 10 == 0 { // n\
    \ mod 10 == 0\n        cnt2 += 1;\n    }\n    if n % 11 == 0 { // n mod 11 ==\
    \ 0\n        cnt2 += 1;\n    }\n    if n % 12 == 0 { // n mod 12 == 0\n      \
    \  cnt2 += 1;\n    }\n    if n % 13 == 0 { // n mod 13 == 0\n        cnt2 += 1;\n\
    \    }\n    if n % 14 == 0 { // n mod 14 == 0\n        cnt2 += 1;\n    }\n   \
    \ if n % 15 == 0 { // n mod 15 == 0\n        cnt2 += 1;\n    }\n    if n % 16\
    \ == 0 { // n mod 16 == 0\n        cnt2 += 1;\n    }\n    if n % 17 == 0 { //\
    \ n mod 17 == 0\n        cnt2 += 1;\n    }\n    if n % 18 == 0 { // n mod 18 ==\
    \ 0\n        cnt2 += 1;\n    }\n    if n % 19 == 0 { // n mod 19 == 0\n      \
    \  cnt2 += 1;\n    }\n    if n % 20 == 0 { // n mod 20 == 0\n        cnt2 += 1;\n\
    \    }\n    if n % 21 == 0 { // n mod 21 == 0\n        cnt2 += 1;\n    }\n   \
    \ if n % 22 == 0 { // n mod 22 == 0\n        cnt2 += 1;\n    }\n    if n % 23\
    \ == 0 { // n mod 23 == 0\n        cnt2 += 1;\n    }\n    if n % 24 == 0 \n}\n\
    \nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmpdnb5e15d.rs:78:1\n   |\n\
    77 |     if n % 24 == 0 \n   |     -- this `if` expression has a condition, but\
    \ no block\n78 | }\n   | ^ expected `{`\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter (|&i| i & 1 != 0).count()\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpzess52xa.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..n).filter (|&i|\
    \ i & 1 != 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n4 |     (1..n).filter (|&i| i\
    \ & 1 != 0).count().try_into().unwrap()\n  |                                 \
    \           ++++++++++++++++++++\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert_eq!(n >= 0, \"n must be non-negative\");\n    let\
    \ mut n = 0;\n    while n > 10 {\n        n /= 10;\n        debug_assert_eq!(n\
    \ % 10, 0, \"n must be an n digit\");\n    }\n    let mut count = 0;\n    while\
    \ n % 10 == 1 {\n        n /= 10;\n        count += 1;\n        debug_assert_eq!(n\
    \ % 10, 0, \"n must be an n digit\");\n    }\n    count\n}\n\nfn main() {\n  \
    \  let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpw89wgkhp.rs:4:5\n  |\n4 |\
    \     debug_assert_eq!(n >= 0, \"n must be non-negative\");\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `bool`, found `&str`\n  |\n  = note: this error originates in the macro\
    \ `$crate::assert_eq` (in Nightly builds, run with -Z macro-backtrace for more\
    \ info)\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    let mut last = n;\n    while last > 1 {\n        last -= 1;\n        count\
    \ += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpyg46yhvg.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut num_starts = 0;\n    let mut num_ends = 0;\n    while\
    \ n > 0 {\n        if n % 10 == 1 {\n            num_starts += 1;\n        }\n\
    \        if n % 10 == 0 {\n            num_ends += 1;\n        }\n        n /=\
    \ 10;\n    }\n    2 * num_starts + num_ends\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmph3hjcnuk.rs:13:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n13 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 { return 0 }\n    let mut cnt = 0;\n    while n >\
    \ 10 {\n        cnt += n % 10 != 1 && n % 10 != 0;\n        n /= 10;\n    }\n\
    \    cnt += n % 10 == 1;\n    cnt\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot add-assign `bool` to `{integer}`\n --> /tmp/tmp0e6zj4yw.rs:7:13\n\
    \  |\n7 |         cnt += n % 10 != 1 && n % 10 != 0;\n  |             ^^ no implementation\
    \ for `{integer} += bool`\n  |\n  = help: the trait `AddAssign<bool>` is not implemented\
    \ for `{integer}`\n  = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \            <f32 as AddAssign<&f32>>\n            <f32 as AddAssign>\n      \
    \      <f64 as AddAssign<&f64>>\n            <f64 as AddAssign>\n            <i128\
    \ as AddAssign<&i128>>\n            <i128 as AddAssign>\n            <i16 as AddAssign<&i16>>\n\
    \            <i16 as AddAssign>\n          and 20 others\n\nerror[E0277]: cannot\
    \ add-assign `bool` to `{integer}`\n  --> /tmp/tmp0e6zj4yw.rs:10:9\n   |\n10 |\
    \     cnt += n % 10 == 1;\n   |         ^^ no implementation for `{integer} +=\
    \ bool`\n   |\n   = help: the trait `AddAssign<bool>` is not implemented for `{integer}`\n\
    \   = help: the following other types implement trait `AddAssign<Rhs>`:\n    \
    \         <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n        \
    \     <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n            \
    \ <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n             <i16\
    \ as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and 20 others\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n as isize\n        .checked_sub(1 as isize)\n        .checked_div(10_usize\
    \ as isize)\n        .unwrap_or(0)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error: casts cannot be followed by a method call\n --> /tmp/tmpcbp2xvps.rs:4:5\n\
    \  |\n4 |     n as isize\n  |     ^^^^^^^^^^\n  |\nhelp: try surrounding the expression\
    \ in parentheses\n  |\n4 |     (n as isize)\n  |     +          +\n\nerror[E0599]:\
    \ no method named `checked_div` found for enum `Option` in the current scope\n\
    \ --> /tmp/tmpcbp2xvps.rs:6:10\n  |\n6 |         .checked_div(10_usize as isize)\n\
    \  |          ^^^^^^^^^^^ method not found in `Option<isize>`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 { return 1 }\n    if n >= 10 && n % 10 == 1 {\n  \
    \      10\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp5l_4t1zg.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    loop {\n        // `n % 10` checks the last digit.\n       \
    \ if n % 10 == 1 && n % 100 != 11 {\n            return n - 1;\n        }\n\n\
    \        if n <= 0 {\n            return 0;\n        }\n\n        n /= 10;\n \
    \   }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpc_e2ftmd.rs:14:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n14 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut counter = 0;\n    while n > 1 {\n        if n % 10 ==\
    \ 1 {\n            n /= 10;\n            counter += 1;\n        } else {\n   \
    \         n = 10;\n        }\n    }\n    counter\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpmqgil7xj.rs:7:13\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |             n /= 10;\n\
    \  |             ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]:\
    \ cannot assign to immutable argument `n`\n  --> /tmp/tmpmqgil7xj.rs:10:13\n \
    \  |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |             n\
    \ = 10;\n   |             ^^^^^^ cannot assign to immutable argument\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut i = n - 1;\n    let mut cnt = 0;\n    while i >= 0 {\n\
    \        if n % i == 1 {\n            cnt += 1;\n        }\n        i -= 1;\n\
    \    }\n    cnt\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpeq951svp.rs:7:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return 0;\n    }\n    if n % 2 == 0 {\n\
    \        n / 2\n    } else {\n        ((n + 1) / 2) - 2\n    }\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp8oyzv8mk.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    let mut n1 = 1;\n\
    \    let mut count = 0;\n    while n1 < n {\n        if n % n1 == 0 {\n      \
    \      count += 1;\n        }\n        n1 += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpm5e276bk.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut nums = vec![Vec::new(); n];\n    let mut cnt = 0;\n\
    \    let mut i = 0;\n    while i < n {\n        if nums[i] != vec![0; nums[i].len()]\
    \ {\n            cnt += 1;\n        }\n        if nums[i][i] == 1 {\n        \
    \    i += 1;\n        } else {\n            i += 2;\n        }\n    }\n    cnt\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpiv47y_2l.rs:4:37\n  |\n4 |\
    \     let mut nums = vec![Vec::new(); n];\n  |                               \
    \      ^ expected `usize`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `usize` and panic if the converted value doesn't fit\n  |\n4 |     let\
    \ mut nums = vec![Vec::new(); n.try_into().unwrap()];\n  |                   \
    \                   ++++++++++++++++++++\n\nerror[E0277]: the type `[Vec<_>]`\
    \ cannot be indexed by `isize`\n --> /tmp/tmpiv47y_2l.rs:8:12\n  |\n8 |      \
    \   if nums[i] != vec![0; nums[i].len()] {\n  |            ^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[Vec<_>]>`\
    \ is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<Vec<_>>`\n\nerror[E0277]: the type `[Vec<_>]` cannot be indexed by\
    \ `isize`\n --> /tmp/tmpiv47y_2l.rs:8:31\n  |\n8 |         if nums[i] != vec![0;\
    \ nums[i].len()] {\n  |                               ^^^^^^^ slice indices are\
    \ of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[Vec<_>]>`\
    \ is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<Vec<_>>`\n\nerror[E0277]: the type `[Vec<_>]` cannot be indexed by\
    \ `isize`\n  --> /tmp/tmpiv47y_2l.rs:11:12\n   |\n11 |         if nums[i][i] ==\
    \ 1 {\n   |            ^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n   |\n   = help: the trait `SliceIndex<[Vec<_>]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<Vec<_>>`\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0308.\nFor more information about an error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match (n % 10, n / 10) {\n        (0, 0) => 0,\n        (0,\
    \ _) => 1,\n        (10, n) => n,\n        (n, 10) => n,\n        _ => panic!(),\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''explicit panic'', /tmp/tmpxjyz0kfx.rs:9:14

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    n / 10 + 1\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpuyqrwxwf.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"counting_digits: negative n!\"\
    );\n    }\n\n    let mut ns: Vec<_> = vec![n];\n    for i in 1..n {\n        if\
    \ ns[i - 1] == 1 {\n            ns.par_iter().skip(i - 1).count().unwrap()\n \
    \       } else {\n            0\n        }\n    }\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmpuyms4w5t.rs:10:12\n\
    \   |\n10 |         if ns[i - 1] == 1 {\n   |            ^^^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0599]: no method named `par_iter`\
    \ found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmpuyms4w5t.rs:11:16\n\
    \   |\n11 |             ns.par_iter().skip(i - 1).count().unwrap()\n   |     \
    \           ^^^^^^^^ help: there is an associated function with a similar name:\
    \ `iter`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpuyms4w5t.rs:13:13\n\
    \   |\n10 | /         if ns[i - 1] == 1 {\n11 | |             ns.par_iter().skip(i\
    \ - 1).count().unwrap()\n12 | |         } else {\n13 | |             0\n   | |\
    \             ^ expected `()`, found integer\n14 | |         }\n   | |_________-\
    \ expected this to be `()`\n   |\nhelp: you might have meant to return this value\n\
    \   |\n13 |             return 0;\n   |             ++++++  +\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpuyms4w5t.rs:9:5\n   |\n3  |   fn starts_one_ends(n:\
    \ isize) -> isize {\n   |                                   ----- expected `isize`\
    \ because of return type\n...\n9  | /     for i in 1..n {\n10 | |         if ns[i\
    \ - 1] == 1 {\n11 | |             ns.par_iter().skip(i - 1).count().unwrap()\n\
    12 | |         } else {\n13 | |             0\n14 | |         }\n15 | |     }\n\
    \   | |_____^ expected `isize`, found `()`\n\nerror: aborting due to 4 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor\
    \ more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n + 1 - (n%10)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmprpvaorhg.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 || n <= 1 { return 0; }\n\n    let mut count = 0;\n\
    \    loop {\n        if n % 10 == 1 {\n            count += 1;\n            n\
    \ /= 10;\n        } else {\n            break;\n        }\n    }\n\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpky2ym9j8.rs:10:13\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |             n\
    \ /= 10;\n   |             ^^^^^^^ cannot assign to immutable argument\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match (n - 1).checked_div(10) {\n        Some(x) => 10 * x +\
    \ 1,\n        None => n\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpuubcxjpw.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n as isize)\n        .checked_div_rem(&one::one().num_digits())\n\
    \        .expect(\"n must divide one\")\n        .num()\n}\n\nfn main() {\n  \
    \  let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `one`\n\
    \ --> /tmp/tmpjk96i64d.rs:5:27\n  |\n5 |         .checked_div_rem(&one::one().num_digits())\n\
    \  |                           ^^^ use of undeclared crate or module `one`\n\n\
    error[E0599]: no method named `checked_div_rem` found for type `isize` in the\
    \ current scope\n --> /tmp/tmpjk96i64d.rs:5:10\n  |\n5 |         .checked_div_rem(&one::one().num_digits())\n\
    \  |          ^^^^^^^^^^^^^^^ help: there is an associated function with a similar\
    \ name: `checked_div`\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0433, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n.checked_mul(10_usize)\n        .checked_mul(10_usize)\n  \
    \      .expect(\"Overflow\")\n        .into()\n        .unwrap()\n        .count_digits(10)\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpq415gg2s.rs:4:19\n  |\n4 |\
    \     n.checked_mul(10_usize)\n  |                   ^^^^^^^^ expected `isize`,\
    \ found `usize`\n  |\nhelp: change the type of the numeric literal from `usize`\
    \ to `isize`\n  |\n4 |     n.checked_mul(10_isize)\n  |                      ~~~~~\n\
    \nerror[E0599]: no method named `checked_mul` found for enum `Option` in the current\
    \ scope\n --> /tmp/tmpq415gg2s.rs:5:10\n  |\n5 |         .checked_mul(10_usize)\n\
    \  |          ^^^^^^^^^^^ method not found in `Option<isize>`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut result = 1; // start counting at 1\n    let mut counter\
    \ = 0;\n    let mut pos = 1;\n    while pos < n {\n        if pos == n {\n   \
    \         counter += n - 1;\n        } else if pos == 1 {\n            counter\
    \ += 1;\n        } else {\n            counter += 1;\n        }\n        pos +=\
    \ 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpbqds9c6k.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut cnt = 0;\n    for i in 1..n {\n        if n == i {\n\
    \            cnt += 1;\n            continue;\n        }\n        if n == i %\
    \ 10 {\n            cnt += 1;\n            continue;\n        }\n        cnt +=\
    \ 2;\n    }\n    cnt\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpwz79wri7.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    assert!(n >= 0);\n\n    loop {\n        // The number of consecutive\
    \ ones in a positive number that starts\n        // with 1 is just the count of\
    \ leading zeros.\n        if n > 1 {\n            n -= 1;\n            n & 1 ==\
    \ 0\n        } else {\n            return n;\n        }\n    }\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpqp_e2ord.rs:11:13\n   |\n\
    9  | /         if n > 1 {\n10 | |             n -= 1;\n11 | |             n &\
    \ 1 == 0\n   | |             ^^^^^^^^^^ expected `()`, found `bool`\n12 | |  \
    \       } else {\n13 | |             return n;\n14 | |         }\n   | |     \
    \    -- help: consider using a semicolon here\n   | |_________|\n   |        \
    \   expected this to be `()`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 1);\n    (1..=n).filter(|x| x.is_power_of_two()\
    \ && x.leading_zeros() == 0).count()\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_power_of_two` found for reference `&isize`\
    \ in the current scope\n --> /tmp/tmp1ysgvovq.rs:5:26\n  |\n5 |     (1..=n).filter(|x|\
    \ x.is_power_of_two() && x.leading_zeros() == 0).count()\n  |                \
    \          ^^^^^^^^^^^^^^^ method not found in `&isize`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp1ysgvovq.rs:5:5\n  |\n3 | fn starts_one_ends(n: isize) ->\
    \ isize {\n  |                                 ----- expected `isize` because\
    \ of return type\n4 |     debug_assert!(n >= 1);\n5 |     (1..=n).filter(|x| x.is_power_of_two()\
    \ && x.leading_zeros() == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n5 |     (1..=n).filter(|x|\
    \ x.is_power_of_two() && x.leading_zeros() == 0).count().try_into().unwrap()\n\
    \  |                                                                         \
    \     ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\nSome\
    \ errors have detailed explanations: E0308, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n\n    let mut cnt: isize\
    \ = 0;\n    cnt += n / 10;\n    cnt += n % 10 == 1;\n    cnt\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot add-assign `bool` to `isize`\n  --> /tmp/tmp3y2m209z.rs:10:9\n\
    \   |\n10 |     cnt += n % 10 == 1;\n   |         ^^ no implementation for `isize\
    \ += bool`\n   |\n   = help: the trait `AddAssign<bool>` is not implemented for\
    \ `isize`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n    \
    \         <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n        \
    \     <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n         \
    \    <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and\
    \ 20 others\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    loop {\n        count += n / 10;\n \
    \       n %= 10;\n        if n == 0 { break; }\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmplgqayexo.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n %= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // we start with 0 because the first element of the array is\
    \ a 1.\n    let mut count = 0;\n    for i in 0..n {\n        if i / 10 == 1 {\n\
    \            count += 1;\n        }\n    }\n    return count\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpvm3756um.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut cnt = 0;\n    for &digit in &n.to_string() {\n     \
    \   if digit == '1' {\n            cnt += 1;\n        }\n    }\n    cnt\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: `&String` is not an iterator\n --> /tmp/tmpap3mbbps.rs:5:19\n\
    \  |\n5 |     for &digit in &n.to_string() {\n  |                   ^^^^^^^^^^^^^^\
    \ `&String` is not an iterator\n  |\n  = help: the trait `Iterator` is not implemented\
    \ for `&String`\n  = note: required because of the requirements on the impl of\
    \ `IntoIterator` for `&String`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 2 {\n        0\n    } else {\n        (n - 1) * (n -\
    \ 1) / 2.0 + 1\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `isize` by `{float}`\n --> /tmp/tmpmou4rfv1.rs:7:27\n\
    \  |\n7 |         (n - 1) * (n - 1) / 2.0 + 1\n  |                           ^\
    \ no implementation for `isize / {float}`\n  |\n  = help: the trait `Div<{float}>`\
    \ is not implemented for `isize`\n  = help: the following other types implement\
    \ trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n            <&'a f64 as\
    \ Div<f64>>\n            <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n\
    \            <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n      \
    \      <&'a i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and\
    \ 54 others\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    use std::cmp::Ordering;\n    let mut count = 0;\n    while n\
    \ > 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n      \
    \  n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: unused import: `std::cmp::Ordering`\n --> /tmp/tmpwphut2k3.rs:4:9\n\
    \  |\n4 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpwphut2k3.rs:10:9\n   |\n3  | fn starts_one_ends(n:\
    \ isize) -> isize {\n   |                    - help: consider making this binding\
    \ mutable: `mut n`\n...\n10 |         n /= 10;\n   |         ^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error; 1 warning emitted\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut cnt = 0;\n    while n / 10 != 0 {\n        if n % 10\
    \ == 1 {\n            cnt += 1;\n        }\n        n /= 10;\n    }\n    cnt\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp3yrcuybj.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut cnt: isize = 0;\n    while n >= 10 {\n        cnt +=\
    \ ((n % 10) == 1);\n        n /= 10;\n    }\n    cnt\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "warning: unnecessary parentheses around assigned value\n --> /tmp/tmpjv2z8h5q.rs:6:16\n\
    \  |\n6 |         cnt += ((n % 10) == 1);\n  |                ^             ^\n\
    \  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n\
    \  |\n6 -         cnt += ((n % 10) == 1);\n6 +         cnt += (n % 10) == 1;\n\
    \  | \n\nerror[E0277]: cannot add-assign `bool` to `isize`\n --> /tmp/tmpjv2z8h5q.rs:6:13\n\
    \  |\n6 |         cnt += ((n % 10) == 1);\n  |             ^^ no implementation\
    \ for `isize += bool`\n  |\n  = help: the trait `AddAssign<bool>` is not implemented\
    \ for `isize`\n  = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \            <f32 as AddAssign<&f32>>\n            <f32 as AddAssign>\n      \
    \      <f64 as AddAssign<&f64>>\n            <f64 as AddAssign>\n            <i128\
    \ as AddAssign<&i128>>\n            <i128 as AddAssign>\n            <i16 as AddAssign<&i16>>\n\
    \            <i16 as AddAssign>\n          and 20 others\n\nerror: aborting due\
    \ to previous error; 1 warning emitted\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    assert!(n > 0);\n    let mut count = 0\n    if n == 1 {\n  \
    \      count += 1;\n    }\n    else {\n        let mut i = 1;\n        while i\
    \ <= n {\n            if n % i == 0 {\n                count += 1;\n         \
    \   }\n            i += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n  \
    \  let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found keyword `if`\n --> /tmp/tmpuzllaitv.rs:5:22\n\
    \  |\n5 |     let mut count = 0\n  |                      ^ help: add `;` here\n\
    6 |     if n == 1 {\n  |     -- unexpected token\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n&1 == 0 {\n        n / 2\n    } else {\n        n\n    }\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp2aad7fih.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 1 {\n        count += 1;\n\
    \        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp2ito0ymp.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // n! / ((n - 1) * (n - 2) * ... * (n - n - 1) + 1)\n    n.checked_div(n).expect(\"\
    n must be positive\")\n        .checked_mul(n.checked_sub((n - 1) as isize).expect(\"\
    n must be positive\"))\n        .expect(\"n must be a power of two\")\n      \
    \  .checked_add((n - 1) as isize)\n        .expect(\"n must be a power of two\"\
    )\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpr3ex_l__.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n >= 10 {\n        // Skip leading\
    \ 1's.\n        if n >= 1 && !n % 10 {\n            n /= 10;\n            count\
    \ += 1;\n        }\n\n        // Skip trailing 1's.\n        if n >= 1 && (n %\
    \ 10) == 0 {\n            n /= 10;\n            count += 1;\n        }\n    }\n\
    \    n\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpup32n6k2.rs:7:22\n  |\n7 |\
    \         if n >= 1 && !n % 10 {\n  |                      ^^^^^^^ expected `bool`,\
    \ found `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 || n&1 == 0 {\n        return n;\n    }\n    \n  \
    \  let mut count = 0;\n    loop {\n        count += count_n_digits(&n, 1);\n \
    \       n /= 10;\n        if n == 1 {\n            break;\n        }\n    }\n\
    \    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `count_n_digits` in this scope\n  -->\
    \ /tmp/tmp18jmniux.rs:10:18\n   |\n10 |         count += count_n_digits(&n, 1);\n\
    \   |                  ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // Count how many numbers of n-digit numbers that start with\
    \ 1\n    // (excluding the n+1th number, which is always 1)\n    (1..n).filter(|&i|\
    \ i % 10 == 1).count() + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp__cn2k3m.rs:6:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n...\n6 |     (1..n).filter(|&i|\
    \ i % 10 == 1).count() + 1\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n6 |     ((1..n).filter(|&i|\
    \ i % 10 == 1).count() + 1).try_into().unwrap()\n  |     +                   \
    \                        +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 { return\
    \ 1; }\n    if n == 1 { return 1; }\n    if n <= 9 { return 1; }\n    let mut\
    \ count = 1;\n    while n / 10 != 0 {\n        count += 1;\n        n /= 10;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpiqkug1dm.rs:13:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n13 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n as usize).checked_mul(usize::MAX)\n        .filter(|&n| n.is_positive())\n\
    \        .filter(|&n| n % 10 == 1)\n        .count()\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_positive` found for type `usize` in the\
    \ current scope\n --> /tmp/tmp5_v4t3ki.rs:5:24\n  |\n5 |         .filter(|&n|\
    \ n.is_positive())\n  |                        ^^^^^^^^^^^ method not found in\
    \ `usize`\n\nerror[E0599]: `Option<usize>` is not an iterator\n   --> /tmp/tmp5_v4t3ki.rs:7:10\n\
    \    |\n7   |           .count()\n    |            ^^^^^ `Option<usize>` is not\
    \ an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n\
    \            `Option<usize>: Iterator`\n            which is required by `&mut\
    \ Option<usize>: Iterator`\n\nerror: aborting due to 2 previous errors\n\nFor\
    \ more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n.checked_mul(10_isize).expect(\"overflow on multiplication\"\
    )\n        .checked_div(10).expect(\"divide by zero on division\")\n        .checked_add(1)\n\
    \        .expect(\"underflow on addition\")\n        .checked_sub(10_isize)\n\
    \        .expect(\"underflow on subtraction\")\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-8`,\n right: `1`', /tmp/tmp_c6z_5na.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|&n| n % 10 == 1).count() - 1\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpee224z8l.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..n).filter(|&n| n\
    \ % 10 == 1).count() - 1\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n4 |     ((1..n).filter(|&n|\
    \ n % 10 == 1).count() - 1).try_into().unwrap()\n  |     +                   \
    \                        +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // Find the first number with only 1 and subtract 1\n    //\
    \ from the starting point.  Then repeat until the first number\n    // with only\
    \ 1 is found.\n    let mut start = 1;\n    let mut found = false;\n    while !found\
    \ && start <= n {\n        start += 1;\n        if n%start != 1 {\n          \
    \  found = true;\n        }\n    }\n    let mut end = start as isize;\n    while\
    \ found && end <= n {\n        end += 1;\n        if n%end != 1 {\n          \
    \  found = false;\n        }\n    }\n    end - start + 1\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpw5ydu5sm.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 { 1 } else { 1 + starts_one_ends(n - 1) }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp6mgvomq8.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 { 1 } else { starts_one_ends(n - 1) + 1 }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp65qxysf2.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!((n as usize) > 0);\n    if n <= 32 {\n       \
    \ return n;\n    }\n    if n%32 == 0 {\n        return n/32;\n    }\n    if n%32\
    \ == 1 {\n        return 3*n + 1;\n    }\n    let mut cnt: isize = 0;\n    while\
    \ n > 32 {\n        cnt += n & 31;\n        n >>= 1;\n    }\n    cnt\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpb7nyqhhl.rs:17:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n17 |         n >>=\
    \ 1;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 0,\n        _ if n < 10 => n,\n    \
    \    _ if n < 100 => 1,\n        _ if n < 1000 => 2,\n        _ if n < 10000 =>\
    \ 3,\n        _ if n < 100000 => 4,\n        _ if n < 1000000 => 5,\n        _\
    \ if n < 10000000 => 6,\n        _ if n < 100000000 => 7,\n        _ if n < 1000000000\
    \ => 8,\n        _ if n < 10000000000 => 9,\n        _ => 10,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpfctk60__.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        count += n %\
    \ 10;\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpnc_xgrkg.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut counter = 0;\n    while n != 1 {\n        if n%10 ==\
    \ 1 {\n            counter++;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n --> /tmp/tmps6c6czzw.rs:7:20\n\
    \  |\n7 |             counter++;\n  |                    ^^ not a valid postfix\
    \ operator\n  |\nhelp: use `+= 1` instead\n  |\n7 |             { let tmp = counter;\
    \ counter += 1; tmp };\n  |             +++++++++++        ~~~~~~~~~~~~~~~~~~~~~\n\
    7 -             counter++;\n7 +             counter += 1;\n  | \n\nerror: aborting\
    \ due to previous error\n\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n == 0 || n > 0);\n\n    n as usize + starts_one_ends(n\
    \ - 1) as usize\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbultsgwv.rs:6:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n...\n6 |     n as usize + starts_one_ends(n\
    \ - 1) as usize\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n6 |     (n as usize + starts_one_ends(n\
    \ - 1) as usize).try_into().unwrap()\n  |     +                              \
    \              +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    fn loop(i: isize) -> isize {\n        if n % i == 1 {\n    \
    \        return 1 + loop(i + 1);\n        } else {\n            return 0;\n  \
    \      }\n    }\n\n    loop(n)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found keyword `loop`\n --> /tmp/tmp2un2qs43.rs:4:8\n\
    \  |\n4 |     fn loop(i: isize) -> isize {\n  |        ^^^^ expected identifier,\
    \ found keyword\n  |\nhelp: escape `loop` to use it as an identifier\n  |\n4 |\
    \     fn r#loop(i: isize) -> isize {\n  |        ++\n\nerror: expected `{`, found\
    \ `(`\n --> /tmp/tmp2un2qs43.rs:6:28\n  |\n6 |             return 1 + loop(i +\
    \ 1);\n  |                        ----^ expected `{`\n  |                    \
    \    |\n  |                        while parsing this `loop` expression\n  |\n\
    help: try placing this code inside a block\n  |\n6 |             return 1 + loop{\
    \ (i + 1) };\n  |                            +         +\n\nerror: expected `{`,\
    \ found `(`\n  --> /tmp/tmp2un2qs43.rs:12:9\n   |\n12 |     loop(n)\n   |    \
    \ ----^ expected `{`\n   |     |\n   |     while parsing this `loop` expression\n\
    \   |\nhelp: try placing this code inside a block\n   |\n12 |     loop{ (n) }\n\
    \   |         +     +\n\nerror[E0434]: can't capture dynamic environment in a\
    \ fn item\n --> /tmp/tmp2un2qs43.rs:5:12\n  |\n5 |         if n % i == 1 {\n \
    \ |            ^\n  |\n  = help: use the `|| { ... }` closure form instead\n\n\
    error: aborting due to 4 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0434`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n % 10 {\n        0 => n,\n        1 => n + 1,\n     \
    \   _ => n,\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpcypzr_31.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        if i % 10 ==\
    \ 1 {\n            count += 1;\n            if i % 100 == 0 {\n              \
    \  count += 1;\n                if i % 1000 == 0 {\n                    count\
    \ += 1;\n                }\n            }\n        }\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpwum_glld.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        0\n    }\n    else if n == 0 {\n       \
    \ 1\n    }\n    else {\n        (n - 1) * starts_one_ends(n - 1) + 1\n    }\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp9vs4q4p0.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count: isize = 0;\n    for i in 1..=n {\n        if\
    \ n % i == 1 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpydocpj_v.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        return 0\n    }\n\n    let mut n1 = n -\
    \ 1;\n    let mut n2 = n - 2;\n\n    while n1 > 0 && n2 > 0 {\n        match n1&n2\
    \ {\n            0 => n2 -= 1,\n            _ => break,\n        }\n        n1\
    \ -= 1;\n        n2 -= 1;\n    }\n\n    n1 as isize\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpawjqd6bv.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|i| i & 1 == 1).count()\n}\n\nfn main() {\n  \
    \  let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7rlvlg29.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..n).filter(|i| i\
    \ & 1 == 1).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n  |\n4 |     (1..n).filter(|i| i & 1 ==\
    \ 1).count().try_into().unwrap()\n  |                                        \
    \  ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n * (n+1) / 2 - 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-1`,\n right: `1`', /tmp/tmpjohva25o.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut nn = n;\n    while nn > 0 {\n        nn--;\n       \
    \ if *n % 10 == 1 { return 1; }\n    }\n    0\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `;`\n --> /tmp/tmp0hy1h94y.rs:6:13\n\
    \  |\n6 |         nn--;\n  |             ^ expected expression\n\nerror: aborting\
    \ due to previous error\n\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n * (n / 10) + n\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp7nr5gq8m.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut start = false;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            if !start {\n                start\
    \ = true;\n            } else {\n                count += 1;\n            }\n\
    \        }\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpe3mvk0t0.rs:14:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n14 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i <= n {\n        if i == 1:\n            count\
    \ += 1;\n        }\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: unexpected closing delimiter: `}`\n  --> /tmp/tmpj94augs5.rs:16:1\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    \
    \                   - this opening brace...\n...\n14 |     }\n   |     - ...matches\
    \ this closing brace\n15 |     count\n16 | }\n   | ^ unexpected closing delimiter\n\
    \nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpkhap7q87.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013023
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|&i| i & 1 != 0).count()\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp50dl0dyg.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..n).filter(|&i| i\
    \ & 1 != 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n  |\n4 |     (1..n).filter(|&i| i & 1 !=\
    \ 0).count().try_into().unwrap()\n  |                                        \
    \   ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n\n        .checked_add(1)\n        .and_then_checked_add((n\
    \ / 10).and_then(|x| x.checked_add(1)))\n        .and_then_checked_add((n % 10).and_then(|x|\
    \ x.checked_add(1)))\n        .unwrap()\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `and_then_checked_add` found for enum `Option`\
    \ in the current scope\n --> /tmp/tmpt6460s0g.rs:6:10\n  |\n6 |         .and_then_checked_add((n\
    \ / 10).and_then(|x| x.checked_add(1)))\n  |          ^^^^^^^^^^^^^^^^^^^^ method\
    \ not found in `Option<isize>`\n\nerror[E0599]: no method named `and_then` found\
    \ for type `isize` in the current scope\n --> /tmp/tmpt6460s0g.rs:6:40\n  |\n\
    6 |         .and_then_checked_add((n / 10).and_then(|x| x.checked_add(1)))\n \
    \ |                                        ^^^^^^^^ method not found in `isize`\n\
    \nerror[E0599]: no method named `and_then` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpt6460s0g.rs:7:40\n  |\n7 |         .and_then_checked_add((n\
    \ % 10).and_then(|x| x.checked_add(1)))\n  |                                 \
    \       ^^^^^^^^ method not found in `isize`\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => 0..(n*10).floor() as\
    \ isize\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp5_3ritya.rs:6:24\n  |\n6 |         _ => 0..(n*10).floor()\
    \ as isize\n  |                        ^^^^^ help: there is an associated function\
    \ with a similar name: `div_floor`\n\nerror[E0308]: `match` arms have incompatible\
    \ types\n --> /tmp/tmp5_3ritya.rs:6:14\n  |\n4 | /     match n {\n5 | |      \
    \   1 => 1,\n  | |              - this is found to be of type `isize`\n6 | | \
    \        _ => 0..(n*10).floor() as isize\n  | |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found struct `std::ops::Range`\n7 | |     }\n  | |_____- `match`\
    \ arms have incompatible types\n  |\n  = note: expected type `isize`\n       \
    \    found struct `std::ops::Range<{integer}>`\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n % 10 == 1);\n\n    let n = n as isize;\n   \
    \ let mut count = 0;\n    let mut limit = std::mem::size_of::<usize>() * 2;\n\
    \    while n >= limit*2 {\n        count += std::mem::size_of::<usize>() * 2;\n\
    \        n -= std::mem::size_of::<usize>() * 2;\n    }\n    count += std::mem::size_of::<usize>()\
    \ * 2;\n\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgprkd9_3.rs:9:16\n  |\n9 |\
    \     while n >= limit*2 {\n  |                ^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n9 |     while n >= (limit*2).try_into().unwrap()\
    \ {\n  |                +       +++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpgprkd9_3.rs:11:14\n   |\n11 |         n -= std::mem::size_of::<usize>()\
    \ * 2;\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n\nerror[E0277]: cannot subtract-assign `usize` from `isize`\n  -->\
    \ /tmp/tmpgprkd9_3.rs:11:11\n   |\n11 |         n -= std::mem::size_of::<usize>()\
    \ * 2;\n   |           ^^ no implementation for `isize -= usize`\n   |\n   = help:\
    \ the trait `SubAssign<usize>` is not implemented for `isize`\n   = help: the\
    \ following other types implement trait `SubAssign<Rhs>`:\n             <f32 as\
    \ SubAssign<&f32>>\n             <f32 as SubAssign>\n             <f64 as SubAssign<&f64>>\n\
    \             <f64 as SubAssign>\n             <i128 as SubAssign<&i128>>\n  \
    \           <i128 as SubAssign>\n             <i16 as SubAssign<&i16>>\n     \
    \        <i16 as SubAssign>\n           and 20 others\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpgprkd9_3.rs:15:5\n   |\n3  | fn starts_one_ends(n: isize)\
    \ -> isize {\n   |                                 ----- expected `isize` because\
    \ of return type\n...\n15 |     count\n   |     ^^^^^ expected `isize`, found\
    \ `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n   |\n15 |     count.try_into().unwrap()\n   |\
    \          ++++++++++++++++++++\n\nerror: aborting due to 4 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n % 10 == 0);\n    let mut count = 0;\n    while\
    \ n != 0 {\n        count += n / 10;\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp86qni6ff.rs:8:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n).checked_sub(1).checked_mul((&1).pow(n as usize))\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `checked_mul` found for enum `Option` in\
    \ the current scope\n --> /tmp/tmpo7pwpn3d.rs:4:24\n  |\n4 |     (n).checked_sub(1).checked_mul((&1).pow(n\
    \ as usize))\n  |                        ^^^^^^^^^^^ method not found in `Option<isize>`\n\
    \nerror[E0599]: no method named `pow` found for reference `&{integer}` in the\
    \ current scope\n --> /tmp/tmpo7pwpn3d.rs:4:41\n  |\n4 |     (n).checked_sub(1).checked_mul((&1).pow(n\
    \ as usize))\n  |                                         ^^^ method not found\
    \ in `&{integer}`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n\n    while n >= 10 {\n        if n % 10\
    \ == 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmppm6dyl54.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 1 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        } else {\n            break;\n       \
    \ }\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpcjg7m9on.rs:11:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n11 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n + 1) / 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpiax03dsn.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    let mut n = n as usize;\n    while n > 0 {\n        if n % 10 == 1 {\n  \
    \          count += 1;\n        }\n        n /= 10;\n    }\n    return count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp55e3ist5.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // Our \"digits\" are numbers from 1 to n-1.\n    let digits\
    \ = (0..n-1).collect::<Vec<_>>();\n    let mut count = 0;\n\n    // Check each\
    \ combination of numbers from 0 to n-1.\n    for digit in 0..digits.len() {\n\
    \        // Add 1 to a digit to identify the numbers that start or end with 1.\n\
    \        let digit = digit + 1;\n\n        // Add 1 to the count of each combination\
    \ of numbers from 0 to\n        // the digit of the number in question.\n    \
    \    for r in 0..digit {\n            count += digits[r];\n        }\n    }\n\n\
    \    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmplrd70xm6.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => n * (n + 1) / 2,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `18`', /tmp/tmpdh82tn5k.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n as usize - 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpnlo7r_cg.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     n as usize - 1\n  |\
    \     ^^^^^^^^^^^^^^ expected `isize`, found `usize`\n  |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n  |\n\
    4 |     (n as usize - 1).try_into().unwrap()\n  |     +              +++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 || n == 1 {\n        return 1;\n    }\n\n    let mut\
    \ c = 0;\n    while n > 0 {\n        if n % 10 == 1 {\n            c += 1;\n \
    \       }\n        n /= 10;\n    }\n    c\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpqp28g8cw.rs:13:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n13 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        let remainder\
    \ = n % 10;\n        if remainder != 1 {\n            break;\n        }\n    \
    \    count += 1;\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpi1z2zg3m.rs:11:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n11 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpdwwrd3cx.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013023
- exit_code: -1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // the base case\n    if n < 1 {\n        return 0;\n    }\n\
    \    // the recursive case\n    if n == 1 {\n        return 1;\n    }\n    //\
    \ the recursive case\n    if starts_one_ends(n - 1) as isize >= n / 2 {\n    \
    \    return starts_one_ends(n - 1) as isize + starts_one_ends(n + 1) as isize;\n\
    \    }\n    starts_one_ends(n - 1) as isize\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660013054
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (n * 12 % 11) % 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpgsce60p8.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..=n).filter(|n| n % 10 == 1).count()\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpelga3y6c.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..=n).filter(|n| n\
    \ % 10 == 1).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n4 |     (1..=n).filter(|n| n\
    \ % 10 == 1).count().try_into().unwrap()\n  |                                \
    \            ++++++++++++++++++++\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).filter(|&d| n % d == 0).count()\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpx0fd82f1.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     (1..n).filter(|&d| n\
    \ % d == 0).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n  |\n4 |     (1..n).filter(|&d| n % d ==\
    \ 0).count().try_into().unwrap()\n  |                                        \
    \   ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n   \
    \     return 1;\n    }\n    n / 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `18`', /tmp/tmpxxelef3n.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n as isize\n        .checked_div_2()\n        .expect(\"n must\
    \ be positive integer that is exactly divisible by two\")\n        .count_range(||\
    \ 1u8)\n        .expect(\"n must be an exact multiple of two\")\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: casts cannot be followed by a method call\n --> /tmp/tmp8qop2d__.rs:4:5\n\
    \  |\n4 |     n as isize\n  |     ^^^^^^^^^^\n  |\nhelp: try surrounding the expression\
    \ in parentheses\n  |\n4 |     (n as isize)\n  |     +          +\n\nerror[E0599]:\
    \ no method named `checked_div_2` found for type `isize` in the current scope\n\
    \ --> /tmp/tmp8qop2d__.rs:5:10\n  |\n5 |         .checked_div_2()\n  |       \
    \   ^^^^^^^^^^^^^ help: there is an associated function with a similar name: `checked_div`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = i;\n    for d in (1..=n).rev() {\n        if\
    \ d % 10 == 1 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `i` in this scope\n --> /tmp/tmpxgte31i7.rs:4:21\n\
    \  |\n4 |     let mut count = i;\n  |                     ^ help: a local variable\
    \ with a similar name exists: `n`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0\n    }\n    if n <= 9 {\n    \
    \    return n\n    }\n    let mut count = 0;\n    n -= 1;\n    for digit in 1..=n\
    \ {\n        let remainder = n % digit;\n        if remainder == 0 {\n       \
    \     count += 1;\n            n /= digit;\n        }\n    }\n    count + 1\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp2x66xsjk.rs:11:5\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n11 |     n -= 1;\n\
    \   |     ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmp2x66xsjk.rs:16:13\n   |\n3  | fn starts_one_ends(n:\
    \ isize) -> isize {\n   |                    - help: consider making this binding\
    \ mutable: `mut n`\n...\n16 |             n /= digit;\n   |             ^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..=n {\n        if i / 2 ==\
    \ 1 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpjtdsxkqe.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    if n == 1 {\n \
    \       return 1;\n    }\n\n    let mut count = 0;\n    let mut current = 1;\n\
    \    let mut prev = 1;\n\n    for i in 1..n {\n        if current % prev == 1\
    \ {\n            count++;\n        }\n\n        prev *= i;\n        current *=\
    \ i;\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmpod5qk6jl.rs:18:18\n\
    \   |\n18 |             count++;\n   |                  ^^ not a valid postfix\
    \ operator\n   |\nhelp: use `+= 1` instead\n   |\n18 |             { let tmp =\
    \ count; count += 1; tmp };\n   |             +++++++++++      ~~~~~~~~~~~~~~~~~~~\n\
    18 -             count++;\n18 +             count += 1;\n   | \n\nerror: aborting\
    \ due to previous error\n\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return 0;\n    }\n    if n % 2 == 1 {\n\
    \        n / 2\n    } else {\n        let mut count = 0;\n        for num in 1..n\
    \ / 2 {\n            if ((num % 2) == 1) {\n                count += 1;\n    \
    \        }\n        }\n        count + n / 2\n    }\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp6s1_0rz1.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => n - starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpc08cnvup.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..=n).count(|&x| {\n        x < 10\n        || (x == 10 &&\
    \ (n % 10 == 1))\n        || (x % 10 == 1 && n < 10)\n    })\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 0 arguments but 1 argument was supplied\n\
    \   --> /tmp/tmpvqwinpgk.rs:4:13\n    |\n4   |       (1..=n).count(|&x| {\n  \
    \  |  _____________^^^^^_-\n    | |             |\n    | |             expected\
    \ 0 arguments\n5   | |         x < 10\n6   | |         || (x == 10 && (n % 10\
    \ == 1))\n7   | |         || (x % 10 == 1 && n < 10)\n8   | |     })\n    | |_____-\
    \ supplied 1 argument\n    |\nnote: associated function defined here\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvqwinpgk.rs:4:5\n  |\n3 |   fn starts_one_ends(n:\
    \ isize) -> isize {\n  |                                   ----- expected `isize`\
    \ because of return type\n4 | /     (1..=n).count(|&x| {\n5 | |         x < 10\n\
    6 | |         || (x == 10 && (n % 10 == 1))\n7 | |         || (x % 10 == 1 &&\
    \ n < 10)\n8 | |     })\n  | |______^ expected `isize`, found `usize`\n  |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n  |\n8 |     }).try_into().unwrap()\n  |       ++++++++++++++++++++\n\n\
    error: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0061, E0308.\nFor more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    if n < 0 {\n        0\n    } else\
    \ {\n        (1..=n).filter(|x| x % 10 == 1).count()\n    }\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpm7u3pfym.rs:8:9\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n...\n8 |         (1..=n).filter(|x|\
    \ x % 10 == 1).count()\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n8 |         (1..=n).filter(|x|\
    \ x % 10 == 1).count().try_into().unwrap()\n  |                              \
    \                  ++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut starts_ends = 0;\n    while n >= 10 && n % 10 == 1 {\n\
    \        starts_ends += 1;\n        n /= 10;\n    }\n    starts_ends\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpal5v6el0.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n % 10 {\n        0 => 0,\n        1 => 1,\n        n\
    \ => n - starts_one_ends(n / 10)\n    }\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp0o1_ansu.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // Find first starting or ending 1\n    let mut last_1 = n -\
    \ 1;\n    while last_1 > 0 && !is_one(last_1) {\n        last_1 -= 1;\n    }\n\
    \    count::<isize, _, _>(&last_1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_one` in this scope\n --> /tmp/tmpiowm1dze.rs:6:26\n\
    \  |\n6 |     while last_1 > 0 && !is_one(last_1) {\n  |                     \
    \     ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `count`\
    \ in this scope\n --> /tmp/tmpiowm1dze.rs:9:5\n  |\n9 |     count::<isize, _,\
    \ _>(&last_1)\n  |     ^^^^^ not found in this scope\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n as usize\n        .checked_add((n - 1) / 2)\n        .unwrap()\n\
    \        .checked_mul(10)\n        .unwrap()\n        .try_into()\n        .unwrap()\n\
    \        .checked_mul(2)\n        .unwrap()\n        .try_into()\n        .unwrap()\n\
    \        .checked_mul(2)\n        .unwrap()\n        .try_into()\n        .unwrap()\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: casts cannot be followed by a method call\n --> /tmp/tmp83p6fq4p.rs:4:5\n\
    \  |\n4 |     n as usize\n  |     ^^^^^^^^^^\n  |\nhelp: try surrounding the expression\
    \ in parentheses\n  |\n4 |     (n as usize)\n  |     +          +\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmp83p6fq4p.rs:5:22\n  |\n5 |         .checked_add((n\
    \ - 1) / 2)\n  |                      ^^^^^^^^^^^ expected `usize`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n  |\n5 |         .checked_add(((n - 1) / 2).try_into().unwrap())\n\
    \  |                      +           +++++++++++++++++++++\n\nerror[E0599]: no\
    \ method named `try_into` found for type `usize` in the current scope\n   -->\
    \ /tmp/tmp83p6fq4p.rs:9:10\n    |\n9   |         .try_into()\n    |          ^^^^^^^^\
    \ method not found in `usize`\n    |\n    = help: items from traits can only be\
    \ used if the trait is in scope\n    = note: 'std::convert::TryInto' is included\
    \ in the prelude starting in Edition 2021\nhelp: the following trait is implemented\
    \ but not in scope; perhaps add a `use` for it:\n    |\n1   | use std::convert::TryInto;\n\
    \    |\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut n1 = n + 1;\n    let mut sum = 0;\n    while n1 > 0\
    \ {\n        let d = n1 % 10;\n        sum += if d > 1 && d <= 9 { 0 } else {\
    \ 1 };\n        n1 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp98faheq6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (1..n).count(|i| i >= n / 10 && i <= (n + 1) / 10)\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 0 arguments but 1 argument was supplied\n\
    \   --> /tmp/tmpzr8tqekg.rs:4:12\n    |\n4   |     (1..n).count(|i| i >= n / 10\
    \ && i <= (n + 1) / 10)\n    |            ^^^^^ ------------------------------------\
    \ supplied 1 argument\n    |            |\n    |            expected 0 arguments\n\
    \    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpzr8tqekg.rs:4:5\n  |\n3 | fn starts_one_ends(n: isize) -> isize\
    \ {\n  |                                 ----- expected `isize` because of return\
    \ type\n4 |     (1..n).count(|i| i >= n / 10 && i <= (n + 1) / 10)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n4 |     (1..n).count(|i|\
    \ i >= n / 10 && i <= (n + 1) / 10).try_into().unwrap()\n  |                 \
    \                                      ++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0061, E0308.\n\
    For more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n\n    if n == 1 {\n \
    \       return 1;\n    }\n\n    // n-1 because we count n itself\n    (n / 10).floor()\
    \ as isize + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp1i2foleg.rs:13:14\n   |\n13 |     (n / 10).floor() as isize\
    \ + 1\n   |              ^^^^^ help: there is an associated function with a similar\
    \ name: `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 10 + (n % 10 == 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot add `bool` to `isize`\n --> /tmp/tmp1f98jnwc.rs:4:12\n\
    \  |\n4 |     n / 10 + (n % 10 == 1)\n  |            ^ no implementation for `isize\
    \ + bool`\n  |\n  = help: the trait `Add<bool>` is not implemented for `isize`\n\
    \  = help: the following other types implement trait `Add<Rhs>`:\n           \
    \ <&'a f32 as Add<f32>>\n            <&'a f64 as Add<f64>>\n            <&'a i128\
    \ as Add<i128>>\n            <&'a i16 as Add<i16>>\n            <&'a i32 as Add<i32>>\n\
    \            <&'a i64 as Add<i64>>\n            <&'a i8 as Add<i8>>\n        \
    \    <&'a isize as Add<isize>>\n          and 48 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        0\n    } else {\n        let mut n_inc\
    \ = n;\n        let mut count = 0;\n        while n_inc != 0 {\n            if\
    \ n_inc % 10 == 1 {\n                count++;\n            }\n            n_inc\
    \ /= 10;\n        }\n        count\n    }\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmpww1qt55d.rs:11:22\n\
    \   |\n11 |                 count++;\n   |                      ^^ not a valid\
    \ postfix operator\n   |\nhelp: use `+= 1` instead\n   |\n11 |               \
    \  { let tmp = count; count += 1; tmp };\n   |                 +++++++++++   \
    \   ~~~~~~~~~~~~~~~~~~~\n11 -                 count++;\n11 +                 count\
    \ += 1;\n   | \n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 { 1 }\n    else {\n        starts_one_ends(n - 1)\
    \ + 1 + ends_one_starts(n)\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `ends_one_starts` in this scope\n -->\
    \ /tmp/tmpo0f374so.rs:6:38\n  |\n6 |         starts_one_ends(n - 1) + 1 + ends_one_starts(n)\n\
    \  |                                      ^^^^^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    loop {\n        if n % 10 == 1 && n > 0 {\n            return\
    \ n;\n        }\n        n /= 10;\n    }\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpgyu0uh5x.rs:8:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 { return 0; }\n    loop {\n        if n % 10 == 1\
    \ {\n            n /= 10;\n            return n + 1;\n        }\n        n /=\
    \ 10;\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp9xgmoqc9.rs:7:13\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |             n /= 10;\n\
    \  |             ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]:\
    \ cannot assign to immutable argument `n`\n  --> /tmp/tmp9xgmoqc9.rs:10:9\n  \
    \ |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n10 |         n /= 10;\n\
    \   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut sum = 0;\n    for i in 1..=n {\n        if i % 2 ==\
    \ 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n  \
    \  let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp58zf5_62.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 { return 0; }\n    if n < 10 { return 1; }\n    if\
    \ n % 10 == 1 && n % 100 != 11 {\n        return 1 + starts_one_ends(n-1);\n \
    \   }\n    1 + starts_one_ends(n-1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpalq_mcj4.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n as usize\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4_czjs26.rs:4:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n4 |     n as usize\n  |    \
    \ ^^^^^^^^^^ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize`\
    \ to an `isize` and panic if the converted value doesn't fit\n  |\n4 |     (n\
    \ as usize).try_into().unwrap()\n  |     +          +++++++++++++++++++++\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1\n    }\n    if n == 0 {\n    \
    \    return 0\n    }\n\n    let mut sum = 0;\n    let mut cur = 1;\n    for _\
    \ in 0..(n/2) {\n        sum += cur;\n        cur += 1;\n    }\n\n    sum + starts_one_ends(n-1)\
    \ + ends_one_starts(n-2)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `ends_one_starts` in this scope\n  -->\
    \ /tmp/tmpvujkvy94.rs:18:34\n   |\n18 |     sum + starts_one_ends(n-1) + ends_one_starts(n-2)\n\
    \   |                                  ^^^^^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    fn count(a: isize, b: isize) -> isize {\n        if b < a {\
    \ b + 1 } else { a }\n    }\n\n    count(n, n + 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmppy5d4m3g.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n > 0 {\n        starts_one_ends(n - 1) + 1\n    } else if\
    \ n < 0 {\n        starts_one_ends(-n - 1) as isize\n    } else {\n        0\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpq4rwp054.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for (i, &b) in n.iter().enumerate()\
    \ {\n        if b == 1 {\n            count += 1;\n        } else if b == 0 {\n\
    \            if (i > 0 && n == n - i - 1)\n                || (i < n.len() - 1\
    \ && n == n + i - 1)\n            {\n                count += 1;\n           \
    \ }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpyp79t4lp.rs:5:22\n  |\n5 |     for (i, &b) in n.iter().enumerate()\
    \ {\n  |                      ^^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `len` found for type `isize` in the current scope\n  --> /tmp/tmpyp79t4lp.rs:10:27\n\
    \   |\n10 |                 || (i < n.len() - 1 && n == n + i - 1)\n   |     \
    \                      ^^^ method not found in `isize`\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660013048
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n\n    if n < 10 {\n  \
    \      return 1;\n    }\n\n    let mut n1 = 1;\n    n1 += 1;\n    while n1 < n\
    \ {\n        n1 += 1;\n    }\n\n    let mut n2 = n - 1;\n    n2 += 1;\n    while\
    \ n2 < n {\n        n2 += 1;\n    }\n\n    n1 * n2 - n + 1\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpq7obis8o.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660013049
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    loop {\n        let next_n = next_digit(n);\n        if n <\
    \ next_n {\n            return 0;\n        }\n        if n == next_n {\n     \
    \       return 1;\n        }\n        n -= next_n;\n    }\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `next_digit` in this scope\n --> /tmp/tmp6j_vcgf3.rs:5:22\n\
    \  |\n5 |         let next_n = next_digit(n);\n  |                      ^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660013048

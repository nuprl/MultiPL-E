language: rs
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // base cases\n\
    \    if n <= 1 {\n        return n;\n    }\n    if n == 2 {\n        return 1;\n\
    \    }\n\n    // recursive cases\n    let mut a = 1;\n    let mut b = 1;\n   \
    \ for i in 1..n {\n        let t = a + b;\n        a = b;\n        b = t;\n  \
    \  }\n\n    return a;\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a = 1;\n\
    \    let mut b = 1;\n    while n > 0 {\n        let next = a + b;\n        a =\
    \ b;\n        b = next;\n        n -= 1;\n    }\n    b\n}\n\nfn main() {\n   \
    \ let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp_hgrrviq.rs:15:9\n\
    \   |\n8  | fn fib(n: isize) -> isize {\n   |        - help: consider making this\
    \ binding mutable: `mut n`\n...\n15 |         n -= 1;\n   |         ^^^^^^ cannot\
    \ assign to immutable argument\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    if n == 2 {\n        return 1;\n    }\n\n    let\
    \ mut a = 1; // a^2 + b^2 = c^2\n    let mut b = 1; // b^2 + c^2 = a^2 + b^2\n\
    \    for i in 0..(n-2) {\n        let c = (a * b + b * c);\n        a = b;\n \
    \       b = c;\n    }\n    return a;\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `c` in this scope\n  --> /tmp/tmp9u2nxyb3.rs:20:30\n\
    \   |\n20 |         let c = (a * b + b * c);\n   |                           \
    \   ^ help: a local variable with a similar name exists: `a`\n\nwarning: unnecessary\
    \ parentheses around assigned value\n  --> /tmp/tmp9u2nxyb3.rs:20:17\n   |\n20\
    \ |         let c = (a * b + b * c);\n   |                 ^             ^\n \
    \  |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n\
    \   |\n20 -         let c = (a * b + b * c);\n20 +         let c = a * b + b *\
    \ c;\n   | \n\nerror: aborting due to previous error; 1 warning emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 0 {\n\
    \        return 0;\n    }\n    fib(n).clone()\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028163
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 0 {\n \
    \       return -1;\n    }\n\n    let mut a: isize = 1;\n    let mut b: isize =\
    \ 1;\n    let mut c: isize = 0;\n    while c < n {\n        c = a + b;\n     \
    \   a = b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `55`', /tmp/tmp8nxnzd2h.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut fib: isize\
    \ = 0;\n    for i in 0..n {\n        fib += i;\n    }\n    fib\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `45`,\n right: `55`', /tmp/tmph6thchwq.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // Return zero\
    \ if the number is 0 or negative.\n    if n < 2 {\n        return n;\n    }\n\
    \    // Return the Fibonacci number for n = 1 (the first Fibonacci number is 1).\n\
    \    if n == 1 {\n        return 1;\n    }\n    // Return Fibonacci number for\
    \ n >= 2.\n    // https://oeis.org/A008275\n    return fib(n - 1) + fib(n - 2);\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // https://stackoverflow.com/questions/4751425/\n\
    \    // fibonacci-in-c-sharp-or-algorithm-to-calculate-its-value\n\n    if n ==\
    \ 0 || n == 1 {\n        return n;\n    }\n\n    let prev = fib(n-1).unwrap();\n\
    \    let curr = fib(n-2).unwrap();\n    prev + curr\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unwrap` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpz5zcaj7v.rs:16:25\n   |\n16 |     let prev = fib(n-1).unwrap();\n\
    \   |                         ^^^^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `unwrap` found for type `isize` in the current scope\n  -->\
    \ /tmp/tmpz5zcaj7v.rs:17:25\n   |\n17 |     let curr = fib(n-2).unwrap();\n  \
    \ |                         ^^^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0599`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    loop {\n     \
    \   let prev1 = 1;\n        let prev2 = 1;\n        let prev3: isize = 1;\n  \
    \      let x = 1;\n        let y = 0;\n        let z = prev1;\n        for i in\
    \ 0..n {\n            prev3 = x;\n            x = prev1 + prev2;\n           \
    \ y = prev2 + prev3;\n            prev2 = prev3;\n            prev1 = z;\n   \
    \         z = x;\n        }\n        if n < 3 || n == 0 {\n            return\
    \ z;\n        }\n    }\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "warning: value assigned to `prev3` is never read\n  --> /tmp/tmpt6o5pbqr.rs:12:13\n\
    \   |\n12 |         let prev3: isize = 1;\n   |             ^^^^^\n   |\n   =\
    \ note: `#[warn(unused_assignments)]` on by default\n   = help: maybe it is overwritten\
    \ before being read?\n\nwarning: variable `y` is assigned to, but never used\n\
    \  --> /tmp/tmpt6o5pbqr.rs:14:13\n   |\n14 |         let y = 0;\n   |        \
    \     ^\n   |\n   = note: `#[warn(unused_variables)]` on by default\n   = note:\
    \ consider using `_y` instead\n\nwarning: unused variable: `i`\n  --> /tmp/tmpt6o5pbqr.rs:16:13\n\
    \   |\n16 |         for i in 0..n {\n   |             ^ help: if this is intentional,\
    \ prefix it with an underscore: `_i`\n\nwarning: value assigned to `y` is never\
    \ read\n  --> /tmp/tmpt6o5pbqr.rs:19:13\n   |\n19 |             y = prev2 + prev3;\n\
    \   |             ^\n   |\n   = help: maybe it is overwritten before being read?\n\
    \nerror[E0384]: cannot assign twice to immutable variable `prev3`\n  --> /tmp/tmpt6o5pbqr.rs:17:13\n\
    \   |\n12 |         let prev3: isize = 1;\n   |             -----\n   |      \
    \       |\n   |             first assignment to `prev3`\n   |             help:\
    \ consider making this binding mutable: `mut prev3`\n...\n17 |             prev3\
    \ = x;\n   |             ^^^^^^^^^ cannot assign twice to immutable variable\n\
    \nerror[E0384]: cannot assign twice to immutable variable `x`\n  --> /tmp/tmpt6o5pbqr.rs:18:13\n\
    \   |\n13 |         let x = 1;\n   |             -\n   |             |\n   | \
    \            first assignment to `x`\n   |             help: consider making this\
    \ binding mutable: `mut x`\n...\n18 |             x = prev1 + prev2;\n   |   \
    \          ^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable\n\nerror[E0384]:\
    \ cannot assign twice to immutable variable `y`\n  --> /tmp/tmpt6o5pbqr.rs:19:13\n\
    \   |\n14 |         let y = 0;\n   |             -\n   |             |\n   | \
    \            first assignment to `y`\n   |             help: consider making this\
    \ binding mutable: `mut y`\n...\n19 |             y = prev2 + prev3;\n   |   \
    \          ^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable\n\nerror[E0"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fib_rec(n as usize)\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fib_rec` in this scope\n --> /tmp/tmpow0bzzwu.rs:9:5\n\
    \  |\n9 |     fib_rec(n as usize)\n  |     ^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a1 = 1;\n    let mut a2 = 1;\n    for\
    \ i in 0..n {\n        let tmp = a1;\n        a1 = a1 + a2;\n        a2 = tmp;\n\
    \    }\n    a1\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpw5k961qt.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let a = 1;\n \
    \   let b = 1;\n    if n <= 0 {\n        return a;\n    }\n    if n > 2 {\n  \
    \      fib_rec(a, b, n);\n    } else {\n        fib_rec(b, a - b + b + a, n -\
    \ 1);\n    }\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fib_rec` in this scope\n  --> /tmp/tmpi82zipa_.rs:15:9\n\
    \   |\n15 |         fib_rec(a, b, n);\n   |         ^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `fib_rec` in this scope\n  --> /tmp/tmpi82zipa_.rs:17:9\n\
    \   |\n17 |         fib_rec(b, a - b + b + a, n - 1);\n   |         ^^^^^^^ not\
    \ found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpi82zipa_.rs:14:14\n\
    \   |\n14 |       if n > 2 {\n   |  ______________^\n15 | |         fib_rec(a,\
    \ b, n);\n16 | |     } else {\n   | |_____^ expected `isize`, found `()`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpi82zipa_.rs:16:12\n   |\n16 |       } else {\n\
    \   |  ____________^\n17 | |         fib_rec(b, a - b + b + a, n - 1);\n18 | |\
    \     }\n   | |_____^ expected `isize`, found `()`\n\nerror: aborting due to 4\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0425.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 { return\
    \ 1; }\n    if n <= 3 { return fib(n - 1) + fib(n - 2); }\n    return fib(n -\
    \ 1) + fib(n - 2) + fib(n - 3);\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `230`,\n right: `55`', /tmp/tmpf4p1wo4t.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a = 0;\n\
    \    let mut b = 1;\n    for _ in 0..n {\n        let tmp = a;\n        a = b;\n\
    \        b = tmp + b;\n    }\n    b\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpli88xgas.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let a = 1;\n \
    \   let b = 1;\n    for _ in 0..n {\n        let tmp = a + b;\n        a = b;\n\
    \        b = tmp;\n    }\n    a\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign twice to immutable variable `a`\n  --> /tmp/tmp5ctuuab_.rs:13:9\n\
    \   |\n9  |     let a = 1;\n   |         -\n   |         |\n   |         first\
    \ assignment to `a`\n   |         help: consider making this binding mutable:\
    \ `mut a`\n...\n13 |         a = b;\n   |         ^^^^^ cannot assign twice to\
    \ immutable variable\n\nerror[E0384]: cannot assign twice to immutable variable\
    \ `b`\n  --> /tmp/tmp5ctuuab_.rs:14:9\n   |\n10 |     let b = 1;\n   |       \
    \  -\n   |         |\n   |         first assignment to `b`\n   |         help:\
    \ consider making this binding mutable: `mut b`\n...\n14 |         b = tmp;\n\
    \   |         ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_iter(a:\
    \ usize, b: usize, c: usize) -> usize {\n        (*a) as usize + (*b) as usize\
    \ + (*c) as usize\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    if n\
    \ <= 0 {\n        return 0;\n    }\n\n    for i in 0..n {\n        let c = fib_iter(a\
    \ + b, a, b);\n        a = b;\n        b = c;\n    }\n\n    a\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpj6keve1h.rs:26:5\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |                     ----- expected `isize`\
    \ because of return type\n...\n26 |     a\n   |     ^ expected `isize`, found\
    \ `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n   |\n26 |     a.try_into().unwrap()\n   |    \
    \  ++++++++++++++++++++\n\nerror[E0614]: type `usize` cannot be dereferenced\n\
    \  --> /tmp/tmpj6keve1h.rs:10:9\n   |\n10 |         (*a) as usize + (*b) as usize\
    \ + (*c) as usize\n   |         ^^^^\n\nerror[E0614]: type `usize` cannot be dereferenced\n\
    \  --> /tmp/tmpj6keve1h.rs:10:25\n   |\n10 |         (*a) as usize + (*b) as usize\
    \ + (*c) as usize\n   |                         ^^^^\n\nerror[E0614]: type `usize`\
    \ cannot be dereferenced\n  --> /tmp/tmpj6keve1h.rs:10:41\n   |\n10 |        \
    \ (*a) as usize + (*b) as usize + (*c) as usize\n   |                        \
    \                 ^^^^\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0614.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\n\
    fn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 { 1\
    \ } else { fib(n-1) + fib(n-2) }\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp7_woyprn.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    n <= 1 ? 1 : fib(n\
    \ - 1) + fib(n - 2)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `1`\n\
    \ --> /tmp/tmp9qmdh0dn.rs:9:14\n  |\n9 |     n <= 1 ? 1 : fib(n - 1) + fib(n -\
    \ 2)\n  |              ^ expected one of `.`, `;`, `?`, `}`, or an operator\n\n\
    error: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    n <= 2 ? 1 : fib(n\
    \ - 2) + fib(n - 1)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `1`\n\
    \ --> /tmp/tmptundhoaw.rs:9:14\n  |\n9 |     n <= 2 ? 1 : fib(n - 2) + fib(n -\
    \ 1)\n  |              ^ expected one of `.`, `;`, `?`, `}`, or an operator\n\n\
    error: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n\n    let mut a: i32 = fib(n-1) + fib(n-2);\n\
    \    return a\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpkvu8uyzq.rs:13:22\n   |\n\
    13 |     let mut a: i32 = fib(n-1) + fib(n-2);\n   |                ---   ^^^^^^^^^^^^^^^^^^^\
    \ expected `i32`, found `isize`\n   |                |\n   |                expected\
    \ due to this\n   |\nhelp: you can convert an `isize` to an `i32` and panic if\
    \ the converted value doesn't fit\n   |\n13 |     let mut a: i32 = (fib(n-1) +\
    \ fib(n-2)).try_into().unwrap();\n   |                      +                \
    \   +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkvu8uyzq.rs:14:12\n\
    \   |\n8  | fn fib(n: isize) -> isize {\n   |                     ----- expected\
    \ `isize` because of return type\n...\n14 |     return a\n   |            ^ expected\
    \ `isize`, found `i32`\n   |\nhelp: you can convert an `i32` to an `isize` and\
    \ panic if the converted value doesn't fit\n   |\n14 |     return a.try_into().unwrap()\n\
    \   |             ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       1\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpsdcad01b.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut fib_cache\
    \ = [0, 1];\n    for i in 0..n {\n        fib_cache.push(fib_cache[i] + fib_cache[i\
    \ + 1]);\n    }\n    fib_cache.last()\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `push` found for array `[{integer}; 2]` in\
    \ the current scope\n  --> /tmp/tmpl1jm63rg.rs:11:19\n   |\n11 |         fib_cache.push(fib_cache[i]\
    \ + fib_cache[i + 1]);\n   |                   ^^^^ method not found in `[{integer};\
    \ 2]`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n \
    \ --> /tmp/tmpl1jm63rg.rs:11:24\n   |\n11 |         fib_cache.push(fib_cache[i]\
    \ + fib_cache[i + 1]);\n   |                        ^^^^^^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmpl1jm63rg.rs:11:39\n   |\n11 |         fib_cache.push(fib_cache[i]\
    \ + fib_cache[i + 1]);\n   |                                       ^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the\
    \ trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because\
    \ of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpl1jm63rg.rs:13:5\n   |\n8  | fn fib(n: isize)\
    \ -> isize {\n   |                     ----- expected `isize` because of return\
    \ type\n...\n13 |     fib_cache.last()\n   |     ^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found enum `Option`\n   |\n   = note: expected type `isize`\n              found\
    \ enum `Option<&{integer}>`\n\nerror: aborting due to 4 previous errors\n\nSome\
    \ errors have detailed explanations: E0277, E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpnfgxmq4i.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028120
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return 1;\n    }\n    fib(n-2) + fib(n-1)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp1i8xt4_m.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    debug_assert_ne!(n\
    \ > 0, \"The Fibonacci number must be non-negative.\");\n    debug_assert_eq!(n,\
    \ 2, \"The Fibonacci number must be of size 2.\");\n\n    if n == 1 || n == 2\
    \ {\n        return 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpzegepivq.rs:9:5\n  |\n9 |\
    \     debug_assert_ne!(n > 0, \"The Fibonacci number must be non-negative.\");\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `bool`, found `&str`\n  |\n  = note: this error originates in the macro\
    \ `$crate::assert_ne` (in Nightly builds, run with -Z macro-backtrace for more\
    \ info)\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_impl(mut\
    \ a, mut b) -> (isize, isize) {\n        if b > 0 {\n            (fib_impl(b,\
    \ a + b), a)\n        } else {\n            (fib_impl(a, a), b)\n        }\n \
    \   }\n\n    let (a, b) = (0, 1);\n    fib_impl(1, 1);\n}\n\nfn main() {\n   \
    \ let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `:`, `@`, or `|`, found `,`\n --> /tmp/tmp3x2gojk6.rs:9:22\n\
    \  |\n9 |     fn fib_impl(mut a, mut b) -> (isize, isize) {\n  |             \
    \         ^ expected one of `:`, `@`, or `|`\n  |\n  = note: anonymous parameters\
    \ are removed in the 2018 edition (see RFC 1685)\nhelp: if this is a `self` type,\
    \ give it a parameter name\n  |\n9 |     fn fib_impl(self: mut a, mut b) -> (isize,\
    \ isize) {\n  |                 +++++\nhelp: if this is a parameter name, give\
    \ it a type\n  |\n9 |     fn fib_impl(mut a: TypeName, mut b) -> (isize, isize)\
    \ {\n  |                      ++++++++++\nhelp: if this is a type, explicitly\
    \ ignore the parameter name\n  |\n9 |     fn fib_impl(_: mut a, mut b) -> (isize,\
    \ isize) {\n  |                 ++\n\nerror: expected one of `:`, `@`, or `|`,\
    \ found `)`\n --> /tmp/tmp3x2gojk6.rs:9:29\n  |\n9 |     fn fib_impl(mut a, mut\
    \ b) -> (isize, isize) {\n  |                             ^ expected one of `:`,\
    \ `@`, or `|`\n  |\n  = note: anonymous parameters are removed in the 2018 edition\
    \ (see RFC 1685)\nhelp: if this is a parameter name, give it a type\n  |\n9 |\
    \     fn fib_impl(mut a, mut b: TypeName) -> (isize, isize) {\n  |           \
    \                  ++++++++++\nhelp: if this is a type, explicitly ignore the\
    \ parameter name\n  |\n9 |     fn fib_impl(mut a, _: mut b) -> (isize, isize)\
    \ {\n  |                        ++\n\nerror[E0308]: mismatched types\n --> /tmp/tmp3x2gojk6.rs:8:21\n\
    \  |\n8 | fn fib(n: isize) -> isize {\n  |    ---              ^^^^^ expected\
    \ `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has\
    \ no tail or `return` expression\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3x2gojk6.rs:11:14\n\
    \   |\n11 |             (fib_impl(b, a + b), a)\n   |              ^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found tuple\n   |\n   = note: expected type `isize`\n    \
    \         found tuple `(isize, isize)`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp3x2gojk6.rs:13:14\n   |\n13 |             (fib_impl(a, a), b)\n   |\
    \              ^^^^^^^^^^^^^^ expected `isize`, found tuple\n   |\n   = note:\
    \ expected type `isize`\n         "
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        n\n    } else {\n        fib(n - 1) + fib(n - 2)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822415
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // Base case\n\
    \    if n < 2 { 1 } else { fib(n-2) + fib(n-1) }\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpaiamo23c.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    let mut result = 1;\n    let mut current = 1;\n\
    \    for i in 1..(n + 1) {\n        current += result;\n        result = current;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1024`,\n right: `55`', /tmp/tmp47idrkdf.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n\n    let mut a = fib(n - 1);\n    let mut\
    \ b = fib(n - 2);\n\n    while a < b {\n        a = b + a;\n        b = a + b;\n\
    \    }\n\n    a\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `55`', /tmp/tmpbsvajxmg.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    (1..n).nth(0)\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpq11ucev5.rs:9:5\n  |\n8 |\
    \ fn fib(n: isize) -> isize {\n  |                     ----- expected `isize`\
    \ because of return type\n9 |     (1..n).nth(0)\n  |     ^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n  |\n  = note: expected type `isize`\n       \
    \      found enum `Option<isize>`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028120
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    debug_assert!(n\
    \ > 0);\n    debug_assert!(n <= 3);\n    let mut a, b = 0, 1;\n    while n > 0\
    \ {\n        let tmp = a + b;\n        a = b;\n        b = tmp;\n        n -=\
    \ 1;\n    }\n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: unexpected `,` in pattern\n  --> /tmp/tmpftjkxcdb.rs:11:14\n   |\n\
    11 |     let mut a, b = 0, 1;\n   |              ^\n   |\nhelp: try adding parentheses\
    \ to match on a tuple\n   |\n11 |     let (mut a, b) = 0, 1;\n   |         + \
    \       +\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 0 {\n \
    \       panic!(\"fibonacci::fib called with negative value\");\n    }\n    if\
    \ n == 0 || n == 1 {\n        return n;\n    }\n    return fib(n-2) + fib(n-1);\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut fib1 =\
    \ 0usize;\n    let mut fib2 = 0usize;\n    for n in 1..n {\n        let temp =\
    \ fib1;\n        fib1 += fib2;\n        fib2 = temp;\n    }\n    return fib1;\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpd5hqdrsi.rs:16:12\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |                     ----- expected `isize`\
    \ because of return type\n...\n16 |     return fib1;\n   |            ^^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n16 |     return fib1.try_into().unwrap();\n\
    \   |                ++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 {\n\
    \        return 0;\n    }\n\n    if n == 1 || n == 2 {\n        return 1;\n  \
    \  }\n\n    let mut a = fib(n-1);\n    let mut b = fib(n-2);\n\n    a += b;\n\
    \    b += a;\n    a += b;\n\n    a\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9841`,\n right: `55`', /tmp/tmp2pxo6hlb.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut n: isize\
    \ = n;\n\n    while n > 2 {\n        n -= 1;\n    }\n    n as isize\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `55`', /tmp/tmp9p_uvilk.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    n <= 2 ? 1 : fib(n-1)\
    \ + fib(n-2)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `1`\n\
    \ --> /tmp/tmp5nkoroq1.rs:9:14\n  |\n9 |     n <= 2 ? 1 : fib(n-1) + fib(n-2)\n\
    \  |              ^ expected one of `.`, `;`, `?`, `}`, or an operator\n\nerror:\
    \ aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return 1;\n    }\n\n    fn next(n: isize) -> isize {\n        if n ==\
    \ 0 {\n            return 1;\n        }\n\n        let result = fib(n - 1) + fib(n\
    \ - 2);\n        result\n    }\n\n    next(n)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpy7d9egzk.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut fib_cache\
    \ = vec![];\n    fib_cache[0] = 0;\n    fib_cache[1] = 1;\n    for i in 2..n {\n\
    \        fib_cache[i] = fib_cache[i-2] + fib_cache[i-1];\n    }\n    fib_cache[n]\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmp5ouw1ke7.rs:13:9\n   |\n13 |         fib_cache[i] = fib_cache[i-2] +\
    \ fib_cache[i-1];\n   |         ^^^^^^^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is\
    \ not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]`\
    \ cannot be indexed by `isize`\n  --> /tmp/tmp5ouw1ke7.rs:13:24\n   |\n13 |  \
    \       fib_cache[i] = fib_cache[i-2] + fib_cache[i-1];\n   |                \
    \        ^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmp5ouw1ke7.rs:13:41\n\
    \   |\n13 |         fib_cache[i] = fib_cache[i-2] + fib_cache[i-1];\n   |    \
    \                                     ^^^^^^^^^^^^^^ slice indices are of type\
    \ `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]`\
    \ cannot be indexed by `isize`\n  --> /tmp/tmp5ouw1ke7.rs:15:5\n   |\n15 |   \
    \  fib_cache[n]\n   |     ^^^^^^^^^^^^ slice indices are of type `usize` or ranges\
    \ of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<{integer}>`\n\nerror: aborting due to 4 previous errors\n\nFor more\
    \ information abo"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    trace!(\"fib({})\"\
    , n);\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => fib(n - 1)\
    \ + fib(n - 2),\n    }\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: cannot find macro `trace` in this scope\n --> /tmp/tmp7m68t6ik.rs:9:5\n\
    \  |\n9 |     trace!(\"fib({})\", n);\n  |     ^^^^^\n\nerror: aborting due to\
    \ previous error\n\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut fib =\
    \ 1;\n    fib += fib;\n    fib %= n;\n    fib += fib;\n    fib %= n;\n    fib\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `55`', /tmp/tmpuvmn63ww.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n    let mut a = 1;\n    let mut b = 1;\n \
    \   for _ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmprg54314j.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a, b =\
    \ 1, c;\n    while n > 2 {\n        (c, a) = (b, a + b);\n        n -= 1;\n  \
    \  }\n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: unexpected `,` in pattern\n --> /tmp/tmparkuzv4i.rs:9:14\n  |\n\
    9 |     let mut a, b = 1, c;\n  |              ^\n  |\nhelp: try adding parentheses\
    \ to match on a tuple\n  |\n9 |     let (mut a, b) = 1, c;\n  |         +    \
    \    +\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        n\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpo8nwqt0y.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(u64::from(2))).unwrap()\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpi9vciuqb.rs:13:49\n   |\n\
    13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(u64::from(2))).unwrap()\n\
    \   |                                                 ^^^^^^^^^^^^ expected `isize`,\
    \ found `u64`\n\nerror[E0599]: no method named `unwrap` found for type `isize`\
    \ in the current scope\n  --> /tmp/tmpi9vciuqb.rs:13:64\n   |\n13 |     fib(n\
    \ + 1).wrapping_add(fib(n).wrapping_mul(u64::from(2))).unwrap()\n   |        \
    \                                                        ^^^^^^ method not found\
    \ in `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    match n {\n  \
    \      1 => 1,\n        2 => 1,\n        _ => fib(n - 1) + fib(n - 2)\n    }\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_i(n: isize)\
    \ -> isize {\n        if n == 0 {\n            return 1;\n        }\n        fib_i(n\
    \ - 1) + fib_i(n - 2)\n    }\n    fib_i(n)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028163
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 { 1 }\
    \ else { fib(n-1) + fib(n-2) }\n}\n\nfn main() {\n    let candidate = fib;\n \
    \   assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp0dw6v3h8.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_iter(n:\
    \ isize) -> Option<isize> {\n        if n == 0 || n == 1 {\n            return\
    \ Some(n);\n        }\n\n        let prev = fib_iter(n - 1);\n        prev.map(|prev|\
    \ prev + prev)\n    }\n\n    match fib_iter(n) {\n        Some(prev) => prev,\n\
    \        None => panic!(\"fib expects a positive number\"),\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `512`,\n right: `55`', /tmp/tmpysa4obe6.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // https://stackoverflow.com/questions/3467536/fibonacci-number-in-fib-function-in-c\n\
    \    // https://stackoverflow.com/questions/3370277/fastest-way-to-compute-the-fibonacci-sequence-in-python\n\
    \n    let mut fib = [0, 1];\n    for _ in 0..n {\n        fib += fib;\n    }\n\
    \    fib\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0368]: binary assignment operation `+=` cannot be applied to type\
    \ `[{integer}; 2]`\n  --> /tmp/tmp2cb9k_xi.rs:14:9\n   |\n14 |         fib +=\
    \ fib;\n   |         ---^^^^^^^\n   |         |\n   |         cannot use `+=`\
    \ on type `[{integer}; 2]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2cb9k_xi.rs:16:5\n\
    \   |\n8  | fn fib(n: isize) -> isize {\n   |                     ----- expected\
    \ `isize` because of return type\n...\n16 |     fib\n   |     ^^^ expected `isize`,\
    \ found array `[{integer}; 2]`\n\nerror: aborting due to 2 previous errors\n\n\
    Some errors have detailed explanations: E0308, E0368.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a = 0;\n\
    \    let mut b = 1;\n    for i in (0..n)\n        .map(|i| {\n            (a,\
    \ b)\n        })\n    {\n        (a += b, a)\n    }\n    a\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptvly8dye.rs:16:9\n   |\n\
    16 |         (a += b, a)\n   |         ^^^^^^^^^^^ expected `()`, found tuple\n\
    \   |\n   = note: expected unit type `()`\n                  found tuple `((),\
    \ {integer})`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 {\n\
    \        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return\
    \ fib(n - 2) + fib(n - 1);\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\n\
    fn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_iter(_n:\
    \ isize) -> isize {\n        if _n < 2 {\n            return _n\n        }\n\n\
    \        return fib_iter(_n - 1) + fib_iter(_n - 2)\n    }\n\n    return fib_iter(n\
    \ - 1)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `34`,\n right: `55`', /tmp/tmpd92vemcy.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return 1\n    }\n\n    return fib(n - 2) + fib(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028120
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 0 {\n \
    \       panic!(\"Fib() arg must be >= 0\");\n    }\n    if n == 0 || n == 1 {\n\
    \        return n;\n    }\n    if n == 2 {\n        return 1;\n    }\n    return\
    \ fib(n-2) + fib(n-1);\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       1\n    } else {\n        fib(n - 1) + fib(n - 2)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpou02w5py.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut i = 0;\n\
    \    let mut fib1 = 0;\n    let mut fib2 = 1;\n    while i < n {\n        i +=\
    \ 1;\n        fib1 = fib2;\n        fib2 = fib1 + fib2;\n    }\n    return fib2;\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1024`,\n right: `55`', /tmp/tmpu78s_etv.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a = 1;\n\
    \    let mut b = 1;\n    for i in 1..n {\n        let temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    a\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `55`', /tmp/tmpmae74o_i.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib_internal(0, n - 1, 2)\n}\n\nfn main() {\n  \
    \  let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fib_internal` in this scope\n  -->\
    \ /tmp/tmp0qgea_yb.rs:12:5\n   |\n12 |     fib_internal(0, n - 1, 2)\n   |   \
    \  ^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    use std::mem::swap;\n\
    \    let mut fib = [0, 1];\n    for _ in 0..n {\n        swap(&mut fib, &mut fib[..])\n\
    \    }\n    fib[..]\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp_q2d9amf.rs:12:24\n   |\n\
    12 |         swap(&mut fib, &mut fib[..])\n   |                        ^^^^^^^^^^^^\
    \ expected array `[{integer}; 2]`, found slice `[{integer}]`\n   |\n   = note:\
    \ expected mutable reference `&mut [{integer}; 2]`\n              found mutable\
    \ reference `&mut [{integer}]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_q2d9amf.rs:14:5\n\
    \   |\n8  | fn fib(n: isize) -> isize {\n   |                     ----- expected\
    \ `isize` because of return type\n...\n14 |     fib[..]\n   |     ^^^^^^^ expected\
    \ `isize`, found slice `[{integer}]`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    loop {\n     \
    \   let pre1 = 0.0;\n        let pre2 = 1.0;\n        let current = (pre1 + pre2)\
    \ / 2.0;\n        if n <= 1 {\n            return current;\n        }\n      \
    \  pre1 = pre2;\n        pre2 = current;\n        n -= 1;\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpc7cl19jr.rs:14:20\n   |\n\
    14 |             return current;\n   |                    ^^^^^^^ expected `isize`,\
    \ found floating-point number\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    use std::mem;\n\
    \    let mut a: usize = 0;\n    let mut b: usize = 1;\n\n    while n >= 2 {\n\
    \        n -= 1;\n        a = b;\n        b = a + b;\n    }\n\n    mem::replace(&mut\
    \ a, a + b);\n    a\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpnlqz8mlo.rs:20:5\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |                     ----- expected `isize`\
    \ because of return type\n...\n20 |     a\n   |     ^ expected `isize`, found\
    \ `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n   |\n20 |     a.try_into().unwrap()\n   |    \
    \  ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n + 1) // <--- Fibonacci numbers are computed\
    \ with recursion\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028163
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_aux(n:\
    \ usize) -> usize {\n        if n < 2 {\n            return n;\n        }\n  \
    \      return fib_aux(n - 2) + fib_aux(n - 1);\n    }\n\n    fib_aux(n) as isize\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1wthq2fw.rs:16:13\n   |\n\
    16 |     fib_aux(n) as isize\n   |             ^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n16 |     fib_aux(n.try_into().unwrap()) as isize\n\
    \   |              ++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n - 1) + fib(n - 2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    n <= 0 ? 1 : fib(n\
    \ - 1) + fib(n - 2)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `1`\n\
    \ --> /tmp/tmpqfp02mj1.rs:9:14\n  |\n9 |     n <= 0 ? 1 : fib(n - 1) + fib(n -\
    \ 2)\n  |              ^ expected one of `.`, `;`, `?`, `}`, or an operator\n\n\
    error: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_helper(x:\
    \ isize, y: isize) -> isize {\n        if x <= 1 {\n            x\n        } else\
    \ {\n            fib_helper(x - 1, y + x)\n        }\n    }\n\n    fib_helper(n,\
    \ 0)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `55`', /tmp/tmpidv8yw5v.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    use std::iter;\n\
    \    iter::repeat(n - 2)\n        .take_while(|&x| x != 0)\n        .next()\n\
    \        .expect(\"n must be positive\")\n        + iter::repeat(n - 1)\n    \
    \        .take_while(|&x| x != 0)\n            .next()\n            .expect(\"\
    n must be positive\")\n        + 1\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `18`,\n right: `55`', /tmp/tmpsiim02mm.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    (1 + n).sqrt()\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sqrt` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpzvql99jy.rs:9:13\n  |\n9 |     (1 + n).sqrt()\n  |     \
    \        ^^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut fib =\
    \ [0, 1];\n    for i in 2..=n {\n        fib[i] = fib[i-1] + fib[i-2];\n    }\n\
    \    fib[n]\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmp2912mol4.rs:11:9\n   |\n11 |         fib[i] = fib[i-1] + fib[i-2];\n\
    \   |         ^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmp2912mol4.rs:11:18\n\
    \   |\n11 |         fib[i] = fib[i-1] + fib[i-2];\n   |                  ^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the\
    \ trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because\
    \ of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\nerror[E0277]:\
    \ the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmp2912mol4.rs:11:29\n\
    \   |\n11 |         fib[i] = fib[i-1] + fib[i-2];\n   |                      \
    \       ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n\
    \   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmp2912mol4.rs:13:5\n\
    \   |\n13 |     fib[n]\n   |     ^^^^^^ slice indices are of type `usize` or ranges\
    \ of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `[{integer}]`\n\nerror: aborting due to 4 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    match n {\n  \
    \      0 => 0,\n        1 => 1,\n        _ => fib(n - 1) + fib(n - 2)\n    }\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut f1 = 0;\n\
    \    let mut f2 = 1;\n\n    for (i, _) in 0..n {\n        let tmp = f2\n     \
    \   f2 = f1\n        f1 = tmp + f1;\n    }\n\n    f1\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `f2`\n  --> /tmp/tmpuno9sl_y.rs:13:21\n   |\n\
    13 |         let tmp = f2\n   |                     ^ help: add `;` here\n14 |\
    \         f2 = f1\n   |         -- unexpected token\n\nerror: expected `;`, found\
    \ `f1`\n  --> /tmp/tmpuno9sl_y.rs:14:16\n   |\n14 |         f2 = f1\n   |    \
    \            ^ help: add `;` here\n15 |         f1 = tmp + f1;\n   |         --\
    \ unexpected token\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpuno9sl_y.rs:12:9\n\
    \   |\n12 |     for (i, _) in 0..n {\n   |         ^^^^^^    ---- this expression\
    \ has type `Option<isize>`\n   |         |\n   |         expected `isize`, found\
    \ tuple\n   |\n   = note: expected type `isize`\n             found tuple `(_,\
    \ _)`\n\nerror: aborting due to 3 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    use std::cmp::Ordering;\n\
    \    if n <= 2 { 1 } else { fib(n - 1) + fib(n - 2) }\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028120
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a = 1;\n\
    \    let mut b = 1;\n    if n == 0 || n == 1 {\n        return n;\n    }\n   \
    \ for _ in 0..(n - 1) {\n        let tmp = a;\n        a = b;\n        b = tmp\
    \ + b;\n    }\n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpl12nmkow.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return n\n    }\n\n    fib(n - 1) + fib(n - 2)\n}\n\nfn main() {\n  \
    \  let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return 1;\n    }\n\n    return fib(n - 2) + fib(n - 1);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpkcrex63l.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n    fib(n-2) + fib(n-1)\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn iter() -> impl\
    \ Iterator<Item = usize> + Clone {\n        let mut a: usize = 0;\n        let\
    \ mut b: usize = 1;\n        while b < n {\n            (a, b) = (b, a + b);\n\
    \        }\n        b.clone() as usize\n    }\n    iter()\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0434]: can't capture dynamic environment in a fn item\n  --> /tmp/tmpt0qqx9rb.rs:12:19\n\
    \   |\n12 |         while b < n {\n   |                   ^\n   |\n   = help:\
    \ use the `|| { ... }` closure form instead\n\nerror[E0277]: `usize` is not an\
    \ iterator\n --> /tmp/tmpt0qqx9rb.rs:9:18\n  |\n9 |     fn iter() -> impl Iterator<Item\
    \ = usize> + Clone {\n  |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ `usize` is not an iterator\n  |\n  = help: the trait `Iterator` is not implemented\
    \ for `usize`\n  = note: if you want to iterate between `start` until a value\
    \ `end`, use the exclusive range syntax `start..end` or the inclusive range syntax\
    \ `start..=end`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpt0qqx9rb.rs:17:5\n\
    \   |\n8  | fn fib(n: isize) -> isize {\n   |                     ----- expected\
    \ `isize` because of return type\n9  |     fn iter() -> impl Iterator<Item = usize>\
    \ + Clone {\n   |                  ----------------------------------- the found\
    \ opaque type\n...\n17 |     iter()\n   |     ^^^^^^ expected `isize`, found opaque\
    \ type\n   |\n   = note:     expected type `isize`\n           found opaque type\
    \ `impl Clone + Iterator<Item = usize>`\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308, E0434.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut n: isize\
    \ = 1;\n    let mut f: isize = 0;\n    for _ in 0..n {\n        f += n;\n    \
    \    n = f;\n    }\n    f\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `55`', /tmp/tmpvnn_wdfj.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_recursive(n:\
    \ isize) -> isize {\n        if n <= 1 {\n            return n\n        }\n  \
    \      fib_recursive(n-1) + fib_recursive(n-2)\n    }\n    fib_recursive(n)\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // Calculate the\
    \ two previous numbers.\n    let mut a = 1;\n    let mut b = 1;\n    for i in\
    \ 1..n {\n        // Add the previous two numbers to get the next number.\n  \
    \      let c = a + b;\n        a = b;\n        b = c;\n    }\n    // Return the\
    \ final number.\n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpguatj129.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a = 1;\n\
    \    let mut b = 1;\n    for i in 0..n {\n        (a, b) = (b, a + b);\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpae1esgqz.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_impl(n:\
    \ isize) -> isize {\n        if n < 2 {\n            n\n        } else {\n   \
    \         fib_impl(n - 1) + fib_impl(n - 2)\n        }\n    }\n    fib_impl(n)\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n    fib(n-1).wrapping_add(fib(n-2)).unwrap()\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unwrap` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpmfm94e5f.rs:12:37\n   |\n12 |     fib(n-1).wrapping_add(fib(n-2)).unwrap()\n\
    \   |                                     ^^^^^^ method not found in `isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028120
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return 1;\n    }\n\n    fib(n-1)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `55`', /tmp/tmp9f7jptgf.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    match n {\n  \
    \      1 => 1,\n        2 => 2,\n        _ => {\n            let mut a = 0;\n\
    \            let mut b = 1;\n            while n > 2 {\n                let c\
    \ = a + b;\n                a = b;\n                b = c;\n                n\
    \ -= 1;\n            }\n            b\n        }\n    }\n}\n\nfn main() {\n  \
    \  let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpjwfa8m_f.rs:19:17\n\
    \   |\n8  | fn fib(n: isize) -> isize {\n   |        - help: consider making this\
    \ binding mutable: `mut n`\n...\n19 |                 n -= 1;\n   |          \
    \       ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        1\n    } else {\n        fib(n - 1) + fib(n - 2)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       1\n    } else {\n        fib(n - 1) + fib(n - 2)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpou02w5py.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\n\
    fn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpkn4ixx1r.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    (0..n).fold(0,\
    \ |a, b| a + b)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `45`,\n right: `55`', /tmp/tmp7q59aedz.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_iter(n:\
    \ isize) -> isize {\n        if n == 0 {\n            return 0;\n        }\n \
    \       if n == 1 {\n            return 1;\n        }\n        let mut n1 = fib_iter(n\
    \ - 1);\n        let mut n2 = fib_iter(n - 2);\n        n1 + n2\n    }\n\n   \
    \ fib_iter(n)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib(mut n:\
    \ isize, a: isize, b: isize) -> isize {\n        if n <= 0 {\n            return\
    \ a;\n        }\n        fib(n, a + b, a)\n    }\n\n    fib(n - 1, 0, 1) + fib(n\
    \ - 2, 0, 2)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to add with overflow'', /tmp/tmpt_9ertd_.rs:13:16

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a = 1;\n\
    \    let mut b = 1;\n    for i in 1..n {\n        let c = a + b;\n        a =\
    \ b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmptv4jbzep.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // base case\n\
    \    if n < 2 {\n        return 1;\n    }\n\n    // recursion case\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp3eyq3oi8.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1) + fib(n + 2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 0 {\n \
    \       0\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `55`', /tmp/tmpg2p6ru1c.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a = 0;\n\
    \    let mut b = 1;\n\n    for i in 1..n {\n        let c = a + b;\n        a\
    \ = b;\n        b = c;\n    }\n\n    b\n}\n\nfn main() {\n    let candidate =\
    \ fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // use std::mem::swap;\n\
    \    // use std::mem::{size_of, transmute};\n    // use std::cmp::Ordering::{Equal,\
    \ Greater, Less};\n\n    use std::mem::swap;\n    use std::mem::size_of;\n   \
    \ use std::cmp::Ordering::{Equal, Greater, Less};\n\n    if n < 3 {\n        return\
    \ n;\n    }\n\n    // use std::mem::swap;\n    // use std::mem::transmute;\n \
    \   // use std::cmp::Ordering::{Equal, Greater, Less};\n\n    let mut a = 1;\n\
    \    let mut b = 1;\n    let mut c = 0;\n    while c < n {\n        let tmp =\
    \ a;\n        a = b;\n        b = tmp + b;\n        c += 1;\n    }\n    a\n}\n\
    \nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpxul2ar0c.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    assert!(n >= 0);\n\
    \n    if n <= 1 {\n        return n;\n    }\n    else {\n        fib(n - 1) +\
    \ fib(n - 2)\n    }\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_aux(n:\
    \ isize, a: isize, b: isize) -> isize {\n        if n == 0 {\n            a\n\
    \        } else {\n            fib_aux(n - 1, b, a + b)\n        }\n    }\n  \
    \  fib_aux(n, 1, 1)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpxd56rkdc.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       n\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    assert!(n in 0..20);\n\
    \    if n == 0 || n == 1 {\n        return n;\n    }\n    return fib(n-1) + fib(n-2);\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, or an operator, found\
    \ keyword `in`\n --> /tmp/tmp4tnzko5c.rs:9:15\n  |\n9 |     assert!(n in 0..20);\n\
    \  |               ^^ expected one of 7 possible tokens\n\nerror: aborting due\
    \ to previous error\n\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn cache(i: isize)\
    \ -> isize {\n        if i <= 2 {\n            i\n        } else {\n         \
    \   cache(i-1) + cache(i-2)\n        }\n    }\n    cache(n)\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp0c5uj7em.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    debug_assert!(n\
    \ > 0);\n    debug_assert!(n == n || n == 1);\n    if n == 0 {\n        return\
    \ 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut n1 = fib(n-1);\n\
    \    let mut n2 = fib(n-2);\n    n1 += n2;\n    n2 *= 2;\n    n1\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n > 0'', /tmp/tmprjv5cf0g.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut fibs =\
    \ vec![1];\n    for i in 2..(n - 1) {\n        fibs.push(fibs.last().unwrap()\
    \ + fibs.last().unwrap());\n    }\n    fibs[n - 1]\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmp2xauvd55.rs:13:5\n   |\n13 |     fibs[n - 1]\n   |     ^^^^^^^^^^^ slice\
    \ indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait\
    \ `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n    fib(n + 1) + fib(n + 2)\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028164
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 { 1 }\
    \ else { fib(n-1) + fib(n-2) }\n}\n\nfn main() {\n    let candidate = fib;\n \
    \   assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp0dw6v3h8.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    debug_assert!(n\
    \ > 1);\n    let mut n1 = 0, n2 = 1;\n    let mut current: isize = n1;\n\n   \
    \ for i in 1..n {\n        current += n2;\n        n1 = n2;\n        n2 = current;\n\
    \    }\n\n    current\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n\
    \  --> /tmp/tmp8bmaeub3.rs:10:19\n   |\n10 |     let mut n1 = 0, n2 = 1;\n   |\
    \                   ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\n\
    error: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 { return\
    \ 1 }\n\n    fib(n + 1).clone()\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028164
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_impl(n:\
    \ isize) -> isize {\n        if n < 2 {\n            return 1;\n        }\n  \
    \      fib_impl(n-1) + fib_impl(n-2)\n    }\n    fib_impl(n) as isize\n}\n\nfn\
    \ main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n   \
    \ assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpflz8r_5n.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    match n {\n  \
    \      0 | 1 => n,\n        2 => 1,\n        _ => fib(n-1) + fib(n-2),\n    }\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    let mut\
    \ a = 1;\n    let mut b = 1;\n    for i in 0..(n - 1) {\n        let temp = a\
    \ + b;\n        a = b;\n        b = temp;\n    }\n    b\n}\n\nfn main() {\n  \
    \  let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpel28aafz.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       n\n    } else {\n        fib(n-1)+fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // Implementation\
    \ note: We could use the following formula:\n    // return (n - 2) * (n + 1) /\
    \ 2 + 1;\n    // but this would overflow for very large values of n. Since we\
    \ are\n    // computing a Fibonacci number, the overflow will happen very rarely,\
    \ \n    // and the formula would become unnecessarily long for a very large\n\
    \    // value of n. Instead, we use the fact that the sequence converges to a\n\
    \    // geometric progression, and apply the formula recursively.\n\n    if n\
    \ < 2 {\n        return n;\n    }\n\n    let mut f1 = fib(n - 1);\n    let mut\
    \ f2 = fib(n - 2);\n\n    // The formula for the sequence converges to its geometric\
    \ progression\n    // when f1 < f2, otherwise it converges to 0.\n    fn converges_to_geometric_progression(f1:\
    \ isize, f2: isize) -> bool {\n        f1 < f2\n    }\n\n    if converges_to_geometric_progression(f1,\
    \ f2) {\n        // Calculate f1 using the geometric progression\n        f1 =\
    \ (f1 * f1) as isize;\n    }\n\n    f1 + f2\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut n1 = 0,\
    \ n2 = 1;\n\n    for _ in 0..n {\n        n1, n2 = n2, n1 + n2;\n    }\n\n   \
    \ n2\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n\
    \ --> /tmp/tmp59cwe50g.rs:9:19\n  |\n9 |     let mut n1 = 0, n2 = 1;\n  |    \
    \               ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\nerror:\
    \ aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // Base cases.\n\
    \    if n < 2 {\n        return n;\n    }\n\n    // Recursive case.\n    fn fib_helper(n:\
    \ isize, x: isize) -> isize {\n        if n == 0 {\n            return x;\n  \
    \      }\n        return fib_helper(n - 1, x + 1);\n    }\n\n    return fib_helper(n,\
    \ 0);\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `55`', /tmp/tmp5_uob8_g.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 {\n\
    \        return 1;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let\
    \ mut f1 = 1;\n    let mut f2 = 1;\n    for i in (0..(n - 1)).step_by(2) {\n \
    \       let new_f1 = f1;\n        let new_f2 = f2;\n        f1 = new_f1;\n   \
    \     f2 = new_f2;\n    }\n    f1 + f2\n}\n\nfn main() {\n    let candidate =\
    \ fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `55`', /tmp/tmp_jbzkg_u.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut f1 = 1.;\n\
    \    let mut f2 = 1.;\n\n    for i in 1 .. n {\n        let f = f1 + f2;\n   \
    \     f1 = f2;\n        f2 = f;\n    }\n    f2\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpmoym9det.rs:17:5\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |                     ----- expected `isize`\
    \ because of return type\n...\n17 |     f2\n   |     ^^ expected `isize`, found\
    \ floating-point number\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fn next(n: isize) -> isize {\n        if n <=\
    \ 1 {\n            return n;\n        }\n        next(n - 1) + next(n - 2)\n \
    \   }\n    next(n).unwrap()\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unwrap` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpdpaenw8c.rs:19:13\n   |\n19 |     next(n).unwrap()\n  \
    \ |             ^^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1).cloned()\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `isize` is not an iterator\n  --> /tmp/tmpu6vtmwn5.rs:12:16\n\
    \   |\n12 |     fib(n + 1).cloned()\n   |                ^^^^^^ `isize` is not\
    \ an iterator\n   |\n   = note: the following trait bounds were not satisfied:\n\
    \           `isize: Iterator`\n           which is required by `&mut isize: Iterator`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut\
    \ i = 1;\n\n    loop {\n        let tmp = a;\n        a = b;\n        b = tmp\
    \ + i;\n        i = i + 1;\n        if i >= n {\n            return b;\n     \
    \   }\n    }\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `26`,\n right: `55`', /tmp/tmplxf8tfza.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n\n    }\n    fib(n-1).wrapping_add(fib(n-2))\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_iter(n:\
    \ usize) -> usize {\n        match n {\n            0 => 0,\n            1 =>\
    \ 1,\n            _ => fib_iter(n - 1) + fib_iter(n - 2),\n        }\n    }\n\n\
    \    if n < 2 {\n        fib_iter(n)\n    } else {\n        fib_iter(n).max(fib_iter(n))\n\
    \    }\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpw80z5905.rs:18:18\n   |\n\
    18 |         fib_iter(n)\n   |                  ^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n18 |         fib_iter(n.try_into().unwrap())\n   |\
    \                   ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n \
    \ --> /tmp/tmpw80z5905.rs:18:9\n   |\n8  | fn fib(n: isize) -> isize {\n   | \
    \                    ----- expected `isize` because of return type\n...\n18 |\
    \         fib_iter(n)\n   |         ^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \   |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n18 |         fib_iter(n).try_into().unwrap()\n   |\
    \                    ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpw80z5905.rs:20:18\n   |\n20 |         fib_iter(n).max(fib_iter(n))\n\
    \   |                  ^ expected `usize`, found `isize`\n   |\nhelp: you can\
    \ convert an `isize` to a `usize` and panic if the converted value doesn't fit\n\
    \   |\n20 |         fib_iter(n.try_into().unwrap()).max(fib_iter(n))\n   |   \
    \                ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpw80z5905.rs:20:34\n   |\n20 |         fib_iter(n).max(fib_iter(n))\n\
    \   |                                  ^ expected `usize`, found `isize`\n   |\n\
    help: you can convert an `isize` to a `usize` and panic if the converted value\
    \ doesn't fit\n   |\n20 |         fib_iter(n).max(fib_iter(n.try_into().unwrap()))\n\
    \   |                                   ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpw80z5905.rs:20:9\n   |\n8  | fn fib(n: isize)\
    \ -> isize {\n   |                     ----- expected `isize` because of return\
    \ type\n...\n20 |         fib_iter(n).max(fib_iter(n))\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n20 |         fib_iter(n).max(fib_iter(n)).try_into().unwrap()\n\
    \   |                     "
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    assert!(n >= 2);\n\
    \    let mut a = 0;\n    let mut b = 1;\n    for i in 1..n {\n        (a, b) =\
    \ (b, a + b);\n    }\n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n >= 2'', /tmp/tmpscjtdxwh.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut ret =\
    \ 0;\n    let mut i = 7;\n    loop {\n        i += 1;\n        if i > n {\n  \
    \          break;\n        }\n        ret += i;\n    }\n    ret\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `27`,\n right: `55`', /tmp/tmp_kjqa93k.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    (0..n).fold(0,\
    \ |x, y| x + y)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `45`,\n right: `55`', /tmp/tmpd8zqvdrl.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return n;\n    }\n\n    let mut a = 0;\n    let mut b = 1;\n\n    for\
    \ i in 2..n {\n        let tmp = a;\n        a = b;\n        b = tmp + b;\n  \
    \  }\n\n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `34`,\n right: `55`', /tmp/tmp9exz3e32.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if (n == 0) {\n\
    \        return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    else {\n        return fib(n-1) + fib(n-2);\n \
    \   }\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmprqs7aq4p.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // use std::mem::replace;\n\
    \    // use std::mem::swap;\n    fib(n).swap()\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `swap` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpbjihxmng.rs:11:12\n   |\n11 |     fib(n).swap()\n   | \
    \           ^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n) + fib(n - 2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028164
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       1\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpsdcad01b.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       n\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       1\n    } else {\n        fib(n - 1) + fib(n - 2)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpou02w5py.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_step(n:\
    \ isize) -> isize {\n        if n < 2 {\n            return n\n        } else\
    \ {\n            return fib_step(n-1) + fib_step(n-2)\n        }\n    }\n    fib_step(n)\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut f1 = 1;\n\
    \    let mut f2 = 1;\n    let mut fib: isize = 0;\n\n    for _ in 0..n {\n   \
    \     fib = f1 + f2;\n        f1 = f2;\n        f2 = fib;\n    }\n\n    fib\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpa2b4eokd.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_r(n: isize)\
    \ -> isize {\n        if n == 0 {\n            return 0;\n        }\n        if\
    \ n == 1 {\n            return 1;\n        }\n\n        return fib_r(n-1) + fib_r(n-2);\n\
    \    }\n    fib_r(n);\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpjxqy6xty.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n19 |     fib_r(n);\n   |             - help: remove\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       1\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpsdcad01b.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    (1..n).fold(0,\
    \ |acc, i| acc + (i * fib(i - 1)))\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `55`', /tmp/tmptgc19n_u.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    n <= 2 ? n : fib(n-1)\
    \ + fib(n-2)\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `n`\n\
    \ --> /tmp/tmpinrg9xkb.rs:9:14\n  |\n9 |     n <= 2 ? n : fib(n-1) + fib(n-2)\n\
    \  |              ^ expected one of `.`, `;`, `?`, `}`, or an operator\n\nerror:\
    \ aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        1\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    (0..n).fold(1,\
    \ |acc, _| {\n        acc += 1;\n        acc\n    });\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp8spbpldf.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n12 |     });\n   |       - help: remove this semicolon\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 {\n\
    \        return 0\n    }\n    else if n == 1 {\n        return 1\n    }\n    else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut fib_cache = [0; 3];\n\n    fib_cache[1]\
    \ = fib_cache[2] = fib_cache[3] = 1;\n    fib_cache[0] += 1;\n\n    for i in 1..n-1\
    \ {\n        let tmp = fib_cache[i] - fib_cache[i-1];\n        fib_cache[i] +=\
    \ fib_cache[i-2];\n        fib_cache[i-1] = tmp;\n    }\n\n    fib_cache[0]\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmps8e59899.rs:15:35\n   |\n\
    15 |     fib_cache[1] = fib_cache[2] = fib_cache[3] = 1;\n   |               \
    \     ------------   ^^^^^^^^^^^^^^^^ expected integer, found `()`\n   |     \
    \               |\n   |                    expected due to the type of this binding\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmps8e59899.rs:15:20\n   |\n15 |\
    \     fib_cache[1] = fib_cache[2] = fib_cache[3] = 1;\n   |     ------------ \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected integer, found `()`\n   |     |\n\
    \   |     expected due to the type of this binding\n\nerror[E0277]: the type `[{integer}]`\
    \ cannot be indexed by `isize`\n  --> /tmp/tmps8e59899.rs:19:19\n   |\n19 |  \
    \       let tmp = fib_cache[i] - fib_cache[i-1];\n   |                   ^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the\
    \ trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because\
    \ of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\nerror[E0277]:\
    \ the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmps8e59899.rs:19:34\n\
    \   |\n19 |         let tmp = fib_cache[i] - fib_cache[i-1];\n   |           \
    \                       ^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges\
    \ of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed\
    \ by `isize`\n  --> /tmp/tmps8e59899.rs:20:9\n   |\n20 |         fib_cache[i]\
    \ += fib_cache[i-2];\n   |         ^^^^^^^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is\
    \ not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer"
  stdout: ''
  timestamp: 1660028158
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 0 {\n\
    \        1\n    } else {\n        fib(n + 1) + fib(n-1)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028164
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 3 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp_vzv453h.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut f = 0;\n\
    \    let mut g = 1;\n    while n > 2 {\n        f += g;\n        g += f;\n   \
    \     n -= 1;\n    }\n    f\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpcjf9h0gv.rs:14:9\n\
    \   |\n8  | fn fib(n: isize) -> isize {\n   |        - help: consider making this\
    \ binding mutable: `mut n`\n...\n14 |         n -= 1;\n   |         ^^^^^^ cannot\
    \ assign to immutable argument\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut prev =\
    \ 0isize;\n    let mut next = 1isize;\n    let mut tmp;\n    while n > 0 {\n \
    \       tmp = next;\n        next = prev + next;\n        prev = tmp;\n      \
    \  n -= 1;\n    }\n    next\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmppb82mw9q.rs:16:9\n\
    \   |\n8  | fn fib(n: isize) -> isize {\n   |        - help: consider making this\
    \ binding mutable: `mut n`\n...\n16 |         n -= 1;\n   |         ^^^^^^ cannot\
    \ assign to immutable argument\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 { 1 }\
    \ else { fib(n - 2) + fib(n - 1) }\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpkw_gawyy.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       0\n    } else {\n        fib(n - 1) + fib(n - 2)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `55`', /tmp/tmp84ds90bw.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // check if n\
    \ is in [0, 55]\n    assert!(n in 0..55);\n\n    // calculate nth Fibonacci number\n\
    \    let mut result = 1;\n    for i in 0..(n - 1) {\n        result = result+result;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, or an operator, found\
    \ keyword `in`\n  --> /tmp/tmpioo05cjf.rs:10:15\n   |\n10 |     assert!(n in 0..55);\n\
    \   |               ^^ expected one of 7 possible tokens\n\nerror: aborting due\
    \ to previous error\n\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut n1 = 0,\
    \ n2 = 1;\n    loop {\n        let n = n1 + n2;\n        if n < 0 {\n        \
    \    n1 = 1;\n            n2 = 0;\n        }\n        if n == 0 {\n          \
    \  break;\n        }\n        n1 = n2;\n        n2 = n;\n    }\n    n\n}\n\nfn\
    \ main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n   \
    \ assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n\
    \ --> /tmp/tmptfz4lj7e.rs:9:19\n  |\n9 |     let mut n1 = 0, n2 = 1;\n  |    \
    \               ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\nerror:\
    \ aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n-1)+fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 { return\
    \ n; }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    while a < n {\n      \
    \  let c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `21`,\n right: `55`', /tmp/tmp3byq45uu.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    (1..=n).fold(0,\
    \ |acc, x| acc + fib(x-1))\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `55`', /tmp/tmp307jzfhs.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // Implementation\
    \ from https://www.geeksforgeeks.org/fibonacci-numbers/\n    if n <= 1 {\n   \
    \     return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut f1 = 0,\
    \ f2 = 1;\n    for i in 0..n {\n        let tmp = &f1;\n        f1 = f2;\n   \
    \     f2 = *tmp;\n    }\n    (f1, f2)\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n\
    \ --> /tmp/tmp8k6257dm.rs:9:19\n  |\n9 |     let mut f1 = 0, f2 = 1;\n  |    \
    \               ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\nerror:\
    \ aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib_rec(n - 1) + fib_rec(n - 2)\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fib_rec` in this scope\n  --> /tmp/tmppv34v5vf.rs:13:5\n\
    \   |\n13 |     fib_rec(n - 1) + fib_rec(n - 2)\n   |     ^^^^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find function `fib_rec` in this scope\n \
    \ --> /tmp/tmppv34v5vf.rs:13:22\n   |\n13 |     fib_rec(n - 1) + fib_rec(n - 2)\n\
    \   |                      ^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n\n    // Calculate Fibonacci number by recursion\n\
    \    let mut a: isize = 1;\n    let mut b: isize = 0;\n    for _ in 0..n {\n \
    \       let tmp = a.clone();\n        a = b;\n        b = tmp + b;\n    }\n\n\
    \    a\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `34`,\n right: `55`', /tmp/tmpc_7dx34_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    assert!(n >= 0,\
    \ \"Negative value of Fibonacci number: {}\", n);\n\n    if n < 2 {\n        return\
    \ n;\n    }\n\n    let mut f1 = 1;\n    let mut f2 = 1;\n    for _ in 0..n {\n\
    \        let mut tmp = f1;\n        f1 = f2;\n        f2 = tmp + f1;\n    }\n\
    \    return f2;\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpdg6xxq12.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    match n {\n  \
    \      0 => 0,\n        1 => 1,\n        2 => 1,\n        3 => 2,\n        4 =>\
    \ 3,\n        _ => fib(n - 1) + fib(n - 2)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut a = 0;\n\
    \    let mut b = 1;\n    while n != 0 {\n        (a, b) = (b, a + b);\n      \
    \  n -= 1;\n    }\n    a\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpkpacd_tk.rs:13:9\n\
    \   |\n8  | fn fib(n: isize) -> isize {\n   |        - help: consider making this\
    \ binding mutable: `mut n`\n...\n13 |         n -= 1;\n   |         ^^^^^^ cannot\
    \ assign to immutable argument\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    let mut prev = 0;\n    let mut next = 1;\n    for\
    \ _ in 0..n {\n        let next = prev + next;\n        prev = next;\n    }\n\
    \    next\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `55`', /tmp/tmp3_jri8jx.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 {\n\
    \        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    let\
    \ mut n1 = fib(n/2);\n    let mut n2 = fib(n/2);\n\n    for _ in 0..2 {\n    \
    \    n1 += n2;\n        n2 = n1;\n    }\n\n    n2\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `64`,\n right: `55`', /tmp/tmpapm7zobr.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n, n - 1);\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 2 arguments were supplied\n\
    \  --> /tmp/tmp5d7_wg80.rs:12:5\n   |\n12 |     fib(n, n - 1);\n   |     ^^^ -\
    \  ----- supplied 2 arguments\n   |     |\n   |     expected 1 argument\n   |\n\
    note: function defined here\n  --> /tmp/tmp5d7_wg80.rs:8:4\n   |\n8  | fn fib(n:\
    \ isize) -> isize {\n   |    ^^^ --------\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp5d7_wg80.rs:8:21\n   |\n8  | fn fib(n: isize) -> isize {\n   |\
    \    ---              ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly\
    \ returns `()` as its body has no tail or `return` expression\n...\n12 |     fib(n,\
    \ n - 1);\n   |                  - help: remove this semicolon\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0061, E0308.\n\
    For more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 { 1 }\n    else { fib(n-1) + fib(n-2) }\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpw6n82r3c.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    assert!(n > 0);\n\
    \    assert!(n <= 3);\n    let mut f1 = 1;\n    let mut f2 = 1;\n    for i in\
    \ 0..n {\n        let mut c = f1;\n        f1 = f2;\n        f2 = c;\n    }\n\
    \    f2\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n <= 3'', /tmp/tmpinkk5ej4.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660028158
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn one() -> isize\
    \ { 1 }\n    fn two() -> isize { 2 }\n    fn twoup(n: isize) -> isize {\n    \
    \    if n == 1 { 1 }\n        else { n + twoup(n + 2) }\n    }\n    match n {\n\
    \        0 => 0,\n        1 => 1,\n        _ => twoup(n * one()),\n    }\n}\n\n\
    fn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028164
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    (0..n).fold(0,\
    \ |a, b| {\n        a + b\n    })\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `45`,\n right: `55`', /tmp/tmpwgkj9di9.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       1\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpsdcad01b.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n    fib(n-1).wrapping_add(fib(n - 2))\n}\n\
    \nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp_2hfd572.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return 1;\n    }\n\n    if n <= 3 {\n        return fib(n - 1) + fib(n\
    \ - 2);\n    }\n\n    if n <= 8 {\n        return fib(n - 3) + fib(n - 5);\n \
    \   }\n\n    if n <= 21 {\n        return fib(n - 7) + fib(n - 11);\n    }\n\n\
    \    fib(n + 5) + fib(n - 10)\n}\n\nfn main() {\n    let candidate = fib;\n  \
    \  assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `55`', /tmp/tmp08bz73kn.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut f1 = 0,\
    \ f2 = 1;\n    for i in 1..n {\n        let tmp = f1;\n        f1 = f2;\n    \
    \    f2 = tmp + f1;\n    }\n    f2\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n\
    \ --> /tmp/tmp20bx2h26.rs:9:19\n  |\n9 |     let mut f1 = 0, f2 = 1;\n  |    \
    \               ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\nerror:\
    \ aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028120
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       1\n    } else {\n        fib(n-1) + fib(n-2)\n    }\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpsdcad01b.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028157
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 0 {\n \
    \       panic!(\"cannot compute Fibonacci number for negative numbers\");\n  \
    \  }\n\n    fn one() -> isize {\n        1\n    }\n\n    fn two() -> isize {\n\
    \        2\n    }\n\n    fn three() -> isize {\n        3\n    }\n\n    fn four()\
    \ -> isize {\n        5\n    }\n\n    fn five() -> isize {\n        8\n    }\n\
    \n    fn six() -> isize {\n        13\n    }\n\n    fn seven() -> isize {\n  \
    \      21\n    }\n\n    fn eight() -> isize {\n        34\n    }\n\n    fn nine()\
    \ -> isize {\n        55\n    }\n\n    fn ten() -> isize {\n        89\n    }\n\
    \n    fn hundred() -> isize {\n        144\n    }\n\n    fn thousand() -> isize\
    \ {\n        233\n    }\n\n    fn million() -> isize {\n        377\n    }\n\n\
    \    fn billion() -> isize {\n        613\n    }\n\n    fn trillion() -> isize\
    \ {\n        987\n    }\n\n    fn quadrillion() -> isize {\n        1597\n   \
    \ }\n\n    fn quintillion() -> isize {\n        2584\n    }\n\n    fn sextillion()\
    \ -> isize {\n        4181\n    }\n\n    fn septillion() -> isize {\n        6765\n\
    \    }\n\n    fn octillion() -> isize {\n        10946\n    }\n\n    fn nonillion()\
    \ -> isize {\n        17711\n    }\n\n    fn decillion() -> isize {\n        28657\n\
    \    }\n\n    fn undecillion() -> isize {\n        46368\n    }\n\n    fn duodecillion()\
    \ -> isize {\n        72057\n    }\n\n    fn tredecillion() -> isize {\n     \
    \   1213925\n    }\n\n    fn duodecillion() -> isize {\n        1541750\n    }\n\
    \n    fn undecillion() -> isize {\n        2882307\n    }\n\n    fn millennium()\
    \ -> isize {\n        57641581\n    }\n\n    fn thousand() -> isize {\n      \
    \  13841289\n    }\n\n    fn million() -> isize {\n        2305843008\n    }\n\
    \n    fn billion() -> isize {\n        8680508170\n    }\n}\n\nfn main() {\n \
    \   let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0428]: the name `duodecillion` is defined multiple times\n   -->\
    \ /tmp/tmphm87zuf8.rs:113:5\n    |\n105 |     fn duodecillion() -> isize {\n \
    \   |     -------------------------- previous definition of the value `duodecillion`\
    \ here\n...\n113 |     fn duodecillion() -> isize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ `duodecillion` redefined here\n    |\n    = note: `duodecillion` must be defined\
    \ only once in the value namespace of this block\n\nerror[E0428]: the name `undecillion`\
    \ is defined multiple times\n   --> /tmp/tmphm87zuf8.rs:117:5\n    |\n101 |  \
    \   fn undecillion() -> isize {\n    |     ------------------------- previous\
    \ definition of the value `undecillion` here\n...\n117 |     fn undecillion()\
    \ -> isize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ `undecillion` redefined here\n\
    \    |\n    = note: `undecillion` must be defined only once in the value namespace\
    \ of this block\n\nerror[E0428]: the name `thousand` is defined multiple times\n\
    \   --> /tmp/tmphm87zuf8.rs:125:5\n    |\n57  |     fn thousand() -> isize {\n\
    \    |     ---------------------- previous definition of the value `thousand`\
    \ here\n...\n125 |     fn thousand() -> isize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^\
    \ `thousand` redefined here\n    |\n    = note: `thousand` must be defined only\
    \ once in the value namespace of this block\n\nerror[E0428]: the name `million`\
    \ is defined multiple times\n   --> /tmp/tmphm87zuf8.rs:129:5\n    |\n61  |  \
    \   fn million() -> isize {\n    |     --------------------- previous definition\
    \ of the value `million` here\n...\n129 |     fn million() -> isize {\n    | \
    \    ^^^^^^^^^^^^^^^^^^^^^ `million` redefined here\n    |\n    = note: `million`\
    \ must be defined only once in the value namespace of this block\n\nerror[E0428]:\
    \ the name `billion` is defined multiple times\n   --> /tmp/tmphm87zuf8.rs:133:5\n\
    \    |\n65  |     fn billion() -> isize {\n    |     --------------------- previous\
    \ definition of the value `billion` here\n...\n133 |     fn billion() -> isize\
    \ {\n    |     ^^^^^^^^^^^^^^^^^^^^^ `billion` redefined here\n    |\n    = note:\
    \ `billion` must be defined only once in the valu"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return 1;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpgoi4s4tq.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028159
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    assert!(n == 0\
    \ || n == 1 || n == 2, \"Only non-negative values can be used.\");\n    if n ==\
    \ 0 {\n        return 1;\n    }\n    if n == 1 {\n        return 1;\n    }\n \
    \   if n == 2 {\n        return 2;\n    }\n    // the formula below is \"the sum\
    \ of two squares\", as described in the proof\n    // of [OEIS](http://oeis.org/search?q=1-2^n+a+b&sort=&col=&license=&col=&license=)\n\
    \    let mut two = fib(n - 1);\n    let mut one = fib(n - 2);\n    let a = one\
    \ + two;\n    let b = one - two;\n    a + b\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''Only non-negative values can be used.'',
    /tmp/tmprti7cjmk.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660028159
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 { 1\
    \ }\n    else { fib(n-1) + fib(n-2) }\n}\n\nfn main() {\n    let candidate = fib;\n\
    \    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8),\
    \ 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028159
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut num1 =\
    \ 1;\n    let mut num2 = 1;\n    for i in 1..n {\n        let c = num1;\n    \
    \    num1 = num2;\n        num2 = c;\n    }\n    num1\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `55`', /tmp/tmpgfwaf7eg.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028159
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    assert!(n == 0\
    \ || n == 1);\n    if n == 0 {\n        return 1;\n    }\n    if n == 1 {\n  \
    \      return 1;\n    }\n    let mut f1 = 1;\n    let mut f2 = 1;\n    for i in\
    \ 0..n {\n        let tmp = f1;\n        f1 = f2;\n        f2 = tmp;\n    }\n\
    \    f2\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n == 0 || n == 1'', /tmp/tmpenq6yj7f.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660028159
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib0(a: isize,\
    \ mut b: isize) -> isize {\n        if b == 0 {\n            return a;\n     \
    \   }\n        fib0(b, a + b);\n    }\n\n    fib0(0, 1);\n}\n\nfn main() {\n \
    \   let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpc4y2ci5u.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n16 |     fib0(0, 1);\n   |               - help:\
    \ remove this semicolon\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpc4y2ci5u.rs:9:40\n\
    \   |\n9  |     fn fib0(a: isize, mut b: isize) -> isize {\n   |        ---- \
    \                           ^^^^^ expected `isize`, found `()`\n   |        |\n\
    \   |        implicitly returns `()` as its body has no tail or `return` expression\n\
    ...\n13 |         fib0(b, a + b);\n   |                       - help: remove this\
    \ semicolon\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return 1;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpgoi4s4tq.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028159
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    let mut f1 = 1;\n\
    \    let mut f2 = 1;\n    for i in 0..n {\n        let temp = f1 + f2;\n     \
    \   f1 = f2;\n        f2 = temp;\n    }\n    temp\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `temp` in this scope\n  --> /tmp/tmpifaw4v4l.rs:16:5\n\
    \   |\n16 |     temp\n   |     ^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    (0..n).fold1i(|a,\
    \ b| a + b) as isize\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `fold1i` found for struct `std::ops::Range`\
    \ in the current scope\n --> /tmp/tmpes0yhpis.rs:9:12\n  |\n9 |     (0..n).fold1i(|a,\
    \ b| a + b) as isize\n  |            ^^^^^^ method not found in `std::ops::Range<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    fn fib_impl(mut\
    \ x: isize, mut y: isize) -> isize {\n        if x == 1 {\n            return\
    \ y;\n        }\n        fib_impl(x - 1, y + x) as usize\n    }\n    fib_impl(n\
    \ - 2, 1) as isize\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpv4rc8ldm.rs:13:9\n   |\n\
    9  |     fn fib_impl(mut x: isize, mut y: isize) -> isize {\n   |            \
    \                                    ----- expected `isize` because of return\
    \ type\n...\n13 |         fib_impl(x - 1, y + x) as usize\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n13 |         (fib_impl(x\
    \ - 1, y + x) as usize).try_into().unwrap()\n   |         +                  \
    \             +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028158
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    // base case\n\
    \    if n == 0 {\n        return 0;\n    }\n\n    // recursive case\n    if n\
    \ == 1 {\n        return 1;\n    }\n\n    // recursive call\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028159
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut f1 = 1;\n    let mut f2 = 1;\n    for\
    \ _ in 0..n {\n        let tmp = f2;\n        f1 = f2;\n        f2 = tmp + f1;\n\
    \    }\n\n    f2\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1024`,\n right: `55`', /tmp/tmp92mtzcpe.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028159
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 0 {\n \
    \       0\n    } else if n <= 2 {\n        n\n    } else {\n        n + fib(n-1)\
    \ + fib(n-2)\n    }\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `330`,\n right: `55`', /tmp/tmpd_83pmhy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028159

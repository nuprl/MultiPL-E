language: rs
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        let mut temp:\
    \ isize = a;\n        while temp % b != 0 {\n            temp = temp - 1;\n  \
    \      }\n        temp\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `1`', /tmp/tmpqojc0eb7.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a as isize)\
    \ * (b as isize) / gcd(a, b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `gcd` in this scope\n --> /tmp/tmpxrxn2p3f.rs:7:35\n\
    \  |\n7 |     (a as isize) * (b as isize) / gcd(a, b)\n  |                   \
    \                ^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ result = a;\n    while result % b != 0 {\n        result = result / b;\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmptrl0_h2p.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // TODO:\
    \ Optimize this code\n    let mut s = 1;\n    while a % b != 0 {\n        s *=\
    \ b;\n        a /= b;\n    }\n    s\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmppkvm9tag.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a as usize)\
    \ * (b as usize) / (a as usize).gcd(b as usize) as isize\n}\n\nfn main() {\n \
    \   let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `usize` in the current\
    \ scope\n --> /tmp/tmpr_1eofr8.rs:7:48\n  |\n7 |     (a as usize) * (b as usize)\
    \ / (a as usize).gcd(b as usize) as isize\n  |                               \
    \                 ^^^ method not found in `usize`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpr_1eofr8.rs:7:5\n  |\n6 | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n  |                                           \
    \        ----- expected `isize` because of return type\n7 |     (a as usize) *\
    \ (b as usize) / (a as usize).gcd(b as usize) as isize\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n7 |     ((a as usize)\
    \ * (b as usize) / (a as usize).gcd(b as usize) as isize).try_into().unwrap()\n\
    \  |     +                                                                   +++++++++++++++++++++\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ lcm = a;\n    let mut gcd = b;\n    while lcm * gcd != 0 {\n        let mut\
    \ new_lcm = lcm;\n        let mut new_gcd = gcd;\n        while new_lcm % new_gcd\
    \ == 0 {\n            new_lcm /= new_gcd;\n            new_gcd /= 2;\n       \
    \ }\n        if new_lcm > gcd {\n            gcd = new_gcd;\n        } else {\n\
    \            lcm = new_lcm;\n        }\n    }\n    gcd\n}\n\nfn main() {\n   \
    \ let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976091
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 1 {\n        return b;\n    }\n    if b == 1 {\n        return a;\n    }\n\n\
    \    let mut i = 1u64.pow(a);\n    let mut j = 1u64.pow(b);\n\n    while i <=\
    \ j {\n        let mut gcd = i;\n        i /= a;\n        j /= b;\n\n        while\
    \ i < j {\n            if i % gcd != 0 && j % gcd != 0 {\n                gcd\
    \ *= i;\n            } else {\n                gcd *= j;\n                break;\n\
    \            }\n\n            i += 1;\n            j += 1;\n        }\n\n    \
    \    if gcd > a {\n            break;\n        }\n    }\n\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `gcd` in this scope\n  --> /tmp/tmp29wlq1nx.rs:39:5\n\
    \   |\n39 |     gcd\n   |     ^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp29wlq1nx.rs:14:26\n   |\n14 |     let mut i = 1u64.pow(a);\n\
    \   |                          ^ expected `u32`, found `isize`\n   |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \   |\n14 |     let mut i = 1u64.pow(a.try_into().unwrap());\n   |           \
    \                ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp29wlq1nx.rs:15:26\n   |\n15 |     let mut j = 1u64.pow(b);\n   |   \
    \                       ^ expected `u32`, found `isize`\n   |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n   |\n15\
    \ |     let mut j = 1u64.pow(b.try_into().unwrap());\n   |                   \
    \        ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp29wlq1nx.rs:19:14\n\
    \   |\n19 |         i /= a;\n   |              ^ expected `u64`, found `isize`\n\
    \nerror[E0277]: cannot divide-assign `u64` by `isize`\n  --> /tmp/tmp29wlq1nx.rs:19:11\n\
    \   |\n19 |         i /= a;\n   |           ^^ no implementation for `u64 /= isize`\n\
    \   |\n   = help: the trait `DivAssign<isize>` is not implemented for `u64`\n\
    \   = help: the following other types implement trait `DivAssign<Rhs>`:\n    \
    \         <f32 as DivAssign<&f32>>\n             <f32 as DivAssign>\n        \
    \     <f64 as DivAssign<&f64>>\n             <f64 as DivAssign>\n            \
    \ <i128 as DivAssign<&i128>>\n             <i128 as DivAssign>\n             <i16\
    \ as DivAssign<&i16>>\n             <i16 as DivAssign>\n           and 20 others\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp29wlq1nx.rs:20:14\n   |\n20 |\
    \         j /= b;\n   |              ^ expected `u64`, found `isize`\n\nerror[E0277]:\
    \ cannot divide-assign `u64` by `isize`\n  --> /tmp/tmp29wlq1nx.rs:20:11\n   |\n\
    20 |         j /= b;\n   |           ^^ no implementation for `u64 /= isize`\n\
    \   |\n   = help: the trait `DivAssign<isize>` is not implemented for `u64`\n\
    \   = help: the following other "
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp2i1g62c5.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ i = 0;\n    let mut j = 1;\n    while i < a && j < b {\n        if a % i ==\
    \ 0 && b % j == 0 {\n            i += 1;\n            j += 1;\n        } else\
    \ if j > b {\n            j += 1;\n        }\n        i += 1;\n    }\n    j\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpd20fg8ly.rs:10:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        (a + ((b - a) / 2))\n    } else {\n        (b + ((a - b) / 2))\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `1`', /tmp/tmplwwohdea.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ < b);\n    let mut greatest = 1;\n    for divisor in 0..a {\n        if b /\
    \ divisor > greatest {\n            greatest = b / divisor;\n        }\n    }\n\
    \    greatest\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to divide by zero'', /tmp/tmp9rtff_r3.rs:10:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).max(a\
    \ % b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp3260typz.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).checked_mul(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpvjy0bht7.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ result: usize = 1;\n    while a > 0 && b > 0 {\n        if a >= b {\n      \
    \      a %= b;\n        } else {\n            b %= a;\n        }\n        result\
    \ *= a;\n        a *= b;\n        result %= a;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptqjgpzwm.rs:14:19\n   |\n\
    14 |         result *= a;\n   |                   ^ expected `usize`, found `isize`\n\
    \nerror[E0277]: cannot multiply-assign `usize` by `isize`\n  --> /tmp/tmptqjgpzwm.rs:14:16\n\
    \   |\n14 |         result *= a;\n   |                ^^ no implementation for\
    \ `usize *= isize`\n   |\n   = help: the trait `MulAssign<isize>` is not implemented\
    \ for `usize`\n   = help: the following other types implement trait `MulAssign<Rhs>`:\n\
    \             <f32 as MulAssign<&f32>>\n             <f32 as MulAssign>\n    \
    \         <f64 as MulAssign<&f64>>\n             <f64 as MulAssign>\n        \
    \     <i128 as MulAssign<&i128>>\n             <i128 as MulAssign>\n         \
    \    <i16 as MulAssign<&i16>>\n             <i16 as MulAssign>\n           and\
    \ 20 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmptqjgpzwm.rs:16:19\n\
    \   |\n16 |         result %= a;\n   |                   ^ expected `usize`, found\
    \ `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmptqjgpzwm.rs:18:5\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                                 ----- expected `isize` because\
    \ of return type\n...\n18 |     result\n   |     ^^^^^^ expected `isize`, found\
    \ `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n   |\n18 |     result.try_into().unwrap()\n   |\
    \           ++++++++++++++++++++\n\nerror[E0277]: cannot mod-assign `usize` by\
    \ `isize``\n  --> /tmp/tmptqjgpzwm.rs:16:16\n   |\n16 |         result %= a;\n\
    \   |                ^^ no implementation for `usize %= isize`\n   |\n   = help:\
    \ the trait `RemAssign<isize>` is not implemented for `usize`\n   = help: the\
    \ following other types implement trait `RemAssign<Rhs>`:\n             <f32 as\
    \ RemAssign<&f32>>\n             <f32 as RemAssign>\n             <f64 as RemAssign<&f64>>\n\
    \             <f64 as RemAssign>\n             <i128 as RemAssign<&i128>>\n  \
    \           <i128 as RemAssign>\n             <i16 as RemAssign<&i16>>\n     \
    \        <i16 as RemAssign>\n           and 20 others\n\ne"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0 && b > 0);\n    if a == 0 {\n        return b;\n    }\n    if b == 0 {\n\
    \        return a;\n    }\n    let mut greatest_divisor = a % b;\n    greatest_divisor\
    \ = greatest_divisor - b if a < b;\n    greatest_divisor = greatest_divisor +\
    \ b if a > b;\n    greatest_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator,\
    \ found keyword `if`\n  --> /tmp/tmptz5vn4xz.rs:15:45\n   |\n15 |     greatest_divisor\
    \ = greatest_divisor - b if a < b;\n   |                                     \
    \        ^^ expected one of 8 possible tokens\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpnceq9mmf.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp2i1g62c5.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ != 0, \"The given values must be positive\");\n    debug_assert!(b != 0, \"\
    The given values must be positive\");\n\n    if a == 0 {\n        1\n    } else\
    \ if a > b {\n        greatest_common_divisor(b, a % b)\n    } else {\n      \
    \  greatest_common_divisor(a, (b % a) + a)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976092
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let t = a % b;\n        a = b;\n        b = t;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpruxzt8p3.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpruxzt8p3.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // If one\
    \ of them is a perfect square, we're done.\n    if a == b {\n        return a;\n\
    \    }\n\n    // If the numbers are relatively prime, return their greatest common\
    \ divisor.\n    // Otherwise, calculate the divisors one at a time, starting from\
    \ the smallest numbers.\n    // It can be seen that all divisors are smaller than\
    \ the greatest common divisor.\n    // For example, gcd(3, 7) = 11, gcd(5, 11)\
    \ = 3, gcd(11, 13) = 3.\n    // In any case, the greatest common divisor is either\
    \ one or one of those divisors.\n    if a % b == 0 {\n        return b;\n    }\n\
    \n    let mut a = a;\n    let mut b = b;\n\n    for divisor in &[b, a] {\n   \
    \     if divisor == 1 {\n            continue;\n        }\n\n        while a %\
    \ divisor == 0 {\n            a /= divisor;\n        }\n\n        while b % divisor\
    \ == 0 {\n            b /= divisor;\n        }\n    }\n\n    // If a or b is prime,\
    \ then there is an even greater common divisor, namely sqrt(a * b)\n    if a ==\
    \ b {\n        return a;\n    }\n\n    debug_assert!(a > b);\n\n    (a * b).sqrt().unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `&isize` with `{integer}`\n  --> /tmp/tmp5n4i3zzo.rs:25:20\n\
    \   |\n25 |         if divisor == 1 {\n   |                    ^^ no implementation\
    \ for `&isize == {integer}`\n   |\n   = help: the trait `PartialEq<{integer}>`\
    \ is not implemented for `&isize`\n   = help: the following other types implement\
    \ trait `PartialEq<Rhs>`:\n             f32\n             f64\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n           and 6 others\n\nerror[E0599]: no method named `sqrt`\
    \ found for type `isize` in the current scope\n  --> /tmp/tmp5n4i3zzo.rs:45:13\n\
    \   |\n45 |     (a * b).sqrt().unwrap()\n   |             ^^^^ method not found\
    \ in `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        (a + b) % (b + a)\n    } else {\n        (b + a) % (a + b)\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp9pbj7ymz.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ remainder: isize = 1;\n    while a % b != 0 {\n        remainder += 1;\n   \
    \     a /= b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: variable `remainder` is assigned to, but never used\n --> /tmp/tmp69394j4w.rs:7:13\n\
    \  |\n7 |     let mut remainder: isize = 1;\n  |             ^^^^^^^^^\n  |\n\
    \  = note: `#[warn(unused_variables)]` on by default\n  = note: consider using\
    \ `_remainder` instead\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmp69394j4w.rs:10:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |         a /= b;\n   |         ^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to previous error;\
    \ 1 warning emitted\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    let mut greatest_common_divisor = a;\n  \
    \  for i in 1..b {\n        if a % i == 0 {\n            greatest_common_divisor\
    \ = i;\n        } else {\n            break;\n        }\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmp1_gyj0h4.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // TODO:\
    \ make this more efficient\n\n    let mut a = a;\n    let mut b = b;\n\n    if\
    \ a > b {\n        (a, b) = (b, a);\n    }\n\n    let mut c: isize = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            c = b;\n            break;\n\
    \        }\n\n        b = b / 2;\n    }\n\n    if c * 2 > a && c * 2 > b {\n \
    \       (c, a) = (b, c);\n    }\n\n    if a > b {\n        (a, b) = (b, a);\n\
    \    }\n\n    if b == 0 {\n        return a;\n    }\n\n    (c, a)\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpe5834fay.rs:38:5\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n38 |     (c, a)\n   |     ^^^^^^ expected `isize`, found tuple\n\
    \   |\n   = note: expected type `isize`\n             found tuple `(isize, isize)`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > b, \"`a` must be greater than `b`\");\n    if a <= 1 {\n        return a;\n\
    \    }\n    if b <= 1 {\n        return b;\n    }\n\n    let mut d = 0;\n    let\
    \ mut c = a;\n\n    while c <= b {\n        d += c;\n        c += 1;\n    }\n\n\
    \    d\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''`a` must be greater than `b`'', /tmp/tmpmi26fwni.rs:7:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_divisor = 1;\n    let mut gcd_remainder = 0;\n    let mut gcd_divisor\
    \ = 0;\n\n    for divisor in &[a, b] {\n        if divisor != 0 {\n          \
    \  gcd_remainder = gcd_remainder % divisor;\n            gcd_divisor = gcd_divisor\
    \ * divisor + divisor;\n        }\n    }\n\n    if gcd_remainder != 0 {\n    \
    \    greatest_divisor = gcd_divisor;\n    }\n\n    greatest_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `&isize` with `{integer}`\n  --> /tmp/tmp0v_7q9wu.rs:12:20\n\
    \   |\n12 |         if divisor != 0 {\n   |                    ^^ no implementation\
    \ for `&isize == {integer}`\n   |\n   = help: the trait `PartialEq<{integer}>`\
    \ is not implemented for `&isize`\n   = help: the following other types implement\
    \ trait `PartialEq<Rhs>`:\n             f32\n             f64\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n           and 6 others\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // If both\
    \ are even then return only even number\n    if a % 2 == 0 && b % 2 == 0 {\n \
    \       return a / 2;\n    }\n\n    // if either number is odd then return only\
    \ that number\n    if a % 2 == 1 {\n        return a / 2;\n    }\n\n    // if\
    \ both are odd then return only that number\n    if b % 2 == 1 {\n        return\
    \ b / 2;\n    }\n\n    // If both are even then return only even number\n    if\
    \ a % 2 == 0 {\n        return a / 2;\n    }\n\n    // if either number is odd\
    \ then return only that number\n    if b % 2 == 0 {\n        return b / 2;\n \
    \   }\n\n    // If both are odd then return only that number\n    if a % 2 ==\
    \ 1 && b % 2 == 1 {\n        return b / 2;\n    }\n\n    // If either number is\
    \ even then return only that number\n    if a % 2 == 0 {\n        return a / 2;\n\
    \    }\n\n    // if either number is odd then return only that number\n    if\
    \ b % 2 == 1 {\n        return b / 2;\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0317]: `if` may be missing an `else` clause\n  --> /tmp/tmpkzjci0so.rs:43:5\n\
    \   |\n6  |   fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |\
    \                                                     ----- expected `isize` because\
    \ of this return type\n...\n43 | /     if b % 2 == 1 {\n44 | |         return\
    \ b / 2;\n45 | |     }\n   | |_____^ expected `isize`, found `()`\n   |\n   =\
    \ note: `if` expressions without `else` evaluate to `()`\n   = help: consider\
    \ adding an `else` block that evaluates to the expected type\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0317`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ n = a;\n    while n > b {\n        n -= b;\n    }\n    n\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp6gon15la.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b +\
    \ b) % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplvuvjzxm.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ i = a;\n    let mut j = b;\n    while i > 0 && j > 0 {\n        if i % j ==\
    \ 0 {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n\
    \    }\n    i\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976091
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a % b;\n    while a != 0 {\n        a = b / a;\n        b += 1;\n    }\n\
    \    b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp0e3_8vo4.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b += 1;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut i = 0;\n    let mut j =\
    \ 0;\n    while (a % i == 0) && (b % j == 0) {\n        i += 1;\n        j +=\
    \ 1;\n    }\n    if a % i == 0 {\n        return a / i;\n    }\n    if b % j ==\
    \ 0 {\n        return b / j;\n    }\n    return i + j + 1;\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmp6oaa8lc4.rs:12:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // If they\
    \ are equal, return b\n    if a == b {\n        return b;\n    }\n\n    // Use\
    \ Euclid's algorithm to find the greatest common divisor of a and b\n    // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\
    \    loop {\n        let mid = (a + b) >> 1;\n        let gcd = &a / gcd(&mid,\
    \ &b);\n        a = &mid;\n        b = &gcd;\n    }\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `gcd` in this scope\n  --> /tmp/tmp3ip0bbg9.rs:16:24\n\
    \   |\n16 |         let gcd = &a / gcd(&mid, &b);\n   |                      \
    \  ^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3ip0bbg9.rs:17:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                             ----- expected due to this parameter type\n...\n\
    17 |         a = &mid;\n   |             ^^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider removing the borrow\n   |\n17 -         a = &mid;\n17 +\
    \         a = mid;\n   | \n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3ip0bbg9.rs:18:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                       ----- expected due to this parameter type\n\
    ...\n18 |         b = &gcd;\n   |             ^^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider removing the borrow\n   |\n18 -         b = &gcd;\n18 +\
    \         b = gcd;\n   | \n\nerror: aborting due to 3 previous errors\n\nSome\
    \ errors have detailed explanations: E0308, E0425.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp4srezfvg.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a % b;\n    while a != 0 {\n        a = a / b;\n        b = b - 1;\n   \
    \ }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpkaxcvio0.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = b - 1;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert_eq!(a,\
    \ b);\n    if a < b {\n        (a, b)\n    } else {\n        (b, a)\n    }\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2a0099jl.rs:9:9\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n...\n9 |         (a, b)\n  |         ^^^^^^ expected `isize`, found tuple\n\
    \  |\n  = note: expected type `isize`\n            found tuple `(isize, isize)`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp2a0099jl.rs:11:9\n   |\n6  | fn\
    \ greatest_common_divisor(a: isize, b: isize) -> isize {\n   |               \
    \                                    ----- expected `isize` because of return\
    \ type\n...\n11 |         (b, a)\n   |         ^^^^^^ expected `isize`, found\
    \ tuple\n   |\n   = note: expected type `isize`\n             found tuple `(isize,\
    \ isize)`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        1\n    } else if a > b {\n        greatest_common_divisor(b, a)\n\
    \    } else {\n        greatest_common_divisor(a, -b)\n    }\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976092
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a + (b\
    \ - a - 1)) / b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpiaqorkcx.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    fn gcd_rec(a: isize, b: isize)\
    \ -> isize {\n        if a < b {\n            gcd_rec(b, a)\n        } else {\n\
    \            gcd_rec(a, b)\n        }\n    }\n\n    gcd_rec(a, b)\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976092
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b)\
    \ as usize + b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8li7fs61.rs:7:24\n  |\n7 |\
    \     (a % b) as usize + b\n  |                        ^ expected `usize`, found\
    \ `isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp8li7fs61.rs:7:5\n  |\n\
    6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |           \
    \                                        ----- expected `isize` because of return\
    \ type\n7 |     (a % b) as usize + b\n  |     ^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n  |\n7 |     ((a % b) as usize + b).try_into().unwrap()\n\
    \  |     +                    +++++++++++++++++++++\n\nerror[E0277]: cannot add\
    \ `isize` to `usize`\n --> /tmp/tmp8li7fs61.rs:7:22\n  |\n7 |     (a % b) as usize\
    \ + b\n  |                      ^ no implementation for `usize + isize`\n  |\n\
    \  = help: the trait `Add<isize>` is not implemented for `usize`\n  = help: the\
    \ following other types implement trait `Add<Rhs>`:\n            <&'a f32 as Add<f32>>\n\
    \            <&'a f64 as Add<f64>>\n            <&'a i128 as Add<i128>>\n    \
    \        <&'a i16 as Add<i16>>\n            <&'a i32 as Add<i32>>\n          \
    \  <&'a i64 as Add<i64>>\n            <&'a i8 as Add<i8>>\n            <&'a isize\
    \ as Add<isize>>\n          and 48 others\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ n = a;\n    let mut m = b;\n    while n > m {\n        n -= m;\n        m -=\
    \ n;\n    }\n    n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmps7v4987i.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 {\n        b\n    } else if b == 0 {\n        a\n    } else {\n        let\
    \ mut a = a;\n        let mut b = b;\n        let mut m = 0;\n\n        while\
    \ a > 0 {\n            if b % a == 0 {\n                m = a;\n             \
    \   a /= b;\n            }\n            b /= a;\n        }\n        if b != 1\
    \ {\n            m = b;\n        }\n        m\n    }\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to divide by zero'', /tmp/tmphev7bo06.rs:19:17

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976086
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp2i1g62c5.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0 && b > 0);\n    let mut greatest = a;\n    for x in &[a, b] {\n        greatest\
    \ = (greatest / x) as usize if greatest != x { break; }\n    }\n    greatest\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `(`, `.`, `::`, `;`, `<`, `?`, or `}`, found\
    \ keyword `if`\n  --> /tmp/tmptwi12nxq.rs:10:44\n   |\n10 |         greatest =\
    \ (greatest / x) as usize if greatest != x { break; }\n   |                  \
    \                          ^^ expected one of 8 possible tokens\n\nerror: aborting\
    \ due to previous error\n\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        let mut tmp = a;\n        a = b;\n        b = tmp;\n    }\n    if\
    \ a == 0 {\n        return b;\n    }\n    (b - a).gcd(&b).unwrap()\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpnj56p7jx.rs:15:13\n   |\n15 |     (b - a).gcd(&b).unwrap()\n\
    \   |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        let t = a % b;\n        a = b;\n        b = t;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdsj8ma_h.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpdsj8ma_h.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_divisor = 0;\n    let mut dividend_divisor = 1;\n\n    for _divisor\
    \ in a.iter().cloned().rev().chain(b.iter().cloned().rev()) {\n        if dividend_divisor\
    \ == 0 {\n            greatest_divisor = 0;\n        }\n\n        let divisor\
    \ = *divisor + dividend_divisor;\n        dividend_divisor = divisor;\n\n    \
    \    if dividend_divisor > greatest_divisor {\n            greatest_divisor =\
    \ dividend_divisor;\n        }\n    }\n\n    greatest_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `divisor` in this scope\n  --> /tmp/tmpnn8tq6rc.rs:15:24\n\
    \   |\n15 |         let divisor = *divisor + dividend_divisor;\n   |         \
    \               ^^^^^^^ help: a local variable with a similar name exists: `_divisor`\n\
    \nerror[E0599]: no method named `iter` found for type `isize` in the current scope\n\
    \  --> /tmp/tmpnn8tq6rc.rs:10:23\n   |\n10 |     for _divisor in a.iter().cloned().rev().chain(b.iter().cloned().rev())\
    \ {\n   |                       ^^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `iter` found for type `isize` in the current scope\n  --> /tmp/tmpnn8tq6rc.rs:10:53\n\
    \   |\n10 |     for _divisor in a.iter().cloned().rev().chain(b.iter().cloned().rev())\
    \ {\n   |                                                     ^^^^ method not\
    \ found in `isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0425, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp5rlmt4l_.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ r = a;\n    let mut c = b;\n    while r != 0 && c != 0 {\n        if r > c {\n\
    \            r -= c;\n        } else {\n            c -= r;\n        }\n    }\n\
    \    c\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmph8uji3hl.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a % b;\n    if a == 0 {\n        a\n    } else {\n        loop {\n     \
    \       let mut a = a % b;\n            if a == 0 {\n                break;\n\
    \            } else {\n                a = b;\n            }\n        }\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp5z8jzh5x.rs:14:17\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n14 |                 break;\n   |                 ^^^^^\n   |   \
    \              |\n   |                 expected `isize`, found `()`\n   |    \
    \             help: give it a value of the expected type: `break 42`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 || a % b == 0 {\n        return a;\n    }\n\n    greatest_common_divisor(b,\
    \ a % b).min(|a, b| a % b).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpffkusqw4.rs:11:43\n   |\n\
    11 |     greatest_common_divisor(b, a % b).min(|a, b| a % b).unwrap()\n   |  \
    \                                         ^^^^^^^^^^^^ expected `isize`, found\
    \ closure\n   |\n   = note: expected type `isize`\n           found closure `[closure@/tmp/tmpffkusqw4.rs:11:43:\
    \ 11:55]`\n\nerror[E0599]: no method named `unwrap` found for type `isize` in\
    \ the current scope\n  --> /tmp/tmpffkusqw4.rs:11:57\n   |\n11 |     greatest_common_divisor(b,\
    \ a % b).min(|a, b| a % b).unwrap()\n   |                                    \
    \                     ^^^^^^ method not found in `isize`\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n\n\
    \    if a > b {\n        let mut a = b;\n        b = a;\n        a = a % b;\n\
    \    }\n\n    while a != 0 {\n        a = a / b;\n        b = b;\n    }\n    b\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "warning: value assigned to `a` is never read\n  --> /tmp/tmpaw2ze2uh.rs:17:9\n\
    \   |\n17 |         a = a % b;\n   |         ^\n   |\n   = note: `#[warn(unused_assignments)]`\
    \ on by default\n   = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `b`\n  --> /tmp/tmpaw2ze2uh.rs:16:9\n  \
    \ |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |    \
    \                                  - help: consider making this binding mutable:\
    \ `mut b`\n...\n16 |         b = a;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpaw2ze2uh.rs:21:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n21 |         a = a / b;\n   |         ^^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpaw2ze2uh.rs:22:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n22 |         b = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // the most\
    \ common case\n    if a < b {\n        // swap them for common case\n        let\
    \ mut tmp = a;\n        a = b;\n        b = tmp;\n    }\n\n    while a != 0 {\n\
    \        // keep remainder in accumulator\n        let r = a % b;\n\n        //\
    \ remove remainder from both sides\n        a = b;\n        b = r;\n    }\n\n\
    \    b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "warning: variable does not need to be mutable\n  --> /tmp/tmpil9fds3d.rs:10:13\n\
    \   |\n10 |         let mut tmp = a;\n   |             ----^^^\n   |         \
    \    |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]`\
    \ on by default\n\nerror[E0384]: cannot assign to immutable argument `a`\n  -->\
    \ /tmp/tmpil9fds3d.rs:11:9\n   |\n6  | fn greatest_common_divisor(a: isize, b:\
    \ isize) -> isize {\n   |                            - help: consider making this\
    \ binding mutable: `mut a`\n...\n11 |         a = b;\n   |         ^^^^^ cannot\
    \ assign to immutable argument\n\nerror[E0384]: cannot assign to immutable argument\
    \ `b`\n  --> /tmp/tmpil9fds3d.rs:12:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n12 |         b = tmp;\n\
    \   |         ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `a`\n  --> /tmp/tmpil9fds3d.rs:20:9\n   |\n6  |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |            \
    \                - help: consider making this binding mutable: `mut a`\n...\n\
    20 |         a = b;\n   |         ^^^^^ cannot assign to immutable argument\n\n\
    error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpil9fds3d.rs:21:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n21 |         b = r;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ num = 0;\n\n    while a > 1 && b > 1 {\n        if a > b {\n            num\
    \ += b;\n            a--;\n        } else {\n            num += a;\n         \
    \   b--;\n        }\n    }\n\n    return num;\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `;`\n  --> /tmp/tmpv9cgxicb.rs:12:16\n\
    \   |\n12 |             a--;\n   |                ^ expected expression\n\nerror:\
    \ expected expression, found `;`\n  --> /tmp/tmpv9cgxicb.rs:15:16\n   |\n15 |\
    \             b--;\n   |                ^ expected expression\n\nerror: aborting\
    \ due to 2 previous errors\n\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b).floor()\
    \ / b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp2iiaqdqb.rs:7:13\n  |\n7 |     (a % b).floor() / b\n  |\
    \             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        let (q, r) = a.divmod(b);\n        if\
    \ r == 1 {\n            q\n        } else {\n            greatest_common_divisor(q,\
    \ r).unwrap()\n        }\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `divmod` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpmt47ud_n.rs:10:24\n   |\n10 |         let (q, r) = a.divmod(b);\n\
    \   |                        ^^^^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `unwrap` found for type `isize` in the current scope\n  -->\
    \ /tmp/tmpmt47ud_n.rs:14:43\n   |\n14 |             greatest_common_divisor(q,\
    \ r).unwrap()\n   |                                           ^^^^^^ method not\
    \ found in `isize`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(b\
    \ > 0);\n    debug_assert!(a);\n    debug_assert!(b);\n    debug_assert!(a > b);\n\
    \n    if b == 0 {\n        a\n    } else {\n        if a > b {\n            greatest_common_divisor(b,\
    \ a % b)\n        } else {\n            greatest_common_divisor(a, b % a)\n  \
    \      }\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5wxyvtx9.rs:8:5\n  |\n8 |\
    \     debug_assert!(a);\n  |     ^^^^^^^^^^^^^^^^ expected `bool`, found `isize`\n\
    \  |\n  = note: this error originates in the macro `debug_assert` (in Nightly\
    \ builds, run with -Z macro-backtrace for more info)\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp5wxyvtx9.rs:9:5\n  |\n9 |     debug_assert!(b);\n  |   \
    \  ^^^^^^^^^^^^^^^^ expected `bool`, found `isize`\n  |\n  = note: this error\
    \ originates in the macro `debug_assert` (in Nightly builds, run with -Z macro-backtrace\
    \ for more info)\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ != 0 || b != 0);\n    debug_assert!(b > 0);\n\n    debug_assert!(a >= b);\n\n\
    \    // Euclid's Algorithm\n    let mut gcd = 1;\n    while a > b {\n        debug_assert!(a%gcd\
    \ == 0 && b%gcd == 0);\n        gcd *= b;\n        debug_assert!(a/gcd == b/gcd)\n\
    \        a = a/gcd;\n        b = b/gcd;\n    }\n    debug_assert!(a%gcd == 0 &&\
    \ b%gcd == 0);\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `a`\n  --> /tmp/tmpr8nmie91.rs:17:38\n   |\n\
    17 |         debug_assert!(a/gcd == b/gcd)\n   |                             \
    \         ^ help: add `;` here\n18 |         a = a/gcd;\n   |         - unexpected\
    \ token\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ c: isize = 1;\n    while b > 0 {\n        c = if a % b == 0 { c } else { c +\
    \ 1 };\n        b = c % b;\n    }\n    c\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmptdo40gez.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = c % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ s = a;\n    let mut t = b;\n    while t > 0 {\n        if s % t == 0 {\n   \
    \         s /= t;\n        } else {\n            t /= 2;\n        }\n    }\n \
    \   s\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976091
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let mut a = a;\n        a = a % b;\n        b = b;\n    }\n\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "warning: value assigned to `a` is never read\n --> /tmp/tmpr6pk2q6b.rs:9:9\n\
    \  |\n9 |         a = a % b;\n  |         ^\n  |\n  = note: `#[warn(unused_assignments)]`\
    \ on by default\n  = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `b`\n  --> /tmp/tmpr6pk2q6b.rs:10:9\n  \
    \ |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |    \
    \                                  - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        // a >= b\n\
    \        if b == 0 {\n            a\n        } else {\n            // a >= b\n\
    \            let mut c = 0;\n            for _ in 0..a {\n                c +=\
    \ 1;\n            }\n            // b > 0 & b > a & c > a\n            for _ in\
    \ 0..b {\n                c += 1;\n            }\n            c / a\n        }\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpg5e0s6no.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a\n    }\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp1qmoyu3f.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).max(a\
    \ % b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp3260typz.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a % b;\n    while a == 0 {\n        a = b;\n        b += 1;\n    }\n   \
    \ b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpx4lugmmb.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b += 1;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= b);\n    debug_assert!(a > 0);\n    debug_assert!(b > 0);\n\n    let mut\
    \ i = 0;\n    let mut j = a;\n\n    while i <= j {\n        let r = if i >= j\
    \ { j % a } else { i % a };\n        if r != 0 {\n            i += 1;\n      \
    \  } else {\n            j -= 1;\n        }\n    }\n    j\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: a >= b'', /tmp/tmpf8bqmpf0.rs:7:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ d = 0;\n    while b > 0 {\n        d += a % b;\n        a /= b;\n    }\n   \
    \ d\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpg95f0ivb.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ n = 0;\n    while a > 0 {\n        n += a % b;\n        a /= b;\n    }\n   \
    \ n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmplkey8dzs.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert_eq!(a,\
    \ b);\n    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor_unchecked(\n\
    \            a % b,\n            (b / b) % a,\n        )\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `greatest_common_divisor_unchecked`\
    \ in this scope\n  --> /tmp/tmp40flgvvd.rs:11:9\n   |\n11 |         greatest_common_divisor_unchecked(\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ != b {\n        (a, b) = (b, a % b).unwrap()\n    }\n    a\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unwrap` found for tuple `(isize, isize)`\
    \ in the current scope\n --> /tmp/tmp6ffksk50.rs:8:29\n  |\n8 |         (a, b)\
    \ = (b, a % b).unwrap()\n  |                             ^^^^^^ method not found\
    \ in `(isize, isize)`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(b\
    \ != 0, \"ZeroDivisionError expected for divisor\");\n    while b != 0 {\n   \
    \     let mut a = a % b;\n        b = b;\n        a = a;\n    }\n    a\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "warning: value assigned to `a` is never read\n  --> /tmp/tmp3mcu685o.rs:11:9\n\
    \   |\n11 |         a = a;\n   |         ^\n   |\n   = note: `#[warn(unused_assignments)]`\
    \ on by default\n   = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `b`\n  --> /tmp/tmp3mcu685o.rs:10:9\n  \
    \ |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |    \
    \                                  - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return a;\n    }\n    let mut max = 0;\n    for i in\
    \ 0..a {\n        if max < i {\n            max = i;\n        }\n    }\n    for\
    \ i in 0..b {\n        if max < i {\n            max = i;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `1`', /tmp/tmpni__6k4w.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n\n    while a > b {\n        a %= b;\n        b\
    \ %= a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmppxkgsd5t.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        0\n    } else {\n        let mut n = 0;\n        while\
    \ a % b == 0 && a != 0 {\n            a /= b;\n            n += 1;\n        }\n\
    \        n\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpiabtokwz.rs:12:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |             a /= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        let t = a;\n        a = b;\n        b = t;\n    }\n    (a as f32\
    \ / b as f32).ceil() as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpudcoyir8.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpudcoyir8.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    assert!(a\
    \ >= 0 && b > 0, \"a and b should be greater than 0\");\n    assert!(a > 0, \"\
    a should be greater than 0\");\n    assert!(b > 0, \"b should be greater than\
    \ 0\");\n    let mut g = a;\n    while b > 0 {\n        g = g * a % b;\n     \
    \   b = b / 2;\n    }\n    g\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpe8meyzrm.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = b / 2;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a%b)\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        let tmp = a;\n        a = b;\n        b = tmp % b;\n    }\n \
    \   a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmplkgegdth.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmplkgegdth.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = tmp % b;\n   |         ^^^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // Check\
    \ if a and b are divisible\n    if a % b == 0 {\n        return a;\n    }\n\n\
    \    // Calculate the smaller number\n    let mut smaller: isize = (a % b);\n\n\
    \    // Iterate through the remainders\n    for r in &b % &a {\n        smaller\
    \ = (smaller % r) + r;\n    }\n\n    // Return the gcd\n    smaller\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "warning: unnecessary parentheses around assigned value\n  --> /tmp/tmplqszpzq0.rs:13:30\n\
    \   |\n13 |     let mut smaller: isize = (a % b);\n   |                      \
    \        ^     ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp:\
    \ remove these parentheses\n   |\n13 -     let mut smaller: isize = (a % b);\n\
    13 +     let mut smaller: isize = a % b;\n   | \n\nerror[E0277]: `isize` is not\
    \ an iterator\n  --> /tmp/tmplqszpzq0.rs:16:14\n   |\n16 |     for r in &b % &a\
    \ {\n   |              ^^^^^^^ `isize` is not an iterator\n   |\n   = help: the\
    \ trait `Iterator` is not implemented for `isize`\n   = note: if you want to iterate\
    \ between `start` until a value `end`, use the exclusive range syntax `start..end`\
    \ or the inclusive range syntax `start..=end`\n   = note: required because of\
    \ the requirements on the impl of `IntoIterator` for `isize`\n\nerror: aborting\
    \ due to previous error; 1 warning emitted\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0 && b > 0);\n    while b > 0 {\n        let t = a % b;\n        a = b;\n\
    \        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmptbz7l2pn.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmptbz7l2pn.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ b {\n        return a;\n    }\n\n    let mut a = a;\n    let mut b = b;\n\n\
    \    while b > 0 {\n        let d = (a % b).unwrap();\n        a = b;\n      \
    \  b = d;\n    }\n\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unwrap` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpnqrxgi_j.rs:15:25\n   |\n15 |         let d = (a % b).unwrap();\n\
    \   |                         ^^^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0\n    }\n    if a == 1 {\n        return b\n\
    \    }\n    if b == 1 {\n        return a\n    }\n    greatest_common_divisor_iter(a,\
    \ b, |x, y| x % y == 0)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `greatest_common_divisor_iter` in this\
    \ scope\n  --> /tmp/tmpwxyob4qq.rs:16:5\n   |\n16 |     greatest_common_divisor_iter(a,\
    \ b, |x, y| x % y == 0)\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0 && b > 0);\n    if a == 0 || b == 0 {\n        return 0;\n    }\n    let\
    \ mut div = a / b;\n    let mut rem = a % b;\n    while rem != 0 {\n        div\
    \ += 1;\n        rem -= b;\n    }\n    div\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976091
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0);\n    debug_assert!(b > 0);\n\n    debug_assert!(a <= b);\n\n    debug_assert!(b\
    \ - a > 0);\n\n    if a == b {\n        return a;\n    }\n\n    debug_assert!(a\
    \ - b > 0);\n\n    while b > a {\n        let s = a / b;\n        a = b;\n   \
    \     b = s;\n    }\n\n    debug_assert!(a * b == a);\n    debug_assert!(a * b\
    \ == b);\n\n    return a;\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp25sebham.rs:22:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n22 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp25sebham.rs:23:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n23 |         b = s;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n\n    let mut greatest_common_divisor = 1;\n\n\
    \    while a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += 1;\n        }\n\n        a /= b;\n        b /= 2;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpmdr1uzfw.rs:18:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n18 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpmdr1uzfw.rs:19:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n19 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        gcd = (gcd + 1) % isize_max;\n\
    \    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `isize_max` in this scope\n  --> /tmp/tmpns0gjnbe.rs:14:27\n\
    \   |\n14 |         gcd = (gcd + 1) % isize_max;\n   |                       \
    \    ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpx1ziu556.rs:7:5\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n7 |     (a / b) as usize\n  |     ^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n7 |     ((a / b) as usize).try_into().unwrap()\n\
    \  |     +                +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    loop {\n\
    \        let a_mod = a % b;\n        if a_mod < 0 {\n            return b;\n \
    \       }\n        assert!(b > 1);\n        b = a_mod;\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmptvm5tgz9.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a_mod;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 { 0 }\n    else { a / gcd(a, b) }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `gcd` in this scope\n --> /tmp/tmp6ftmgz23.rs:8:16\n\
    \  |\n8 |     else { a / gcd(a, b) }\n  |                ^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert_eq!(a,\
    \ b);\n    (a / b).min(a % b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `7`', /tmp/tmpeaml0uqc.rs:7:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ != 0 {\n        let t = a % b;\n        a = b;\n        b = t;\n    }\n    b\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpq1pl74zp.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpq1pl74zp.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // return\
    \ gcd(a, b) mod b\n    greatest_common_divisor_mod_b(a, b)\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `greatest_common_divisor_mod_b` in this\
    \ scope\n --> /tmp/tmpuoevz2xd.rs:8:5\n  |\n8 |     greatest_common_divisor_mod_b(a,\
    \ b)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ result = a;\n    while result % b == 0 {\n        result /= b;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp34jzg_cl.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ c = a;\n    loop {\n        if b < c {\n            c = b;\n        }\n    \
    \    b -= c;\n        a -= c;\n        if a < 0 {\n            return c;\n   \
    \     }\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpz1_juqqc.rs:12:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n12 |         b -= c;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpz1_juqqc.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n13 |         a -= c;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ x: isize = 0;\n    let mut y: isize = 0;\n    let mut c: isize = 1;\n    while\
    \ c != 0 {\n        if a % c != 0 && b % c != 0 {\n            break;\n      \
    \  }\n        c += 1;\n    }\n    while c != 0 {\n        if a % c != 0 && b %\
    \ c == 0{\n            break;\n        }\n        c += 1;\n    }\n    while c\
    \ != 0 {\n        if a % c == 0 && b % c != 0{\n            break;\n        }\n\
    \        c += 1;\n    }\n    while c != 0 {\n        if a % c == 0 && b % c ==\
    \ 0{\n            break;\n        }\n        c += 1;\n    }\n    while c != 0\
    \ {\n        if a % c != 0 && b % c != 0{\n            break;\n        }\n   \
    \     c += 1;\n    }\n    while c != 0 {\n        if a % c != 0 && b % c != 0{\n\
    \            break;\n        }\n        c += 1;\n    }\n    return c;\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976092
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).max(|a,\
    \ b| a / b).unwrap_or(a)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpj1kon1gm.rs:7:17\n  |\n7 |\
    \     (a / b).max(|a, b| a / b).unwrap_or(a)\n  |                 ^^^^^^^^^^^^\
    \ expected `isize`, found closure\n  |\n  = note: expected type `isize`\n    \
    \      found closure `[closure@/tmp/tmpj1kon1gm.rs:7:17: 7:29]`\n\nerror[E0599]:\
    \ no method named `unwrap_or` found for type `isize` in the current scope\n -->\
    \ /tmp/tmpj1kon1gm.rs:7:31\n  |\n7 |     (a / b).max(|a, b| a / b).unwrap_or(a)\n\
    \  |                               ^^^^^^^^^ method not found in `isize`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ counter = 1;\n    while counter <= b {\n        if a % counter == 0 && b % counter\
    \ == 0 {\n            return counter;\n        }\n        counter += 1;\n    }\n\
    \    return a;\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpbqivjw83.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // Find\
    \ GCD\n    let mut gcd: isize = 1;\n    let mut temp: isize = a;\n    while temp\
    \ > b {\n        if temp % b == 0 {\n            gcd = b;\n        }\n       \
    \ b += 1;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: variable does not need to be mutable\n --> /tmp/tmp6mcvq8es.rs:9:9\n\
    \  |\n9 |     let mut temp: isize = a;\n  |         ----^^^^\n  |         |\n\
    \  |         help: remove this `mut`\n  |\n  = note: `#[warn(unused_mut)]` on\
    \ by default\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp6mcvq8es.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b += 1;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ r = a;\n    while r > b {\n        r -= b;\n    }\n    r\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpgk_w5cld.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ i = a;\n    let mut j = 0;\n    while i != 0 {\n        if i % b == 0 {\n  \
    \          j = j + 1;\n            i = i / b;\n        }\n        else {\n   \
    \         i = i / b;\n        }\n    }\n    j\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpcumok9j2.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b +\
    \ b) % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplvuvjzxm.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ > 0 && b > 0 {\n        if a % b == 0 {\n            return b;\n        }\n\
    \        a /= b;\n        b /= a;\n    }\n    if b > 0 {\n        b\n    } else\
    \ {\n        a\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpckh0tu9a.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpckh0tu9a.rs:12:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n12 |         b /= a;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ num_a = a;\n    let mut num_b = b;\n    let mut num_div = 0;\n    loop {\n \
    \       let mut num_a = num_a / 2;\n        let mut num_b = num_b / 2;\n     \
    \   let mut num_div = 0;\n        while num_a % num_div == 0 && num_b % num_div\
    \ == 0 {\n            num_div += 1;\n        }\n        if num_a % num_div > num_b\
    \ % num_div {\n            num_a = num_a - num_div;\n        } else {\n      \
    \      num_b = num_b - num_div;\n        }\n    }\n    num_a\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpkr8m0f1c.rs:14:15

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let (quo, res) = div_rem(b, a, &(b));\n        a = quo;\n  \
    \      b = res;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `div_rem` in this scope\n --> /tmp/tmp9xqcicnp.rs:8:26\n\
    \  |\n8 |         let (quo, res) = div_rem(b, a, &(b));\n  |                 \
    \         ^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    loop {\n\
    \        if a == b {\n            return a;\n        }\n        if a > b {\n \
    \           a -= b;\n        } else {\n            b -= a;\n        }\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpoq57qh19.rs:12:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpoq57qh19.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n14 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    }\n    else if b == 0 {\n    \
    \    a\n    }\n    else {\n        let mut greatest_divisor = a;\n        for\
    \ mut divisor = a + 1; divisor <= b; divisor = divisor + 1 {\n            if a\
    \ % divisor == 0 && b % divisor == 0 {\n                greatest_divisor = divisor;\n\
    \            }\n        }\n        greatest_divisor\n    }\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error: missing `in` in `for` loop\n  --> /tmp/tmp2cw8392x.rs:15:24\n  \
    \ |\n15 |         for mut divisor = a + 1; divisor <= b; divisor = divisor + 1\
    \ {\n   |                        ^ help: try adding `in` here\n\nerror: expected\
    \ expression, found `=`\n  --> /tmp/tmp2cw8392x.rs:15:25\n   |\n15 |         for\
    \ mut divisor = a + 1; divisor <= b; divisor = divisor + 1 {\n   |           \
    \              ^ expected expression\n\nerror: aborting due to 2 previous errors\n\
    \n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 || a == b { return a; }\n    greatest_common_divisor(b, a % b)\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976087
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ c = a;\n    while b > c {\n        c = a % b;\n    }\n    c\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976092
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // We only\
    \ care about even numbers here.\n    if a % 2 == 0 && b % 2 == 0 {\n        //\
    \ Iterate through all possible pairs of multiples of both numbers.\n        for\
    \ c in 0..isize_from_a_b(b, a) {\n            if a % c == 0 && b % c == 0 {\n\
    \                return c;\n            }\n        }\n    }\n    // Otherwise,\
    \ just take the smaller one.\n    else if a % 2 == 0 {\n        a\n    }\n   \
    \ else if b % 2 == 0 {\n        b\n    }\n    else {\n        a\n    }\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `isize_from_a_b` in this scope\n  -->\
    \ /tmp/tmpdz1passi.rs:10:21\n   |\n10 |         for c in 0..isize_from_a_b(b,\
    \ a) {\n   |                     ^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpdz1passi.rs:10:9\n   |\n6  |   fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                          \
    \           ----- expected `isize` because of return type\n...\n10 | /       \
    \  for c in 0..isize_from_a_b(b, a) {\n11 | |             if a % c == 0 && b %\
    \ c == 0 {\n12 | |                 return c;\n13 | |             }\n14 | |   \
    \      }\n   | |_________^ expected `isize`, found `()`\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0425.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor_impl(b, a)\n    } else {\n        greatest_common_divisor_impl(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `greatest_common_divisor_impl` in this\
    \ scope\n --> /tmp/tmpcflccx3z.rs:8:9\n  |\n8 |         greatest_common_divisor_impl(b,\
    \ a)\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `greatest_common_divisor_impl` in this scope\n  --> /tmp/tmpcflccx3z.rs:10:9\n\
    \   |\n10 |         greatest_common_divisor_impl(a, a)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ min_divisor = std::i32::MAX;\n    for i in 0..=(b - a).min(std::i32::MAX / a)\
    \ {\n        let divisor = if i + a < b { i + a } else { b };\n        if min_divisor\
    \ > divisor {\n            min_divisor = divisor;\n        }\n    }\n    min_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp866lkore.rs:8:46\n  |\n8 |\
    \     for i in 0..=(b - a).min(std::i32::MAX / a) {\n  |                     \
    \                         ^ expected `i32`, found `isize`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp866lkore.rs:8:30\n  |\n8 |     for i in 0..=(b - a).min(std::i32::MAX\
    \ / a) {\n  |                              ^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `i32`\n  |\nhelp: you can convert an `i32` to an `isize` and panic if\
    \ the converted value doesn't fit\n  |\n8 |     for i in 0..=(b - a).min((std::i32::MAX\
    \ / a).try_into().unwrap()) {\n  |                              +            \
    \     +++++++++++++++++++++\n\nerror[E0277]: cannot divide `i32` by `isize`\n\
    \ --> /tmp/tmp866lkore.rs:8:44\n  |\n8 |     for i in 0..=(b - a).min(std::i32::MAX\
    \ / a) {\n  |                                            ^ no implementation for\
    \ `i32 / isize`\n  |\n  = help: the trait `Div<isize>` is not implemented for\
    \ `i32`\n  = help: the following other types implement trait `Div<Rhs>`:\n   \
    \         <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n         \
    \   <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a\
    \ i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a i8 as\
    \ Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmp866lkore.rs:10:26\n   |\n10 |  \
    \       if min_divisor > divisor {\n   |                          ^^^^^^^ expected\
    \ `i32`, found `isize`\n   |\nhelp: you can convert an `isize` to an `i32` and\
    \ panic if the converted value doesn't fit\n   |\n10 |         if min_divisor\
    \ > divisor.try_into().unwrap() {\n   |                                 ++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp866lkore.rs:11:27\n   |\n7  |\
    \     let mut min_divisor = std::i32::MAX;\n   |                           -------------\
    \ expected due to this value\n...\n11 |             min_divisor = divisor;\n \
    \  |                           ^^^^^^^ expected `i32`, found `isize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp866lkore.r"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0);\n    debug_assert!(b > 0);\n    let mut div: isize = 1;\n    loop {\n\
    \        if a > b {\n            break;\n        }\n        a %= div;\n      \
    \  b %= div;\n        div *= 2;\n    }\n    div\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpdcnu4ky3.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n14 |         a %= div;\n   |         ^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpdcnu4ky3.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b %= div;\n   |         ^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp2i1g62c5.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a as isize)\
    \ * (b as isize).gcd(|&b| b).unwrap() as isize\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpz0rlodei.rs:7:33\n  |\n7 |     (a as isize) * (b as isize).gcd(|&b|\
    \ b).unwrap() as isize\n  |                                 ^^^ method not found\
    \ in `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp5rlmt4l_.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ max_div = *a;\n    for divisor in &[a, b] {\n        if divisor > max_div {\n\
    \            max_div = divisor;\n        }\n    }\n    max_div\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmp8i7_fwlf.rs:7:23\n\
    \  |\n7 |     let mut max_div = *a;\n  |                       ^^\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp8i7_fwlf.rs:13:5\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                          \
    \         ----- expected `isize` because of return type\n...\n13 |     max_div\n\
    \   |     ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n13 |     *max_div\n   |     +\n\nerror: aborting due to 2\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0614.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ && a > 0 {\n        greatest_common_divisor(b, a)\n    } else {\n        if\
    \ b > 0 && a > 0 {\n            return b;\n        } else {\n            return\
    \ a;\n        }\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb95mafrv.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        (*a) % (*b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpt8prtaj1.rs:10:9\n\
    \   |\n10 |         (*a) % (*b)\n   |         ^^^^\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n  --> /tmp/tmpt8prtaj1.rs:10:16\n   |\n10 |        \
    \ (*a) % (*b)\n   |                ^^^^\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ i = 0;\n    let mut j = 1;\n    while i < b && j < a {\n        if i % j ==\
    \ 0 {\n            i = i + j;\n            j = j + 1;\n        } else {\n    \
    \        i = i + 1;\n        }\n    }\n    i\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmp6y6m_53g.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // base\
    \ case\n    if a == 0 || b == 0 { return 0; }\n    // recursive case\n    match\
    \ a % b {\n        0 => b,\n        _ => greatest_common_divisor(b, a % b),\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ result = a;\n    while result % b != 0 {\n        result /= b;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpz9s_h3lc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpi0h_pzyr.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a%b)\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        if a > b {\n            a %= b;\n        } else {\n        \
    \    b %= a;\n        }\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmphvft8u4_.rs:9:13\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmphvft8u4_.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |             b %= a;\n   |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b).cmp(b\
    \ % a).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_8hi75x3.rs:7:17\n  |\n7 |\
    \     (a % b).cmp(b % a).unwrap()\n  |                 ^^^^^\n  |            \
    \     |\n  |                 expected `&isize`, found `isize`\n  |           \
    \      help: consider borrowing here: `&(b % a)`\n\nerror[E0599]: no method named\
    \ `unwrap` found for enum `std::cmp::Ordering` in the current scope\n --> /tmp/tmp_8hi75x3.rs:7:24\n\
    \  |\n7 |     (a % b).cmp(b % a).unwrap()\n  |                        ^^^^^^ method\
    \ not found in `std::cmp::Ordering`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        let t = a;\n        a = b;\n        b = t;\n    }\n    a\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpuxwgvqsn.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpuxwgvqsn.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b +\
    \ b) % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplvuvjzxm.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a + b -\
    \ 1) / b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpq0q98qg1.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp5rlmt4l_.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpx1ziu556.rs:7:5\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n7 |     (a / b) as usize\n  |     ^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n7 |     ((a / b) as usize).try_into().unwrap()\n\
    \  |     +                +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let c = a % b;\n        a = b;\n        b = c;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpd0zmgz0v.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpd0zmgz0v.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = c;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ r = a;\n    while r < b {\n        r += a;\n    }\n    r\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpf0ymwuwo.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0 && b > 0);\n    if a == b {\n        return a;\n    }\n    if b == 1 {\n\
    \        return a;\n    }\n\n    debug_assert!(a > b);\n\n    let mut a = a %\
    \ b;\n    for _ in 0..(a >> 1) {\n        a = b * a + 1;\n    }\n    a\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: a > b'', /tmp/tmp0fe0m9rb.rs:15:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976087
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        let mut result\
    \ = a;\n        while a % b == 0 {\n            result -= 1;\n            a /=\
    \ b;\n        }\n        result\n    }\n}\n\nfn main() {\n    let candidate =\
    \ greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpwjpth8q9.rs:13:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n13 |             a /= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        debug_assert!(b % a == 0);\n        debug_assert!(a * b > 0);\n\
    \        debug_assert!(b >= a || b % a == 0);\n        b /= a;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpdv2143ih.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b /= a;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 {\n        return b;\n    }\n    if b == 0 {\n        return a;\n    }\n \
    \   // use Euclid's algorithm to find the greatest common divisor\n    let mut\
    \ gcd = 1;\n    for d in &[isize::max_value(), a, b] {\n        if d != 0 {\n\
    \            gcd = (d % gcd).wrapping_add(gcd);\n        }\n    }\n    gcd\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: can't compare `&isize` with `{integer}`\n  --> /tmp/tmprwidaxh0.rs:16:14\n\
    \   |\n16 |         if d != 0 {\n   |              ^^ no implementation for `&isize\
    \ == {integer}`\n   |\n   = help: the trait `PartialEq<{integer}>` is not implemented\
    \ for `&isize`\n   = help: the following other types implement trait `PartialEq<Rhs>`:\n\
    \             f32\n             f64\n             i128\n             i16\n   \
    \          i32\n             i64\n             i8\n             isize\n      \
    \     and 6 others\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ > 0 && b > 0 {\n        if a % b == 0 {\n            return b;\n        }\n\
    \        b /= a;\n    }\n    return a;\n}\n\nfn main() {\n    let candidate =\
    \ greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpzkfo943n.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b /= a;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpx1ziu556.rs:7:5\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n7 |     (a / b) as usize\n  |     ^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n7 |     ((a / b) as usize).try_into().unwrap()\n\
    \  |     +                +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd >= b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpcx3t_dyd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 || (a > 0 && b > 0) {\n        return b;\n    }\n    if a > b {\n\
    \        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ -b)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp42sjyyud.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0 && b > 0);\n    (1u64 << a.abs() as usize).cmp((1u64 << b.abs() as usize).rev())\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `u64` is not an iterator\n --> /tmp/tmp62qcmk55.rs:8:63\n\
    \  |\n8 |     (1u64 << a.abs() as usize).cmp((1u64 << b.abs() as usize).rev())\n\
    \  |                                                               ^^^ `u64` is\
    \ not an iterator\n  |\n  = note: the following trait bounds were not satisfied:\n\
    \          `u64: Iterator`\n          which is required by `&mut u64: Iterator`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmp62qcmk55.rs:8:5\n  |\n6 | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n  |                                           \
    \        ----- expected `isize` because of return type\n7 |     debug_assert!(a\
    \ > 0 && b > 0);\n8 |     (1u64 << a.abs() as usize).cmp((1u64 << b.abs() as usize).rev())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `std::cmp::Ordering`\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a <=\
    \ b {\n        (a, b)\n    } else {\n        (b, a)\n    }\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0hr75a0_.rs:8:9\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n7 |     if a <= b {\n8 |         (a, b)\n  |         ^^^^^^ expected `isize`,\
    \ found tuple\n  |\n  = note: expected type `isize`\n            found tuple `(isize,\
    \ isize)`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp0hr75a0_.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                                 ----- expected `isize` because\
    \ of return type\n...\n10 |         (b, a)\n   |         ^^^^^^ expected `isize`,\
    \ found tuple\n   |\n   = note: expected type `isize`\n             found tuple\
    \ `(isize, isize)`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(a,\
    \ b).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpkwro1qaq.rs:7:13\n  |\n7 |     (a / b).gcd(a, b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ i = a;\n    let mut j;\n\n    while i >= b {\n        j = 1;\n        while\
    \ j < (b - i) as usize {\n            i += 1;\n            j *= 2;\n        }\n\
    \        i -= j;\n        j /= 2;\n    }\n\n    i\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpotarle3c.rs:16:14\n   |\n\
    16 |         i -= j;\n   |              ^ expected `isize`, found `usize`\n\n\
    error[E0277]: cannot subtract-assign `usize` from `isize`\n  --> /tmp/tmpotarle3c.rs:16:11\n\
    \   |\n16 |         i -= j;\n   |           ^^ no implementation for `isize -=\
    \ usize`\n   |\n   = help: the trait `SubAssign<usize>` is not implemented for\
    \ `isize`\n   = help: the following other types implement trait `SubAssign<Rhs>`:\n\
    \             <f32 as SubAssign<&f32>>\n             <f32 as SubAssign>\n    \
    \         <f64 as SubAssign<&f64>>\n             <f64 as SubAssign>\n        \
    \     <i128 as SubAssign<&i128>>\n             <i128 as SubAssign>\n         \
    \    <i16 as SubAssign<&i16>>\n             <i16 as SubAssign>\n           and\
    \ 20 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ num = 0;\n    while a > 0 && b > 0 {\n        if a > b {\n            num +=\
    \ a;\n            a -= b;\n        } else {\n            num += b;\n         \
    \   b -= a;\n        }\n    }\n    num\n}\n\nfn main() {\n    let candidate =\
    \ greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpbga9nsag.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpbga9nsag.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n14 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ res = a;\n    while res > b {\n        res %= b;\n    }\n    res\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9hdeqgxp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b)\
    \ + ((a / b).floor() as isize)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpq0_zm9zp.rs:7:24\n  |\n7 |     (a % b) + ((a / b).floor()\
    \ as isize)\n  |                        ^^^^^ help: there is an associated function\
    \ with a similar name: `div_floor`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ ia = a;\n    let mut ib = b;\n    while ia > ib {\n        ia -= ib;\n     \
    \   ib += a;\n    }\n    ib\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp1sy286_y.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // Calculate\
    \ the least common multiple to reduce the fraction.\n    let mut lcm_divisor =\
    \ 1;\n    let mut gcd_divisor = 1;\n    while gcd_divisor < b {\n        lcm_divisor\
    \ *= a;\n        gcd_divisor *= lcm_divisor;\n    }\n\n    if gcd_divisor == b\
    \ {\n        // If the gcd_divisor is 1 it means the gcd is a power of 2\n   \
    \     if gcd_divisor == 1 {\n            return 1\n        } else {\n        \
    \    gcd_divisor\n        }\n    } else {\n        gcd_divisor\n    }\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `27`,\n right: `1`', /tmp/tmp6mwabi4k.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        let mut a =\
    \ a;\n        a = b;\n        b = a;\n    }\n    while a > 0 {\n        let c\
    \ = a / b;\n        a = b;\n        b = c;\n    }\n    a\n}\n\nfn main() {\n \
    \   let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "warning: value assigned to `a` is never read\n  --> /tmp/tmpa3yedppj.rs:11:17\n\
    \   |\n11 |         let mut a = a;\n   |                 ^\n   |\n   = note: `#[warn(unused_assignments)]`\
    \ on by default\n   = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `b`\n  --> /tmp/tmpa3yedppj.rs:13:9\n  \
    \ |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |    \
    \                                  - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpa3yedppj.rs:17:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n17 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpa3yedppj.rs:18:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n18 |         b = c;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpwk4scij7.rs:7:13\n  |\n7 |     (a / b).gcd(b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest: isize = 0;\n    while a > 0 && b > 0 {\n        let tmp = a;\n   \
    \     a = b;\n        b = tmp;\n        greatest = tmp;\n    }\n\n    while b\
    \ > 0 {\n        greatest += 1;\n        b -= 1;\n    }\n    greatest\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpeu9kcm4j.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpeu9kcm4j.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b = tmp;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpeu9kcm4j.rs:17:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n17 |         b -= 1;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let (q, r) = divrem(a, b);\n        a = b;\n        b = r;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divrem` in this scope\n --> /tmp/tmp0i2f4td7.rs:8:22\n\
    \  |\n8 |         let (q, r) = divrem(a, b);\n  |                      ^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).ceil()\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpm5s90poe.rs:7:13\n  |\n7 |     (a / b).ceil() as usize\n\
    \  |             ^^^^ help: there is an associated function with a similar name:\
    \ `div_ceil`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a\n    }\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp1qmoyu3f.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a % b)\n    } else {\n        a\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmphjcbxyne.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(a\
    \ % b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpv3xyuc8z.rs:7:13\n  |\n7 |     (a / b).gcd(a % b)\n  | \
    \            ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ * b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp0e2u7pxc.rs:7:13\n  |\n7 |     (a / b).floor() * b\n  |\
    \             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).ceil()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpec443lig.rs:7:13\n  |\n7 |     (a / b).ceil() as isize\n\
    \  |             ^^^^ help: there is an associated function with a similar name:\
    \ `div_ceil`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 { 1 }\n    else if a == 0 { b }\n    else { greatest_common_divisor(b, a%b)\
    \ }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp1sbwl4hr.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ c = 0;\n    let mut x = a;\n    let mut y = b;\n    while x > 0 {\n        c\
    \ += 1;\n        if x % y == 0 {\n            x = x / y;\n        } else {\n \
    \           y = y;\n        }\n    }\n    c\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976092
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // We use\
    \ the Euclid's algorithm, starting with the largest\n    // common divisor of\
    \ b and a (the result being then a\n    // multiple of b).\n    (a, b)\n     \
    \   .iter()\n        .fold(a, |mut c, _| {\n            if *c < b {\n        \
    \        *c = *c % b;\n            }\n            c\n        })\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for tuple `(isize, isize)` in\
    \ the current scope\n  --> /tmp/tmpxdvyjz58.rs:11:10\n   |\n11 |         .iter()\n\
    \   |          ^^^^ method not found in `(isize, isize)`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ != 0 && b != 0);\n    debug_assert!(a >= b);\n    debug_assert!(b > 0);\n  \
    \  let mut d = 1;\n    while b > 1 {\n        if a % b == 0 {\n            d =\
    \ b;\n        }\n        b = d << 1;\n    }\n    d\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmplvu8l4rl.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = d << 1;\n   |         ^^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        let mut a = a % b;\n        a = b - a;\n        b = a;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpyl8_klx5.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = a;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n\n    while a > b {\n        a = a % b;\n      \
    \  b = b % a;\n    }\n\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1oe6s7zm.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(b\
    \ > 0);\n\n    let mut greatest = 0;\n    while a > 0 {\n        let mut greatest_remainder\
    \ = 0;\n        for divisor in 1..(b / a).max(greatest_remainder) {\n        \
    \    if b % divisor == 0 {\n                greatest += divisor;\n           \
    \     greatest_remainder = 1;\n                break;\n            }\n       \
    \     greatest_remainder += 1;\n        }\n        a /= 2;\n        b = greatest\
    \ * 2;\n    }\n    greatest\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: value assigned to `greatest_remainder` is never read\n  --> /tmp/tmp8vjkqkm1.rs:15:17\n\
    \   |\n15 |                 greatest_remainder = 1;\n   |                 ^^^^^^^^^^^^^^^^^^\n\
    \   |\n   = note: `#[warn(unused_assignments)]` on by default\n   = help: maybe\
    \ it is overwritten before being read?\n\nerror[E0384]: cannot assign to immutable\
    \ argument `a`\n  --> /tmp/tmp8vjkqkm1.rs:20:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                            - help: consider\
    \ making this binding mutable: `mut a`\n...\n20 |         a /= 2;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `b`\n  --> /tmp/tmp8vjkqkm1.rs:21:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n21 |         b = greatest\
    \ * 2;\n   |         ^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\n\
    error: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpwk4scij7.rs:7:13\n  |\n7 |     (a / b).gcd(b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ * b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpf2bi3rgi.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).min(b.clone()\
    \ as isize)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp26bhnf41.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return a;\n    }\n\n    let mut n = 0;\n    let mut m\
    \ = 0;\n\n    while b > m {\n        n = a % b;\n        a = b;\n        b = n;\n\
    \    }\n\n    while a > m {\n        m = a % b;\n        a = b;\n        b = m;\n\
    \    }\n\n    return b;\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: value assigned to `n` is never read\n  --> /tmp/tmpo_u3j7lc.rs:11:13\n\
    \   |\n11 |     let mut n = 0;\n   |             ^\n   |\n   = note: `#[warn(unused_assignments)]`\
    \ on by default\n   = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `a`\n  --> /tmp/tmpo_u3j7lc.rs:16:9\n  \
    \ |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |    \
    \                        - help: consider making this binding mutable: `mut a`\n\
    ...\n16 |         a = b;\n   |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpo_u3j7lc.rs:17:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n17 |         b = n;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpo_u3j7lc.rs:22:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n22 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpo_u3j7lc.rs:23:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n23 |         b = m;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ an = a;\n    let mut bn = b;\n    while an > bn {\n        an -= bn;\n     \
    \   bn = 0;\n    }\n    while bn > an {\n        bn -= an;\n        an = 0;\n\
    \    }\n    an\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976092
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > b);\n\n    let mut num_div = 1;\n    let mut cur_div = a;\n    while cur_div\
    \ > b {\n        num_div += 1;\n        cur_div = num_div * cur_div;\n    }\n\
    \    num_div\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: a > b'', /tmp/tmp9ha7n4mr.rs:7:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).checked_mul(b).expect(\"\
    a * b != 0\");\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7leapqy7.rs:6:51\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |    -----------------------\
    \                        ^^^^^ expected `isize`, found `()`\n  |    |\n  |   \
    \ implicitly returns `()` as its body has no tail or `return` expression\n7 |\
    \     (a / b).checked_mul(b).expect(\"a * b != 0\");\n  |                    \
    \                            - help: remove this semicolon\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let d = a % b;\n        a = b;\n        b = d;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpuryn0de9.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpuryn0de9.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = d;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).ceil()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpec443lig.rs:7:13\n  |\n7 |     (a / b).ceil() as isize\n\
    \  |             ^^^^ help: there is an associated function with a similar name:\
    \ `div_ceil`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut r = a;\n    while r < b\
    \ {\n        if r < b {\n            r += a;\n        }\n        r -= b;\n   \
    \ }\n    r\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976092
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        (a * b + 1)\
    \ / b\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpmkomtczw.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n\n\
    \    let mut greatest_common_divisor = greatest_common_divisor(b % a, a);\n  \
    \  while greatest_common_divisor >= b {\n        greatest_common_divisor = greatest_common_divisor\
    \ % b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ < b);\n    let mut x: isize = 1;\n    let mut y: isize = 1;\n\n    while b >\
    \ 0 {\n        let m = (x + (b / x)) % b;\n        x = y;\n        y = m;\n  \
    \      b = b % b;\n    }\n\n    x\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp2bpigf0g.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = b % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b +\
    \ b) % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplvuvjzxm.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0 && b > 0);\n    if a < b {\n        (a, b) = (b, a)\n    }\n    while a\
    \ > 0 {\n        let c = a % b;\n        a = b;\n        b = c;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmph0gmltzw.rs:9:10\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         (a, b) = (b, a)\n  |          ^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmph0gmltzw.rs:9:13\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         (a, b) = (b, a)\n  |             ^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmph0gmltzw.rs:13:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n13 |         a = b;\n   |         ^^^^^\
    \ cannot assign to immutable argument\n\nerror[E0384]: cannot assign to immutable\
    \ argument `b`\n  --> /tmp/tmph0gmltzw.rs:14:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n14 |         b = c;\n  \
    \ |         ^^^^^ cannot assign to immutable argument\n\nerror: aborting due to\
    \ 4 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 {\n        return b;\n    }\n    if b == 0 {\n        return a;\n    }\n \
    \   if a > b {\n        (a, b) = (b, a)\n    }\n    while a % b != 0 {\n     \
    \   (a, b) = (b, a % b)\n    }\n    return b\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpme7dvlvy.rs:14:10\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n14 |         (a, b) = (b, a)\n   |          ^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpme7dvlvy.rs:14:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         (a, b) = (b, a)\n   |             ^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpme7dvlvy.rs:17:10\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n17 |         (a, b) = (b, a % b)\n   | \
    \         ^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `b`\n  --> /tmp/tmpme7dvlvy.rs:17:13\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n17 |         (a, b) = (b,\
    \ a % b)\n   |             ^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to 4 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a % b == 0 && a / b > b {\n        return\
    \ greatest_common_divisor(b, a / b);\n    }\n    return greatest_common_divisor(b,\
    \ (b / a) * b);\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to multiply with overflow'', /tmp/tmppf5q_es6.rs:13:39

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a != 0 {\n        let mut tmp = a;\n \
    \       a = b / tmp;\n        b = tmp % b;\n    }\n    b\n}\n\nfn main() {\n \
    \   let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpq6_kmwxg.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / (b\
    \ as i32)).floor()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfxgz4x1l.rs:7:10\n  |\n7 |\
    \     (a / (b as i32)).floor()\n  |          ^^^^^^^^^^ expected `isize`, found\
    \ `i32`\n\nerror[E0599]: no method named `floor` found for type `isize` in the\
    \ current scope\n --> /tmp/tmpfxgz4x1l.rs:7:22\n  |\n7 |     (a / (b as i32)).floor()\n\
    \  |                      ^^^^^ help: there is an associated function with a similar\
    \ name: `div_floor`\n\nerror[E0277]: cannot divide `isize` by `i32`\n --> /tmp/tmpfxgz4x1l.rs:7:8\n\
    \  |\n7 |     (a / (b as i32)).floor()\n  |        ^ no implementation for `isize\
    \ / i32`\n  |\n  = help: the trait `Div<i32>` is not implemented for `isize`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308,\
    \ E0599.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).min(a\
    \ % b as usize).expect(\"No GCD in integers a,b\")\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_w47khb5.rs:7:21\n  |\n7 |\
    \     (a / b).min(a % b as usize).expect(\"No GCD in integers a,b\")\n  |    \
    \                 ^^^^^^^^^^ expected `isize`, found `usize`\n\nerror[E0277]:\
    \ cannot mod `isize` by `usize`\n --> /tmp/tmp_w47khb5.rs:7:19\n  |\n7 |     (a\
    \ / b).min(a % b as usize).expect(\"No GCD in integers a,b\")\n  |           \
    \        ^ no implementation for `isize % usize`\n  |\n  = help: the trait `Rem<usize>`\
    \ is not implemented for `isize`\n  = help: the following other types implement\
    \ trait `Rem<Rhs>`:\n            <&'a f32 as Rem<f32>>\n            <&'a f64 as\
    \ Rem<f64>>\n            <&'a i128 as Rem<i128>>\n            <&'a i16 as Rem<i16>>\n\
    \            <&'a i32 as Rem<i32>>\n            <&'a i64 as Rem<i64>>\n      \
    \      <&'a i8 as Rem<i8>>\n            <&'a isize as Rem<isize>>\n          and\
    \ 54 others\n\nerror[E0599]: no method named `expect` found for type `isize` in\
    \ the current scope\n --> /tmp/tmp_w47khb5.rs:7:33\n  |\n7 |     (a / b).min(a\
    \ % b as usize).expect(\"No GCD in integers a,b\")\n  |                      \
    \           ^^^^^^ method not found in `isize`\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor\
    \ more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 1 {\n        return b;\n    }\n\n    if b == 1 {\n        return a;\n    }\n\
    \n    if a > b {\n        (greatest_common_divisor(b, b - a), b)\n    } else {\n\
    \        (a, greatest_common_divisor(a, a - b))\n    }\n}\n\nfn main() {\n   \
    \ let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzubotd50.rs:16:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n16 |         (greatest_common_divisor(b, b - a), b)\n   |       \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found tuple\n   |\n\
    \   = note: expected type `isize`\n             found tuple `(isize, isize)`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpzubotd50.rs:18:9\n   |\n6  | fn\
    \ greatest_common_divisor(a: isize, b: isize) -> isize {\n   |               \
    \                                    ----- expected `isize` because of return\
    \ type\n...\n18 |         (a, greatest_common_divisor(a, a - b))\n   |       \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found tuple\n   |\n\
    \   = note: expected type `isize`\n             found tuple `(isize, isize)`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a.cmp(b);\n    loop {\n        gcd = a.mod(gcd);\n        if gcd != 0\
    \ {\n            a = gcd;\n        } else {\n            break;\n        }\n \
    \   }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found keyword `mod`\n --> /tmp/tmphqv1d9j1.rs:9:17\n\
    \  |\n9 |         gcd = a.mod(gcd);\n  |                 ^^^ expected identifier,\
    \ found keyword\n  |\nhelp: escape `mod` to use it as an identifier\n  |\n9 |\
    \         gcd = a.r#mod(gcd);\n  |                 ++\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmphqv1d9j1.rs:7:25\n  |\n7 |     let mut gcd = a.cmp(b);\n\
    \  |                         ^\n  |                         |\n  |           \
    \              expected `&isize`, found `isize`\n  |                         help:\
    \ consider borrowing here: `&b`\n\nerror[E0599]: no method named `r#mod` found\
    \ for type `isize` in the current scope\n --> /tmp/tmphqv1d9j1.rs:9:17\n  |\n\
    9 |         gcd = a.mod(gcd);\n  |                 ^^^ method not found in `isize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmphqv1d9j1.rs:10:19\n   |\n10 |\
    \         if gcd != 0 {\n   |                   ^ expected enum `std::cmp::Ordering`,\
    \ found integer\n\nerror[E0308]: mismatched types\n  --> /tmp/tmphqv1d9j1.rs:11:17\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                             ----- expected due to this parameter type\n...\n\
    11 |             a = gcd;\n   |                 ^^^ expected `isize`, found enum\
    \ `std::cmp::Ordering`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmphqv1d9j1.rs:16:5\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                                 ----- expected `isize` because\
    \ of return type\n...\n16 |     gcd\n   |     ^^^ expected `isize`, found enum\
    \ `std::cmp::Ordering`\n\nerror: aborting due to 6 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ remainder = a % b;\n    while remainder != 0 {\n        remainder *= 2;\n  \
    \      a -= 1;\n    }\n    remainder\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpkztuk8zj.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |         a -= 1;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ m = a;\n    let mut n = b;\n    while m > n {\n        m = m % n;\n    }\n \
    \   n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpohg6fhbw.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b +\
    \ b) % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplvuvjzxm.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976086
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpujwjti44.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        let mut m: isize = 0;\n        let mut n: isize = a;\n        while\
    \ n > b {\n            m += n;\n            n -= b;\n        }\n        m += n;\n\
    \        m / b\n    } else {\n        let mut m: isize = 1;\n        let mut n:\
    \ isize = b;\n        while a > b {\n            m += n;\n            n += a;\n\
    \        }\n        m += n;\n        m / a\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpulji86x4.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ { a, b }\n    else {\n        b, a\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error: struct literals are not allowed here\n --> /tmp/tmp8x8_xs17.rs:7:12\n\
    \  |\n7 |     if a < b { a, b }\n  |            ^^^^^^^^^^\n  |\nhelp: surround\
    \ the struct literal with parentheses\n  |\n7 |     if a < (b { a, b })\n  | \
    \           +          +\n\nerror: missing condition for `if` expression\n -->\
    \ /tmp/tmp8x8_xs17.rs:7:7\n  |\n7 |     if a < b { a, b }\n  |       ^ expected\
    \ if condition here\n\nerror: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`,\
    \ or an operator, found `,`\n --> /tmp/tmp8x8_xs17.rs:9:10\n  |\n9 |         b,\
    \ a\n  |          ^ expected one of 8 possible tokens\n\nerror[E0574]: expected\
    \ struct, variant or union type, found local variable `b`\n --> /tmp/tmp8x8_xs17.rs:7:12\n\
    \  |\n7 |     if a < b { a, b }\n  |            ^ not a struct, variant or union\
    \ type\n\nerror: aborting due to 4 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0574`.\n"
  stdout: ''
  timestamp: 1659976087
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp2i1g62c5.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976086

language: rs
name: HumanEval_37_sort_even
results:
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![];\n    let mut odd = vec![];\n\n    for i in 0..l.len()\
    \ {\n        if i & 1 == 1 {\n            odd.push(l[i]);\n        } else {\n\
    \            even.push(l[i]);\n        }\n    }\n    even.sort_unstable();\n \
    \   odd.sort_unstable();\n\n    even.clone().push(&mut odd.clone());\n    odd\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2xamb7op.rs:22:23\n   |\n\
    22 |     even.clone().push(&mut odd.clone());\n   |                       ^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `&mut Vec<isize>`\n   |\n   = note:           expected\
    \ type `isize`\n           found mutable reference `&mut Vec<isize>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l;\n\n    for i in l.iter_mut() {\n        if *i % 2 == 0 {\n  \
    \          *i ^= 1;\n        }\n    }\n\n    l\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 3, 3]`,\n right: `[1, 2, 3]`', /tmp/tmpagh_00_3.rs:22:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmppxyvdbp0.rs:9:23\n  |\n9 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut vec = vec![];\n    let mut count = 0;\n    for val in l {\n        if\
    \ count % 2 == 0 {\n            vec.push(val);\n        } else {\n           \
    \ if *val < *vec.get(-1 - count) {\n                vec.push(val);\n         \
    \   }\n        }\n        count += 1;\n    }\n    vec\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpw7tmyh73.rs:15:16\n\
    \   |\n15 |             if *val < *vec.get(-1 - count) {\n   |               \
    \ ^^^^\n\nerror[E0277]: the trait bound `usize: Neg` is not satisfied\n  --> /tmp/tmpw7tmyh73.rs:15:32\n\
    \   |\n15 |             if *val < *vec.get(-1 - count) {\n   |               \
    \                 ^^ the trait `Neg` is not implemented for `usize`\n   |\n  \
    \ = help: the following other types implement trait `Neg`:\n             &f32\n\
    \             &f64\n             &i128\n             &i16\n             &i32\n\
    \             &i64\n             &i8\n             &isize\n           and 8 others\n\
    \nerror[E0614]: type `Option<&isize>` cannot be dereferenced\n  --> /tmp/tmpw7tmyh73.rs:15:23\n\
    \   |\n15 |             if *val < *vec.get(-1 - count) {\n   |               \
    \        ^^^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to 3 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0614.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    for i in 0..(even.len() / 2) {\n        even[i] = even.swap(i,\
    \ i + 1);\n    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmplcdftr3n.rs:11:19\n   |\n\
    11 |         even[i] = even.swap(i, i + 1);\n   |         -------   ^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `()`\n   |         |\n   |         expected due to the\
    \ type of this binding\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() <= 1 {\n        return l;\n    }\n    let mut even = vec![l.last()..0];\n\
    \    let mut odd = vec![];\n    for i in l.iter().rev() {\n        if i % 2 ==\
    \ 0 {\n            even.push(i);\n        } else {\n            odd.push(i);\n\
    \        }\n    }\n    even.extend(euclidean_sort(odd));\n    even.extend(even.iter().cloned());\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `euclidean_sort` in this scope\n  -->\
    \ /tmp/tmpgg__0f0s.rs:21:17\n   |\n21 |     even.extend(euclidean_sort(odd));\n\
    \   |                 ^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpgg__0f0s.rs:12:35\n   |\n12 |     let mut even\
    \ = vec![l.last()..0];\n   |                                   ^ expected enum\
    \ `Option`, found integer\n   |\n   = note: expected enum `Option<&isize>`\n \
    \             found type `{integer}`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpgg__0f0s.rs:16:23\n   |\n16 |             even.push(i);\n   |      \
    \                 ^ expected struct `std::ops::Range`, found `&isize`\n   |\n\
    \   = note: expected struct `std::ops::Range<Option<&isize>>`\n           found\
    \ reference `&isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpgg__0f0s.rs:23:5\n\
    \   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                \
    \                ---------- expected `Vec<isize>` because of return type\n...\n\
    23 |     even\n   |     ^^^^ expected `isize`, found struct `std::ops::Range`\n\
    \   |\n   = note: expected struct `Vec<isize>`\n              found struct `Vec<std::ops::Range<Option<&isize>>>`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut s = l;\n    sort_odd_even_helper(&mut s);\n    s\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sort_odd_even_helper` in this scope\n\
    \  --> /tmp/tmpa75vbabf.rs:10:5\n   |\n10 |     sort_odd_even_helper(&mut s);\n\
    \   |     ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![0; l.len() / 2];\n    let mut odd = vec![0; l.len() / 2];\n\
    \    for i in 0..even.len() {\n        even[i] = l[2 * i];\n        odd[i] = l[2\
    \ * i + 1];\n    }\n\n    even.iter().cloned().sort().cloned().push(even.iter().cloned().take_last().unwrap());\n\
    \    odd.iter().cloned().sort().cloned().push(odd.iter().cloned().take_last().unwrap());\n\
    \    even.cloned().push(odd.cloned().pop());\n    even\n}\n\nfn main() {\n   \
    \ let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort` found for struct `Cloned` in the current\
    \ scope\n  --> /tmp/tmp2bl8nyk_.rs:16:26\n   |\n16 |     even.iter().cloned().sort().cloned().push(even.iter().cloned().take_last().unwrap());\n\
    \   |                          ^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror[E0599]: no method named `take_last` found for struct `Cloned`\
    \ in the current scope\n  --> /tmp/tmp2bl8nyk_.rs:16:68\n   |\n16 |     even.iter().cloned().sort().cloned().push(even.iter().cloned().take_last().unwrap());\n\
    \   |                                                                    ^^^^^^^^^\
    \ method not found in `Cloned<std::slice::Iter<'_, isize>>`\n\nerror[E0599]: no\
    \ method named `sort` found for struct `Cloned` in the current scope\n  --> /tmp/tmp2bl8nyk_.rs:17:25\n\
    \   |\n17 |     odd.iter().cloned().sort().cloned().push(odd.iter().cloned().take_last().unwrap());\n\
    \   |                         ^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror[E0599]: no method named `take_last` found for struct `Cloned`\
    \ in the current scope\n  --> /tmp/tmp2bl8nyk_.rs:17:66\n   |\n17 |     odd.iter().cloned().sort().cloned().push(odd.iter().cloned().take_last().unwrap());\n\
    \   |                                                                  ^^^^^^^^^\
    \ method not found in `Cloned<std::slice::Iter<'_, isize>>`\n\nerror[E0599]: `Vec<isize>`\
    \ is not an iterator\n   --> /tmp/tmp2bl8nyk_.rs:18:10\n    |\n18  |       even.cloned().push(odd.cloned().pop());\n\
    \    |            ^^^^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the\
    \ following trait bounds were not satisfied:\n            `Vec<isize>: Iterator`\n\
    \            which is required by `&mut Vec<isize>: Iterator`\n            `[isize]:\
    \ Iterator`\n            which is required by `&mut [isize]: Iterator`\n\nerror[E0599]:\
    \ `Vec<isize>` is not an iterator\n   --> /tmp/tmp2bl8nyk_.rs:18:28\n    |\n18\
    \  |       even.cloned().push(odd.cloned().pop());\n    |                    \
    \          ^^^^^^ `Vec<isize>` is not an iterator\n    |\n    = note: the following\
    \ trait bounds were not s"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even_values = l;\n    for i in even_values.iter_mut() {\n        *i\
    \ -= 1;\n    }\n    even_values.sort_unstable();\n    even_values\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2]`,\n right: `[1, 2, 3]`', /tmp/tmp34kdmibu.rs:19:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sorted_by_key(|x| {\n        if x.is_odd() {\n           \
    \ x\n        } else {\n            x.clone()\n        }\n    })\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by_key` found for struct `Cloned`\
    \ in the current scope\n --> /tmp/tmpii_2o326.rs:9:23\n  |\n9 |     l.iter().cloned().sorted_by_key(|x|\
    \ {\n  |                       ^^^^^^^^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| a % 2 == b % 2)\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpz_5psz82.rs:9:31\n  |\n9 |\
    \     l.sort_unstable_by(|a, b| a % 2 == b % 2)\n  |                         \
    \      ^^^^^^^^^^^^^^ expected enum `std::cmp::Ordering`, found `bool`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpz_5psz82.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>)\
    \ -> Vec<isize> {\n  |                                ---------- expected `Vec<isize>`\
    \ because of return type\n9 |     l.sort_unstable_by(|a, b| a % 2 == b % 2)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `Vec`, found\
    \ `()`\n  |\n  = note: expected struct `Vec<isize>`\n          found unit type\
    \ `()`\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut v = l;\n    v.sort_unstable();\n    let mut even = vec![];\n    let\
    \ mut odd = vec![];\n    for i in v.iter() {\n        if i % 2 == 0 {\n      \
    \      even.push(i);\n        } else {\n            odd.push(i);\n        }\n\
    \    }\n    even.extend(odd.iter().cloned());\n    even\n}\n\nfn main() {\n  \
    \  let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp0vuw3_sw.rs:21:5\n   |\n\
    8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n21 | \
    \    even\n   |     ^^^^ expected `isize`, found `&isize`\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<&isize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut i = 0;\n    let mut i_pos = 0;\n    let mut even_idx = vec![true; l.len()];\n\
    \    let mut odd_idx = vec![false; l.len()];\n    for i in 0..l.len() {\n    \
    \    if even_idx[i] {\n            even_idx[i] = false;\n            odd_idx[i]\
    \ = true;\n        }\n        even_idx[i] = true;\n    }\n\n    for i in 0..even_idx.len()\
    \ {\n        while i < even_idx.len() && even_idx[i] == true {\n            i\
    \ += 1;\n        }\n        i_pos = i;\n        while i_pos < even_idx.len() &&\
    \ odd_idx[i_pos] == true {\n            i += 1;\n            i_pos += 1;\n   \
    \     }\n        even_idx[i] = true;\n    }\n    even_idx.iter().cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `Vec<isize>` cannot be built from an iterator\
    \ over elements of type `bool`\n    --> /tmp/tmp9elyl3wi.rs:32:30\n     |\n32\
    \   |     even_idx.iter().cloned().collect()\n     |                         \
    \     ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=bool>`\n\
    \     |\n     = help: the trait `FromIterator<bool>` is not implemented for `Vec<isize>`\n\
    \     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\nnote: required\
    \ by a bound in `collect`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sorted_by_key(|x| x % 2).collect()\n}\n\nfn main() {\n   \
    \ let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by_key` found for struct `Cloned`\
    \ in the current scope\n --> /tmp/tmpjwzbh0g4.rs:9:23\n  |\n9 |     l.iter().cloned().sorted_by_key(|x|\
    \ x % 2).collect()\n  |                       ^^^^^^^^^^^^^ method not found in\
    \ `Cloned<std::slice::Iter<'_, isize>>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut evens = l;\n    evens.sort();\n    for i in 0..evens.len() - 1 {\n \
    \       let j = evens.len() - 1 - i;\n        let v = evens[j];\n        let w\
    \ = evens[i];\n        if w > v {\n            evens.swap(i, j);\n        }\n\
    \    }\n    evens\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, 9, 5, 3, 3, 2, 1, 0, -3, -5, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpyjo04gzf.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmppxyvdbp0.rs:9:23\n  |\n9 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().filter_map(|x| *x as isize).cloned().collect()\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmpfa85tffr.rs:9:38\n\
    \  |\n9 |     l.iter().cloned().filter_map(|x| *x as isize).cloned().collect()\n\
    \  |                                      ^^\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = Vec::new();\n    for val in l {\n        even.insert(even.iter().position(|&x|\
    \ x < val).unwrap(), val);\n    }\n    even.sort();\n    even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmphlbkqpcf.rs:11:56

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even_index: Vec<usize> = vec![];\n    let mut odd_index: Vec<usize>\
    \ = vec![];\n    for &i in l {\n        if i % 2 == 0 {\n            even_index.push(i);\n\
    \        } else {\n            odd_index.push(i);\n        }\n    }\n    let mut\
    \ even_value_vec: Vec<isize> = vec![];\n    let mut odd_value_vec: Vec<isize>\
    \ = vec![];\n    for i in even_index {\n        even_value_vec.push(i);\n    }\n\
    \    for i in odd_index {\n        odd_value_vec.push(i);\n    }\n    even_value_vec.sort_unstable();\n\
    \    odd_value_vec.sort_unstable();\n    even_value_vec.into_iter().cloned().zip(odd_value_vec.into_iter().cloned()).cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp0gdw8vxu.rs:11:9\n   |\n\
    11 |     for &i in l {\n   |         ^^    - this expression has type `Option<isize>`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |        \
    \ help: you can probably remove the explicit borrow: `i`\n   |\n   = note:   expected\
    \ type `isize`\n           found reference `&_`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp0gdw8vxu.rs:21:29\n   |\n21 |         even_value_vec.push(i);\n\
    \   |                             ^ expected `isize`, found `usize`\n   |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n21 |         even_value_vec.push(i.try_into().unwrap());\n   |  \
    \                            ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp0gdw8vxu.rs:24:28\n   |\n24 |         odd_value_vec.push(i);\n\
    \   |                            ^ expected `isize`, found `usize`\n   |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n24 |         odd_value_vec.push(i.try_into().unwrap());\n   |   \
    \                          ++++++++++++++++++++\n\nerror[E0271]: type mismatch\
    \ resolving `<std::vec::IntoIter<isize> as Iterator>::Item == &_`\n    --> /tmp/tmp0gdw8vxu.rs:28:32\n\
    \     |\n28   |     even_value_vec.into_iter().cloned().zip(odd_value_vec.into_iter().cloned()).cloned().collect()\n\
    \     |                                ^^^^^^ expected reference, found `isize`\n\
    \     |\n     = note: expected reference `&_`\n                     found type\
    \ `isize`\nnote: required by a bound in `cloned`\n\nerror[E0599]: the method `zip`\
    \ exists for struct `Cloned<std::vec::IntoIter<isize>>`, but its trait bounds\
    \ were not satisfied\n  --> /tmp/tmp0gdw8vxu.rs:28:41\n   |\n28 |       even_value_vec.into_iter().cloned().zip(odd_value_vec.into_iter().cloned()).cloned().collect()\n\
    \   |                                           ^^^ method cannot be called on\
    \ `Cloned<std::vec::IntoIter<isize>>` due to unsatisfied trait bounds\n   |\n\
    \   = note: the following trait bounds were not satisfied:\n      "
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l2 = l;\n    l2.sort();\n    for i in 0..l.len() {\n        if i & 1\
    \ == 0 {\n            swap(&mut l2[i], &mut l2[i]);\n        }\n    }\n    l2\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpc2kn7zxk.rs:13:13\n\
    \   |\n13 |             swap(&mut l2[i], &mut l2[i]);\n   |             ^^^^ not\
    \ found in this scope\n   |\nhelp: consider importing one of these items\n   |\n\
    1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.to_vec();\n\n    // Copy odd indices into a vector, sort that\
    \ vector, and then copy back.\n    l.iter_mut().for_each(|v| {\n        if *v\
    \ % 2 == 0 {\n            *v = *v + 1;\n        }\n    });\n\n    l.sort();\n\n\
    \    l.iter_mut().for_each(|v| *v = *v % 2);\n\n    l\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 1, 1]`,\n right: `[1, 2, 3]`', /tmp/tmpwg1x4i5r.rs:27:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let even = &l;\n    let even = even.clone();\n    let even = even.iter().cloned();\n\
    \    let even = even.by_ref();\n    let even = even.filter_map(|&x| if x.is_odd()\
    \ x else x % 2 == 0).cloned();\n    let even = even.collect();\n    let even =\
    \ even.into_iter().cloned();\n    let even = even.by_ref();\n    even\n}\n\nfn\
    \ main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `x`\n  --> /tmp/tmpy4ilzx40.rs:13:51\n   |\n\
    13 |     let even = even.filter_map(|&x| if x.is_odd() x else x % 2 == 0).cloned();\n\
    \   |                                     --            ^ expected `{`\n   | \
    \                                    |\n   |                                 \
    \    this `if` expression has a condition, but no block\n   |\nhelp: try placing\
    \ this code inside a block\n   |\n13 |     let even = even.filter_map(|&x| if\
    \ x.is_odd() { x } else x % 2 == 0).cloned();\n   |                          \
    \                         +   +\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even: Vec<isize> = Vec::new();\n    even.reserve(l.len());\n    for\
    \ i in l {\n        even.push(i);\n    }\n    let mut odd = Vec::new();\n    for\
    \ i in 0..even.len() - 1 {\n        odd.push(even[i]);\n        even[i] = even[i\
    \ + 1];\n    }\n    odd\n}\n\nfn main() {\n    let candidate = sort_even;\n  \
    \  assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2]`,\n right: `[1, 2, 3]`', /tmp/tmpru7sv5ce.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().enumerate().filter_map(|(i, v)| *i %2 != 0).cloned().collect()\n}\n\
    \nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0614]: type `usize` cannot be dereferenced\n --> /tmp/tmp5qvv0k9p.rs:9:46\n\
    \  |\n9 |     l.iter().enumerate().filter_map(|(i, v)| *i %2 != 0).cloned().collect()\n\
    \  |                                              ^^\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp5qvv0k9p.rs:9:46\n  |\n9 |     l.iter().enumerate().filter_map(|(i,\
    \ v)| *i %2 != 0).cloned().collect()\n  |                                    \
    \          ^^^^^^^^^^ expected enum `Option`, found `bool`\n  |\n  = note: expected\
    \ enum `Option<_>`\n             found type `bool`\nhelp: try wrapping the expression\
    \ in `Some`\n  |\n9 |     l.iter().enumerate().filter_map(|(i, v)| Some(*i %2\
    \ != 0)).cloned().collect()\n  |                                             \
    \ +++++          +\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0614.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.into_iter().sort_by_key(|i| i % 2).collect::<Vec<_>>()\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_by_key` found for struct `std::vec::IntoIter`\
    \ in the current scope\n --> /tmp/tmpkt4rhpqa.rs:9:19\n  |\n9 |     l.into_iter().sort_by_key(|i|\
    \ i % 2).collect::<Vec<_>>()\n  |                   ^^^^^^^^^^^ method not found\
    \ in `std::vec::IntoIter<isize>`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().enumerate().sort().filter_map(|(_, x)| {\n        if x.is_even()\
    \ {\n            x.0\n        } else {\n            x.0 + 1\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort` found for struct `Enumerate` in the\
    \ current scope\n --> /tmp/tmpdjolm7uj.rs:9:35\n  |\n9 |     l.iter().cloned().enumerate().sort().filter_map(|(_,\
    \ x)| {\n  |                                   ^^^^ method not found in `Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmppxyvdbp0.rs:9:23\n  |\n9 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![0; l.len() / 2];\n    let mut odd = vec![1; l.len() / 2];\n\
    \n    for i in 0..l.len() {\n        if odd[i / 2] <= even[i / 2] {\n        \
    \    even[i / 2] += l[i];\n        } else {\n            odd[i / 2] += l[i];\n\
    \        }\n    }\n    odd\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 1 but the
    index is 1'', /tmp/tmp2czz5v3d.rs:13:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| a.0 % 2 != b.0 % 2)\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0609]: no field `0` on type `&isize`\n --> /tmp/tmpewne6y7t.rs:9:33\n\
    \  |\n9 |     l.sort_unstable_by(|a, b| a.0 % 2 != b.0 % 2)\n  |             \
    \                    ^\n\nerror[E0609]: no field `0` on type `&isize`\n --> /tmp/tmpewne6y7t.rs:9:44\n\
    \  |\n9 |     l.sort_unstable_by(|a, b| a.0 % 2 != b.0 % 2)\n  |             \
    \                               ^\n\nerror[E0308]: mismatched types\n --> /tmp/tmpewne6y7t.rs:9:31\n\
    \  |\n9 |     l.sort_unstable_by(|a, b| a.0 % 2 != b.0 % 2)\n  |             \
    \                  ^^^^^^^^^^^^^^^^^^ expected enum `std::cmp::Ordering`, found\
    \ `bool`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpewne6y7t.rs:9:5\n  |\n\
    8 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |                         \
    \       ---------- expected `Vec<isize>` because of return type\n9 |     l.sort_unstable_by(|a,\
    \ b| a.0 % 2 != b.0 % 2)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n\
    \          found unit type `()`\n\nerror: aborting due to 4 previous errors\n\n\
    Some errors have detailed explanations: E0308, E0609.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let even = l.iter().cloned().filter(|x| x % 2 == 0).cloned().collect();\n  \
    \  even.iter().cloned().cloned().zip(even.iter().cloned()).map(|(a, b)| a.cmp(b)).cloned().collect::<Vec<_>>().into_iter().cloned().cloned().zip(even.iter().cloned()).map(|(a,\
    \ b)| a.cmp(b)).cloned().collect::<Vec<_>>().into_iter().cloned().cloned().collect::<Vec<_>>()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n --> /tmp/tmpyk8v5t0m.rs:9:57\n  |\n9 |     let even\
    \ = l.iter().cloned().filter(|x| x % 2 == 0).cloned().collect();\n  |        \
    \                                                 ^^^^^^ expected reference, found\
    \ `isize`\n  |\n  = note: expected reference `&&_`\n             found reference\
    \ `&isize`\n  = note: required because of the requirements on the impl of `Iterator`\
    \ for `Cloned<std::slice::Iter<'_, isize>>`\n  = note: 1 redundant requirement\
    \ hidden\n  = note: required because of the requirements on the impl of `Iterator`\
    \ for `Filter<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmpyk8v5t0m.rs:9:41:\
    \ 9:55]>`\n\nerror[E0631]: type mismatch in closure arguments\n --> /tmp/tmpyk8v5t0m.rs:9:57\n\
    \  |\n9 |     let even = l.iter().cloned().filter(|x| x % 2 == 0).cloned().collect();\n\
    \  |                                         --------------  ^^^^^^ expected signature\
    \ of `for<'r> fn(&'r &_) -> _`\n  |                                         |\n\
    \  |                                         found signature of `for<'r> fn(&'r\
    \ isize) -> _`\n  |\n  = note: required because of the requirements on the impl\
    \ of `Iterator` for `Filter<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmpyk8v5t0m.rs:9:41:\
    \ 9:55]>`\n\nerror[E0599]: the method `collect` exists for struct `Cloned<Filter<Cloned<std::slice::Iter<'_,\
    \ isize>>, [closure@/tmp/tmpyk8v5t0m.rs:9:41: 9:55]>>`, but its trait bounds were\
    \ not satisfied\n  --> /tmp/tmpyk8v5t0m.rs:9:66\n   |\n9  |        let even =\
    \ l.iter().cloned().filter(|x| x % 2 == 0).cloned().collect();\n   |         \
    \                                                            ^^^^^^^ method cannot\
    \ be called on `Cloned<Filter<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmpyk8v5t0m.rs:9:41:\
    \ 9:55]>>` due to unsatisfied trait bounds\n   |\n   = note: the following trait\
    \ bounds were not satisfied:\n           `<Filter<Cloned<std::slice::Iter<'_,\
    \ isize>>, [closure@/tmp/tmpyk8v5t0m.rs:9:41: 9:55]> as Iterator>::Item = &_`\n\
    \           which is "
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.to_vec();\n    l.sort_unstable();\n    l.into_iter().map(|x| x\
    \ % 2).collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 0, 1]`,\n right: `[1, 2, 3]`', /tmp/tmplz8vs8k4.rs:16:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() % 2 == 1 {\n        panic!(\"sort_even was called with input list\
    \ that has an odd length\");\n    }\n\n    // Create an array of even indicies\
    \ for use later\n    let mut indicies = vec![];\n\n    for i in 0..l.len() / 2\
    \ {\n        indicies.push(i);\n    }\n\n    let evens = indicies.iter().cloned().filter(|&x|\
    \ x % 2 == 0).collect();\n    let even_values = evens.iter().map(|&x| l[x]).collect();\n\
    \n    for i in indicies.iter_mut() {\n        if i % 2 == 0 {\n            l[i]\
    \ = even_values[*i];\n        }\n    }\n    l\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmpdsvmiphc.rs:21:23\n\
    \   |\n20 |     let evens = indicies.iter().cloned().filter(|&x| x % 2 == 0).collect();\n\
    \   |         ----- consider giving `evens` a type\n21 |     let even_values =\
    \ evens.iter().map(|&x| l[x]).collect();\n   |                       ^^^^^ cannot\
    \ infer type\n   |\n   = note: type must be known at this point\n\nerror[E0369]:\
    \ cannot mod `&mut usize` by `{integer}`\n  --> /tmp/tmpdsvmiphc.rs:24:14\n  \
    \ |\n24 |         if i % 2 == 0 {\n   |            - ^ - {integer}\n   |     \
    \       |\n   |            &mut usize\n   |\nhelp: `%` can be used on `usize`,\
    \ you can dereference `i`\n   |\n24 |         if *i % 2 == 0 {\n   |         \
    \   +\n\nerror[E0277]: the type `[isize]` cannot be indexed by `&mut usize`\n\
    \  --> /tmp/tmpdsvmiphc.rs:25:13\n   |\n25 |             l[i] = even_values[*i];\n\
    \   |             ^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `&mut\
    \ usize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<&mut usize>`\
    \ for `Vec<isize>`\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0282, E0369.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_by_key(|&x| x % 2);\n    l\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmpstuj3a6q.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |              - help: consider changing this to be mutable: `mut l`\n\
    9 |     l.sort_by_key(|&x| x % 2);\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot borrow\
    \ as mutable\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ // we make a copy of the input vec so we don't mutate it\n    let v = l.clone();\n\
    \    // we sort using the bubble sort algorithm\n    bubble_sort(v);\n    v\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `bubble_sort` in this scope\n  --> /tmp/tmpo08wuhgu.rs:12:5\n\
    \   |\n12 |     bubble_sort(v);\n   |     ^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l_ = l;\n    let mut even = 0;\n    while even == 0 {\n        let mut\
    \ first = 0;\n        let mut second = 1;\n        while first < l_.len() - 1\
    \ {\n            if l_[first] > l_[second] {\n                l_[first] = l_[first];\n\
    \                first += 1;\n            } else {\n                l_[second]\
    \ = l_[second];\n                second += 1;\n            }\n        }\n    \
    \    even += 1;\n    }\n    l_\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 3 but the
    index is 3'', /tmp/tmp_gvcrpoy.rs:15:28

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| {\n        if b%2 == 0 {\n            -a.compare_unstable_by(b,\
    \ |x| *x, |y| *y, |x, y| x > y)\n        } else {\n            a.compare_unstable_by(b,\
    \ |x| *x, |y| *y, |x, y| x < y)\n        }\n    })\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `compare_unstable_by` found for reference\
    \ `&isize` in the current scope\n  --> /tmp/tmpq93se68l.rs:11:16\n   |\n11 | \
    \            -a.compare_unstable_by(b, |x| *x, |y| *y, |x, y| x > y)\n   |   \
    \             ^^^^^^^^^^^^^^^^^^^ method not found in `&isize`\n\nerror[E0599]:\
    \ no method named `compare_unstable_by` found for reference `&isize` in the current\
    \ scope\n  --> /tmp/tmpq93se68l.rs:13:15\n   |\n13 |             a.compare_unstable_by(b,\
    \ |x| *x, |y| *y, |x, y| x < y)\n   |               ^^^^^^^^^^^^^^^^^^^ method\
    \ not found in `&isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpq93se68l.rs:9:5\n\
    \   |\n8  |   fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |              \
    \                    ---------- expected `Vec<isize>` because of return type\n\
    9  | /     l.sort_unstable_by(|a, b| {\n10 | |         if b%2 == 0 {\n11 | | \
    \            -a.compare_unstable_by(b, |x| *x, |y| *y, |x, y| x > y)\n12 | | \
    \        } else {\n13 | |             a.compare_unstable_by(b, |x| *x, |y| *y,\
    \ |x, y| x < y)\n14 | |         }\n15 | |     })\n   | |______^ expected struct\
    \ `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isize>`\n         \
    \  found unit type `()`\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().enumerate().filter_map(|(idx, _)| {\n        if idx % 2 ==\
    \ 0 {\n            Some(idx)\n        } else {\n            None\n        }\n\
    \    })\n    .collect::<Vec<_>>()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwlv1ymz6.rs:9:5\n   |\n8\
    \  |   fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                     \
    \             ---------- expected `Vec<isize>` because of return type\n9  | /\
    \     l.iter().cloned().enumerate().filter_map(|(idx, _)| {\n10 | |         if\
    \ idx % 2 == 0 {\n11 | |             Some(idx)\n12 | |         } else {\n... \
    \ |\n15 | |     })\n16 | |     .collect::<Vec<_>>()\n   | |________________________^\
    \ expected `isize`, found `usize`\n   |\n   = note: expected struct `Vec<isize>`\n\
    \              found struct `Vec<usize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut sorted_even = l;\n    sorted_even.sort();\n    for i in 0..sorted_even.len()\
    \ {\n        if i % 2 == 0 {\n            sorted_even[i] = sorted_even[i / 2];\n\
    \        }\n    }\n    sorted_even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 2]`,\n right: `[1, 2, 3]`', /tmp/tmp9xmrd4tk.rs:21:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    for x in even.iter_mut() {\n        if x % 2 == 0 {\n\
    \            *x = *x + (*x % 2);\n        }\n    }\n    even\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&mut isize` by `{integer}`\n  --> /tmp/tmpqqg__868.rs:11:14\n\
    \   |\n11 |         if x % 2 == 0 {\n   |            - ^ - {integer}\n   |   \
    \         |\n   |            &mut isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `x`\n   |\n11 |         if *x % 2 == 0 {\n   |         \
    \   +\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n\n    for &i in even.iter().rev() {\n        if i & 1 ==\
    \ 0 {\n            even.remove(i);\n        } else {\n            even.insert(i,\
    \ i);\n        }\n    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpv6003s_d.rs:13:25\n   |\n\
    13 |             even.remove(i);\n   |                         ^ expected `usize`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic\
    \ if the converted value doesn't fit\n   |\n13 |             even.remove(i.try_into().unwrap());\n\
    \   |                          ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpv6003s_d.rs:15:25\n   |\n15 |             even.insert(i,\
    \ i);\n   |                         ^ expected `usize`, found `isize`\n   |\n\
    help: you can convert an `isize` to a `usize` and panic if the converted value\
    \ doesn't fit\n   |\n15 |             even.insert(i.try_into().unwrap(), i);\n\
    \   |                          ++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.to_vec();\n    let mut even = vec![];\n    let mut odd = vec![];\n\
    \    let mut even_ind = vec![];\n    let mut odd_ind = vec![];\n\n    for i in\
    \ 0..l.len() {\n        if i % 2 == 0 {\n            even.push(l[i]);\n      \
    \      even_ind.push(i);\n        } else {\n            odd.push(l[i]);\n    \
    \        odd_ind.push(i);\n        }\n    }\n\n    for i in even_ind.iter() {\n\
    \        let v = even[i - odd_ind];\n        even[i] = v;\n    }\n\n    for i\
    \ in odd_ind.iter() {\n        odd[i - even_ind] = odd[i];\n    }\n\n    even.swap(odd);\n\
    \    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot subtract `Vec<usize>` from `&usize`\n  --> /tmp/tmp23dkhq06.rs:26:24\n\
    \   |\n26 |         let v = even[i - odd_ind];\n   |                        ^\
    \ no implementation for `&usize - Vec<usize>`\n   |\n   = help: the trait `Sub<Vec<usize>>`\
    \ is not implemented for `&usize`\n   = help: the following other types implement\
    \ trait `Sub<Rhs>`:\n             <&'a f32 as Sub<f32>>\n             <&'a f64\
    \ as Sub<f64>>\n             <&'a i128 as Sub<i128>>\n             <&'a i16 as\
    \ Sub<i16>>\n             <&'a i32 as Sub<i32>>\n             <&'a i64 as Sub<i64>>\n\
    \             <&'a i8 as Sub<i8>>\n             <&'a isize as Sub<isize>>\n  \
    \         and 48 others\n\nerror[E0277]: the type `[isize]` cannot be indexed\
    \ by `&usize`\n  --> /tmp/tmp23dkhq06.rs:27:9\n   |\n27 |         even[i] = v;\n\
    \   |         ^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `&usize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<&usize>` for `Vec<isize>`\n\
    \nerror[E0277]: cannot subtract `Vec<usize>` from `&usize`\n  --> /tmp/tmp23dkhq06.rs:31:15\n\
    \   |\n31 |         odd[i - even_ind] = odd[i];\n   |               ^ no implementation\
    \ for `&usize - Vec<usize>`\n   |\n   = help: the trait `Sub<Vec<usize>>` is not\
    \ implemented for `&usize`\n   = help: the following other types implement trait\
    \ `Sub<Rhs>`:\n             <&'a f32 as Sub<f32>>\n             <&'a f64 as Sub<f64>>\n\
    \             <&'a i128 as Sub<i128>>\n             <&'a i16 as Sub<i16>>\n  \
    \           <&'a i32 as Sub<i32>>\n             <&'a i64 as Sub<i64>>\n      \
    \       <&'a i8 as Sub<i8>>\n             <&'a isize as Sub<isize>>\n        \
    \   and 48 others\n\nerror[E0277]: the type `[isize]` cannot be indexed by `&usize`\n\
    \  --> /tmp/tmp23dkhq06.rs:31:29\n   |\n31 |         odd[i - even_ind] = odd[i];\n\
    \   |                             ^^^^^^ slice indices are of type `usize` or\
    \ ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>` is not imp"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    for i in 0..l.len() {\n        if i % 2 == 0 {\n   \
    \         continue;\n        }\n        l[i] = l[l.len() - i - 1];\n    }\n  \
    \  l\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmp0idfx4b4.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |              - help: consider changing this to be mutable: `mut l`\n\
    9 |     l.sort_unstable();\n  |     ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n\
    \nerror[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \  --> /tmp/tmp0idfx4b4.rs:14:9\n   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |              - help: consider changing this to be mutable: `mut l`\n\
    ...\n14 |         l[i] = l[l.len() - i - 1];\n   |         ^ cannot borrow as\
    \ mutable\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    for &i in even.iter_mut() {\n        i %= 2;\n    }\n\
    \    even.sort();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpn7mz8irp.rs:10:9\n   |\n\
    10 |     for &i in even.iter_mut() {\n   |         ^^    --------------- this\
    \ expression has type `Option<&mut isize>`\n   |         |\n   |         types\
    \ differ in mutability\n   |         help: you can probably remove the explicit\
    \ borrow: `i`\n   |\n   = note: expected mutable reference `&mut isize`\n    \
    \                  found reference `&_`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut lp = l;\n    lp.sort();\n    lp.sort_unstable();\n    lp\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpvvx4efds.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l_even = l;\n    l_even.sort_unstable();\n    l_even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpko6ou12g.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let even = l.iter().filter(|x| *x % 2 == 0).copied().collect();\n    let odd\
    \ = l.iter().filter(|x| *x % 2 == 1).copied().collect();\n    even.sort();\n \
    \   odd.sort();\n    even.clone() + odd\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmpnhsc03no.rs:11:5\n\
    \   |\n9  |     let even = l.iter().filter(|x| *x % 2 == 0).copied().collect();\n\
    \   |         ---- consider giving `even` a type\n10 |     let odd = l.iter().filter(|x|\
    \ *x % 2 == 1).copied().collect();\n11 |     even.sort();\n   |     ^^^^ cannot\
    \ infer type\n   |\n   = note: type must be known at this point\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0282`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() == 0 {\n        return l;\n    }\n\n    let mut l2 = l.clone();\n\
    \    l2.sort();\n    let mut l3 = l2.clone();\n    l3.sort();\n\n    for (i, v)\
    \ in l3.iter_mut().enumerate() {\n        if i & 1 == 0 {\n            *v = l2[i];\n\
    \        }\n    }\n\n    l3\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpj8s_gcan.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| {\n        mod (a, b) {\n            (a, b) => a <\
    \ b\n        }\n    })\n}\n\nfn main() {\n    let candidate = sort_even;\n   \
    \ assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `(`\n  --> /tmp/tmpgn4l0fep.rs:10:13\n\
    \   |\n10 |         mod (a, b) {\n   |             ^ expected identifier\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpgn4l0fep.rs:9:5\n   |\n8  |   fn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n   |                                  ----------\
    \ expected `Vec<isize>` because of return type\n9  | /     l.sort_unstable_by(|a,\
    \ b| {\n10 | |         mod (a, b) {\n11 | |             (a, b) => a < b\n12 |\
    \ |         }\n13 | |     })\n   | |______^ expected struct `Vec`, found `()`\n\
    \   |\n   = note: expected struct `Vec<isize>`\n           found unit type `()`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| {\n        if a % 2 == 0 {\n            -1\n     \
    \   } else {\n            if b % 2 == 0 {\n                1\n            } else\
    \ {\n                cmp::min(a, b)\n            }\n        }\n    })\n}\n\nfn\
    \ main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `cmp`\n\
    \  --> /tmp/tmp1665xelm.rs:16:17\n   |\n16 |                 cmp::min(a, b)\n\
    \   |                 ^^^ use of undeclared crate or module `cmp`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp1665xelm.rs:11:13\n   |\n11 |             -1\n\
    \   |             ^^ expected enum `std::cmp::Ordering`, found integer\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp1665xelm.rs:14:17\n   |\n14 |              \
    \   1\n   |                 ^ expected enum `std::cmp::Ordering`, found integer\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp1665xelm.rs:9:5\n   |\n8  |  \
    \ fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                          \
    \        ---------- expected `Vec<isize>` because of return type\n9  | /     l.sort_unstable_by(|a,\
    \ b| {\n10 | |         if a % 2 == 0 {\n11 | |             -1\n12 | |        \
    \ } else {\n...  |\n18 | |         }\n19 | |     })\n   | |______^ expected struct\
    \ `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isize>`\n         \
    \  found unit type `()`\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0433.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().enumerate().rev().filter_map(|(v, k)| *k == k % 2).map(|v|\
    \ v as usize).collect().sorted()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmp452n4h_9.rs:9:61\n\
    \  |\n9 |     l.iter().cloned().enumerate().rev().filter_map(|(v, k)| *k == k\
    \ % 2).map(|v| v as usize).collect().sorted()\n  |                           \
    \                                  ^^\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmp452n4h_9.rs:9:61\n  |\n9 |     l.iter().cloned().enumerate().rev().filter_map(|(v,\
    \ k)| *k == k % 2).map(|v| v as usize).collect().sorted()\n  |               \
    \                                              ^^^^^^^^^^^ expected enum `Option`,\
    \ found `bool`\n  |\n  = note: expected enum `Option<_>`\n             found type\
    \ `bool`\nhelp: try wrapping the expression in `Some`\n  |\n9 |     l.iter().cloned().enumerate().rev().filter_map(|(v,\
    \ k)| Some(*k == k % 2)).map(|v| v as usize).collect().sorted()\n  |         \
    \                                                    +++++           +\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0614.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l;\n    let mut even = vec![true; l.len()];\n    let mut odd = vec![false;\
    \ l.len()];\n\n    for i in 0..l.len() {\n        odd[i] = false;\n        even[i]\
    \ = true;\n    }\n\n    for j in 0..l.len() {\n        if even[j] {\n        \
    \    even[j] ^= true;\n        }\n    }\n\n    for j in 0..l.len() {\n       \
    \ if odd[j] {\n            odd[j] ^= true;\n        }\n    }\n\n    for i in 0..l.len()\
    \ {\n        even[i] = even[i] ^ !odd[i];\n    }\n\n    for i in 0..l.len() {\n\
    \        odd[i] = odd[i] ^ !even[i];\n    }\n\n    odd.iter().chain(even.iter()).collect()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `Vec<isize>` cannot be built from an iterator\
    \ over elements of type `&bool`\n    --> /tmp/tmpdfn9lc9s.rs:38:35\n     |\n38\
    \   |     odd.iter().chain(even.iter()).collect()\n     |                    \
    \               ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&bool>`\n\
    \     |\n     = help: the trait `FromIterator<&bool>` is not implemented for `Vec<isize>`\n\
    \     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\nnote: required\
    \ by a bound in `collect`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().windows(2).for_each(|window| {\n        let mut even = window.iter().cloned().peekable();\n\
    \        let mut odd = window.iter().cloned().skip(2).cloned().peekable();\n \
    \       even.for_each(|x| {\n            odd.next();\n            odd.peek().expect(\"\
    odd iterator is empty\");\n            odd.next().expect(\"odd iterator is empty\"\
    );\n            odd.peek().expect(\"odd iterator is empty\");\n            odd.next().expect(\"\
    odd iterator is empty\");\n            odd.next().expect(\"odd iterator is empty\"\
    );\n        });\n        odd.next().expect(\"odd iterator is empty\");\n     \
    \   even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator is empty\");\n        even.next().expect(\"\
    even iterator is empty\");\n        even.next().expect(\"even iterator is empty\"\
    );\n        even.next().expect(\"even iterator \n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmp_4z2iexw.rs:51:28\n\
    \   |\n51 |           even.next().expect(\"even iterator \n   |  ____________________________^\n\
    52 | | }\n53 | |\n54 | | fn main() {\n...  |\n58 | |     assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    59 | | }\n   | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().zip(l.iter().cloned()).cloned().filter_map(|(v, m)| {\n  \
    \      if m.is_even() {\n            Some((v, m))\n        } else {\n        \
    \    None\n        }\n    }).cloned().collect::<Vec<_>>()\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<Zip<Cloned<std::slice::Iter<'_,\
    \ isize>>, Cloned<std::slice::Iter<'_, isize>>> as Iterator>::Item == &_`\n  \
    \  --> /tmp/tmpvxzw4pp9.rs:9:46\n     |\n9    |     l.iter().cloned().zip(l.iter().cloned()).cloned().filter_map(|(v,\
    \ m)| {\n     |                                              ^^^^^^ expected reference,\
    \ found tuple\n     |\n     = note: expected reference `&_`\n                \
    \    found tuple `(_, _)`\nnote: required by a bound in `cloned`\n\nerror[E0599]:\
    \ the method `filter_map` exists for struct `Cloned<Zip<Cloned<std::slice::Iter<'_,\
    \ isize>>, Cloned<std::slice::Iter<'_, isize>>>>`, but its trait bounds were not\
    \ satisfied\n  --> /tmp/tmpvxzw4pp9.rs:9:55\n   |\n9  |        l.iter().cloned().zip(l.iter().cloned()).cloned().filter_map(|(v,\
    \ m)| {\n   |                                                          ^^^^^^^^^^\
    \ method cannot be called on `Cloned<Zip<Cloned<std::slice::Iter<'_, isize>>,\
    \ Cloned<std::slice::Iter<'_, isize>>>>` due to unsatisfied trait bounds\n   |\n\
    \   = note: the following trait bounds were not satisfied:\n           `<Zip<Cloned<std::slice::Iter<'_,\
    \ isize>>, Cloned<std::slice::Iter<'_, isize>>> as Iterator>::Item = &_`\n   \
    \        which is required by `Cloned<Zip<Cloned<std::slice::Iter<'_, isize>>,\
    \ Cloned<std::slice::Iter<'_, isize>>>>: Iterator`\n           `Cloned<Zip<Cloned<std::slice::Iter<'_,\
    \ isize>>, Cloned<std::slice::Iter<'_, isize>>>>: Iterator`\n           which\
    \ is required by `&mut Cloned<Zip<Cloned<std::slice::Iter<'_, isize>>, Cloned<std::slice::Iter<'_,\
    \ isize>>>>: Iterator`\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0271, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    let mut l1 = l.to_owned();\n    l1.iter_mut().enumerate().for_each(|(i,v)|\
    \ {\n        if i % 2 == 1 {\n            *v = *(*(i + 1) as isize);\n       \
    \ }\n    });\n    l1\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0614]: type `usize` cannot be dereferenced\n  --> /tmp/tmp84byxw2t.rs:13:20\n\
    \   |\n13 |             *v = *(*(i + 1) as isize);\n   |                    ^^^^^^^^\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() == 1 {\n        l\n    } else {\n        let mut l1 = l;\n      \
    \  let mut l2 = l;\n        let mut l = vec![0; l.len()];\n        for i in l.iter_mut()\
    \ {\n            if i % 2 == 1 {\n                l[i] = l2[i];\n            \
    \    l2[i] = 0;\n            }\n        }\n        l\n    }\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&mut {integer}` by `{integer}`\n  --> /tmp/tmpq3__fxv6.rs:16:18\n\
    \   |\n16 |             if i % 2 == 1 {\n   |                - ^ - {integer}\n\
    \   |                |\n   |                &mut {integer}\n   |\nhelp: `%` can\
    \ be used on `{integer}`, you can dereference `i`\n   |\n16 |             if *i\
    \ % 2 == 1 {\n   |                +\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `&mut {integer}`\n  --> /tmp/tmpq3__fxv6.rs:17:17\n   |\n17 |\
    \                 l[i] = l2[i];\n   |                 ^^^^ slice indices are of\
    \ type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>`\
    \ is not implemented for `&mut {integer}`\n   = help: the trait `SliceIndex<[T]>`\
    \ is implemented for `usize`\n   = note: required because of the requirements\
    \ on the impl of `Index<&mut {integer}>` for `Vec<{integer}>`\n\nerror[E0277]:\
    \ the type `[isize]` cannot be indexed by `&mut {integer}`\n  --> /tmp/tmpq3__fxv6.rs:17:24\n\
    \   |\n17 |                 l[i] = l2[i];\n   |                        ^^^^^ slice\
    \ indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait\
    \ `SliceIndex<[isize]>` is not implemented for `&mut {integer}`\n   = help: the\
    \ trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because\
    \ of the requirements on the impl of `Index<&mut {integer}>` for `Vec<isize>`\n\
    \nerror[E0277]: the type `[isize]` cannot be indexed by `&mut {integer}`\n  -->\
    \ /tmp/tmpq3__fxv6.rs:18:17\n   |\n18 |                 l2[i] = 0;\n   |     \
    \            ^^^^^ slice indices are of type `usize` or ranges of `usize`\n  \
    \ |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `&mut {integer}`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<&mut {integer}>`\
    \ for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0369.\nFor more information about an error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut evens: Vec<isize> = l.into_iter().collect();\n    evens.sort_unstable();\n\
    \    let mut evens_vec = vec![];\n    for i in evens.into_iter() {\n        evens_vec.push(i);\n\
    \    }\n    evens_vec\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmp08ufc96x.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter()\n        .enumerate()\n        .filter_map(|(i, _)| {\n           \
    \ if i % 2 == 0 {\n                Some(i)\n            } else {\n           \
    \     None\n            }\n        })\n        .map(|i| {\n            let index\
    \ = i as usize;\n            let v = l[index];\n            v.to_owned()\n   \
    \     })\n        .collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 3]`,\n right: `[1, 2, 3]`', /tmp/tmpazte8gt4.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.into_iter().cloned().collect::<Vec<_>>();\n    l.sort_unstable();\n\
    \    l.iter_mut().cloned().for_each(|x| *x = l.iter().skip(x).last().unwrap()).collect();\n\
    \    l\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::vec::IntoIter<isize> as Iterator>::Item\
    \ == &_`\n    --> /tmp/tmpy3h7qzem.rs:9:31\n     |\n9    |     let mut l = l.into_iter().cloned().collect::<Vec<_>>();\n\
    \     |                               ^^^^^^ expected reference, found `isize`\n\
    \     |\n     = note: expected reference `&_`\n                     found type\
    \ `isize`\nnote: required by a bound in `cloned`\n\nerror[E0599]: the method `collect`\
    \ exists for struct `Cloned<std::vec::IntoIter<isize>>`, but its trait bounds\
    \ were not satisfied\n  --> /tmp/tmpy3h7qzem.rs:9:40\n   |\n9  |       let mut\
    \ l = l.into_iter().cloned().collect::<Vec<_>>();\n   |                      \
    \                    ^^^^^^^ method cannot be called on `Cloned<std::vec::IntoIter<isize>>`\
    \ due to unsatisfied trait bounds\n   |\n   = note: the following trait bounds\
    \ were not satisfied:\n           `<std::vec::IntoIter<isize> as Iterator>::Item\
    \ = &_`\n           which is required by `Cloned<std::vec::IntoIter<isize>>: Iterator`\n\
    \           `Cloned<std::vec::IntoIter<isize>>: Iterator`\n           which is\
    \ required by `&mut Cloned<std::vec::IntoIter<isize>>: Iterator`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0271, E0599.\n\
    For more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    for i in even.iter_mut() {\n        *i ^= 1;\n    }\n\
    \    even.sort_unstable();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 2, 3]`,\n right: `[1, 2, 3]`', /tmp/tmp564q5_a3.rs:19:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().zip(l.iter().cloned()).map(|(a, b)| {\n        let mut temp\
    \ = a;\n        if a % 2 == 0 {\n            temp -= 1;\n        }\n        temp\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 1, 3]`,\n right: `[1, 2, 3]`', /tmp/tmpnwmqbz1c.rs:20:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut sorted = l.iter().cloned().collect::<Vec<isize>>();\n    for i in 0..sorted.len()\
    \ {\n        if i & 1 {\n            sorted.swap(i, i + 1);\n        }\n    }\n\
    \    sorted\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpd2i2t9o8.rs:11:12\n   |\n\
    11 |         if i & 1 {\n   |            ^^^^^ expected `bool`, found `usize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() % 2 == 1 {\n        // If l's length is not even, then it is assumed\
    \ that the list is incomplete\n        // and that the last item in the list is\
    \ the largest item\n        let last_item = &l[l.len() - 1];\n        l.push((last_item\
    \ + 1) as isize);\n    }\n\n    l.sort_unstable();\n    l\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \  --> /tmp/tmp3g1lvxum.rs:13:9\n   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |              - help: consider changing this to be mutable: `mut l`\n\
    ...\n13 |         l.push((last_item + 1) as isize);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ cannot borrow as mutable\n\nerror[E0596]: cannot borrow `l` as mutable, as it\
    \ is not declared as mutable\n  --> /tmp/tmp3g1lvxum.rs:16:5\n   |\n8  | fn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n   |              - help: consider changing this\
    \ to be mutable: `mut l`\n...\n16 |     l.sort_unstable();\n   |     ^^^^^^^^^^^^^^^^^\
    \ cannot borrow as mutable\n\nerror: aborting due to 2 previous errors\n\nFor\
    \ more information about this error, try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().enumerate().filter_map(|(idx, val)| {\n        match idx {\n\
    \            0 => Some(val),\n            _ => None,\n        }\n    }).cloned().enumerate().filter_map(|(idx,\
    \ val)| {\n        match idx {\n            0 => Some(val),\n            _ =>\
    \ None,\n        }\n    }).cloned().enumerate().filter_map(|(idx, val)| {\n  \
    \      match idx {\n            0 => Some(val),\n            _ => None,\n    \
    \    }\n    }).cloned().enumerate().filter_map(|(idx, val)| {\n        match idx\
    \ {\n            0 => Some(val),\n            _ => None,\n        }\n    }).cloned().enumerate().filter_map(|(idx,\
    \ val)| {\n        match idx {\n            0 => Some(val),\n            _ =>\
    \ None,\n        }\n    }).cloned().enumerate().filter_map(|(idx, val)| {\n  \
    \      match idx {\n            0 => Some(val),\n            _ => None,\n    \
    \    }\n    }).cloned().enumerate().filter_map(|(idx, val)| {\n        match idx\
    \ {\n            0 => Some(val),\n            _ => None,\n        }\n    }).cloned().enumerate().filter_map(|(idx,\
    \ val)| {\n        match idx {\n            0 => Some(val),\n            _ =>\
    \ None,\n        }\n    }).cloned().enumerate().filter_map(|(idx, val)| {\n  \
    \      match idx {\n            0 => Some(val),\n            _ => None,\n    \
    \    }\n    }).cloned().enumerate().filter_map(|(idx, val)| {\n        match idx\
    \ {\n            0 => Some(val),\n            _ => None,\n        }\n    }).cloned().enumerate().filter_map(|(idx,\
    \ val)| {\n        match idx {\n            0 => Some(val),\n            _ =>\
    \ None,\n        }\n    }).cloned().enumerate().filter_map(|(idx, val)| {\n  \
    \      match idx {\n            0 => Some(val),\n            _ => None,\n    \
    \    }\n    }).cloned().enumerate().filter_map(|(idx, val)| {\n        match idx\
    \ {\n            0 => Some(val),\n            _ => None,\n        }\n    }).cloned().enumerate().filter_map(|(idx,\
    \ val)| {\n        match idx {\n            0 => Some(val),\n            _ =>\
    \ None,\n        }\n    }).cloned().enumerate\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<[closure@/tmp/tmp1k4e54mu.rs:9:46:\
    \ 14:6] as FnOnce<((usize, isize),)>>::Output == Option<&_>`\n    --> /tmp/tmp1k4e54mu.rs:14:8\n\
    \     |\n14   |     }).cloned().enumerate().filter_map(|(idx, val)| {\n     |\
    \        ^^^^^^ expected reference, found `isize`\n     |\n     = note: expected\
    \ enum `Option<&_>`\n                found enum `Option<isize>`\n     = note:\
    \ required because of the requirements on the impl of `Iterator` for `FilterMap<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>, [closure@/tmp/tmp1k4e54mu.rs:9:46: 14:6]>`\nnote: required by a bound\
    \ in `cloned`\n\nerror[E0599]: the method `enumerate` exists for struct `Cloned<FilterMap<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>, [closure@/tmp/tmp1k4e54mu.rs:9:46: 14:6]>>`, but its trait bounds\
    \ were not satisfied\n  --> /tmp/tmp1k4e54mu.rs:14:17\n   |\n14 |        }).cloned().enumerate().filter_map(|(idx,\
    \ val)| {\n   |                    ^^^^^^^^^ method cannot be called on `Cloned<FilterMap<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>, [closure@/tmp/tmp1k4e54mu.rs:9:46: 14:6]>>` due to unsatisfied trait\
    \ bounds\n   |\n   = note: the following trait bounds were not satisfied:\n  \
    \         `<FilterMap<Enumerate<Cloned<std::slice::Iter<'_, isize>>>, [closure@/tmp/tmp1k4e54mu.rs:9:46:\
    \ 14:6]> as Iterator>::Item = &_`\n           which is required by `Cloned<FilterMap<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>, [closure@/tmp/tmp1k4e54mu.rs:9:46: 14:6]>>: Iterator`\n          \
    \ `Cloned<FilterMap<Enumerate<Cloned<std::slice::Iter<'_, isize>>>, [closure@/tmp/tmp1k4e54mu.rs:9:46:\
    \ 14:6]>>: Iterator`\n           which is required by `&mut Cloned<FilterMap<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>, [closure@/tmp/tmp1k4e54mu.rs:9:46: 14:6]>>: Iterator`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0271, E0599.\n\
    For more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut result = l;\n    for i in 0..(result.len() - 1).step_by(2) {\n     \
    \   let left = &result[i];\n        let right = &result[i + 1];\n        if *left\
    \ > 0 {\n            std::swap(&result[i], &result[i + 1]);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in crate `std`\n  --> /tmp/tmp5v_yq10j.rs:14:18\n\
    \   |\n14 |             std::swap(&result[i], &result[i + 1]);\n   |         \
    \         ^^^^ not found in `std`\n   |\nhelp: consider importing one of these\
    \ items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\
    help: if you import `swap`, refer to it directly\n   |\n14 -             std::swap(&result[i],\
    \ &result[i + 1]);\n14 +             swap(&result[i], &result[i + 1]);\n   | \n\
    \nerror[E0599]: `usize` is not an iterator\n  --> /tmp/tmp5v_yq10j.rs:10:36\n\
    \   |\n10 |     for i in 0..(result.len() - 1).step_by(2) {\n   |            \
    \                        ^^^^^^^ `usize` is not an iterator\n   |\n   = note:\
    \ the following trait bounds were not satisfied:\n           `usize: Iterator`\n\
    \           which is required by `&mut usize: Iterator`\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0425, E0599.\n\
    For more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l.clone();\n    even.sort_unstable();\n    even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpx0igs4ha.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.to_vec();\n    l.sort_unstable();\n    for (i, elt) in l.iter_mut().enumerate()\
    \ {\n        if i % 2 == 0 {\n            *elt = i;\n        }\n    }\n    l\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpgtvy393i.rs:13:20\n   |\n\
    13 |             *elt = i;\n   |             ----   ^ expected `isize`, found\
    \ `usize`\n   |             |\n   |             expected due to the type of this\
    \ binding\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l;\n    l.sort_by_key(|i| i & 1 != 0);\n    l\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[2, 1, 3]`,\n right: `[1, 2, 3]`', /tmp/tmprccgjm6w.rs:16:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![];\n    let mut odd = vec![];\n    for i in l.iter().rev()\
    \ {\n        if i % 2 == 0 {\n            even.push(i);\n        } else {\n  \
    \          odd.push(i);\n        }\n    }\n    even.extend(odd.iter().cloned());\n\
    \    even.sort_unstable();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1oz_z9bz.rs:20:5\n   |\n\
    8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n20 | \
    \    even\n   |     ^^^^ expected `isize`, found `&isize`\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<&isize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| a % 2 == b % 2 ? 0 : a - b);\n    l\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `)`, `,`, `.`, `?`, or an operator, found `0`\n\
    \ --> /tmp/tmpzvjuiu0u.rs:9:48\n  |\n9 |     l.sort_unstable_by(|a, b| a % 2 ==\
    \ b % 2 ? 0 : a - b);\n  |                                               -^ expected\
    \ one of `)`, `,`, `.`, `?`, or an operator\n  |                             \
    \                  |\n  |                                               help:\
    \ missing `,`\n\nerror[E0412]: cannot find type `a` in this scope\n --> /tmp/tmpzvjuiu0u.rs:9:52\n\
    \  |\n9 |     l.sort_unstable_by(|a, b| a % 2 == b % 2 ? 0 : a - b);\n  |    \
    \                                                ^ expecting a type here because\
    \ of type ascription\n\nerror[E0425]: cannot find value `b` in this scope\n -->\
    \ /tmp/tmpzvjuiu0u.rs:9:56\n  |\n9 |     l.sort_unstable_by(|a, b| a % 2 == b\
    \ % 2 ? 0 : a - b);\n  |                                                     \
    \   ^ help: a local variable with a similar name exists: `l`\n\nerror[E0277]:\
    \ the `?` operator can only be applied to values that implement `Try`\n --> /tmp/tmpzvjuiu0u.rs:9:44\n\
    \  |\n9 |     l.sort_unstable_by(|a, b| a % 2 == b % 2 ? 0 : a - b);\n  |    \
    \                                        ^^^ the `?` operator cannot be applied\
    \ to type `{integer}`\n  |\n  = help: the trait `Try` is not implemented for `{integer}`\n\
    \nerror[E0277]: the `?` operator can only be used in a closure that returns `Result`\
    \ or `Option` (or another type that implements `FromResidual`)\n --> /tmp/tmpzvjuiu0u.rs:9:46\n\
    \  |\n9 |     l.sort_unstable_by(|a, b| a % 2 == b % 2 ? 0 : a - b);\n  |    \
    \                    ----------------------^\n  |                        |   \
    \                  |\n  |                        |                     cannot\
    \ use the `?` operator in a closure that returns `bool`\n  |                 \
    \       this function should return `Result` or `Option` to accept `?`\n  |\n\
    \  = help: the trait `FromResidual<_>` is not implemented for `bool`\n\nerror[E0061]:\
    \ this function takes 1 argument but 2 arguments were supplied\n    --> /tmp/tmpzvjuiu0u.rs:9:7\n\
    \     |\n9    |     l.sort_unstable_by(|a, b| a % 2 == b % 2 ? 0 : a"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l2 = l;\n    for i in 0..l.len() {\n        if i % 2 == 0 {\n      \
    \      let mut i = 0;\n            while i != l2.len() {\n                if l2[i]\
    \ < l2[i+1] {\n                    i += 1;\n                } else {\n       \
    \             break;\n                }\n            }\n            l2.swap(i,\
    \ i + 1);\n        }\n    }\n    l2\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `l`\n  --> /tmp/tmp3kynyc_e.rs:10:17\n\
    \   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n9  |     let mut l2 = l;\n   |                  - value moved here\n\
    10 |     for i in 0..l.len() {\n   |                 ^^^^^^^ value borrowed here\
    \ after move\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| a % 2)\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvnur82rk.rs:9:31\n  |\n9 |\
    \     l.sort_unstable_by(|a, b| a % 2)\n  |                               ^^^^^\
    \ expected enum `std::cmp::Ordering`, found `isize`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpvnur82rk.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) ->\
    \ Vec<isize> {\n  |                                ---------- expected `Vec<isize>`\
    \ because of return type\n9 |     l.sort_unstable_by(|a, b| a % 2)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n\
    \          found unit type `()`\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.into_iter().collect::<Vec<_>>();\n    l.sort_unstable();\n   \
    \ l.into_iter().collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpogfw6m5c.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    let mut odd = l;\n    even.sort_unstable();\n    odd.sort_unstable();\n\
    \    for i in 0..even.len() {\n        if i % 2 == 0 {\n            even[i] =\
    \ even[i / 2];\n        } else {\n            odd[i] = odd[i / 2];\n        }\n\
    \    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n  --> /tmp/tmp2wfs10ao.rs:10:19\n\
    \   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n9  |     let mut even = l;\n   |                    - value moved here\n\
    10 |     let mut odd = l;\n   |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.clone();\n    std::mem::swap(&mut l[..], &mut l[..]);\n    l\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the size for values of type `[isize]` cannot be known at\
    \ compilation time\n   --> /tmp/tmputz4a5xq.rs:10:5\n    |\n10  |     std::mem::swap(&mut\
    \ l[..], &mut l[..]);\n    |     ^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n\
    \    |\n    = help: the trait `Sized` is not implemented for `[isize]`\nnote:\
    \ required by a bound in `std::mem::swap`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    for i in 1..l.len() {\n        if even.len() == 0 {\n\
    \            return even;\n        }\n        let mut next_even = vec![];\n  \
    \      for i in 0..even.len() {\n            if even[i - 1].0 > even[i].0 {\n\
    \                next_even.push(even[i - 1]);\n                even[i - 1] = even[i];\n\
    \            } else {\n                next_even.push(even[i]);\n            }\n\
    \        }\n        even = next_even;\n    }\n    even\n}\n\nfn main() {\n   \
    \ let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0610]: `isize` is a primitive type and therefore doesn't have fields\n\
    \  --> /tmp/tmpvdes0lfi.rs:16:28\n   |\n16 |             if even[i - 1].0 > even[i].0\
    \ {\n   |                            ^\n\nerror[E0610]: `isize` is a primitive\
    \ type and therefore doesn't have fields\n  --> /tmp/tmpvdes0lfi.rs:16:40\n  \
    \ |\n16 |             if even[i - 1].0 > even[i].0 {\n   |                   \
    \                     ^\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0610`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    let mut odd = even;\n    for i in even.iter().rev() {\n\
    \        *odd = i;\n        odd.swap(0, *odd);\n    }\n    odd\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpa2ucfg8r.rs:12:16\n   |\n\
    12 |         *odd = i;\n   |         ----   ^ expected slice `[isize]`, found\
    \ `&isize`\n   |         |\n   |         expected due to the type of this binding\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpa2ucfg8r.rs:13:21\n   |\n13 |\
    \         odd.swap(0, *odd);\n   |                     ^^^^ expected `usize`,\
    \ found slice `[isize]`\n\nerror[E0277]: the size for values of type `[isize]`\
    \ cannot be known at compilation time\n  --> /tmp/tmpa2ucfg8r.rs:12:9\n   |\n\
    12 |         *odd = i;\n   |         ^^^^ doesn't have a size known at compile-time\n\
    \   |\n   = help: the trait `Sized` is not implemented for `[isize]`\n   = note:\
    \ the left-hand-side of an assignment must have a statically known size\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().windows(2).cloned().enumerate().map(|(i, xs)| {\n        xs.iter().cloned().enumerate().map(|(y,\
    \ y)| {\n            match i { 0 => y, 1 => y }\n        }).collect::<Vec<_>>()\n\
    \    }).collect::<Vec<_>>()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0415]: identifier `y` is bound more than once in this parameter\
    \ list\n  --> /tmp/tmpl86hmxde.rs:10:49\n   |\n10 |         xs.iter().cloned().enumerate().map(|(y,\
    \ y)| {\n   |                                                 ^ used as parameter\
    \ more than once\n\nerror[E0599]: no method named `windows` found for struct `Cloned`\
    \ in the current scope\n --> /tmp/tmpl86hmxde.rs:9:23\n  |\n9 |     l.iter().cloned().windows(2).cloned().enumerate().map(|(i,\
    \ xs)| {\n  |                       ^^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0415, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0415`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![];\n    let mut odd = vec![];\n\n    for &n in l {\n   \
    \     if n % 2 == 0 {\n            even.push(n);\n        } else {\n         \
    \   odd.push(n);\n        }\n    }\n\n    even.sort_unstable();\n    odd.sort_unstable();\n\
    \n    even + odd\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpu5ztwlzw.rs:12:9\n   |\n\
    12 |     for &n in l {\n   |         ^^    - this expression has type `Option<isize>`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |        \
    \ help: you can probably remove the explicit borrow: `n`\n   |\n   = note:   expected\
    \ type `isize`\n           found reference `&_`\n\nerror[E0369]: cannot add `Vec<_>`\
    \ to `Vec<_>`\n  --> /tmp/tmpu5ztwlzw.rs:23:10\n   |\n23 |     even + odd\n  \
    \ |     ---- ^ --- Vec<_>\n   |     |\n   |     Vec<_>\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0369.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = vec![l, l.clone()].sort_unstable();\n    for e in l.iter().skip(l.len()\
    \ / 2) {\n        let e = e.clone(); l[e] = e;\n    }\n    l\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for unit type `()` in the current\
    \ scope\n  --> /tmp/tmps4hpheqs.rs:10:16\n   |\n10 |     for e in l.iter().skip(l.len()\
    \ / 2) {\n   |                ^^^^ method not found in `()`\n\nerror[E0599]: no\
    \ method named `len` found for unit type `()` in the current scope\n  --> /tmp/tmps4hpheqs.rs:10:30\n\
    \   |\n10 |     for e in l.iter().skip(l.len() / 2) {\n   |                  \
    \            ^^^ method not found in `()`\n\nerror[E0608]: cannot index into a\
    \ value of type `()`\n  --> /tmp/tmps4hpheqs.rs:11:28\n   |\n11 |         let\
    \ e = e.clone(); l[e] = e;\n   |                            ^^^^\n   |\n   = help:\
    \ to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmps4hpheqs.rs:13:5\n   |\n8  | fn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n   |                                ----------\
    \ expected `Vec<isize>` because of return type\n...\n13 |     l\n   |     ^ expected\
    \ struct `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isize>`\n  \
    \         found unit type `()`\n\nerror: aborting due to 4 previous errors\n\n\
    Some errors have detailed explanations: E0308, E0599, E0608.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().partition(|&x| x % 2 == 0).collect()\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: `(_, _)` is not an iterator\n --> /tmp/tmpymbkng8b.rs:9:50\n\
    \  |\n9 |     l.iter().cloned().partition(|&x| x % 2 == 0).collect()\n  |    \
    \                                              ^^^^^^^ `(_, _)` is not an iterator\n\
    \  |\n  = note: the following trait bounds were not satisfied:\n          `(_,\
    \ _): Iterator`\n          which is required by `&mut (_, _): Iterator`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.to_vec();\n    l.sort_unstable();\n    l.iter_mut().zip(&mut l.iter()).for_each(|(_,\
    \ v), (_, w)| v == w ? w.next());\n    l\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `)`, `,`, `.`, `?`, or an operator, found `w`\n\
    \  --> /tmp/tmpzf8akb9c.rs:11:72\n   |\n11 |     l.iter_mut().zip(&mut l.iter()).for_each(|(_,\
    \ v), (_, w)| v == w ? w.next());\n   |                                      \
    \                                 -^ expected one of `)`, `,`, `.`, `?`, or an\
    \ operator\n   |                                                             \
    \          |\n   |                                                           \
    \            help: missing `,`\n\nerror[E0425]: cannot find value `w` in this\
    \ scope\n  --> /tmp/tmpzf8akb9c.rs:11:72\n   |\n11 |     l.iter_mut().zip(&mut\
    \ l.iter()).for_each(|(_, v), (_, w)| v == w ? w.next());\n   |              \
    \                                                          ^ help: a local variable\
    \ with a similar name exists: `l`\n\nerror[E0277]: the `?` operator can only be\
    \ used in a closure that returns `Result` or `Option` (or another type that implements\
    \ `FromResidual`)\n  --> /tmp/tmpzf8akb9c.rs:11:70\n   |\n11 |     l.iter_mut().zip(&mut\
    \ l.iter()).for_each(|(_, v), (_, w)| v == w ? w.next());\n   |              \
    \                                ------------------------^\n   |             \
    \                                 |                       |\n   |            \
    \                                  |                       cannot use the `?`\
    \ operator in a closure that returns `bool`\n   |                            \
    \                  this function should return `Result` or `Option` to accept\
    \ `?`\n   |\n   = help: the trait `FromResidual<_>` is not implemented for `bool`\n\
    \nerror[E0061]: this function takes 1 argument but 2 arguments were supplied\n\
    \   --> /tmp/tmpzf8akb9c.rs:11:37\n    |\n11  |     l.iter_mut().zip(&mut l.iter()).for_each(|(_,\
    \ v), (_, w)| v == w ? w.next());\n    |                                     ^^^^^^^^\
    \ ------------------------- -------- supplied 2 arguments\n    |             \
    \                        |\n    |                                     expected\
    \ 1 argument\n    |\nnote: associated function defined here\n\nerror: aborting\
    \ due to 4 previous errors\n\nS"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().zip(l.iter().cloned()).map(|(&x, &y)| x).collect()\n}\n\n\
    fn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbjmvfr6g.rs:9:52\n  |\n9 |\
    \     l.iter().cloned().zip(l.iter().cloned()).map(|(&x, &y)| x).collect()\n \
    \ |                                                    ^^    - expected due to\
    \ this\n  |                                                    |\n  |        \
    \                                            expected `isize`, found reference\n\
    \  |                                                    help: you can probably\
    \ remove the explicit borrow: `x`\n  |\n  = note:   expected type `isize`\n  \
    \        found reference `&_`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpbjmvfr6g.rs:9:56\n\
    \  |\n9 |     l.iter().cloned().zip(l.iter().cloned()).map(|(&x, &y)| x).collect()\n\
    \  |                                                        ^^- expected due to\
    \ this\n  |                                                        |\n  |    \
    \                                                    expected `isize`, found reference\n\
    \  |                                                        help: you can probably\
    \ remove the explicit borrow: `y`\n  |\n  = note:   expected type `isize`\n  \
    \        found reference `&_`\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| {\n        let mut c = a;\n        if b&1 == 0 {\n\
    \            c += 1;\n        }\n        b\n    })\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0368]: binary assignment operation `+=` cannot be applied to type\
    \ `&isize`\n  --> /tmp/tmpr_bh9gl8.rs:12:13\n   |\n12 |             c += 1;\n\
    \   |             -^^^^^\n   |             |\n   |             cannot use `+=`\
    \ on type `&isize`\n   |\nhelp: `+=` can be used on `isize`, you can dereference\
    \ `c`\n   |\n12 |             *c += 1;\n   |             +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpr_bh9gl8.rs:14:9\n   |\n14 |         b\n   |         ^\
    \ expected enum `std::cmp::Ordering`, found `&isize`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpr_bh9gl8.rs:9:5\n   |\n8  |   fn sort_even(l: Vec<isize>)\
    \ -> Vec<isize> {\n   |                                  ---------- expected `Vec<isize>`\
    \ because of return type\n9  | /     l.sort_unstable_by(|a, b| {\n10 | |     \
    \    let mut c = a;\n11 | |         if b&1 == 0 {\n12 | |             c += 1;\n\
    13 | |         }\n14 | |         b\n15 | |     })\n   | |______^ expected struct\
    \ `Vec`, found `()`\n   |\n   = note: expected struct `Vec<isize>`\n         \
    \  found unit type `()`\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0368.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l_ind: Vec<usize> = l.iter().cloned().collect();\n    for &v in l_ind\
    \ {\n        v = (v + 1) % 2;\n    }\n    let mut l_ind_copy = l_ind.clone();\n\
    \    l_ind.sort();\n    l_ind_copy.sort();\n    l_ind_copy.copy_to_slice(&mut\
    \ l);\n    l\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `Vec<usize>` cannot be built from an iterator\
    \ over elements of type `isize`\n    --> /tmp/tmpg3zeeb2u.rs:9:51\n     |\n9 \
    \   |     let mut l_ind: Vec<usize> = l.iter().cloned().collect();\n     |   \
    \                                                ^^^^^^^ value of type `Vec<usize>`\
    \ cannot be built from `std::iter::Iterator<Item=isize>`\n     |\n     = help:\
    \ the trait `FromIterator<isize>` is not implemented for `Vec<usize>`\n     =\
    \ help: the trait `FromIterator<T>` is implemented for `Vec<T>`\nnote: required\
    \ by a bound in `collect`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpg3zeeb2u.rs:10:9\n\
    \   |\n10 |     for &v in l_ind {\n   |         ^^    ----- this expression has\
    \ type `Option<usize>`\n   |         |\n   |         expected `usize`, found reference\n\
    \   |         help: you can probably remove the explicit borrow: `v`\n   |\n \
    \  = note:   expected type `usize`\n           found reference `&_`\n\nerror[E0599]:\
    \ no method named `copy_to_slice` found for struct `Vec<usize>` in the current\
    \ scope\n  --> /tmp/tmpg3zeeb2u.rs:16:16\n   |\n16 |     l_ind_copy.copy_to_slice(&mut\
    \ l);\n   |                ^^^^^^^^^^^^^ help: there is an associated function\
    \ with a similar name: `copy_from_slice`\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308, E0599.\nFor\
    \ more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even: Vec<isize> = l.clone();\n    even.sort_unstable();\n    even\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmp8a_k5653.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![];\n    let mut odd = vec![];\n\n    for i in l {\n    \
    \    if i % 2 == 0 {\n            even.push(i);\n        } else {\n          \
    \  odd.push(i);\n        }\n    }\n\n    let mut result = vec![];\n\n    for i\
    \ in even {\n        odd.iter().enumerate().for_each(|(j, j)| {\n            if\
    \ i == j {\n                return;\n            }\n\n            if i % 2 ==\
    \ 0 {\n                result.push(j);\n            }\n        });\n    }\n\n\
    \    result.extend(odd);\n\n    result\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0415]: identifier `j` is bound more than once in this parameter\
    \ list\n  --> /tmp/tmpex56sa08.rs:23:46\n   |\n23 |         odd.iter().enumerate().for_each(|(j,\
    \ j)| {\n   |                                              ^ used as parameter\
    \ more than once\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpex56sa08.rs:24:21\n\
    \   |\n24 |             if i == j {\n   |                     ^ expected `isize`,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n24 |  \
    \           if i == *j {\n   |                     +\n\nerror[E0277]: the trait\
    \ bound `Vec<&isize>: Extend<isize>` is not satisfied\n  --> /tmp/tmpex56sa08.rs:34:12\n\
    \   |\n34 |     result.extend(odd);\n   |            ^^^^^^ the trait `Extend<isize>`\
    \ is not implemented for `Vec<&isize>`\n   |\n   = help: the following other types\
    \ implement trait `Extend<A>`:\n             <Vec<T, A> as Extend<&'a T>>\n  \
    \           <Vec<T, A> as Extend<T>>\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpex56sa08.rs:36:5\n   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |                                ---------- expected `Vec<isize>` because\
    \ of return type\n...\n36 |     result\n   |     ^^^^^^ expected `isize`, found\
    \ `&isize`\n   |\n   = note: expected struct `Vec<isize>`\n              found\
    \ struct `Vec<&isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0308, E0415.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().filter_map(|&i| {\n        match i % 2 {\n            0 =>\
    \ Some(i),\n            1 => None,\n        }\n    }).cloned().sorted().collect()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdrupnveq.rs:9:35\n  |\n9 |\
    \     l.iter().cloned().filter_map(|&i| {\n  |                               \
    \    ^--\n  |                                   ||\n  |                      \
    \             |expected due to this\n  |                                   expected\
    \ `isize`, found reference\n  |                                   help: did you\
    \ mean `i`: `&isize`\n  |\n  = note:   expected type `isize`\n          found\
    \ reference `&_`\n\nerror[E0599]: no method named `sorted` found for struct `Cloned`\
    \ in the current scope\n  --> /tmp/tmpdrupnveq.rs:14:17\n   |\n14 |     }).cloned().sorted().collect()\n\
    \   |                 ^^^^^^ method not found in `Cloned<FilterMap<Cloned<std::slice::Iter<'_,\
    \ isize>>, [closure@/tmp/tmpdrupnveq.rs:9:34: 14:6]>>`\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut lsorted = l;\n\n    lsorted.sort_unstable();\n    lsorted.iter().cloned().skip(1).cloned()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n    --> /tmp/tmpgpikr8gf.rs:12:37\n     |\n12   | \
    \    lsorted.iter().cloned().skip(1).cloned()\n     |                        \
    \             ^^^^^^ expected reference, found `isize`\n     |\n     = note: expected\
    \ reference `&&_`\n                found reference `&isize`\n     = note: required\
    \ because of the requirements on the impl of `Iterator` for `Cloned<std::slice::Iter<'_,\
    \ isize>>`\nnote: required by a bound in `cloned`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpgpikr8gf.rs:12:5\n   |\n8  | fn sort_even(l: Vec<isize>)\
    \ -> Vec<isize> {\n   |                                ---------- expected `Vec<isize>`\
    \ because of return type\n...\n12 |     lsorted.iter().cloned().skip(1).cloned()\n\
    \   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `Vec`, found\
    \ struct `Cloned`\n   |\n   = note: expected struct `Vec<isize>`\n           \
    \   found struct `Cloned<Skip<Cloned<std::slice::Iter<'_, isize>>>>`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0271, E0308.\nFor more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l.iter().cloned().enumerate().filter(|(i, _)| i % 2\
    \ == 0).map(|(i, _)| l[i])\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpstlvkgpl.rs:10:5\n   |\n\
    8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n9  |     l.sort_unstable();\n\
    10 |     l.iter().cloned().enumerate().filter(|(i, _)| i % 2 == 0).map(|(i, _)|\
    \ l[i])\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found struct `Map`\n   |\n   = note: expected struct\
    \ `Vec<isize>`\n              found struct `Map<Filter<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>, [closure@/tmp/tmpstlvkgpl.rs:10:42: 10:61]>, [closure@/tmp/tmpstlvkgpl.rs:10:67:\
    \ 10:80]>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ // We are going to sort a vector that may have duplicated elements\n    let\
    \ mut l = l.to_vec();\n    let mut even = vec![];\n    let mut odd = vec![];\n\
    \n    for num in l {\n        if num % 2 == 0 {\n            even.push(num);\n\
    \        } else {\n            odd.push(num);\n        }\n    }\n\n    even.sort();\n\
    \    odd.sort();\n\n    even.clone() + odd\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot add `Vec<isize>` to `Vec<isize>`\n  --> /tmp/tmp_cz68c49.rs:25:18\n\
    \   |\n25 |     even.clone() + odd\n   |     ------------ ^ --- Vec<isize>\n \
    \  |     |\n   |     Vec<isize>\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut vec = Vec::new();\n\n    for i in l.iter() {\n        if i % 2 == 0\
    \ {\n            vec.push(i);\n        }\n    }\n\n    vec\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpm9cdyg78.rs:17:5\n   |\n\
    8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n17 | \
    \    vec\n   |     ^^^ expected `isize`, found `&isize`\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<&isize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ // get a list of indices of the even indicies of l\n    let mut even_indicies\
    \ = even_indices(l);\n    // sort l based on the even indicies of l\n    l.sort_by_key(even_indicies.iter().cloned());\n\
    \    l\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `even_indices` in this scope\n  -->\
    \ /tmp/tmpt5mubw20.rs:10:29\n   |\n10 |     let mut even_indicies = even_indices(l);\n\
    \   |                             ^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() == 0 {\n        return vec![];\n    }\n    let mut l1 = l.iter().cloned().enumerate().rev();\n\
    \    let mut l2 = l1.map(|(_, e)| {\n        if e%2 == 0 {\n            e.0\n\
    \        } else {\n            let i = e/2;\n            let v = l[i/2];\n   \
    \         l[i/2] = v;\n            v.clone()\n        }\n    }).collect();\n \
    \   l2.sort_unstable();\n    l2.into_iter().cloned().collect()\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0610]: `isize` is a primitive type and therefore doesn't have fields\n\
    \  --> /tmp/tmpyx6oc73b.rs:15:15\n   |\n15 |             e.0\n   |           \
    \    ^\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmpyx6oc73b.rs:18:21\n   |\n18 |             let v = l[i/2];\n   |    \
    \                 ^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\
    \nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmpyx6oc73b.rs:19:13\n\
    \   |\n19 |             l[i/2] = v;\n   |             ^^^^^^ slice indices are\
    \ of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0610.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    for i in 0..even.len() {\n        let j = even.iter().nth(i\
    \ + 1).unwrap();\n        let mut curr = i;\n        while curr < even.len() &&\
    \ curr + 1 < even.len() && even[curr] == j {\n            curr = curr + 1;\n \
    \       }\n        if curr < i {\n            even[i] = even[curr];\n        }\
    \ else {\n            even.insert(i, j);\n        }\n    }\n    even\n}\n\nfn\
    \ main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzjz4ag11.rs:13:75\n   |\n\
    13 |         while curr < even.len() && curr + 1 < even.len() && even[curr] ==\
    \ j {\n   |                                                                  \
    \         ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n13 |         while curr < even.len() && curr + 1 < even.len()\
    \ && even[curr] == *j {\n   |                                                \
    \                           +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpzjz4ag11.rs:19:28\n\
    \   |\n19 |             even.insert(i, j);\n   |                            ^\
    \ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n\
    \   |\n19 |             even.insert(i, *j);\n   |                            +\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().filter_map(|el| {\n        el % 2 == 0\n            .take()\n\
    \            .cloned()\n            .sort_unstable()\n            .collect()\n\
    \    })\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0689]: can't call method `take` on ambiguous numeric type `{integer}`\n\
    \  --> /tmp/tmpuacjjni9.rs:11:14\n   |\n11 |             .take()\n   |       \
    \       ^^^^\n   |\nhelp: you must specify a concrete type for this numeric value,\
    \ like `i32`\n   |\n10 |         el % 2 == 0_i32\n   |                   ~~~~~\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpuacjjni9.rs:10:9\n   |\n10 | /\
    \         el % 2 == 0\n11 | |             .take()\n12 | |             .cloned()\n\
    13 | |             .sort_unstable()\n14 | |             .collect()\n   | |______________________^\
    \ expected enum `Option`, found `bool`\n   |\n   = note: expected enum `Option<_>`\n\
    \              found type `bool`\nhelp: try wrapping the expression in `Some`\n\
    \   |\n10 ~         Some(el % 2 == 0\n11 |             .take()\n12 |         \
    \    .cloned()\n13 |             .sort_unstable()\n14 ~             .collect())\n\
    \   |\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpuacjjni9.rs:9:5\n   |\n\
    8  |   fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                     \
    \             ---------- expected `Vec<isize>` because of return type\n9  | /\
    \     l.iter().cloned().filter_map(|el| {\n10 | |         el % 2 == 0\n11 | |\
    \             .take()\n12 | |             .cloned()\n13 | |             .sort_unstable()\n\
    14 | |             .collect()\n15 | |     })\n   | |______^ expected struct `Vec`,\
    \ found struct `FilterMap`\n   |\n   = note: expected struct `Vec<isize>`\n  \
    \            found struct `FilterMap<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmpuacjjni9.rs:9:34:\
    \ 15:6]>`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0689.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut sorted = l.clone();\n    sorted.sort();\n    sorted\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmp_cqi6cmk.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() < 2 {\n        l\n    } else {\n        let mut aux: Vec<isize> =\
    \ vec![l.len() - 1];\n        for &i in l.iter().rev() {\n            if i ==\
    \ 0 {\n                continue;\n            }\n            aux.push(i as isize);\n\
    \        }\n        aux.sort();\n        aux.iter().rev().chain(l).collect()\n\
    \    }\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpetfdm4se.rs:12:40\n   |\n\
    12 |         let mut aux: Vec<isize> = vec![l.len() - 1];\n   |              \
    \                          ^^^^^^^^^^^ expected `isize`, found `usize`\n   |\n\
    help: you can convert a `usize` to an `isize` and panic if the converted value\
    \ doesn't fit\n   |\n12 |         let mut aux: Vec<isize> = vec![(l.len() - 1).try_into().unwrap()];\n\
    \   |                                        +           +++++++++++++++++++++\n\
    \nerror[E0271]: type mismatch resolving `<Vec<isize> as IntoIterator>::Item ==\
    \ &isize`\n   --> /tmp/tmpetfdm4se.rs:20:26\n    |\n20  |         aux.iter().rev().chain(l).collect()\n\
    \    |                          ^^^^^ expected `&isize`, found `isize`\n    |\n\
    note: required by a bound in `std::iter::Iterator::chain`\n\nerror[E0599]: the\
    \ method `collect` exists for struct `std::iter::Chain<Rev<std::slice::Iter<'_,\
    \ isize>>, std::vec::IntoIter<isize>>`, but its trait bounds were not satisfied\n\
    \  --> /tmp/tmpetfdm4se.rs:20:35\n   |\n20 |            aux.iter().rev().chain(l).collect()\n\
    \   |                                      ^^^^^^^ method cannot be called on\
    \ `std::iter::Chain<Rev<std::slice::Iter<'_, isize>>, std::vec::IntoIter<isize>>`\
    \ due to unsatisfied trait bounds\n   |\n   = note: the following trait bounds\
    \ were not satisfied:\n           `<std::vec::IntoIter<isize> as Iterator>::Item\
    \ = &isize`\n           which is required by `std::iter::Chain<Rev<std::slice::Iter<'_,\
    \ isize>>, std::vec::IntoIter<isize>>: Iterator`\n           `std::iter::Chain<Rev<std::slice::Iter<'_,\
    \ isize>>, std::vec::IntoIter<isize>>: Iterator`\n           which is required\
    \ by `&mut std::iter::Chain<Rev<std::slice::Iter<'_, isize>>, std::vec::IntoIter<isize>>:\
    \ Iterator`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0271, E0308, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by_key(|x| {\n        if x % 2 == 0 {\n            x\n     \
    \   } else {\n            x.clone() + 1\n        }\n    });\n    l\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: `if` and `else` have incompatible types\n  --> /tmp/tmp3xgxoe_3.rs:13:13\n\
    \   |\n10 | /         if x % 2 == 0 {\n11 | |             x\n   | |          \
    \   - expected because of this\n12 | |         } else {\n13 | |             x.clone()\
    \ + 1\n   | |             ^^^^^^^^^^^^^ expected `&isize`, found `isize`\n14 |\
    \ |         }\n   | |_________- `if` and `else` have incompatible types\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().enumerate().filter_map(|(_, v)| {\n        if v.0 % 2 == 0 {\n    \
    \        let (even, odd) = (v.0, v.1);\n            (even, odd).sort();\n    \
    \    } else {\n            vec![*v].sorted()\n        }\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0609]: no field `0` on type `&isize`\n  --> /tmp/tmph5vba74g.rs:10:14\n\
    \   |\n10 |         if v.0 % 2 == 0 {\n   |              ^\n\nerror[E0609]: no\
    \ field `0` on type `&isize`\n  --> /tmp/tmph5vba74g.rs:11:34\n   |\n11 |    \
    \         let (even, odd) = (v.0, v.1);\n   |                                \
    \  ^\n\nerror[E0609]: no field `1` on type `&isize`\n  --> /tmp/tmph5vba74g.rs:11:39\n\
    \   |\n11 |             let (even, odd) = (v.0, v.1);\n   |                  \
    \                     ^\n\nerror[E0599]: no method named `sort` found for tuple\
    \ `(_, _)` in the current scope\n  --> /tmp/tmph5vba74g.rs:12:25\n   |\n12 | \
    \            (even, odd).sort();\n   |                         ^^^^ method not\
    \ found in `(_, _)`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmph5vba74g.rs:10:25\n\
    \   |\n10 |           if v.0 % 2 == 0 {\n   |  _________________________^\n11\
    \ | |             let (even, odd) = (v.0, v.1);\n12 | |             (even, odd).sort();\n\
    13 | |         } else {\n   | |_________^ expected enum `Option`, found `()`\n\
    \   |\n   = note:   expected enum `Option<_>`\n           found unit type `()`\n\
    \nerror[E0599]: no method named `sorted` found for struct `Vec<isize>` in the\
    \ current scope\n  --> /tmp/tmph5vba74g.rs:14:22\n   |\n14 |             vec![*v].sorted()\n\
    \   |                      ^^^^^^ help: there is an associated function with a\
    \ similar name: `is_sorted`\n\nerror: aborting due to 6 previous errors\n\nSome\
    \ errors have detailed explanations: E0308, E0599, E0609.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.to_vec();\n    l.sort_unstable();\n    l\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmprwrog91x.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() % 2 != 0 {\n        panic!(\"sort_even called on list of odd length\"\
    );\n    }\n\n    let mut v = Vec::new();\n    for i in l.iter().cloned() {\n \
    \       v.push(i);\n    }\n\n    let mut even = 0;\n    let mut odd = 1;\n\n \
    \   while even < v.len() - 1 {\n        if v[even] <= v[odd] {\n            v.swap(even,\
    \ odd);\n        }\n\n        even += 2;\n        odd += 2;\n    }\n\n    v\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''sort_even called on list of odd length'',
    /tmp/tmp0etkz3y7.rs:10:9

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() <= 2 {\n        l\n    } else {\n        let mut l1 = l.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut l2 = l.iter().cloned().collect::<Vec<_>>();\n        l1[1..].sort();\n\
    \        l2[1..].sort();\n        l2.iter().cloned().zip(l1.iter().cloned()).map(|(a,\
    \ b)| a.0 >= b.0 && a.1 < b.1).collect()\n    }\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0610]: `isize` is a primitive type and therefore doesn't have fields\n\
    \  --> /tmp/tmpmh0mamxk.rs:16:67\n   |\n16 |         l2.iter().cloned().zip(l1.iter().cloned()).map(|(a,\
    \ b)| a.0 >= b.0 && a.1 < b.1).collect()\n   |                               \
    \                                    ^\n\nerror[E0610]: `isize` is a primitive\
    \ type and therefore doesn't have fields\n  --> /tmp/tmpmh0mamxk.rs:16:74\n  \
    \ |\n16 |         l2.iter().cloned().zip(l1.iter().cloned()).map(|(a, b)| a.0\
    \ >= b.0 && a.1 < b.1).collect()\n   |                                       \
    \                                   ^\n\nerror[E0610]: `isize` is a primitive\
    \ type and therefore doesn't have fields\n  --> /tmp/tmpmh0mamxk.rs:16:81\n  \
    \ |\n16 |         l2.iter().cloned().zip(l1.iter().cloned()).map(|(a, b)| a.0\
    \ >= b.0 && a.1 < b.1).collect()\n   |                                       \
    \                                          ^\n\nerror[E0610]: `isize` is a primitive\
    \ type and therefore doesn't have fields\n  --> /tmp/tmpmh0mamxk.rs:16:87\n  \
    \ |\n16 |         l2.iter().cloned().zip(l1.iter().cloned()).map(|(a, b)| a.0\
    \ >= b.0 && a.1 < b.1).collect()\n   |                                       \
    \                                                ^\n\nerror[E0277]: a value of\
    \ type `Vec<isize>` cannot be built from an iterator over elements of type `bool`\n\
    \    --> /tmp/tmpmh0mamxk.rs:16:90\n     |\n16   |         l2.iter().cloned().zip(l1.iter().cloned()).map(|(a,\
    \ b)| a.0 >= b.0 && a.1 < b.1).collect()\n     |                             \
    \                                                             ^^^^^^^ value of\
    \ type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=bool>`\n  \
    \   |\n     = help: the trait `FromIterator<bool>` is not implemented for `Vec<isize>`\n\
    \     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\nnote: required\
    \ by a bound in `collect`\n\nerror: aborting due to 5 previous errors\n\nSome\
    \ errors have detailed explanations: E0277, E0610.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmppxyvdbp0.rs:9:23\n  |\n9 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut evens = vec![];\n    let mut odd_indices = vec![];\n    let mut even_indices\
    \ = vec![];\n\n    for el in l {\n        match el % 2 {\n            0 => {\n\
    \                even_indices.push(el);\n                evens.push(el);\n   \
    \         }\n            1 => {\n                if even_indices.len() == 0 {\n\
    \                    odd_indices.push(el);\n                } else {\n       \
    \             even_indices.push(el);\n                    evens.push(even_indices.clone());\n\
    \                }\n            }\n            _ => (),\n        }\n    }\n\n\
    \    // if even_indices.len() > 0 {\n    //     odd_indices.push(even_indices.clone());\n\
    \    // }\n    evens.push(even_indices.clone());\n\n    evens\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzo30jsfr.rs:24:32\n   |\n\
    24 |                     evens.push(even_indices.clone());\n   |             \
    \                   ^^^^^^^^^^^^^^^^^^^^ expected `isize`, found struct `Vec`\n\
    \   |\n   = note: expected type `isize`\n            found struct `Vec<isize>`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpzo30jsfr.rs:34:16\n   |\n34 |\
    \     evens.push(even_indices.clone());\n   |                ^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found struct `Vec`\n   |\n   = note: expected type `isize`\n\
    \            found struct `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n\n    for &i in even.iter_mut() {\n        if i % 2 == 0\
    \ {\n            *i -= 1;\n        }\n    }\n    even\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpicn5bzb9.rs:11:9\n   |\n\
    11 |     for &i in even.iter_mut() {\n   |         ^^    --------------- this\
    \ expression has type `Option<&mut isize>`\n   |         |\n   |         types\
    \ differ in mutability\n   |         help: you can probably remove the explicit\
    \ borrow: `i`\n   |\n   = note: expected mutable reference `&mut isize`\n    \
    \                  found reference `&_`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut s = l;\n    let mut i = 0;\n    while i < s.len() - 1 {\n        if\
    \ i % 2 == 1 {\n            s[i] = s.swap(i, i + 1).unwrap();\n        }\n   \
    \     i += 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unwrap` found for unit type `()` in the\
    \ current scope\n  --> /tmp/tmp3ko69caw.rs:13:37\n   |\n13 |             s[i]\
    \ = s.swap(i, i + 1).unwrap();\n   |                                     ^^^^^^\
    \ method not found in `()`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmpo41vejz_.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |              - help: consider changing this to be mutable: `mut l`\n\
    9 |     l.sort_unstable();\n  |     ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    for &i in even.iter_mut() {\n        let j = i / 2;\n\
    \        *i = *j;\n    }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp6_67a2vp.rs:10:9\n   |\n\
    10 |     for &i in even.iter_mut() {\n   |         ^^    --------------- this\
    \ expression has type `Option<&mut isize>`\n   |         |\n   |         types\
    \ differ in mutability\n   |         help: you can probably remove the explicit\
    \ borrow: `i`\n   |\n   = note: expected mutable reference `&mut isize`\n    \
    \                  found reference `&_`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l;\n\n    for (index, &a) in l.iter().enumerate() {\n        if\
    \ index&1 == 0 {\n            *a = l.swap(index, index&1)[0];\n        }\n   \
    \ }\n\n    l\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpwqv_cn0a.rs:13:13\n\
    \   |\n13 |             *a = l.swap(index, index&1)[0];\n   |             ^^\n\
    \nerror[E0608]: cannot index into a value of type `()`\n  --> /tmp/tmpwqv_cn0a.rs:13:18\n\
    \   |\n13 |             *a = l.swap(index, index&1)[0];\n   |                \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: to access tuple elements, use: `l.swap(index,\
    \ index&1).0`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0608, E0614.\nFor more information about an error, try\
    \ `rustc --explain E0608`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    let mut odd = l;\n    even.sort();\n    odd.sort();\n\
    \    even.extend(&odd);\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n  --> /tmp/tmpkyf9wq8o.rs:10:19\n\
    \   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n9  |     let mut even = l;\n   |                    - value moved here\n\
    10 |     let mut odd = l;\n   |                   ^ value used here after move\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ // l is the input vector.\n    // The return value is the input vector with\
    \ its even indicies sorted.\n    let mut l = l;\n    l.sort_unstable();\n    l\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmp_e_mrc8c.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l2 = l.clone();\n    l2.sort_unstable();\n    l2\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpy2icd68f.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() == 0 {\n        return l;\n    }\n    if l.len() == 1 {\n       \
    \ return vec![l[0]];\n    }\n    let mut even = vec![];\n    let mut odd = vec![];\n\
    \    let mut s = vec![];\n    let mut i = 0;\n    let mut j = 0;\n    for v in\
    \ l {\n        if i % 2 == 0 {\n            even.push(v);\n        } else {\n\
    \            odd.push(v);\n        }\n        s.insert(odd.len(), v);\n      \
    \  i += 1;\n    }\n    odd.sort();\n    for (i, v) in even.iter().zip(odd.iter_mut())\
    \ {\n        *v = *even[i];\n    }\n    odd\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[isize]` cannot be indexed by `&isize`\n  --> /tmp/tmpi259qn3x.rs:31:15\n\
    \   |\n31 |         *v = *even[i];\n   |               ^^^^^^^ slice indices are\
    \ of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `&isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<&isize>` for `Vec<isize>`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmppxyvdbp0.rs:9:23\n  |\n9 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| {\n        if a % 2 == 0 {\n            if b > a {\n\
    \                a - b\n            } else {\n                (b - a) as i32\n\
    \            }\n        } else {\n            if b > a {\n                b -\
    \ a\n            } else {\n                (a - b) as i32\n            }\n   \
    \     }\n    })\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmph0sapkvy.rs:12:17\n   |\n\
    12 |                 a - b\n   |                 ^^^^^ expected enum `std::cmp::Ordering`,\
    \ found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmph0sapkvy.rs:14:17\n\
    \   |\n14 |                 (b - a) as i32\n   |                 ^^^^^^^^^^^^^^\
    \ expected enum `std::cmp::Ordering`, found `i32`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmph0sapkvy.rs:18:17\n   |\n18 |                 b - a\n \
    \  |                 ^^^^^ expected enum `std::cmp::Ordering`, found `isize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmph0sapkvy.rs:20:17\n   |\n20 |\
    \                 (a - b) as i32\n   |                 ^^^^^^^^^^^^^^ expected\
    \ enum `std::cmp::Ordering`, found `i32`\n\nerror[E0308]: mismatched types\n \
    \ --> /tmp/tmph0sapkvy.rs:9:5\n   |\n8  |   fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |                                  ---------- expected `Vec<isize>` because\
    \ of return type\n9  | /     l.sort_unstable_by(|a, b| {\n10 | |         if a\
    \ % 2 == 0 {\n11 | |             if b > a {\n12 | |                 a - b\n...\
    \  |\n22 | |         }\n23 | |     })\n   | |______^ expected struct `Vec`, found\
    \ `()`\n   |\n   = note: expected struct `Vec<isize>`\n           found unit type\
    \ `()`\n\nerror: aborting due to 5 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l2 = l.clone();\n    l2.sort_unstable();\n    l2\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpy2icd68f.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmpna_r1hpa.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |              - help: consider changing this to be mutable: `mut l`\n\
    9 |     l.sort_unstable();\n  |     ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![];\n    even.reserve(l.len() / 2);\n    for i in 0..l.len()\
    \ {\n        if i % 2 == 0 {\n            even.push(l[i]);\n        }\n    }\n\
    \    even.sort_by_key(|x| x);\n    even\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error: lifetime may not live long enough\n  --> /tmp/tmpq640fwx1.rs:16:26\n\
    \   |\n16 |     even.sort_by_key(|x| x);\n   |                       -- ^ returning\
    \ this value requires that `'1` must outlive `'2`\n   |                      \
    \ ||\n   |                       |return type of closure is &'2 isize\n   |  \
    \                     has type `&'1 isize`\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut v = l;\n    v.sort();\n    for &i in (0..v.len() / 2)\n        .filter(|&i|\
    \ i % 2 == 0)\n    {\n        v[i] = v[i / 2];\n    }\n    v\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwv6ex1rr.rs:11:9\n   |\n\
    11 |       for &i in (0..v.len() / 2)\n   |  _________^^____-\n   | |        \
    \ |\n   | |         expected `usize`, found reference\n   | |         help: you\
    \ can probably remove the explicit borrow: `i`\n12 | |         .filter(|&i| i\
    \ % 2 == 0)\n   | |________________________________- this expression has type\
    \ `Option<usize>`\n   |\n   = note:   expected type `usize`\n           found\
    \ reference `&_`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmpo41vejz_.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |              - help: consider changing this to be mutable: `mut l`\n\
    9 |     l.sort_unstable();\n  |     ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut v = l;\n    v.sort_unstable();\n    v.iter_mut().zip(v.iter_mut().map(|x|\
    \ {\n        let i = x.0;\n        x.0 = x.1;\n        x.1 = i;\n        x\n \
    \   })).collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0609]: no field `0` on type `&mut isize`\n  --> /tmp/tmpgh3kygxy.rs:12:19\n\
    \   |\n12 |         let i = x.0;\n   |                   ^\n\nerror[E0609]: no\
    \ field `0` on type `&mut isize`\n  --> /tmp/tmpgh3kygxy.rs:13:11\n   |\n13 |\
    \         x.0 = x.1;\n   |           ^\n\nerror[E0609]: no field `1` on type `&mut\
    \ isize`\n  --> /tmp/tmpgh3kygxy.rs:13:17\n   |\n13 |         x.0 = x.1;\n   |\
    \                 ^\n\nerror[E0609]: no field `1` on type `&mut isize`\n  -->\
    \ /tmp/tmpgh3kygxy.rs:14:11\n   |\n14 |         x.1 = i;\n   |           ^\n\n\
    error[E0277]: a value of type `Vec<isize>` cannot be built from an iterator over\
    \ elements of type `(&mut isize, &mut isize)`\n    --> /tmp/tmpgh3kygxy.rs:16:9\n\
    \     |\n16   |     })).collect()\n     |         ^^^^^^^ value of type `Vec<isize>`\
    \ cannot be built from `std::iter::Iterator<Item=(&mut isize, &mut isize)>`\n\
    \     |\n     = help: the trait `FromIterator<(&mut isize, &mut isize)>` is not\
    \ implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented\
    \ for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror: aborting due\
    \ to 5 previous errors\n\nSome errors have detailed explanations: E0277, E0609.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() <= 2 {\n        l\n    } else {\n        let mut i = 0;\n       \
    \ let mut j = 0;\n\n        while i < l.len() {\n            if i % 2 == 0 {\n\
    \                l[i] = l[j];\n                i += 1;\n                j += 1;\n\
    \            } else {\n                i += 1;\n            }\n        }\n   \
    \     l\n    }\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \  --> /tmp/tmp_3ws7tlz.rs:17:17\n   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |              - help: consider changing this to be mutable: `mut l`\n\
    ...\n17 |                 l[i] = l[j];\n   |                 ^ cannot borrow as\
    \ mutable\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut evens = Vec::new();\n    for v in l.iter() {\n        if v % 2 == 0\
    \ {\n            evens.push(v);\n        }\n    }\n    let mut odd = vec![];\n\
    \    for (i, v) in l.iter_mut().enumerate() {\n        if v % 2 != 0 {\n     \
    \       odd.push(v);\n        }\n        odd.push(evens[i as usize]);\n    }\n\
    \    odd\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&mut isize` by `{integer}`\n  --> /tmp/tmpp0glmf_n.rs:17:14\n\
    \   |\n17 |         if v % 2 != 0 {\n   |            - ^ - {integer}\n   |   \
    \         |\n   |            &mut isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `v`\n   |\n17 |         if *v % 2 != 0 {\n   |         \
    \   +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpp0glmf_n.rs:20:18\n   |\n\
    20 |         odd.push(evens[i as usize]);\n   |                  ^^^^^^^^^^^^^^^^^\
    \ types differ in mutability\n   |\n   = note: expected mutable reference `&mut\
    \ isize`\n                      found reference `&isize`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpp0glmf_n.rs:22:5\n   |\n8  | fn sort_even(l: Vec<isize>)\
    \ -> Vec<isize> {\n   |                                ---------- expected `Vec<isize>`\
    \ because of return type\n...\n22 |     odd\n   |     ^^^ expected `isize`, found\
    \ `&mut isize`\n   |\n   = note: expected struct `Vec<isize>`\n              found\
    \ struct `Vec<&mut isize>`\n\nerror: aborting due to 3 previous errors\n\nSome\
    \ errors have detailed explanations: E0308, E0369.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut sorted_even = vec![];\n    for i in 0..l.len() {\n        if i % 2 ==\
    \ 0 {\n            sorted_even.push(l[i]);\n        } else {\n            sorted_even.push(i);\n\
    \        }\n    }\n    sorted_even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmph4c_dw5r.rs:14:30\n   |\n\
    14 |             sorted_even.push(i);\n   |                              ^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n14 |             sorted_even.push(i.try_into().unwrap());\n\
    \   |                               ++++++++++++++++++++\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmpna_r1hpa.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |              - help: consider changing this to be mutable: `mut l`\n\
    9 |     l.sort_unstable();\n  |     ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l;\n    l.sort_unstable();\n    l.iter_mut().zip(l.iter_mut().cloned()).filter(|&(_,\
    \ e)| e % 2 == 0).cloned().collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::IterMut<'_, isize>\
    \ as Iterator>::Item == &_`\n    --> /tmp/tmpgg9ollhz.rs:11:35\n     |\n11   |\
    \     l.iter_mut().zip(l.iter_mut().cloned()).filter(|&(_, e)| e % 2 == 0).cloned().collect()\n\
    \     |                                   ^^^^^^ types differ in mutability\n\
    \     |\n     = note:      expected reference `&_`\n             found mutable\
    \ reference `&mut isize`\nnote: required by a bound in `cloned`\n\nerror[E0271]:\
    \ type mismatch resolving `<std::slice::IterMut<'_, isize> as Iterator>::Item\
    \ == &_`\n  --> /tmp/tmpgg9ollhz.rs:11:22\n   |\n11 |     l.iter_mut().zip(l.iter_mut().cloned()).filter(|&(_,\
    \ e)| e % 2 == 0).cloned().collect()\n   |                  --- ^^^^^^^^^^^^^^^^^^^^^\
    \ types differ in mutability\n   |                  |\n   |                  required\
    \ by a bound introduced by this call\n   |\n   = note: expected mutable reference\
    \ `&mut isize`\n                      found reference `&_`\n   = note: required\
    \ because of the requirements on the impl of `Iterator` for `Cloned<std::slice::IterMut<'_,\
    \ isize>>`\n   = note: required because of the requirements on the impl of `IntoIterator`\
    \ for `Cloned<std::slice::IterMut<'_, isize>>`\n\nerror[E0599]: the method `filter`\
    \ exists for struct `Zip<std::slice::IterMut<'_, isize>, Cloned<std::slice::IterMut<'_,\
    \ isize>>>`, but its trait bounds were not satisfied\n  --> /tmp/tmpgg9ollhz.rs:11:45\n\
    \   |\n11 |        l.iter_mut().zip(l.iter_mut().cloned()).filter(|&(_, e)| e\
    \ % 2 == 0).cloned().collect()\n   |                                         \
    \       ^^^^^^ method cannot be called on `Zip<std::slice::IterMut<'_, isize>,\
    \ Cloned<std::slice::IterMut<'_, isize>>>` due to unsatisfied trait bounds\n \
    \  |\n   = note: the following trait bounds were not satisfied:\n           `Cloned<std::slice::IterMut<'_,\
    \ isize>>: Iterator`\n           which is required by `Zip<std::slice::IterMut<'_,\
    \ isize>, Cloned<std::slice::IterMut<'_, isize>>>: Iterator`\n           `Zip<std::slice::IterMut<'_,\
    \ isize>, Cloned<std::slice::IterMut<'_, isize>>>: Iterator`\n           w"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() % 2 == 1 {\n        return l;\n    }\n    l.iter().enumerate().filter_map(|(i,\
    \ e)| {\n        if i % 2 == 1 {\n            Some((i, e))\n        } else {\n\
    \            None\n        }\n    }).collect::<Vec<_>>().sort_by_key(|e| e).collect()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: `()` is not an iterator\n  --> /tmp/tmpnw5x1inx.rs:18:47\n\
    \   |\n18 |     }).collect::<Vec<_>>().sort_by_key(|e| e).collect()\n   |    \
    \                                           ^^^^^^^ `()` is not an iterator\n\
    \   |\n   = note: the following trait bounds were not satisfied:\n           `():\
    \ Iterator`\n           which is required by `&mut (): Iterator`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut sorted = l.clone();\n    sorted.sort_unstable();\n    sorted\n}\n\n\
    fn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmplunzzvcf.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().zip(0..l.len() - 1).map(|(v, i)| {\n        (v.checked_mul(2).floor()\
    \ as isize).checked_add(i as isize)\n    }).collect::<Vec<_>>()\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for enum `Option` in the current\
    \ scope\n  --> /tmp/tmputp5n982.rs:10:27\n   |\n10 |         (v.checked_mul(2).floor()\
    \ as isize).checked_add(i as isize)\n   |                           ^^^^^ method\
    \ not found in `Option<isize>`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l.clone();\n    even.sort_unstable();\n    even\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpx0igs4ha.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l.clone();\n    let mut odd = even.clone();\n\n    // If l has\
    \ an even number of elements, swap the first two elements.\n    if even.len()\
    \ % 2 == 1 {\n        even[0] = even[1];\n        even[1] = even[0];\n    }\n\n\
    \    // Sort l.\n    for i in 0..even.len() {\n        let mut j = i;\n      \
    \  while j < even.len() && even[j] < even[j + 1] {\n            even[j] = even[j\
    \ + 1];\n            even[j + 1] = even[j];\n            j += 1\n        }\n \
    \   }\n\n    // Merge two lists.\n    for i in 0..even.len() {\n        odd[i\
    \ >> 1] = (even[i] - even[i >> 1] + odd[i >> 1]) % odd;\n    }\n\n    // Sort\
    \ lists back-to-front.\n    for i in 0..odd.len() {\n        even[i >> 1] = (odd[i]\
    \ - odd[i >> 1] + even[i >> 1]) % even;\n    }\n\n    even\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot mod `isize` by `Vec<isize>`\n  --> /tmp/tmpd6w7bana.rs:30:62\n\
    \   |\n30 |         odd[i >> 1] = (even[i] - even[i >> 1] + odd[i >> 1]) % odd;\n\
    \   |                                                              ^ no implementation\
    \ for `isize % Vec<isize>`\n   |\n   = help: the trait `Rem<Vec<isize>>` is not\
    \ implemented for `isize`\n   = help: the following other types implement trait\
    \ `Rem<Rhs>`:\n             <&'a f32 as Rem<f32>>\n             <&'a f64 as Rem<f64>>\n\
    \             <&'a i128 as Rem<i128>>\n             <&'a i16 as Rem<i16>>\n  \
    \           <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n      \
    \       <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n        \
    \   and 54 others\n\nerror[E0277]: cannot mod `isize` by `Vec<isize>`\n  --> /tmp/tmpd6w7bana.rs:35:62\n\
    \   |\n35 |         even[i >> 1] = (odd[i] - odd[i >> 1] + even[i >> 1]) % even;\n\
    \   |                                                              ^ no implementation\
    \ for `isize % Vec<isize>`\n   |\n   = help: the trait `Rem<Vec<isize>>` is not\
    \ implemented for `isize`\n   = help: the following other types implement trait\
    \ `Rem<Rhs>`:\n             <&'a f32 as Rem<f32>>\n             <&'a f64 as Rem<f64>>\n\
    \             <&'a i128 as Rem<i128>>\n             <&'a i16 as Rem<i16>>\n  \
    \           <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n      \
    \       <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n        \
    \   and 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l2 = vec![l.len()..0];\n    l2.clone_from_slice(l);\n    for i in 0..(l2.len()\
    \ / 2) {\n        l2[i] = l2[i] + l2[i + 1];\n    }\n    l2.clone()\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpi6erfbmg.rs:10:25\n   |\n\
    10 |     l2.clone_from_slice(l);\n   |                         ^ expected reference,\
    \ found struct `Vec`\n   |\n   = note: expected reference `&[std::ops::Range<usize>]`\n\
    \                 found struct `Vec<isize>`\n\nerror[E0369]: cannot add `std::ops::Range<usize>`\
    \ to `std::ops::Range<usize>`\n  --> /tmp/tmpi6erfbmg.rs:12:23\n   |\n12 |   \
    \      l2[i] = l2[i] + l2[i + 1];\n   |                 ----- ^ --------- std::ops::Range<usize>\n\
    \   |                 |\n   |                 std::ops::Range<usize>\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpi6erfbmg.rs:14:5\n   |\n8  | fn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n   |                                ----------\
    \ expected `Vec<isize>` because of return type\n...\n14 |     l2.clone()\n   |\
    \     ^^^^^^^^^^ expected `isize`, found struct `std::ops::Range`\n   |\n   =\
    \ note: expected struct `Vec<isize>`\n              found struct `Vec<std::ops::Range<usize>>`\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0369.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter()\n        .cloned()\n        .cloned()\n        .enumerate()\n     \
    \   .filter_map(|(i, elem)| {\n            if i % 2 == 1 {\n                Some(elem).map(|x|\
    \ x.clone())\n            } else {\n                None\n            }\n    \
    \    })\n        .collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::slice::Iter<'_, isize> as\
    \ Iterator>::Item == &&_`\n    --> /tmp/tmpw7ekfqop.rs:11:10\n     |\n11   | \
    \        .cloned()\n     |          ^^^^^^ expected reference, found `isize`\n\
    \     |\n     = note: expected reference `&&_`\n                found reference\
    \ `&isize`\n     = note: required because of the requirements on the impl of `Iterator`\
    \ for `Cloned<std::slice::Iter<'_, isize>>`\nnote: required by a bound in `cloned`\n\
    \nerror[E0599]: the method `enumerate` exists for struct `Cloned<Cloned<std::slice::Iter<'_,\
    \ isize>>>`, but its trait bounds were not satisfied\n  --> /tmp/tmpw7ekfqop.rs:12:10\n\
    \   |\n12 |           .enumerate()\n   |            ^^^^^^^^^ method cannot be\
    \ called on `Cloned<Cloned<std::slice::Iter<'_, isize>>>` due to unsatisfied trait\
    \ bounds\n   |\n   = note: the following trait bounds were not satisfied:\n  \
    \         `<Cloned<std::slice::Iter<'_, isize>> as Iterator>::Item = &_`\n   \
    \        which is required by `Cloned<Cloned<std::slice::Iter<'_, isize>>>: Iterator`\n\
    \           `Cloned<Cloned<std::slice::Iter<'_, isize>>>: Iterator`\n        \
    \   which is required by `&mut Cloned<Cloned<std::slice::Iter<'_, isize>>>: Iterator`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0271, E0599.\nFor more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let even = l.iter().cloned().enumerate().filter(|(i, el)| i % 2 == 0).collect();\n\
    \    let odd = l.iter().cloned().enumerate().filter(|(i, el)| i % 2 == 1).collect();\n\
    \    even.iter().zip(odd.iter()).map(|(a, b)| a.1.iter().cloned().cloned() + b.1.iter().cloned().cloned()).collect()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmpsv650dj1.rs:11:5\n\
    \   |\n9  |     let even = l.iter().cloned().enumerate().filter(|(i, el)| i %\
    \ 2 == 0).collect();\n   |         ---- consider giving `even` a type\n10 |  \
    \   let odd = l.iter().cloned().enumerate().filter(|(i, el)| i % 2 == 1).collect();\n\
    11 |     even.iter().zip(odd.iter()).map(|(a, b)| a.1.iter().cloned().cloned()\
    \ + b.1.iter().cloned().cloned()).collect()\n   |     ^^^^ cannot infer type\n\
    \   |\n   = note: type must be known at this point\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut vec = l.to_owned();\n    let mut even = vec[l.len() - 1];\n    let mut\
    \ odd = vec[0];\n    vec.drain(l.len() - 1);\n    for i in vec.iter_mut() {\n\
    \        if i & 1 != 0 {\n            *i = *even;\n            even = *i + 1;\n\
    \        } else {\n            *i = *odd;\n            odd = *i - 1;\n       \
    \ }\n    }\n    vec\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `usize: RangeBounds<usize>` is not satisfied\n\
    \    --> /tmp/tmpyrxchb9v.rs:12:15\n     |\n12   |     vec.drain(l.len() - 1);\n\
    \     |         ----- ^^^^^^^^^^^ the trait `RangeBounds<usize>` is not implemented\
    \ for `usize`\n     |         |\n     |         required by a bound introduced\
    \ by this call\n     |\n     = help: the following other types implement trait\
    \ `RangeBounds<T>`:\n               (Bound<&'a T>, Bound<&'a T>)\n           \
    \    (Bound<T>, Bound<T>)\n               RangeFrom<&T>\n               RangeFrom<T>\n\
    \               RangeFull\n               RangeInclusive<&T>\n               RangeInclusive<T>\n\
    \               RangeTo<&T>\n             and 5 others\nnote: required by a bound\
    \ in `Vec::<T, A>::drain`\n\nerror[E0369]: no implementation for `&mut isize &\
    \ {integer}`\n  --> /tmp/tmpyrxchb9v.rs:14:14\n   |\n14 |         if i & 1 !=\
    \ 0 {\n   |            - ^ - {integer}\n   |            |\n   |            &mut\
    \ isize\n   |\nhelp: `&` can be used on `isize`, you can dereference `i`\n   |\n\
    14 |         if *i & 1 != 0 {\n   |            +\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n  --> /tmp/tmpyrxchb9v.rs:15:18\n   |\n15 |        \
    \     *i = *even;\n   |                  ^^^^^\n\nerror[E0614]: type `isize` cannot\
    \ be dereferenced\n  --> /tmp/tmpyrxchb9v.rs:18:18\n   |\n18 |             *i\
    \ = *odd;\n   |                  ^^^^\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0369, E0614.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() % 2 == 1 {\n        let mut s = vec![l.len() / 2];\n        for v\
    \ in l {\n            s.insert((v % 2 == 0) as usize, v);\n        }\n       \
    \ s.sort_unstable();\n        s.pop()\n    } else {\n        l\n    }\n}\n\nfn\
    \ main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmph4d6sz3m.rs:12:45\n   |\n\
    12 |             s.insert((v % 2 == 0) as usize, v);\n   |                   \
    \                          ^ expected `usize`, found `isize`\n   |\nhelp: you\
    \ can convert an `isize` to a `usize` and panic if the converted value doesn't\
    \ fit\n   |\n12 |             s.insert((v % 2 == 0) as usize, v.try_into().unwrap());\n\
    \   |                                              ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmph4d6sz3m.rs:15:9\n   |\n8  | fn sort_even(l:\
    \ Vec<isize>) -> Vec<isize> {\n   |                                ----------\
    \ expected `Vec<isize>` because of return type\n...\n15 |         s.pop()\n  \
    \ |         ^^^^^^^ expected struct `Vec`, found enum `Option`\n   |\n   = note:\
    \ expected struct `Vec<isize>`\n                found enum `Option<usize>`\n\n\
    error: aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() < 2 {\n        l\n    } else {\n        let mut even = l;\n     \
    \   even.sort();\n\n        let mut odd = l;\n        odd.sort();\n\n        for\
    \ i in 0..even.len() {\n            odd[i] = even[i];\n        }\n\n        odd\n\
    \    }\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `l`\n  --> /tmp/tmp_b43hfei.rs:15:23\n\
    \   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n...\n12 |         let mut even = l;\n   |                        - value\
    \ moved here\n...\n15 |         let mut odd = l;\n   |                       ^\
    \ value used here after move\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sorted().collect()\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmppxyvdbp0.rs:9:23\n  |\n9 |     l.iter().cloned().sorted().collect()\n\
    \  |                       ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() % 2 == 0 {\n        l.iter().cloned().filter_map(|n| match n % 2\
    \ {\n            0 => Some(n as isize),\n            _ => None,\n        })\n\
    \    } else {\n        l.iter().cloned().filter_map(|n| match n % 2 {\n      \
    \      0 => Some(n as isize),\n            1 => Some(n as isize),\n          \
    \  _ => None,\n        })\n    }\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpgekt7onp.rs:10:9\n   |\n\
    8  |   fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                     \
    \             ---------- expected `Vec<isize>` because of return type\n9  |  \
    \     if l.len() % 2 == 0 {\n10 | /         l.iter().cloned().filter_map(|n| match\
    \ n % 2 {\n11 | |             0 => Some(n as isize),\n12 | |             _ =>\
    \ None,\n13 | |         })\n   | |__________^ expected struct `Vec`, found struct\
    \ `FilterMap`\n   |\n   = note: expected struct `Vec<isize>`\n              found\
    \ struct `FilterMap<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmpgekt7onp.rs:10:38:\
    \ 13:10]>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpgekt7onp.rs:15:9\n\
    \   |\n8  |   fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |              \
    \                    ---------- expected `Vec<isize>` because of return type\n\
    ...\n15 | /         l.iter().cloned().filter_map(|n| match n % 2 {\n16 | |   \
    \          0 => Some(n as isize),\n17 | |             1 => Some(n as isize),\n\
    18 | |             _ => None,\n19 | |         })\n   | |__________^ expected struct\
    \ `Vec`, found struct `FilterMap`\n   |\n   = note: expected struct `Vec<isize>`\n\
    \              found struct `FilterMap<Cloned<std::slice::Iter<'_, isize>>, [closure@/tmp/tmpgekt7onp.rs:15:38:\
    \ 19:10]>`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l.to_vec();\n    even.sort();\n    even\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpgpks2r7n.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() < 2 {\n        l\n    } else {\n        let mut even = vec![0; l.len()\
    \ / 2];\n        let mut odd = vec![1; l.len() / 2];\n        for e in even.iter()\
    \ {\n            odd[e] = l[e];\n        }\n        odd\n    }\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `&{integer}`\n\
    \  --> /tmp/tmpdtc_4ttu.rs:15:13\n   |\n15 |             odd[e] = l[e];\n   |\
    \             ^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `&{integer}`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<&{integer}>` for\
    \ `Vec<{integer}>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `&{integer}`\n\
    \  --> /tmp/tmpdtc_4ttu.rs:15:22\n   |\n15 |             odd[e] = l[e];\n   |\
    \                      ^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `&{integer}`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<&{integer}>` for\
    \ `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l.iter().cloned().enumerate().filter_map(|(i, v)| (i\
    \ % 2).map(move |i| (i, v)).collect()).collect()\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `usize` is not an iterator\n  --> /tmp/tmpqzy53a90.rs:10:63\n\
    \   |\n10 |     l.iter().cloned().enumerate().filter_map(|(i, v)| (i % 2).map(move\
    \ |i| (i, v)).collect()).collect()\n   |                                     \
    \                          ^^^ `usize` is not an iterator\n   |\n   = note: the\
    \ following trait bounds were not satisfied:\n           `usize: Iterator`\n \
    \          which is required by `&mut usize: Iterator`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l_sorted = l;\n    l_sorted.sort_unstable();\n    l_sorted\n}\n\nfn\
    \ main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpesnm9epx.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l;\n    for (i, &e) in l.iter_mut().enumerate() {\n        if i\
    \ % 2 == 0 {\n            *e = *l.iter_mut().skip(i).next().unwrap();\n      \
    \      l.swap(i, i + 1);\n        }\n    }\n    l\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwm1v1kna.rs:10:13\n   |\n\
    10 |     for (i, &e) in l.iter_mut().enumerate() {\n   |             ^^     ------------------------\
    \ this expression has type `Option<(usize, &mut isize)>`\n   |             |\n\
    \   |             types differ in mutability\n   |             help: you can probably\
    \ remove the explicit borrow: `e`\n   |\n   = note: expected mutable reference\
    \ `&mut isize`\n                      found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut i = 0;\n    let mut odd = 1;\n    let mut even = 0;\n\n    while i <\
    \ l.len() {\n        if l[i] % 2 == 1 {\n            l[odd] = l[i];\n        \
    \    odd = odd + 1;\n        } else {\n            l[even] = l[i];\n         \
    \   even = even + 1;\n        }\n        i = i + 1;\n    }\n    l\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \  --> /tmp/tmpdijob373.rs:15:13\n   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |              - help: consider changing this to be mutable: `mut l`\n\
    ...\n15 |             l[odd] = l[i];\n   |             ^ cannot borrow as mutable\n\
    \nerror[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \  --> /tmp/tmpdijob373.rs:18:13\n   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |              - help: consider changing this to be mutable: `mut l`\n\
    ...\n18 |             l[even] = l[i];\n   |             ^ cannot borrow as mutable\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let even = l.iter().filter(|&x| *x & 1 == 0).collect::<Vec<_>>();\n    let odd\
    \ = l.iter().filter(|&x| *x & 1 == 1).collect::<Vec<_>>();\n    let mut result\
    \ = vec![];\n    let mut odd_value = odd.iter().cloned().collect::<Vec<_>>();\n\
    \    odd.iter().cloned().for_each(|&x| {\n        result.push(x);\n        odd_value\
    \ = odd_value.iter().cloned().collect::<Vec<_>>();\n    });\n    even.iter().cloned().for_each(|&x|\
    \ {\n        result.push(x);\n        odd_value = odd_value.iter().cloned().collect::<Vec<_>>();\n\
    \    });\n    result.extend_from_slice(odd_value);\n    result\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp0we8xjop.rs:21:30\n   |\n\
    21 |     result.extend_from_slice(odd_value);\n   |                          \
    \    ^^^^^^^^^ expected `&[isize]`, found struct `Vec`\n   |\n   = note: expected\
    \ reference `&[isize]`\n                 found struct `Vec<&isize>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![0; l.len()];\n    let mut odd = vec![1; l.len()];\n\n  \
    \  for ii in l.iter_mut() {\n        match ii {\n            i if i % 2 == 0 =>\
    \ even[ii] as isize,\n            i if i % 2 == 1 => odd[ii] as isize,\n     \
    \       _ => (),\n        };\n    }\n\n    even.sort_unstable();\n    odd.sort_unstable();\n\
    \n    even.iter().cloned().chain(\n        odd.iter().cloned(),\n        |e, o|\
    \ {\n            e.extend((o + 1).cloned().collect::<Vec<_>>());\n           \
    \ e.cloned().chain(o)\n        }\n    )\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&mut isize` by `{integer}`\n  --> /tmp/tmpj1668bkv.rs:14:20\n\
    \   |\n14 |             i if i % 2 == 0 => even[ii] as isize,\n   |          \
    \        - ^ - {integer}\n   |                  |\n   |                  &mut\
    \ isize\n   |\nhelp: `%` can be used on `isize`, you can dereference `i`\n   |\n\
    14 |             i if *i % 2 == 0 => even[ii] as isize,\n   |                \
    \  +\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `&mut isize`\n\
    \  --> /tmp/tmpj1668bkv.rs:14:32\n   |\n14 |             i if i % 2 == 0 => even[ii]\
    \ as isize,\n   |                                ^^^^^^^^ slice indices are of\
    \ type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>`\
    \ is not implemented for `&mut isize`\n   = help: the trait `SliceIndex<[T]>`\
    \ is implemented for `usize`\n   = note: required because of the requirements\
    \ on the impl of `Index<&mut isize>` for `Vec<{integer}>`\n\nerror[E0369]: cannot\
    \ mod `&mut isize` by `{integer}`\n  --> /tmp/tmpj1668bkv.rs:15:20\n   |\n15 |\
    \             i if i % 2 == 1 => odd[ii] as isize,\n   |                  - ^\
    \ - {integer}\n   |                  |\n   |                  &mut isize\n   |\n\
    help: `%` can be used on `isize`, you can dereference `i`\n   |\n15 |        \
    \     i if *i % 2 == 1 => odd[ii] as isize,\n   |                  +\n\nerror[E0308]:\
    \ `match` arms have incompatible types\n  --> /tmp/tmpj1668bkv.rs:16:18\n   |\n\
    13 | /         match ii {\n14 | |             i if i % 2 == 0 => even[ii] as isize,\n\
    \   | |                                ----------------- this is found to be of\
    \ type `isize`\n15 | |             i if i % 2 == 1 => odd[ii] as isize,\n   |\
    \ |                                ---------------- this is found to be of type\
    \ `isize`\n16 | |             _ => (),\n   | |                  ^^ expected `isize`,\
    \ found `()`\n17 | |         };\n   | |_________- `match` arms have incompatible\
    \ types\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `&mut isize`\n\
    \  --> /tmp/tmpj1668bkv.rs:15:32\n   |\n15 |             i if i % 2 == 1 => odd[ii]\
    \ as isize,\n   |                 "
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().enumerate().filter( |(i, v)| v % 2 == 0 ).collect().sort_by(|a,\
    \ b| b.1).map(|i| i.0).collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n --> /tmp/tmp_hmckukz.rs:9:65\n\
    \  |\n9 |     l.iter().cloned().enumerate().filter( |(i, v)| v % 2 == 0 ).collect().sort_by(|a,\
    \ b| b.1).map(|i| i.0).collect()\n  |                                        \
    \                         ^^^^^^^ cannot infer type for type parameter `B` declared\
    \ on the associated function `collect`\n  |\n  = note: type must be known at this\
    \ point\nhelp: consider specifying the type argument in the method call\n  |\n\
    9 |     l.iter().cloned().enumerate().filter( |(i, v)| v % 2 == 0 ).collect::<B>().sort_by(|a,\
    \ b| b.1).map(|i| i.0).collect()\n  |                                        \
    \                                +++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().zip(0..l.len() - 1).map(|(i, x)| (x, i)).collect::<Vec<_>>()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb6zpjxym.rs:9:5\n  |\n8 |\
    \ fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |                           \
    \     ---------- expected `Vec<isize>` because of return type\n9 |     l.iter().cloned().zip(0..l.len()\
    \ - 1).map(|(i, x)| (x, i)).collect::<Vec<_>>()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found tuple\n  |\n  = note: expected struct `Vec<isize>`\n\
    \             found struct `Vec<(usize, isize)>`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut v = vec![];\n    for i in l.iter() {\n        if i & 1 == 0 {\n    \
    \        v.push(i);\n        } else {\n            v.push(i);\n            v.push(i);\n\
    \        }\n    }\n    v.sort();\n    v\n}\n\nfn main() {\n    let candidate =\
    \ sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpkuhey6a8.rs:19:5\n   |\n\
    8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n19 | \
    \    v\n   |     ^ expected `isize`, found `&isize`\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<&isize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() == 0 {\n        return vec![];\n    }\n    let mut even = vec![];\n\
    \    let mut odd = vec![];\n    for i in 0..l.len() {\n        if i % 2 == 0 {\n\
    \            even.push(l.get_mut(i));\n        } else {\n            odd.push(l.get_mut(i));\n\
    \        }\n    }\n    even.sort();\n    for i in 0..even.len() {\n        odd.push(even[i]);\n\
    \    }\n    odd\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpa28b103c.rs:25:5\n   |\n\
    8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n25 | \
    \    odd\n   |     ^^^ expected `isize`, found enum `Option`\n   |\n   = note:\
    \ expected struct `Vec<isize>`\n              found struct `Vec<Option<&mut isize>>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort();\n    l.iter().enumerate().filter_map(|(i, v)| {\n        if i % 2\
    \ == 0 {\n            Some(v)\n        } else {\n            None\n        }\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `Vec<isize>` cannot be built from an iterator\
    \ over elements of type `&isize`\n    --> /tmp/tmpgte8lzh8.rs:16:8\n     |\n16\
    \   |     }).collect()\n     |        ^^^^^^^ value of type `Vec<isize>` cannot\
    \ be built from `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait\
    \ `FromIterator<&isize>` is not implemented for `Vec<isize>`\n     = help: the\
    \ trait `FromIterator<T>` is implemented for `Vec<T>`\nnote: required by a bound\
    \ in `collect`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l;\n    l.sort();\n    let mut l2 = l;\n    l2.iter().cloned().skip(1).zip((l2.iter().cloned()).rev()).for_each(|(b,\
    \ e)| *e = *b);\n    l2\n}\n\nfn main() {\n    let candidate = sort_even;\n  \
    \  assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpx3goz4j6.rs:12:82\n\
    \   |\n12 |     l2.iter().cloned().skip(1).zip((l2.iter().cloned()).rev()).for_each(|(b,\
    \ e)| *e = *b);\n   |                                                        \
    \                          ^^\n\nerror[E0614]: type `isize` cannot be dereferenced\n\
    \  --> /tmp/tmpx3goz4j6.rs:12:87\n   |\n12 |     l2.iter().cloned().skip(1).zip((l2.iter().cloned()).rev()).for_each(|(b,\
    \ e)| *e = *b);\n   |                                                        \
    \                               ^^\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().windows(2).map(|x| x.iter().cloned().sort()).collect()\n}\n\
    \nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `windows` found for struct `Cloned` in the\
    \ current scope\n --> /tmp/tmpyl08qc16.rs:9:23\n  |\n9 |     l.iter().cloned().windows(2).map(|x|\
    \ x.iter().cloned().sort()).collect()\n  |                       ^^^^^^^ method\
    \ not found in `Cloned<std::slice::Iter<'_, isize>>`\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let even = l & !1;\n    let odd = l & !0;\n\n    let mut odd_iter = odd.iter().cloned();\n\
    \    let mut odd_first = odd_iter.next();\n\n    let mut even = even.into_iter();\n\
    \n    if odd_first.len() > 0 {\n        let mut odd_iter = odd.iter();\n     \
    \   odd_iter.skip(1).for_each(|&x| {\n            even.next().unwrap().unwrap().sort_unstable();\n\
    \        });\n    }\n\n    even | odd\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: no implementation for `Vec<isize> & {integer}`\n --> /tmp/tmp09gbn9_5.rs:9:18\n\
    \  |\n9 |     let even = l & !1;\n  |                - ^ -- {integer}\n  |   \
    \             |\n  |                Vec<isize>\n\nerror[E0369]: no implementation\
    \ for `Vec<isize> & {integer}`\n  --> /tmp/tmp09gbn9_5.rs:10:17\n   |\n10 |  \
    \   let odd = l & !0;\n   |               - ^ -- {integer}\n   |             \
    \  |\n   |               Vec<isize>\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l.into_iter().cloned().collect()\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0271]: type mismatch resolving `<std::vec::IntoIter<isize> as Iterator>::Item\
    \ == &_`\n    --> /tmp/tmp06ienr07.rs:10:19\n     |\n10   |     l.into_iter().cloned().collect()\n\
    \     |                   ^^^^^^ expected reference, found `isize`\n     |\n \
    \    = note: expected reference `&_`\n                     found type `isize`\n\
    note: required by a bound in `cloned`\n\nerror[E0599]: the method `collect` exists\
    \ for struct `Cloned<std::vec::IntoIter<isize>>`, but its trait bounds were not\
    \ satisfied\n  --> /tmp/tmp06ienr07.rs:10:28\n   |\n10 |       l.into_iter().cloned().collect()\n\
    \   |                              ^^^^^^^ method cannot be called on `Cloned<std::vec::IntoIter<isize>>`\
    \ due to unsatisfied trait bounds\n   |\n   = note: the following trait bounds\
    \ were not satisfied:\n           `<std::vec::IntoIter<isize> as Iterator>::Item\
    \ = &_`\n           which is required by `Cloned<std::vec::IntoIter<isize>>: Iterator`\n\
    \           `Cloned<std::vec::IntoIter<isize>>: Iterator`\n           which is\
    \ required by `&mut Cloned<std::vec::IntoIter<isize>>: Iterator`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0271, E0599.\n\
    For more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even_values = l;\n\n    // Sort even indicies of l\n    for x in l.iter()\
    \ {\n        if x%2 == 0 {\n            even_values.swap(x-1, x);\n        }\n\
    \    }\n    even_values\n}\n\nfn main() {\n    let candidate = sort_even;\n  \
    \  assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpud_396al.rs:14:30\n   |\n\
    14 |             even_values.swap(x-1, x);\n   |                             \
    \ ^^^ expected `usize`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `usize` and panic if the converted value doesn't fit\n   |\n14 |      \
    \       even_values.swap((x-1).try_into().unwrap(), x);\n   |                \
    \              +   +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n \
    \ --> /tmp/tmpud_396al.rs:14:35\n   |\n14 |             even_values.swap(x-1,\
    \ x);\n   |                                   ^ expected `usize`, found `&isize`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    even.sort();\n    for (i, val) in even.iter_mut().enumerate()\
    \ {\n        if i%2 == 0 {\n            *val = even[i];\n        }\n    }\n  \
    \  even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0502]: cannot borrow `even` as immutable because it is also borrowed\
    \ as mutable\n  --> /tmp/tmpge54ism0.rs:13:20\n   |\n11 |     for (i, val) in\
    \ even.iter_mut().enumerate() {\n   |                     ---------------------------\n\
    \   |                     |\n   |                     mutable borrow occurs here\n\
    \   |                     mutable borrow later used here\n12 |         if i%2\
    \ == 0 {\n13 |             *val = even[i];\n   |                    ^^^^ immutable\
    \ borrow occurs here\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0502`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![0; l.len() / 2];\n    for idx in 0..l.len() {\n        even[idx\
    \ as usize] = l[idx as usize];\n    }\n    even.sort_unstable();\n    even\n}\n\
    \nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 1 but the
    index is 1'', /tmp/tmpxobkvbe4.rs:11:9

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l0 = l;\n    let mut l1 = l;\n    let mut even = true;\n\n    for &i\
    \ in l0.iter().enumerate() {\n        if even {\n            l1[i] = l1[i] ^ i;\
    \ // shift even values into position\n        } else {\n            l1[l1[i] ^\
    \ i] = i; // shift odd values into position\n        }\n\n        even = !even;\n\
    \    }\n\n    l1\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1q8uy94l.rs:13:9\n   |\n\
    13 |     for &i in l0.iter().enumerate() {\n   |         ^^    ---------------------\
    \ this expression has type `Option<(usize, &isize)>`\n   |         |\n   |   \
    \      expected tuple, found reference\n   |         help: you can probably remove\
    \ the explicit borrow: `i`\n   |\n   = note:  expected tuple `(usize, &isize)`\n\
    \           found reference `&_`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l2 = l.iter().cloned().collect::<Vec<_>>();\n    l2.sort_unstable();\n\
    \    l2\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmph3r660ps.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ // Initialize result as a zero size\n    let mut result = vec![];\n\n    //\
    \ Use a loop to create new values based on the current odd values\n    for i in\
    \ 0..l.len() / 2 {\n        // If the current odd value is the same as the current\
    \ even value, then use the even value\n        if l[i] == l[i | 1] {\n       \
    \     result.append(l[i]);\n        } else {\n            // Otherwise, the current\
    \ odd value should be inserted before the current even value\n            result.insert(i,\
    \ l[i]);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp7vf12rpg.rs:16:27\n   |\n\
    16 |             result.append(l[i]);\n   |                           ^^^^ expected\
    \ `&mut Vec<_>`, found `isize`\n   |\n   = note: expected mutable reference `&mut\
    \ Vec<_>`\n                           found type `isize`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().zip(0..l.len()).map(|(e, ix)| {\n        if ix % 2 == 0 {\n\
    \            e\n        } else {\n            e = l.iter().filter(|&i| i % 2 ==\
    \ 0).collect::<Vec<_>>();\n            e.sort_unstable();\n            e.into_iter().cloned().collect()\n\
    \        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxjxe2t4l.rs:13:17\n   |\n\
    9  |     l.iter().cloned().zip(0..l.len()).map(|(e, ix)| {\n   |             \
    \                                - expected due to the type of this binding\n\
    ...\n13 |             e = l.iter().filter(|&i| i % 2 == 0).collect::<Vec<_>>();\n\
    \   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found struct `Vec`\n   |\n   = note: expected type `isize`\n      \
    \      found struct `Vec<&isize>`\n\nerror[E0599]: no method named `sort_unstable`\
    \ found for type `isize` in the current scope\n  --> /tmp/tmpxjxe2t4l.rs:14:15\n\
    \   |\n14 |             e.sort_unstable();\n   |               ^^^^^^^^^^^^^ method\
    \ not found in `isize`\n\nerror[E0599]: `isize` is not an iterator\n  --> /tmp/tmpxjxe2t4l.rs:15:15\n\
    \   |\n15 |             e.into_iter().cloned().collect()\n   |               ^^^^^^^^^\
    \ `isize` is not an iterator\n   |\n   = note: the following trait bounds were\
    \ not satisfied:\n           `isize: Iterator`\n           which is required by\
    \ `isize: IntoIterator`\n           `&isize: Iterator`\n           which is required\
    \ by `&isize: IntoIterator`\n           `&mut isize: Iterator`\n           which\
    \ is required by `&mut isize: IntoIterator`\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() % 2 == 0 {\n        l.iter().cloned().enumerate().sort_by(|(idx,\
    \ val)| {\n            if idx % 2 == 0 {\n                val\n            } else\
    \ {\n                l.get_mut(idx / 2).swap(val)\n            }\n        }).collect()\n\
    \    } else {\n        l\n    }\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_by` found for struct `Enumerate` in\
    \ the current scope\n  --> /tmp/tmpsodex85s.rs:10:39\n   |\n10 |         l.iter().cloned().enumerate().sort_by(|(idx,\
    \ val)| {\n   |                                       ^^^^^^^ method not found\
    \ in `Enumerate<Cloned<std::slice::Iter<'_, isize>>>`\n\nerror[E0599]: no method\
    \ named `swap` found for enum `Option` in the current scope\n  --> /tmp/tmpsodex85s.rs:14:36\n\
    \   |\n14 |                 l.get_mut(idx / 2).swap(val)\n   |               \
    \                     ^^^^ method not found in `Option<&mut _>`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by_key(|i| i as usize + i as usize)\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpipz2knkg.rs:9:5\n  |\n8 |\
    \ fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |                           \
    \     ---------- expected `Vec<isize>` because of return type\n9 |     l.sort_unstable_by_key(|i|\
    \ i as usize + i as usize)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n\
    \          found unit type `()`\n\nerror[E0606]: casting `&isize` as `usize` is\
    \ invalid\n --> /tmp/tmpipz2knkg.rs:9:32\n  |\n9 |     l.sort_unstable_by_key(|i|\
    \ i as usize + i as usize)\n  |                                -^^^^^^^^^\n  |\
    \                                |\n  |                                cannot\
    \ cast `&isize` as `usize`\n  |                                help: dereference\
    \ the expression: `*i`\n\nerror[E0606]: casting `&isize` as `usize` is invalid\n\
    \ --> /tmp/tmpipz2knkg.rs:9:45\n  |\n9 |     l.sort_unstable_by_key(|i| i as usize\
    \ + i as usize)\n  |                                             -^^^^^^^^^\n\
    \  |                                             |\n  |                      \
    \                       cannot cast `&isize` as `usize`\n  |                 \
    \                            help: dereference the expression: `*i`\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0606.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmpna_r1hpa.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |              - help: consider changing this to be mutable: `mut l`\n\
    9 |     l.sort_unstable();\n  |     ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| if b % 2 == 0 { b } else { a })\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_ne3c11g.rs:9:47\n  |\n9 |\
    \     l.sort_unstable_by(|a, b| if b % 2 == 0 { b } else { a })\n  |         \
    \                                      ^ expected enum `std::cmp::Ordering`, found\
    \ `&isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_ne3c11g.rs:9:58\n\
    \  |\n9 |     l.sort_unstable_by(|a, b| if b % 2 == 0 { b } else { a })\n  | \
    \                                                         ^ expected enum `std::cmp::Ordering`,\
    \ found `&isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_ne3c11g.rs:9:5\n\
    \  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |                   \
    \             ---------- expected `Vec<isize>` because of return type\n9 |   \
    \  l.sort_unstable_by(|a, b| if b % 2 == 0 { b } else { a })\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `Vec`, found `()`\n  |\n  = note: expected struct `Vec<isize>`\n\
    \          found unit type `()`\n\nerror: aborting due to 3 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().map(|&a| if a % 2 == 0 { a } else { a / 2 }).collect()\n}\n\
    \nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo04lnqz9.rs:9:28\n  |\n9 |\
    \     l.iter().cloned().map(|&a| if a % 2 == 0 { a } else { a / 2 }).collect()\n\
    \  |                            ^--\n  |                            ||\n  |  \
    \                          |expected due to this\n  |                        \
    \    expected `isize`, found reference\n  |                            help: did\
    \ you mean `a`: `&isize`\n  |\n  = note:   expected type `isize`\n          found\
    \ reference `&_`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ // We use a map to quickly check whether a number has even or odd values\n \
    \   let mut evens = HashMap::new();\n    for i in l.iter() {\n        if evens.contains_key(*i\
    \ & 1usize) {\n            evens[*i & 1usize] += *i;\n        } else {\n     \
    \       evens.insert(*i, *i);\n        }\n    }\n\n    // We use a set for easy\
    \ removal\n    let mut evens_set = evens.iter().cloned().collect();\n\n    //\
    \ We use a map to quickly check whether a number has even or odd values\n    let\
    \ mut odds = HashMap::new();\n    for i in l.iter() {\n        if odds.contains_key(*i\
    \ & 1usize) {\n            odds[*i & 1usize] += *i;\n        } else {\n      \
    \      odds.insert(*i, *i);\n        }\n    }\n\n    // We use a set for easy\
    \ removal\n    let mut odds_set = odds.iter().cloned().collect();\n\n    // We\
    \ perform the actual sorting and remove elements\n    let mut sorted_even = evens_set.clone();\n\
    \    let mut sorted_odd = odds_set.clone();\n\n    for i in sorted_even.iter_mut()\
    \ {\n        if i < sorted_odd.len() {\n            *i = *i + sorted_odd[i];\n\
    \            sorted_odd.remove(i);\n        }\n    }\n\n    // We perform the\
    \ actual sorting and remove elements\n    for i in sorted_odd.iter_mut() {\n \
    \       if i < sorted_even.len() {\n            *i = *i + sorted_even[i];\n  \
    \          sorted_even.remove(i);\n        }\n    }\n\n    // We return the sorted\
    \ vector\n    sorted_even.cloned()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n  -->\
    \ /tmp/tmp_p11j4y8.rs:10:21\n   |\n10 |     let mut evens = HashMap::new();\n\
    \   |                     ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmp_p11j4y8.rs:23:20\n\
    \   |\n23 |     let mut odds = HashMap::new();\n   |                    ^^^^^^^\
    \ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n\
    1  | use std::collections::HashMap;\n   |\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp_p11j4y8.rs:12:36\n   |\n12 |         if evens.contains_key(*i\
    \ & 1usize) {\n   |                                    ^^^^^^ expected `isize`,\
    \ found `usize`\n\nerror[E0277]: no implementation for `isize & usize`\n  -->\
    \ /tmp/tmp_p11j4y8.rs:12:34\n   |\n12 |         if evens.contains_key(*i & 1usize)\
    \ {\n   |                                  ^ no implementation for `isize & usize`\n\
    \   |\n   = help: the trait `BitAnd<usize>` is not implemented for `isize`\n \
    \  = help: the following other types implement trait `BitAnd<Rhs>`:\n        \
    \     <&'a i128 as BitAnd<i128>>\n             <&'a i16 as BitAnd<i16>>\n    \
    \         <&'a i32 as BitAnd<i32>>\n             <&'a i64 as BitAnd<i64>>\n  \
    \           <&'a i8 as BitAnd<i8>>\n             <&'a isize as BitAnd<isize>>\n\
    \             <&'a u128 as BitAnd<u128>>\n             <&'a u16 as BitAnd<u16>>\n\
    \           and 40 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_p11j4y8.rs:13:24\n\
    \   |\n13 |             evens[*i & 1usize] += *i;\n   |                      \
    \  ^^^^^^ expected `isize`, found `usize`\n\nerror[E0277]: no implementation for\
    \ `isize & usize`\n  --> /tmp/tmp_p11j4y8.rs:13:22\n   |\n13 |             evens[*i\
    \ & 1usize] += *i;\n   |                      ^ no implementation for `isize &\
    \ usize`\n   |\n   = help: the trait `BitAnd<usize>` is not implemented for `isize`\n\
    \   = help: the following other types implement trait `BitAnd<Rhs>`:\n       \
    \      <&'a i128 as BitAnd<i128>>\n             <&'a i1"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sort_unstable_by_key(|x| x).cloned()\n}\n\nfn main() {\n \
    \   let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_unstable_by_key` found for struct `Cloned`\
    \ in the current scope\n --> /tmp/tmpw7zbc3_r.rs:9:23\n  |\n9 |     l.iter().cloned().sort_unstable_by_key(|x|\
    \ x).cloned()\n  |                       ^^^^^^^^^^^^^^^^^^^^ method not found\
    \ in `Cloned<std::slice::Iter<'_, isize>>`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    even.sort();\n    even.iter_mut().enumerate().filter(|(idx,\
    \ _)| idx % 2 == 0).for_each(|(idx, _)| {\n        even[idx] = even[idx as usize];\n\
    \    });\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0499]: cannot borrow `even` as mutable more than once at a time\n\
    \  --> /tmp/tmp5uklc0xt.rs:11:74\n   |\n11 |     even.iter_mut().enumerate().filter(|(idx,\
    \ _)| idx % 2 == 0).for_each(|(idx, _)| {\n   |     ---------------          \
    \                                   -------- ^^^^^^^^^^ second mutable borrow\
    \ occurs here\n   |     |                                                    \
    \       |\n   |     first mutable borrow occurs here                         \
    \   first borrow later used by call\n12 |         even[idx] = even[idx as usize];\n\
    \   |         ---- second borrow occurs due to use of `even` in closure\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0499`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l.clone();\n    let mut odd = even.clone();\n    for i in even.iter_mut()\
    \ {\n        if *i % 2 == 0 {\n            *i = *i / 2;\n        }\n    }\n  \
    \  for i in even.iter_mut() {\n        *i = *i + (*i / 2);\n    }\n    for i in\
    \ even.iter_mut() {\n        *i = *i + (*i / 2);\n    }\n    for i in odd.iter_mut()\
    \ {\n        *i = *i - 1;\n    }\n    for i in odd.iter_mut() {\n        *i =\
    \ *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n    for i in odd.iter_mut()\
    \ {\n        *i = *i - 1;\n    }\n    for i in odd.iter_mut() {\n        *i =\
    \ *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n    for i in odd.iter_mut()\
    \ {\n        *i = *i - 1;\n    }\n    for i in odd.iter_mut() {\n        *i =\
    \ *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n    for i in odd.iter_mut()\
    \ {\n        *i = *i - 1;\n    }\n    for i in odd.iter_mut() {\n        *i =\
    \ *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n    for i in odd.iter_mut()\
    \ {\n        *i = *i - 1;\n    }\n    for i in odd.iter_mut() {\n        *i =\
    \ *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n    for i in odd.iter_mut()\
    \ {\n        *i = *i - 1;\n    }\n    for i in odd.iter_mut() {\n        *i =\
    \ *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n\
    \    for i in even.iter_mut() {\n        *i = *i + 1;\n    }\n    for i in odd.iter_mut()\
    \ {\n        *i = *i - 1;\n    }\n    for i in odd.iter_mut() {\n        *i =\
    \ *i + 1;\n    }\n    for i in even.iter_mut() {\n        *i = *i + 1;\n\n}\n\n\
    fn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp6zv76648.rs:110:3\n\
    \    |\n8   | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n    |             \
    \                              - unclosed delimiter\n...\n100 |     for i in even.iter_mut()\
    \ {\n    |                              - this delimiter might not be properly\
    \ closed...\n...\n103 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n110 | }\n    |   ^\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmp6zv76648.rs:8:32\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |    ---------                   ^^^^^^^^^^ expected struct `Vec`, found\
    \ `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n  |\n  = note: expected struct `Vec<isize>`\n          found unit\
    \ type `()`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmpna_r1hpa.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |              - help: consider changing this to be mutable: `mut l`\n\
    9 |     l.sort_unstable();\n  |     ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![];\n    let mut odd = vec![];\n    let mut odd_i = 0;\n\
    \    let mut even_i = 0;\n\n    for x in l.iter() {\n        if even_i % 2 ==\
    \ 0 {\n            even.push(x);\n        } else {\n            odd.push(x);\n\
    \            odd_i += 1;\n        }\n        even_i += 1;\n    }\n    even.sort_unstable();\n\
    \    odd.sort_unstable();\n\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmphn7o3k_n.rs:26:5\n   |\n\
    8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |                       \
    \         ---------- expected `Vec<isize>` because of return type\n...\n26 | \
    \    even\n   |     ^^^^ expected `isize`, found `&isize`\n   |\n   = note: expected\
    \ struct `Vec<isize>`\n              found struct `Vec<&isize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().enumerate().rev().filter_map(|(i, v)| {\n        let odd:\
    \ (usize, usize) = (i % 2, i / 2);\n        odd.is_ok() && odd.1 == v\n    }).collect::<Vec<_>>().into_iter().map(|(i,\
    \ v)| {\n        if i % 2 == 0 {\n            v\n        } else {\n          \
    \  i\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ok` found for tuple `(usize, usize)`\
    \ in the current scope\n  --> /tmp/tmptn3yer91.rs:11:13\n   |\n11 |         odd.is_ok()\
    \ && odd.1 == v\n   |             ^^^^^ method not found in `(usize, usize)`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmptn3yer91.rs:11:33\n   |\n11 |\
    \         odd.is_ok() && odd.1 == v\n   |                                 ^ expected\
    \ `usize`, found `isize`\n   |\nhelp: you can convert an `isize` to a `usize`\
    \ and panic if the converted value doesn't fit\n   |\n11 |         odd.is_ok()\
    \ && odd.1 == v.try_into().unwrap()\n   |                                  ++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmptn3yer91.rs:11:9\n   |\n11 | \
    \        odd.is_ok() && odd.1 == v\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ enum `Option`, found `bool`\n   |\n   = note: expected enum `Option<_>`\n  \
    \            found type `bool`\nhelp: try wrapping the expression in `Some`\n\
    \   |\n11 |         Some(odd.is_ok() && odd.1 == v)\n   |         +++++      \
    \                   +\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut sorted_even = vec![0;];\n    let mut i = 0;\n\n    while i < l.len()\
    \ {\n        if i % 2 == 0 {\n            sorted_even.push(l[i]);\n        } else\
    \ {\n            sorted_even.push(l[sorted_even.len()]);\n        }\n\n      \
    \  i += 1;\n    }\n\n    sorted_even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error: unexpected end of macro invocation\n --> /tmp/tmpqqrheie1.rs:9:34\n\
    \  |\n9 |     let mut sorted_even = vec![0;];\n  |                           \
    \       ^ missing tokens in macro arguments\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() <= 1 {\n        l\n    } else {\n        l.iter().enumerate().sort().map(|(_,\
    \ v)| v).collect::<Vec<_>>()\n    }\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort` found for struct `Enumerate` in the\
    \ current scope\n  --> /tmp/tmp5ubww5j9.rs:12:30\n   |\n12 |         l.iter().enumerate().sort().map(|(_,\
    \ v)| v).collect::<Vec<_>>()\n   |                              ^^^^ method not\
    \ found in `Enumerate<std::slice::Iter<'_, isize>>`\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ if l.len() % 2 == 0 {\n        // even\n        l.sort();\n    } else {\n  \
    \      // odd, sort first, then put back into correct odd-ness\n        let mut\
    \ l = l;\n        l.sort();\n        for v in l.iter_mut().skip(1) {\n       \
    \     *v = *v % 2 + 1;\n        }\n    }\n    l\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \  --> /tmp/tmppkag3f5m.rs:11:9\n   |\n8  | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n   |              - help: consider changing this to be mutable: `mut l`\n\
    ...\n11 |         l.sort();\n   |         ^^^^^^^^ cannot borrow as mutable\n\n\
    error[E0382]: use of moved value: `l`\n  --> /tmp/tmppkag3f5m.rs:20:5\n   |\n\
    8  | fn sort_even(l: Vec<isize>) -> Vec<isize> {\n   |              - move occurs\
    \ because `l` has type `Vec<isize>`, which does not implement the `Copy` trait\n\
    ...\n14 |         let mut l = l;\n   |                     - value moved here\n\
    ...\n20 |     l\n   |     ^ value used here after move\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0382, E0596.\n\
    For more information about an error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable_by(|a, b| a % 2 == b % 2 ? a.partial_cmp(b) : b.partial_cmp(a))\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: casts cannot be followed by a method call\n --> /tmp/tmp9875fg6d.rs:9:48\n\
    \  |\n9 |     l.sort_unstable_by(|a, b| a % 2 == b % 2 ? a.partial_cmp(b) : b.partial_cmp(a))\n\
    \  |                                                ^^^^^^^^^^^^^^^^----\n  |\
    \                                                                |\n  |      \
    \                                                          help: remove the type\
    \ ascription\n\nerror: expected one of `)`, `,`, `.`, `?`, or an operator, found\
    \ `a`\n --> /tmp/tmp9875fg6d.rs:9:48\n  |\n9 |     l.sort_unstable_by(|a, b| a\
    \ % 2 == b % 2 ? a.partial_cmp(b) : b.partial_cmp(a))\n  |                   \
    \                            -^ expected one of `)`, `,`, `.`, `?`, or an operator\n\
    \  |                                               |\n  |                    \
    \                           help: missing `,`\n\nerror[E0425]: cannot find value\
    \ `a` in this scope\n --> /tmp/tmp9875fg6d.rs:9:48\n  |\n9 |     l.sort_unstable_by(|a,\
    \ b| a % 2 == b % 2 ? a.partial_cmp(b) : b.partial_cmp(a))\n  |              \
    \                                  ^ expecting a type here because of type ascription\n\
    \nerror[E0425]: cannot find value `b` in this scope\n --> /tmp/tmp9875fg6d.rs:9:62\n\
    \  |\n9 |     l.sort_unstable_by(|a, b| a % 2 == b % 2 ? a.partial_cmp(b) : b.partial_cmp(a))\n\
    \  |                                                              ^ expecting\
    \ a type here because of type ascription\n\nerror[E0412]: cannot find type `b`\
    \ in this scope\n --> /tmp/tmp9875fg6d.rs:9:67\n  |\n9 |     l.sort_unstable_by(|a,\
    \ b| a % 2 == b % 2 ? a.partial_cmp(b) : b.partial_cmp(a))\n  |              \
    \                                                     ^ expecting a type here\
    \ because of type ascription\n\nerror[E0425]: cannot find value `a` in this scope\n\
    \ --> /tmp/tmp9875fg6d.rs:9:81\n  |\n9 |     l.sort_unstable_by(|a, b| a % 2 ==\
    \ b % 2 ? a.partial_cmp(b) : b.partial_cmp(a))\n  |                          \
    \                                                       ^ help: a local variable\
    \ with a similar name exists: `l`\n\nerror[E0277]: the `?` operator can only be\
    \ appli"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().enumerate().map(|(i, v)| (v >> 1, i)).collect_vec()\n}\n\n\
    fn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `collect_vec` found for struct `Map` in the\
    \ current scope\n --> /tmp/tmpeo6n99d6.rs:9:61\n  |\n9 |     l.iter().cloned().enumerate().map(|(i,\
    \ v)| (v >> 1, i)).collect_vec()\n  |                                        \
    \                     ^^^^^^^^^^^ method not found in `Map<Enumerate<Cloned<std::slice::Iter<'_,\
    \ isize>>>, [closure@/tmp/tmpeo6n99d6.rs:9:39: 9:59]>`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter()\n        .enumerate()\n        .flat_map(|(i, &v)| (i % 2, v))\n  \
    \      .sort_by_key(|&v| v)\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: `(usize, isize)` is not an iterator\n    --> /tmp/tmp8h5g1w_f.rs:11:19\n\
    \     |\n11   |         .flat_map(|(i, &v)| (i % 2, v))\n     |          --------\
    \ ^^^^^^^^^^^^^^^^^^^^ `(usize, isize)` is not an iterator\n     |          |\n\
    \     |          required by a bound introduced by this call\n     |\n     = help:\
    \ the trait `Iterator` is not implemented for `(usize, isize)`\n     = note: required\
    \ because of the requirements on the impl of `IntoIterator` for `(usize, isize)`\n\
    note: required by a bound in `flat_map`\n\nerror[E0599]: no method named `sort_by_key`\
    \ found for struct `FlatMap` in the current scope\n  --> /tmp/tmp8h5g1w_f.rs:12:10\n\
    \   |\n12 |         .sort_by_key(|&v| v)\n   |          ^^^^^^^^^^^ method not\
    \ found in `FlatMap<Enumerate<std::slice::Iter<'_, isize>>, (usize, isize), [closure@/tmp/tmp8h5g1w_f.rs:11:19:\
    \ 11:39]>`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l;\n    even.sort();\n\n    let mut odd = even;\n    for i in\
    \ even.iter_mut() {\n        if i % 2 == 0 {\n            *i = *(i + 1);\n   \
    \     }\n    }\n\n    odd\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `&mut isize` by `{integer}`\n  --> /tmp/tmp2dhbky28.rs:14:14\n\
    \   |\n14 |         if i % 2 == 0 {\n   |            - ^ - {integer}\n   |   \
    \         |\n   |            &mut isize\n   |\nhelp: `%` can be used on `isize`,\
    \ you can dereference `i`\n   |\n14 |         if *i % 2 == 0 {\n   |         \
    \   +\n\nerror[E0369]: cannot add `{integer}` to `&mut isize`\n  --> /tmp/tmp2dhbky28.rs:15:22\n\
    \   |\n15 |             *i = *(i + 1);\n   |                    - ^ - {integer}\n\
    \   |                    |\n   |                    &mut isize\n   |\nhelp: `+`\
    \ can be used on `isize`, you can dereference `i`\n   |\n15 |             *i =\
    \ *(*i + 1);\n   |                    +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().enumerate().filter(|(&i, &x)| x % 2 == 0).map(|(i, _)| i).collect()\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptmfxv5qv.rs:9:35\n  |\n9 |\
    \     l.iter().enumerate().filter(|(&i, &x)| x % 2 == 0).map(|(i, _)| i).collect()\n\
    \  |                                   ^^    - expected due to this\n  |     \
    \                              |\n  |                                   expected\
    \ `usize`, found reference\n  |                                   help: you can\
    \ probably remove the explicit borrow: `i`\n  |\n  = note:   expected type `usize`\n\
    \          found reference `&_`\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `usize`\n    --> /tmp/tmptmfxv5qv.rs:9:72\n\
    \     |\n9    |     l.iter().enumerate().filter(|(&i, &x)| x % 2 == 0).map(|(i,\
    \ _)| i).collect()\n     |                                                   \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=usize>`\n     |\n     = help: the trait `FromIterator<usize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter()\n        .enumerate()\n        .map(|(i, e)| if i % 2 == 0 { e } else\
    \ { i })\n        .cloned()\n        .enumerate()\n        .map(|(idx, v)| if\
    \ idx % 2 == 0 { v } else { idx })\n        .cloned()\n        .sort();\n    l\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: `if` and `else` have incompatible types\n  --> /tmp/tmpo4o40f4y.rs:11:50\n\
    \   |\n11 |         .map(|(i, e)| if i % 2 == 0 { e } else { i })\n   |      \
    \                                 -          ^ expected `&isize`, found `usize`\n\
    \   |                                       |\n   |                          \
    \             expected because of this\n\nerror[E0271]: type mismatch resolving\
    \ `<[closure@/tmp/tmpo4o40f4y.rs:14:14: 14:59] as FnOnce<((usize, usize),)>>::Output\
    \ == &_`\n    --> /tmp/tmpo4o40f4y.rs:15:10\n     |\n15   |         .cloned()\n\
    \     |          ^^^^^^ expected reference, found `usize`\n     |\n     = note:\
    \ expected reference `&_`\n                     found type `usize`\n     = note:\
    \ required because of the requirements on the impl of `Iterator` for `Map<Enumerate<Cloned<Map<Enumerate<std::slice::Iter<'_,\
    \ isize>>, _>>>, [closure@/tmp/tmpo4o40f4y.rs:14:14: 14:59]>`\nnote: required\
    \ by a bound in `cloned`\n\nerror[E0599]: no method named `sort` found for struct\
    \ `Cloned` in the current scope\n  --> /tmp/tmpo4o40f4y.rs:16:10\n   |\n16 | \
    \        .sort();\n   |          ^^^^ method not found in `Cloned<Map<Enumerate<Cloned<Map<Enumerate<std::slice::Iter<'_,\
    \ isize>>, _>>>, [closure@/tmp/tmpo4o40f4y.rs:14:14: 14:59]>>`\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0271, E0308,\
    \ E0599.\nFor more information about an error, try `rustc --explain E0271`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![];\n    even.extend_from_slice(l.iter().cloned());\n   \
    \ even.sort_unstable();\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp5x8la_9o.rs:10:28\n   |\n\
    10 |     even.extend_from_slice(l.iter().cloned());\n   |                    \
    \        ^^^^^^^^^^^^^^^^^ expected `&[_]`, found struct `Cloned`\n   |\n   =\
    \ note: expected reference `&[_]`\n                 found struct `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    let mut result: Vec<isize> = vec![0; l.len()];\n   \
    \ for (i, &e) in l.iter().enumerate() {\n        if i % 2 == 0 {\n           \
    \ result.push(*e);\n        } else {\n            result[i] = e;\n        }\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpfv34oxov.rs:13:25\n\
    \   |\n13 |             result.push(*e);\n   |                         ^^\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().enumerate().map(|(i, v)| {\n        if i % 2 == 0 {\n    \
    \        v\n        } else {\n            let mut k = i;\n            let mut\
    \ vv = v;\n            while vv < k {\n                let k = k - 1;\n      \
    \          let mut v = v * 2;\n                if v > k {\n                  \
    \  v = v;\n                } else {\n                    v = v + k;\n        \
    \        }\n                vk = v;\n            }\n            (i, v)\n     \
    \   }\n    }).cloned().collect()\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `vk` in this scope\n   --> /tmp/tmpw26gsp37.rs:23:17\n\
    \    |\n23  |                 vk = v;\n    |                 ^^ help: a tuple\
    \ variant with a similar name exists: `Ok`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpw26gsp37.rs:15:24\n   |\n15 |             while vv < k {\n   |\
    \                        ^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n15 |             while vv < k.try_into().unwrap() {\n   |             \
    \            ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpw26gsp37.rs:18:24\n\
    \   |\n18 |                 if v > k {\n   |                        ^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n18 |                 if\
    \ v > k.try_into().unwrap() {\n   |                         ++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpw26gsp37.rs:21:29\n   |\n21 |\
    \                     v = v + k;\n   |                             ^ expected\
    \ `isize`, found `usize`\n\nerror[E0277]: cannot add `usize` to `isize`\n  -->\
    \ /tmp/tmpw26gsp37.rs:21:27\n   |\n21 |                     v = v + k;\n   | \
    \                          ^ no implementation for `isize + usize`\n   |\n   =\
    \ help: the trait `Add<usize>` is not implemented for `isize`\n   = help: the\
    \ following other types implement trait `Add<Rhs>`:\n             <&'a f32 as\
    \ Add<f32>>\n             <&'a f64 as Add<f64>>\n             <&'a i128 as Add<i128>>\n\
    \             <&'a i16 as Add<i16>>\n             <&'a i32 as Add<i32>>\n    \
    \         <&'a i64 as Add<i64>>\n             <&'a i8 as Add<i8>>\n          \
    \   <&'a isize as Add<isize>>\n           and 48 others\n\nerror: aborting due\
    \ to 5 previous errors\n\nSome errors have detailed explanations: E0277, E0308,\
    \ E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.iter().cloned().collect::<Vec<_>>();\n    l.sort_unstable();\n\
    \    for &i in l.iter_mut() {\n        *i /= 2;\n    }\n    l\n}\n\nfn main()\
    \ {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp7q6xw2_r.rs:11:9\n   |\n\
    11 |     for &i in l.iter_mut() {\n   |         ^^    ------------ this expression\
    \ has type `Option<&mut isize>`\n   |         |\n   |         types differ in\
    \ mutability\n   |         help: you can probably remove the explicit borrow:\
    \ `i`\n   |\n   = note: expected mutable reference `&mut isize`\n            \
    \          found reference `&_`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = l.iter().cloned().collect::<Vec<isize>>();\n    let mut odd =\
    \ even.clone();\n    odd.swap(0, even.len());\n    odd\n}\n\nfn main() {\n   \
    \ let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 3 but the
    index is 3'', /tmp/tmpph9bw79b.rs:11:9

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut even = vec![0; l.len()];\n    for (i, val) in l.iter().enumerate() {\n\
    \        if i & 1 == 1 {\n            even[i] = val as isize;\n        }\n   \
    \ }\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0606]: casting `&isize` as `isize` is invalid\n  --> /tmp/tmpx90wa0_b.rs:12:23\n\
    \   |\n12 |             even[i] = val as isize;\n   |                       ---^^^^^^^^^\n\
    \   |                       |\n   |                       cannot cast `&isize`\
    \ as `isize`\n   |                       help: dereference the expression: `*val`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0606`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l.iter().cloned().enumerate().filter {\n        (a,\
    \ b) => a % 2 == b\n    }.map {\n        (a, b) => if a % 2 == b { b + 1 } else\
    \ { b }\n    }\n}\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `(`, `.`, `::`, `;`, `?`, `}`, or an operator, found\
    \ `{`\n  --> /tmp/tmpbtmqt4_c.rs:10:42\n   |\n10 |     l.iter().cloned().enumerate().filter\
    \ {\n   |                                          ^ expected one of 7 possible\
    \ tokens\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut sorted_l = l;\n    sorted_l.sort();\n    for i in 1..l.len() {\n   \
    \     if i % 2 == 0 {\n            if i == l[l..].len() - 1 {\n              \
    \  sorted_l[i] = l[i];\n            } else {\n                sorted_l[i] = l[i\
    \ / 2];\n            }\n        } else {\n            sorted_l[i] = l[i - 1];\n\
    \        }\n    }\n    sorted_l\n}\n\nfn main() {\n    let candidate = sort_even;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[isize]` cannot be indexed by `RangeFrom<Vec<isize>>`\n\
    \  --> /tmp/tmpln4w9_rw.rs:13:21\n   |\n13 |             if i == l[l..].len()\
    \ - 1 {\n   |                     ^^^^^^ slice indices are of type `usize` or\
    \ ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented\
    \ for `RangeFrom<Vec<isize>>`\n   = help: the following other types implement\
    \ trait `SliceIndex<T>`:\n             <RangeFrom<usize> as SliceIndex<[T]>>\n\
    \             <RangeFrom<usize> as SliceIndex<str>>\n   = note: required because\
    \ of the requirements on the impl of `Index<RangeFrom<Vec<isize>>>` for `Vec<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().map(|i| {\n        if i % 2 == 0 {\n            *i\n        } else\
    \ {\n            (*i).unwrap()\n        }\n    }).sorted().collect()\n}\n\nfn\
    \ main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unwrap` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmphj20uhim.rs:13:18\n   |\n13 |             (*i).unwrap()\n\
    \   |                  ^^^^^^ method not found in `isize`\n\nerror[E0599]: no\
    \ method named `sorted` found for struct `Map` in the current scope\n  --> /tmp/tmphj20uhim.rs:15:8\n\
    \   |\n15 |     }).sorted().collect()\n   |        ^^^^^^ method not found in\
    \ `Map<std::slice::Iter<'_, isize>, _>`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ // Step 1: Sort l\n    let mut l = l.iter().cloned().sorted();\n    // Step\
    \ 2: For each even index i, replace it with the value at that index\n    for i\
    \ in 0..l.len() {\n        // Step 3: If the original value at i is even, swap\
    \ it with it's next even-indexed value\n        if l[i & 1] % 2 == 0 {\n     \
    \       let x = l[i];\n            let y = l[i + 1];\n            l.splice(i,\
    \ 2);\n            l.push(y);\n            l.push(x);\n        }\n    }\n    l\n\
    }\n\nfn main() {\n    let candidate = sort_even;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `Cloned` in the\
    \ current scope\n  --> /tmp/tmph67m9z8p.rs:10:35\n   |\n10 |     let mut l = l.iter().cloned().sorted();\n\
    \   |                                   ^^^^^^ method not found in `Cloned<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let even = l.iter().filter_map(|x| if x % 2 == 0 { Some(x) } else { None }).collect::<Vec<Option<isize>>>();\n\
    \    let odd = l.iter().filter_map(|x| if x % 2 == 1 { Some(x) } else { None }).collect::<Vec<Option<isize>>>();\n\
    \    even.iter().chain(odd).cloned().collect()\n}\n\nfn main() {\n    let candidate\
    \ = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10,\
    \ 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5, 8, -12,\
    \ 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `Vec<Option<isize>>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmp7fnynnhj.rs:9:81\n\
    \     |\n9    |     let even = l.iter().filter_map(|x| if x % 2 == 0 { Some(x)\
    \ } else { None }).collect::<Vec<Option<isize>>>();\n     |                  \
    \                                                               ^^^^^^^ value\
    \ of type `Vec<Option<isize>>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<Option<isize>>`\n     = help: the trait `FromIterator<T>` is implemented\
    \ for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror[E0277]: a value\
    \ of type `Vec<Option<isize>>` cannot be built from an iterator over elements\
    \ of type `&isize`\n    --> /tmp/tmp7fnynnhj.rs:10:80\n     |\n10   |     let\
    \ odd = l.iter().filter_map(|x| if x % 2 == 1 { Some(x) } else { None }).collect::<Vec<Option<isize>>>();\n\
    \     |                                                                      \
    \          ^^^^^^^ value of type `Vec<Option<isize>>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<Option<isize>>`\n     = help: the trait `FromIterator<T>` is implemented\
    \ for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror[E0271]: type mismatch\
    \ resolving `<Vec<Option<isize>> as IntoIterator>::Item == &Option<isize>`\n \
    \  --> /tmp/tmp7fnynnhj.rs:11:17\n    |\n11  |     even.iter().chain(odd).cloned().collect()\n\
    \    |                 ^^^^^ expected `&Option<isize>`, found enum `Option`\n\
    \    |\n    = note: expected reference `&Option<isize>`\n                    found\
    \ enum `Option<isize>`\nnote: required by a bound in `std::iter::Iterator::chain`\n\
    \nerror[E0599]: the method `cloned` exists for struct `std::iter::Chain<std::slice::Iter<'_,\
    \ Option<isize>>, std::vec::IntoIter<Option<isize>>>`, but its trait bounds were\
    \ not satisfied\n  --> /tmp/tmp7fnynnhj.rs:11:28\n   |\n11 |        even.iter().chain(odd).cloned().collect()\n\
    \   |         "
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.iter().cloned().sort_by_key(|&x| x % 2).collect()\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort_by_key` found for struct `Cloned` in\
    \ the current scope\n --> /tmp/tmpqhbr47wi.rs:9:23\n  |\n9 |     l.iter().cloned().sort_by_key(|&x|\
    \ x % 2).collect()\n  |                       ^^^^^^^^^^^ method not found in\
    \ `Cloned<std::slice::Iter<'_, isize>>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut evens = Vec::with_capacity(l.len() - 1);\n    for idx in 0..l.len()\
    \ - 1 {\n        evens.push(l[idx | 1]);\n    }\n    evens\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[2, 2]`,\n right: `[1, 2, 3]`', /tmp/tmpup46hort.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 101
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = l.to_owned();\n    l.sort_unstable();\n    l\n}\n\nfn main() {\n\
    \    let candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1,\
    \ 2, 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-10, -5, -3, 0, 1, 2, 3, 3, 5, 9, 123]`,\n right: `[-10, 3, -5, 2, -3, 3,\
    \ 5, 0, 9, 1, 123]`', /tmp/tmpv4awh8rk.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976114
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ l.sort_unstable();\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = sort_even;\n    assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2,\
    \ 3]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),\
    \ vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n    assert_eq!(candidate(vec![5,\
    \ 8, -12, 4, 23, 2, 3, 11, 12, -10]), vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmpo41vejz_.rs:9:5\n  |\n8 | fn sort_even(l: Vec<isize>) -> Vec<isize>\
    \ {\n  |              - help: consider changing this to be mutable: `mut l`\n\
    9 |     l.sort_unstable();\n  |     ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976113
- exit_code: 1
  program: "/// This function takes a vector l and returns a vector l' such that\n\
    /// l' is identical to l in the odd indicies, while its values at the even indicies\
    \ are equal\n/// to the values of the even indicies of l, but sorted.\n/// >>>\
    \ sort_even(vec![1, 2, 3])\n/// vec![1, 2, 3]\n/// >>> sort_even(vec![5, 6, 3,\
    \ 4])\n/// vec![3, 6, 5, 4]\nfn sort_even(l: Vec<isize>) -> Vec<isize> {\n   \
    \ let mut l = vec![];\n    for i in l.iter().cloned() {\n        l.push(i);\n\
    \    }\n    let mut even = vec![];\n    for x in l.iter().cloned() {\n       \
    \ if x % 2 == 0 {\n            even.push(x);\n        }\n    }\n    let mut odd\
    \ = vec![];\n    for x in even.iter().cloned() {\n        odd.push(x);\n    }\n\
    \n    for i in 0..odd.len() {\n        let mut pos = i;\n        while pos < odd.len()\
    \ && odd[pos] > odd[pos + 1] {\n            pos += 1;\n        }\n        even.swap(0,\
    \ pos);\n    }\n\n    for i in 0..even.len() {\n        let mut pos = i;\n   \
    \     while pos < even.len() && even[pos] < even[pos + 1] {\n            pos +=\
    \ 1;\n        }\n        odd.swap(0, pos);\n    }\n\n    for i in 0..odd.len()\
    \ {\n        odd.swap(i, i);\n    }\n\n    for i in 0..even.len() {\n        even.swap(i,\
    \ i);\n    }\n\n    even\n}\n\nfn main() {\n    let candidate = sort_even;\n \
    \   assert_eq!(candidate(vec![1, 2, 3]), vec![1, 2, 3]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]), vec![-10, 3, -5, 2, -3, 3, 5, 0, 9, 1,\
    \ 123]);\n    assert_eq!(candidate(vec![5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),\
    \ vec![-12, 8, 3, 4, 5, 2, 12, 11, 23, -10]);\n}\n"
  status: SyntaxError
  stderr: "warning: unused variable: `l`\n --> /tmp/tmp5_rv9s7s.rs:8:14\n  |\n8 |\
    \ fn sort_even(l: Vec<isize>) -> Vec<isize> {\n  |              ^ help: if this\
    \ is intentional, prefix it with an underscore: `_l`\n  |\n  = note: `#[warn(unused_variables)]`\
    \ on by default\n\nerror[E0502]: cannot borrow `l` as mutable because it is also\
    \ borrowed as immutable\n  --> /tmp/tmp5_rv9s7s.rs:11:9\n   |\n10 |     for i\
    \ in l.iter().cloned() {\n   |              -----------------\n   |          \
    \    |\n   |              immutable borrow occurs here\n   |              immutable\
    \ borrow later used here\n11 |         l.push(i);\n   |         ^^^^^^^^^ mutable\
    \ borrow occurs here\n\nerror: aborting due to previous error; 1 warning emitted\n\
    \nFor more information about this error, try `rustc --explain E0502`.\n"
  stdout: ''
  timestamp: 1659976114

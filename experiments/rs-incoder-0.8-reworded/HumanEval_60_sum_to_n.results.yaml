language: rs
name: HumanEval_60_sum_to_n
results:
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).map(|x| x*x).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpq6tcdui0.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 1;\n    }\n\n    let mut result = 0;\n\n\
    \    for i in 1..n {\n        result += i;\n    }\n\n    result\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp_dpsbloc.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut total = 1;\n    for i in 1..n {\n        total += i;\n    }\n\
    \    total\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmp1qpb_kb_.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = 0; // initialize to zero\n    let mut i = 1;\n\n    // sum\
    \ up numbers until we reach n\n    while i <= n {\n        s += i;\n        i\
    \ += 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009063
- exit_code: -1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    1 + sum_to_n(n-1)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660009068
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).filter(|n| n % 2 == 0).sum()\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpkbte01ia.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n    let mut s = 1;\n    for _\
    \ in 0..n {\n        s += 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpdf1b0s6m.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 0;\n    for _ in 0..n {\n        n += 1;\n    }\n    n\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpx1zf0647.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 0;\n    for i in 0..n {\n        result = result + i;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp00f7czdt.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n as isize\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmps_o93uz4.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 1;\n    }\n\n    if n == 1 {\n        return\
    \ 1;\n    }\n\n    if n % 2 == 0 {\n        return n * sum_to_n(n / 2);\n    }\n\
    \n    let mut i = 1;\n    let mut s = 1;\n\n    for _ in 0..n {\n        s = s\
    \ + i;\n        i = i + 1;\n    }\n\n    s * s\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `294`,\n right: `21`', /tmp/tmpz5otgqh7.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut num = 1\n    while num < n {\n        num *= 2;\n    }\n    num\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found keyword `while`\n  --> /tmp/tmp2vrnbs5j.rs:13:20\n\
    \   |\n13 |     let mut num = 1\n   |                    ^ help: add `;` here\n\
    14 |     while num < n {\n   |     ----- unexpected token\n\nerror: aborting due\
    \ to previous error\n\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 1\n    let mut sum = 0isize;\n    while n < n {\n       \
    \ sum += n\n        n *= 2\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found keyword `let`\n  --> /tmp/tmpxogc6ls7.rs:13:18\n\
    \   |\n13 |     let mut n = 1\n   |                  ^ help: add `;` here\n14\
    \ |     let mut sum = 0isize;\n   |     --- unexpected token\n\nerror: expected\
    \ `;`, found `n`\n  --> /tmp/tmpxogc6ls7.rs:16:17\n   |\n16 |         sum += n\n\
    \   |                 ^ help: add `;` here\n17 |         n *= 2\n   |        \
    \ - unexpected token\n\nerror: aborting due to 2 previous errors\n\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum: isize = 0;\n    for i in 1..n {\n        sum += i;\n   \
    \ }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp4x59_2g1.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 1isize;\n    while n < n {\n        n += 1;\n    }\n    n\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `21`', /tmp/tmpm0atbxug.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n    let mut i = 0;\n    while\
    \ i < n {\n        i += 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpli71h804.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        let x = n / 10;\n        n %= 10;\n        n += x;\n\
    \        if n < 10 { return n; }\n    }\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp63mn9yms.rs:15:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n15 |         n %= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmp63mn9yms.rs:16:9\n   |\n12 | fn sum_to_n(n:\
    \ isize) -> isize {\n   |             - help: consider making this binding mutable:\
    \ `mut n`\n...\n16 |         n += x;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut total = 1;\n    while total < n {\n        total += 1;\n    }\n\
    \    total\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp6pob5qly.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqhvhgoj2.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(0, |mut acc, &n| acc + n)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpw4l8e0kx.rs:13:30\n   |\n\
    13 |     (1..n).fold(0, |mut acc, &n| acc + n)\n   |                         \
    \     ^--\n   |                              ||\n   |                        \
    \      |expected due to this\n   |                              expected `isize`,\
    \ found reference\n   |                              help: did you mean `n`: `&isize`\n\
    \   |\n   = note:   expected type `isize`\n           found reference `&_`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum().expect(\"sum overflow\")\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmplwg45bng.rs:13:12\n\
    \   |\n13 |     (1..n).sum().expect(\"sum overflow\")\n   |            ^^^ cannot\
    \ infer type for type parameter `S` declared on the associated function `sum`\n\
    \   |\n   = note: type must be known at this point\nhelp: consider specifying\
    \ the type argument in the method call\n   |\n13 |     (1..n).sum::<S>().expect(\"\
    sum overflow\")\n   |               +++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return n;\n    }\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n    return sum;\n}\n\nfn main() {\n \
    \   let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp1mr4t2m1.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).map(|x| x + 1).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmppioycysc.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n\n    let mut num = 1;\n    for\
    \ i in 1..n {\n        num += i;\n    }\n\n    num\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmp66bxz9uh.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 0;\n    let mut sum = 0;\n    while n > 0 {\n        n -=\
    \ 1;\n        sum += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmppmteg9b8.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).fold((0..isize::max_value).sum::<isize>())\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzpwviham.rs:13:22\n   |\n\
    13 |     (1..=n).fold((0..isize::max_value).sum::<isize>())\n   |            \
    \          ^^^^^^^^^^^^^^^^ expected integer, found fn item\n   |\n   = note:\
    \ expected type `{integer}`\n           found fn item `fn() -> isize {core::num::<impl\
    \ isize>::max_value}`\nhelp: use parentheses to call this function\n   |\n13 |\
    \     (1..=n).fold((0..isize::max_value()).sum::<isize>())\n   |             \
    \                         ++\n\nerror[E0061]: this function takes 2 arguments\
    \ but 1 argument was supplied\n    --> /tmp/tmpzpwviham.rs:13:13\n     |\n13 \
    \  |     (1..=n).fold((0..isize::max_value).sum::<isize>())\n     |          \
    \   ^^^^ ------------------------------------ supplied 1 argument\n     |    \
    \         |\n     |             expected 2 arguments\n     |\nnote: associated\
    \ function defined here\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0061, E0308.\nFor more information about an error,\
    \ try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).map(|i| i * i).sum::<isize>()\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpthlajqne.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut res = 0;\n    for _i in 0..n {\n        res += _i;\n    }\n \
    \   res\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpwmt7ss_b.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n >= 1);\n    debug_assert!(n <= 100);\n\n    // sum_to_n(n)\
    \ = n * (n + 1) / 2\n    let mut sum = 0;\n    for i in 0..n {\n        sum +=\
    \ i;\n    }\n    (sum * n) / 2 + 1\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `46`,\n right: `21`', /tmp/tmpqy3tio3s.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        return 1;\n    }\n\n    if n <= 3 {\n        return\
    \ n;\n    }\n\n    let mut res = 1;\n    for i in 2..n {\n        res *= i;\n\
    \    }\n\n    res\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `120`,\n right: `21`', /tmp/tmpj2pp40f0.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    // Create a mutable buffer to store the partial sum\n    let mut buffer\
    \ = [0u8; n];\n\n    // Fill the buffer with the initial values [1..n]\n    for\
    \ i in 1..n {\n        buffer[n - i - 1] = 0;\n    }\n\n    // For each number\
    \ in the buffer add the number\n    // to the partial sum, using O(1) operations\n\
    \    for &k in buffer {\n        k += k;\n    }\n\n    // Return the partial sum\n\
    \    buffer[0]\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0435]: attempt to use a non-constant value in a constant\n  -->\
    \ /tmp/tmpzw9x5qqe.rs:14:28\n   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |\
    \             - this would need to be a `const`\n13 |     // Create a mutable\
    \ buffer to store the partial sum\n14 |     let mut buffer = [0u8; n];\n   | \
    \                           ^\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0435`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1\n    }\n    if n % 2 == 0 {\n        n\
    \ * (n - 1)/2\n    } else {\n        n * (n + 1)/2\n    }\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `15`,\n right: `21`', /tmp/tmp15pin_3r.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n\n    loop {\n        if n % 2\
    \ == 1 {\n            n -= 1;\n        } else {\n            n /= 2;\n       \
    \     n += 1;\n        }\n\n        if n == 0 {\n            return n;\n     \
    \   }\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpmw1qmx4u.rs:19:13\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n19 |             n -= 1;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmpmw1qmx4u.rs:21:13\n   |\n12\
    \ | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider making\
    \ this binding mutable: `mut n`\n...\n21 |             n /= 2;\n   |         \
    \    ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpmw1qmx4u.rs:22:13\n   |\n12 | fn sum_to_n(n:\
    \ isize) -> isize {\n   |             - help: consider making this binding mutable:\
    \ `mut n`\n...\n22 |             n += 1;\n   |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 3 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum: isize = n - 1;\n    while sum < n {\n        sum += 1;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp2ag69zzq.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 1;\n    for i in 1..n {\n        result *= i;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `120`,\n right: `21`', /tmp/tmpit9eke2c.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 2 {\n        n\n    } else {\n        let mut res = 1;\n     \
    \   for _ in 0..n / 2 {\n            res += 1;\n        }\n        res * 2\n \
    \   }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `21`', /tmp/tmpi5c10llx.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(0, |sum, number| {\n        sum + number;\n    })\n}\n\n\
    fn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpg72jvvr1.rs:13:34\n   |\n\
    13 |       (1..n).fold(0, |sum, number| {\n   |  __________________________________^\n\
    14 | |         sum + number;\n   | |                     - help: remove this semicolon\n\
    15 | |     })\n   | |_____^ expected `isize`, found `()`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    let mut i = 1;\n    let mut s = 1;\n   \
    \ while i < n {\n        if i < n / 2 {\n            i += 1;\n            s +=\
    \ i;\n        } else {\n            s -= i;\n            i += 1;\n        }\n\
    \    }\n    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-6`,\n right: `21`', /tmp/tmpat2_xanz.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n    (n * (n + 1))/2\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        1\n    } else {\n        n * sum_to_n(n - 1)\n \
    \   }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `720`,\n right: `21`', /tmp/tmppdtb1trr.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\"sum_to_n expects a non-negative integer\"\
    );\n    }\n    let mut sum: isize = 0;\n    for i in 1..n {\n        sum += i;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqco0h6se.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        n += 1;\n        if n == 0 {\n            break;\n  \
    \      }\n    }\n    n\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpf1ve901t.rs:14:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n13 |     loop {\n14 |         n += 1;\n\
    \   |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n\n    let mut sum: isize = 0;\n\
    \    for i in 1..n {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n  \
    \  let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp3emaq22d.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n\n    let mut sum: isize = 1;\n\
    \    for i in 1..n {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n  \
    \  let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmpg9pqqqe7.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\"sum_to_n with negative n: {}\", n);\n  \
    \  }\n\n    if n == 0 {\n        return 1;\n    }\n\n    let mut sum = 0;\n  \
    \  for i in 1..n {\n        sum += i;\n    }\n\n    sum\n}\n\nfn main() {\n  \
    \  let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpl29n95hj.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).map(|n| n*2).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp9e9m00_l.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).reduce(|sum, i| sum + i)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxo2t1ghy.rs:13:5\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |                          ----- expected\
    \ `isize` because of return type\n13 |     (1..n).reduce(|sum, i| sum + i)\n \
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found enum `Option`\n\
    \   |\n   = note: expected type `isize`\n              found enum `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    assert!(n == 0 || n == 1);\n\n    if n == 0 {\n        return 1;\n  \
    \  }\n\n    if n <= 9 {\n        return n + sum_to_n(n - 1);\n    }\n\n    let\
    \ mut res = n;\n    let mut sum = 0;\n    while n >= 10 {\n        sum += sum_to_n(n\
    \ - 10);\n        n -= 10;\n    }\n\n    res += sum;\n    res\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmptvbqm9pc.rs:27:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n27 |         n -= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut total = 0;\n    for n in 1..=n {\n        total += n;\n    }\n\
    \    total\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    fn sum_to_n_impl(mut x: isize, mut total: isize) -> isize {\n       \
    \ if x > n {\n            return total;\n        }\n        total += x;\n    \
    \    sum_to_n_impl(x + 1, total)\n    }\n    sum_to_n_impl(1, 0)\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0434]: can't capture dynamic environment in a fn item\n  --> /tmp/tmphno_lnp5.rs:14:16\n\
    \   |\n14 |         if x > n {\n   |                ^\n   |\n   = help: use the\
    \ `|| { ... }` closure form instead\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0434`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\"can't sum_to_n a negative number\")\n  \
    \  }\n\n    if n == 0 {\n        return 1;\n    }\n\n    if n == 1 {\n       \
    \ return 1;\n    }\n\n    let mut sum = 0;\n    for x in 1..n {\n        sum +=\
    \ x;\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `15`,\n right: `21`', /tmp/tmp5xiexdg2.rs:35:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n as isize * (n - 1) / (n - 2)\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp60k5tbt1.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n.checked_add(1, |n| n * 2).unwrap()\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 2 arguments were supplied\n\
    \   --> /tmp/tmp_awndgfe.rs:13:7\n    |\n13  |     n.checked_add(1, |n| n * 2).unwrap()\n\
    \    |       ^^^^^^^^^^^ -  --------- supplied 2 arguments\n    |       |\n  \
    \  |       expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for (1..n).sum() {\n        sum += 1;\n    }\n\
    \    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error: missing `in` in `for` loop\n  --> /tmp/tmpqanusbjf.rs:14:15\n  \
    \ |\n14 |     for (1..n).sum() {\n   |               ^ help: try adding `in` here\n\
    \nerror: expected expression, found `.`\n  --> /tmp/tmpqanusbjf.rs:14:15\n   |\n\
    14 |     for (1..n).sum() {\n   |               ^ expected expression\n\nerror:\
    \ aborting due to 2 previous errors\n\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        0\n    } else {\n        n * (n + 1) / 2\n    }\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(0, |sum, x| sum + x)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpkux9cp8c.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: -1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    1 + sum_to_n(n-1)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660009068
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1\n    }\n    if n % 2 == 1 {\n        return\
    \ n * sum_to_n(n - 1)\n    } else {\n        return n + sum_to_n(n - 2)\n    }\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `21`', /tmp/tmp8ee7xa53.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut num = 1;\n    for _ in 1..n {\n        num += 1;\n    }\n   \
    \ num\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp7prtteyk.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp4aiu8r93.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = 0;\n    while\
    \ n > 0 {\n        sum += 1;\n        n -= 1;\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmptk8zb_9w.rs:19:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n19 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).reduce(|a, b| a + b)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpjpyy7cv0.rs:13:5\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |                          ----- expected\
    \ `isize` because of return type\n13 |     (1..n).reduce(|a, b| a + b)\n   | \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found enum `Option`\n   |\n\
    \   = note: expected type `isize`\n              found enum `Option<isize>`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n >= 1);\n    (1..n).filter(|&i| i % 2).sum::<isize>()\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpdb6v7aa4.rs:14:24\n   |\n\
    14 |     (1..n).filter(|&i| i % 2).sum::<isize>()\n   |                      \
    \  ^^^^^ expected `bool`, found `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 1\n    let mut sum = n\n    while n > 0 {\n        sum =\
    \ sum_to_n(n, sum)\n        n -= 1\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found keyword `let`\n  --> /tmp/tmplmijc4w0.rs:13:18\n\
    \   |\n13 |     let mut n = 1\n   |                  ^ help: add `;` here\n14\
    \ |     let mut sum = n\n   |     --- unexpected token\n\nerror: expected `;`,\
    \ found keyword `while`\n  --> /tmp/tmplmijc4w0.rs:14:20\n   |\n14 |     let mut\
    \ sum = n\n   |                    ^ help: add `;` here\n15 |     while n > 0\
    \ {\n   |     ----- unexpected token\n\nerror: expected `;`, found `n`\n  -->\
    \ /tmp/tmplmijc4w0.rs:16:31\n   |\n16 |         sum = sum_to_n(n, sum)\n   | \
    \                              ^ help: add `;` here\n17 |         n -= 1\n   |\
    \         - unexpected token\n\nerror[E0061]: this function takes 1 argument but\
    \ 2 arguments were supplied\n  --> /tmp/tmplmijc4w0.rs:16:15\n   |\n16 |     \
    \    sum = sum_to_n(n, sum)\n   |               ^^^^^^^^ -  --- supplied 2 arguments\n\
    \   |               |\n   |               expected 1 argument\n   |\nnote: function\
    \ defined here\n  --> /tmp/tmplmijc4w0.rs:12:4\n   |\n12 | fn sum_to_n(n: isize)\
    \ -> isize {\n   |    ^^^^^^^^ --------\n\nerror: aborting due to 4 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n    if n <= 1 {\n        return 1;\n    }\n  \
    \  let mut sum: isize = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n  \
    \  return sum;\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpvjvf9vv0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    // We need to go until n to sum numbers from 1 to n\n    while n > 0\
    \ {\n        n--\n    }\n    n\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpuu0ivmzj.rs:16:5\n\
    \   |\n16 |     }\n   |     ^ expected expression\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n    let mut sum = 0;\n    for\
    \ i in 0..n {\n        sum += i;\n    }\n    return sum;\n}\n\nfn main() {\n \
    \   let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp8x9a0ruf.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut total = 1;\n    let mut i = 1;\n    while i <= n {\n        total\
    \ += i;\n        i += 1;\n    }\n    total\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpbo_gk35r.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = 0; // sum\n    for (i, &elt) in n.iter().enumerate() {\n\
    \        s += i;\n    }\n    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpeckxzgd7.rs:14:24\n   |\n14 |     for (i, &elt) in n.iter().enumerate()\
    \ {\n   |                        ^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    let mut sum = 0;\n    for i in 1..n {\n\
    \        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpl6qqkp9c.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n    use std::cmp::Ordering::*;\n\
    \    use std::cmp::PartialOrd::*;\n\n    let mut sum = 1;\n    let mut result\
    \ = 1;\n\n    while n > 1 {\n        if n < 4 {\n            result += n;\n  \
    \          sum += 1;\n        } else if n == 4 {\n            result += 4;\n \
    \           sum += 4;\n        } else if n == 8 {\n            result += 8;\n\
    \            sum += 8;\n        } else if n == 12 {\n            result += 12;\n\
    \            sum += 12;\n        } else {\n            result += (n - 4) * 6;\n\
    \            sum += (n - 4) * 6;\n        }\n        n = n - 4;\n    }\n    result\
    \ + (n - 1) * sum;\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error: items in traits are not importable\n  --> /tmp/tmpdcvb7sf6.rs:16:9\n\
    \   |\n16 |     use std::cmp::PartialOrd::*;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nwarning: unused import: `std::cmp::Ordering`\n  --> /tmp/tmpdcvb7sf6.rs:13:9\n\
    \   |\n13 |     use std::cmp::Ordering;\n   |         ^^^^^^^^^^^^^^^^^^\n   |\n\
    \   = note: `#[warn(unused_imports)]` on by default\n\nwarning: the item `PartialOrd`\
    \ is imported redundantly\n   --> /tmp/tmpdcvb7sf6.rs:14:9\n    |\n14  |     use\
    \ std::cmp::PartialOrd;\n    |         ^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused\
    \ import: `std::cmp::PartialOrd`\n  --> /tmp/tmpdcvb7sf6.rs:14:9\n   |\n14 | \
    \    use std::cmp::PartialOrd;\n   |         ^^^^^^^^^^^^^^^^^^^^\n\nwarning:\
    \ unused import: `std::cmp::Ordering::*`\n  --> /tmp/tmpdcvb7sf6.rs:15:9\n   |\n\
    15 |     use std::cmp::Ordering::*;\n   |         ^^^^^^^^^^^^^^^^^^^^^\n\nwarning:\
    \ unused import: `std::cmp::PartialOrd::*`\n  --> /tmp/tmpdcvb7sf6.rs:16:9\n \
    \  |\n16 |     use std::cmp::PartialOrd::*;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpdcvb7sf6.rs:12:26\n   |\n12 |\
    \ fn sum_to_n(n: isize) -> isize {\n   |    --------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n...\n40 |     result + (n - 1) * sum;\n\
    \   |                           - help: remove this semicolon\n\nerror: aborting\
    \ due to 2 previous errors; 5 warnings emitted\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    match (n % 3) {\n        0 => 0,\n        1 => 1,\n        _ => 1 + sum_to_n(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `21`', /tmp/tmpaa3yas_f.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::{max, min};\n    use std::mem::transmute;\n\n    let mut\
    \ sum = 0;\n    let mut max = n - 1;\n    let mut min = n as usize;\n    let mut\
    \ i = 1;\n\n    while i <= n {\n        if i == max {\n            sum += i;\n\
    \            max = min;\n        } else {\n            sum += i;\n        }\n\n\
    \        min = (min as usize) - 1;\n\n        i += 1;\n    }\n\n    transmute(&sum)\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: unused imports: `max`, `min`\n  --> /tmp/tmp0vsoqsuc.rs:13:20\n\
    \   |\n13 |     use std::cmp::{max, min};\n   |                    ^^^  ^^^\n\
    \   |\n   = note: `#[warn(unused_imports)]` on by default\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp0vsoqsuc.rs:24:19\n   |\n17 |     let mut max = n - 1;\n\
    \   |                   ----- expected due to this value\n...\n24 |          \
    \   max = min;\n   |                   ^^^ expected `isize`, found `usize`\n\n\
    error: aborting due to previous error; 1 warning emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    iter::repeat(1).take(n).fold(0, |acc, _| acc + 1)\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `iter`\n\
    \  --> /tmp/tmphqr6xq0k.rs:13:5\n   |\n13 |     iter::repeat(1).take(n).fold(0,\
    \ |acc, _| acc + 1)\n   |     ^^^^ use of undeclared crate or module `iter`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s: isize = 0;\n    for i in 1..=n {\n        s += i;\n    }\n\
    \    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    fn sum_to_n_helper(start: isize) -> isize {\n        if start <= 0 {\n\
    \            1\n        } else {\n            (start - 1) * (start + 1)\n    \
    \    }\n    }\n\n    sum_to_n_helper(n + 1)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmppozrbx0g.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n    use std::iter::FromIterator;\n\
    \n    let mut sum = 0;\n    for i in 0..n {\n        sum += i;\n    }\n\n    if\
    \ n < 0 {\n        sum.abs()\n    } else {\n        sum\n    }\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpg28guzh3.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        if n == 0 {\n            break;\n        }\n        n\
    \ -= 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpo3owh3hu.rs:17:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n17 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    // write your code here\n    \n    loop {\n        if n % 2 == 0 {\n\
    \            n /= 2;\n        } else {\n            n += 1;\n        }\n     \
    \   if n == 0 {\n            return n;\n        }\n    }\n}\n\nfn main() {\n \
    \   let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpxb26g67z.rs:17:13\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n17 |             n /= 2;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmpxb26g67z.rs:19:13\n   |\n12\
    \ | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider making\
    \ this binding mutable: `mut n`\n...\n19 |             n += 1;\n   |         \
    \    ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = 0;\n    for i in 1..n {\n        s += i;\n    }\n    s\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp2r530xhm.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n as isize + sum_to_n_1(n as usize - 1)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_to_n_1` in this scope\n  --> /tmp/tmpo5haw889.rs:13:18\n\
    \   |\n13 |     n as isize + sum_to_n_1(n as usize - 1)\n   |                \
    \  ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n >= 1);\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp09x5hy4y.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n\n    if n == 1 {\n        return 1;\n    }\n\n\
    \    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n\n    return\
    \ sum;\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpmosise5t.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp4aiu8r93.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 1isize;\n    while n <= n {\n        *n += 1;\n        n\
    \ += 1;\n    }\n    *n\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmp82tqz62k.rs:15:9\n\
    \   |\n15 |         *n += 1;\n   |         ^^\n\nerror[E0614]: type `isize` cannot\
    \ be dereferenced\n  --> /tmp/tmp82tqz62k.rs:18:5\n   |\n18 |     *n\n   |   \
    \  ^^\n   |\nhelp: parentheses are required to parse this as an expression\n \
    \  |\n14 ~     (while n <= n {\n15 |         *n += 1;\n16 |         n += 1;\n\
    17 ~     })\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n\n    let mut sum = 0;\n\n   \
    \ for _ in 0..n {\n        sum += 1;\n    }\n\n    sum\n}\n\nfn main() {\n   \
    \ let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpm_2nuej3.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = 1;\n    for i in 1..n {\n        s += i;\n    }\n    s\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmp5suvi01e.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 { return 1; }\n    return n*sum_to_n(n - 1);\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `720`,\n right: `21`', /tmp/tmpkp92302c.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for (i, _) in 0..n {\n        if i % 2 == 0 {\n\
    \            sum += i as isize;\n        }\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmphuf4_pgg.rs:14:9\n   |\n\
    14 |     for (i, _) in 0..n {\n   |         ^^^^^^    ---- this expression has\
    \ type `Option<isize>`\n   |         |\n   |         expected `isize`, found tuple\n\
    \   |\n   = note: expected type `isize`\n             found tuple `(_, _)`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).map(|x| x * x).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpe58iqteo.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut x = 0;\n    for _ in 0..n {\n        x += 1;\n    }\n    x\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmplncgredr.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n >= 1);\n    debug_assert!(n > 0);\n\n    if n == 1 {\n\
    \        return 1;\n    }\n    if n % 2 == 1 {\n        return n * sum_to_n(n\
    \ - 1);\n    }\n    return sum_to_n(n - 1) + n * sum_to_n(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n >= 1'', /tmp/tmpag92v_8g.rs:13:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        0\n    } else {\n        (1..n).sum().unwrap_or(0)\n\
    \    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmpgzabshyy.rs:16:16\n\
    \   |\n16 |         (1..n).sum().unwrap_or(0)\n   |                ^^^ cannot\
    \ infer type for type parameter `S` declared on the associated function `sum`\n\
    \   |\n   = note: type must be known at this point\nhelp: consider specifying\
    \ the type argument in the method call\n   |\n16 |         (1..n).sum::<S>().unwrap_or(0)\n\
    \   |                   +++++\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).map(|x| x).sum::<isize>()\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp70hi40kx.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(1, |sum, elt| sum + elt)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmpdeiejigb.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n    return sum;\n}\n\nfn main() {\n \
    \   let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpr0y6fg3q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqhvhgoj2.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = n;\n    while result > 0 {\n        result = result\
    \ / 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp24kn8rn4.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        return 1;\n    }\n\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n\n    return sum;\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpz07v8guf.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        if n == 0 {\n            break;\n        }\n        n\
    \ -= 1;\n    }\n    n + 1\n}\n\nfn main() {\n    let candidate = sum_to_n;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp8wo89_le.rs:17:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n17 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    trace!(\"sum_to_n({})\", n);\n\n    if n < 0 {\n        0\n    } else\
    \ {\n        if n == 0 {\n            1\n        } else {\n            *n * sum_to_n(n\
    \ - 1)\n        }\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error: cannot find macro `trace` in this scope\n  --> /tmp/tmp360n1eib.rs:13:5\n\
    \   |\n13 |     trace!(\"sum_to_n({})\", n);\n   |     ^^^^^\n\nerror[E0614]:\
    \ type `isize` cannot be dereferenced\n  --> /tmp/tmp360n1eib.rs:21:13\n   |\n\
    21 |             *n * sum_to_n(n - 1)\n   |             ^^\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0614`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp4aiu8r93.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    while n > 0 {\n        sum += n;\n        n -=\
    \ 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpeclvn6kn.rs:16:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n16 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum: usize = 0;\n    for i in 1..n {\n        sum += i;\n   \
    \ }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp6mju35z9.rs:15:16\n   |\n\
    15 |         sum += i;\n   |                ^ expected `usize`, found `isize`\n\
    \nerror[E0277]: cannot add-assign `isize` to `usize`\n  --> /tmp/tmp6mju35z9.rs:15:13\n\
    \   |\n15 |         sum += i;\n   |             ^^ no implementation for `usize\
    \ += isize`\n   |\n   = help: the trait `AddAssign<isize>` is not implemented\
    \ for `usize`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n    \
    \         <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n        \
    \     <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n         \
    \    <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and\
    \ 20 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp6mju35z9.rs:17:5\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |                          -----\
    \ expected `isize` because of return type\n...\n17 |     sum\n   |     ^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n17 |     sum.try_into().unwrap()\n\
    \   |        ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for (i, _) in (1..=n).zip(1..=n).zip(1..=n) {\n\
    \        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot multiply `(isize, isize)` by `(isize, isize)`\n  -->\
    \ /tmp/tmpykyuxgwe.rs:15:18\n   |\n15 |         sum += i * i;\n   |          \
    \      - ^ - (isize, isize)\n   |                |\n   |                (isize,\
    \ isize)\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpu3nndx0z.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: -1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n as isize + sum_to_n(n + 1)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660009069
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    (1..n).sum(Ordering::Add)\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no variant or associated item named `Add` found for enum\
    \ `std::cmp::Ordering` in the current scope\n  --> /tmp/tmpmgyby6dk.rs:14:26\n\
    \   |\n14 |     (1..n).sum(Ordering::Add)\n   |                          ^^^ variant\
    \ or associated item not found in `std::cmp::Ordering`\n\nerror[E0061]: this function\
    \ takes 0 arguments but 1 argument was supplied\n    --> /tmp/tmpmgyby6dk.rs:14:12\n\
    \     |\n14   |     (1..n).sum(Ordering::Add)\n     |            ^^^ -------------\
    \ supplied 1 argument\n     |            |\n     |            expected 0 arguments\n\
    \     |\nnote: associated function defined here\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0061, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n    (1..n).reduce(|a, b| a + b)\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpi0om7hxo.rs:14:5\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |                          ----- expected\
    \ `isize` because of return type\n13 |     debug_assert!(n > 0);\n14 |     (1..n).reduce(|a,\
    \ b| a + b)\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found enum\
    \ `Option`\n   |\n   = note: expected type `isize`\n              found enum `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(0, |sum, x| sum + x)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpkux9cp8c.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for (1..n).rev() {\n        sum += *this;\n   \
    \     this = *this.clone() + sum;\n    }\n    *this\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error: missing `in` in `for` loop\n  --> /tmp/tmpr27qprr5.rs:14:15\n  \
    \ |\n14 |     for (1..n).rev() {\n   |               ^ help: try adding `in` here\n\
    \nerror: expected expression, found `.`\n  --> /tmp/tmpr27qprr5.rs:14:15\n   |\n\
    14 |     for (1..n).rev() {\n   |               ^ expected expression\n\nerror:\
    \ aborting due to 2 previous errors\n\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: -1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 0;\n    while n <= n {\n        n = n + 1;\n    }\n    n\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660009069
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n    use std::mem;\n\
    \n    let mut x = 0;\n    let mut y = 1;\n    while n != 0 {\n        let order\
    \ = Ordering::Less;\n        if n & 1 == 1 {\n            order = Ordering::Greater;\n\
    \        }\n        n >>= 1;\n        x += y;\n        y += order;\n    }\n  \
    \  x\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: the item `PartialOrd` is imported redundantly\n   --> /tmp/tmptg7nxs9z.rs:14:9\n\
    \    |\n14  |     use std::cmp::PartialOrd;\n    |         ^^^^^^^^^^^^^^^^^^^^\n\
    \    |\n    = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused\
    \ import: `std::cmp::PartialOrd`\n  --> /tmp/tmptg7nxs9z.rs:14:9\n   |\n14 | \
    \    use std::cmp::PartialOrd;\n   |         ^^^^^^^^^^^^^^^^^^^^\n\nwarning:\
    \ unused import: `std::mem`\n  --> /tmp/tmptg7nxs9z.rs:15:9\n   |\n15 |     use\
    \ std::mem;\n   |         ^^^^^^^^\n\nerror[E0277]: cannot add-assign `std::cmp::Ordering`\
    \ to `{integer}`\n  --> /tmp/tmptg7nxs9z.rs:26:11\n   |\n26 |         y += order;\n\
    \   |           ^^ no implementation for `{integer} += std::cmp::Ordering`\n \
    \  |\n   = help: the trait `AddAssign<std::cmp::Ordering>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n    \
    \         <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n        \
    \     <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n         \
    \    <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and\
    \ 20 others\n\nerror: aborting due to previous error; 3 warnings emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    (1..n).fold(0, |acc, _| acc + acc)\n}\n\n\
    fn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpklopja0j.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        0\n    } else {\n        ((1..n).sum() + 1) - n\n\
    \    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0283]: type annotations needed\n    --> /tmp/tmplnzv_xfp.rs:16:17\n\
    \     |\n16   |         ((1..n).sum() + 1) - n\n     |                 ^^^ cannot\
    \ infer type for type parameter `S` declared on the associated function `sum`\n\
    \     |\n     = note: cannot satisfy `_: Sum<isize>`\nnote: required by a bound\
    \ in `std::iter::Iterator::sum`\nhelp: consider specifying the type argument in\
    \ the method call\n     |\n16   |         ((1..n).sum::<S>() + 1) - n\n     |\
    \                    +++++\nhelp: consider specifying the type argument in the\
    \ function call\n     |\n16   |         ((1..n).sum::<S>() + 1) - n\n     |  \
    \                  +++++\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0283`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 { 1 }\n    else { n * sum_to_n(n - 1) + 1 }\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1237`,\n right: `21`', /tmp/tmpwdujiaqg.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (n * (n - 1) as isize).check()\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `check` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp0etfncrb.rs:13:28\n   |\n13 |     (n * (n - 1) as isize).check()\n\
    \   |                            ^^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut num = 1;\n    while num < n {\n        num += 1;\n    }\n   \
    \ num\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpgha90r37.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 0;\n    for _ in 0..n {\n        n += 1;\n    }\n    n\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpx1zf0647.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n    let mut sum = 0;\n    for i in 1..=n {\n \
    \       sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in (1..=n) {\n        sum += i;\n    }\n\
    \    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009064
- exit_code: -1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        return 1;\n    }\n\n    let mut res = 1;\n    let\
    \ mut x = 1;\n\n    while x != n {\n        res += x;\n        x -= 1;\n    }\n\
    \n    res\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660009069
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        n\n    } else {\n        (1..n).sum() + n\n    }\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0283]: type annotations needed\n    --> /tmp/tmp8n6kg7vb.rs:16:16\n\
    \     |\n16   |         (1..n).sum() + n\n     |                ^^^ cannot infer\
    \ type for type parameter `S` declared on the associated function `sum`\n    \
    \ |\n     = note: cannot satisfy `_: Sum<isize>`\nnote: required by a bound in\
    \ `std::iter::Iterator::sum`\nhelp: consider specifying the type argument in the\
    \ method call\n     |\n16   |         (1..n).sum::<S>() + n\n     |          \
    \         +++++\nhelp: consider specifying the type argument in the function call\n\
    \     |\n16   |         (1..n).sum::<S>() + n\n     |                   +++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0283`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpu3nndx0z.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 0;\n    while n > n {\n        n += 1;\n    }\n    n\n}\n\
    \nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp0ut8aslp.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    let mut last_element = 0;\n    for _ in 0..n {\n\
    \        sum += last_element;\n        last_element += 1;\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp0f44esgj.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        if n <= 1 {\n            return n;\n        }\n     \
    \   n -= 1;\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp6a2yuc1b.rs:17:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n17 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for (i, _) in 0..n {\n        if i == 0 {\n   \
    \         sum += i;\n        } else {\n            sum += i * i;\n        }\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptvdr2c4r.rs:14:9\n   |\n\
    14 |     for (i, _) in 0..n {\n   |         ^^^^^^    ---- this expression has\
    \ type `Option<isize>`\n   |         |\n   |         expected `isize`, found tuple\n\
    \   |\n   = note: expected type `isize`\n             found tuple `(_, _)`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 1;\n    for _ in 0..n {\n        result *= 2;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmphcov7485.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut num: usize = 1;\n    while num < n {\n        num <<= 1;\n  \
    \  }\n    num\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpktxv3uj1.rs:14:17\n   |\n\
    14 |     while num < n {\n   |                 ^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n14 |     while num < n.try_into().unwrap() {\n   |\
    \                  ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpktxv3uj1.rs:17:5\n   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |\
    \                          ----- expected `isize` because of return type\n...\n\
    17 |     num\n   |     ^^^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n17 |     num.try_into().unwrap()\n   |        ++++++++++++++++++++\n\n\
    error: aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut res = 1;\n    for\
    \ i in 1..=n {\n        res += i;\n    }\n\n    res\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpvhzx8za5.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n >= 0);\n    let mut sum = 0;\n    for _ in 0..n {\n \
    \       sum += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp59h0plvi.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpu3nndx0z.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (n * (n + 1)) / 2\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009002
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqhvhgoj2.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering::{Greater, Less};\n\n    let mut ns: Vec<_> =\
    \ (1..n).collect();\n    ns.sort();\n    ns.rev();\n\n    let mut sum = 0;\n \
    \   for &n in &ns {\n        sum += n;\n    }\n\n    sum\n}\n\nfn main() {\n \
    \   let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "warning: unused imports: `Greater`, `Less`\n  --> /tmp/tmpqxarndbl.rs:13:30\n\
    \   |\n13 |     use std::cmp::Ordering::{Greater, Less};\n   |               \
    \               ^^^^^^^  ^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by\
    \ default\n\nerror[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpqxarndbl.rs:17:8\n\
    \    |\n17  |       ns.rev();\n    |          ^^^ `Vec<isize>` is not an iterator\n\
    \    |\n    = note: the following trait bounds were not satisfied:\n         \
    \   `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>:\
    \ Iterator`\n            `[isize]: Iterator`\n            which is required by\
    \ `&mut [isize]: Iterator`\n\nerror: aborting due to previous error; 1 warning\
    \ emitted\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 1;\n    while sum < n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp2ilbphrp.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _i in 0..n {\n        sum += i;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `i` in this scope\n  --> /tmp/tmpudlli3xe.rs:15:16\n\
    \   |\n15 |         sum += i;\n   |                ^ help: a local variable with\
    \ a similar name exists: `_i`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).filter(|&i| i % 2 == 0).sum()\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp0hmhnvri.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        1\n    } else {\n        sum_to_n(n - 1) + n\n \
    \   }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009002
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        0\n    } else {\n        1 + n * sum_to_n(n - 1)\n\
    \    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1237`,\n right: `21`', /tmp/tmp77m04b9h.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    use std::cmp::Ordering::*;\n    \n    let\
    \ mut sum = 0;\n    let mut ordering = Greater;\n    while n > 0 {\n        match\
    \ n & 1 {\n            0 => sum += ordering,\n            _ => sum += Greater,\n\
    \        }\n        n >>= 1;\n        ordering = ordering.reverse();\n    }\n\
    \    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: unused import: `std::cmp::Ordering`\n  --> /tmp/tmp858r7ite.rs:13:9\n\
    \   |\n13 |     use std::cmp::Ordering;\n   |         ^^^^^^^^^^^^^^^^^^\n   |\n\
    \   = note: `#[warn(unused_imports)]` on by default\n\nerror[E0277]: cannot add-assign\
    \ `std::cmp::Ordering` to `{integer}`\n  --> /tmp/tmp858r7ite.rs:20:22\n   |\n\
    20 |             0 => sum += ordering,\n   |                      ^^ no implementation\
    \ for `{integer} += std::cmp::Ordering`\n   |\n   = help: the trait `AddAssign<std::cmp::Ordering>`\
    \ is not implemented for `{integer}`\n   = help: the following other types implement\
    \ trait `AddAssign<Rhs>`:\n             <f32 as AddAssign<&f32>>\n           \
    \  <f32 as AddAssign>\n             <f64 as AddAssign<&f64>>\n             <f64\
    \ as AddAssign>\n             <i128 as AddAssign<&i128>>\n             <i128 as\
    \ AddAssign>\n             <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n\
    \           and 20 others\n\nerror[E0277]: cannot add-assign `std::cmp::Ordering`\
    \ to `{integer}`\n  --> /tmp/tmp858r7ite.rs:21:22\n   |\n21 |             _ =>\
    \ sum += Greater,\n   |                      ^^ no implementation for `{integer}\
    \ += std::cmp::Ordering`\n   |\n   = help: the trait `AddAssign<std::cmp::Ordering>`\
    \ is not implemented for `{integer}`\n   = help: the following other types implement\
    \ trait `AddAssign<Rhs>`:\n             <f32 as AddAssign<&f32>>\n           \
    \  <f32 as AddAssign>\n             <f64 as AddAssign<&f64>>\n             <f64\
    \ as AddAssign>\n             <i128 as AddAssign<&i128>>\n             <i128 as\
    \ AddAssign>\n             <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n\
    \           and 20 others\n\nerror: aborting due to 2 previous errors; 1 warning\
    \ emitted\n\nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n + (n % 2 == 0) ? 0 : 1 + sum_to_n(n / 2)\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `0`\n\
    \  --> /tmp/tmp8htomiy8.rs:13:24\n   |\n13 |     n + (n % 2 == 0) ? 0 : 1 + sum_to_n(n\
    \ / 2)\n   |                        ^ expected one of `.`, `;`, `?`, `}`, or an\
    \ operator\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).reduce(|a, b| a + b)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxcmstgu0.rs:13:5\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |                          ----- expected\
    \ `isize` because of return type\n13 |     (1..=n).reduce(|a, b| a + b)\n   |\
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found enum `Option`\n   |\n\
    \   = note: expected type `isize`\n              found enum `Option<isize>`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 { return 0; }\n    let mut sum = 0;\n    for i in 0..n {\n\
    \        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpj6oi2hl2.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n    (1..n).filter(|&x| x > 0).sum()\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpedq745pm.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 0;\n    loop {\n        if n >= n {\n            break;\n\
    \        }\n        n += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpdwpwfaid.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1\n    }\n    sum_to_n(n-1) + n\n}\n\nfn\
    \ main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmppxs8xtk_.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n    if n == 1 {\n        return 1;\n    }\n  \
    \  let mut s = 1;\n    for i in 1..n {\n        s *= i;\n    }\n    s /= n;\n\
    \    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `20`,\n right: `21`', /tmp/tmpa4klew8e.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp4aiu8r93.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    // Optimization for `n < 5`: use the naive algorithm.\n    if n < 5 {\n\
    \        let mut sum = 0;\n        for _ in 0..n-1 {\n            sum += 1;\n\
    \        }\n        return sum;\n    }\n\n    // Optimization for `n < 10`: use\
    \ the naive algorithm.\n    if n < 10 {\n        let mut sum = 0;\n        for\
    \ _ in 0..n-1 {\n            sum += 1;\n        }\n        return sum;\n    }\n\
    \n    // Optimization for `n < 50`: use the naive algorithm.\n    if n < 50 {\n\
    \        let mut sum = 1;\n        for _ in 1..n-2 {\n            sum += 1;\n\
    \        }\n        return sum;\n    }\n\n    // Optimization for `n < 1000`:\
    \ use the naive algorithm.\n    if n < 1000 {\n        let mut sum = 1;\n    \
    \    for _ in 1..n-2 {\n            sum += 1;\n        }\n        return sum;\n\
    \    }\n\n    // Optimization for `n < 1000000`: use the naive algorithm.\n  \
    \  if n < 1000000 {\n        let mut sum = 1;\n        for _ in 1..n-2 {\n   \
    \         sum += 1;\n        }\n        return sum;\n    }\n\n    // Optimization\
    \ for `n < 1000000000`: use the naive algorithm.\n    if n < 1000000000 {\n  \
    \      let mut sum = 1;\n        for _ in 1..n-2 {\n            sum += 1;\n  \
    \      }\n        return sum;\n    }\n\n    // Optimization for `n < 1000000000000`:\
    \ use the naive algorithm.\n    if n < 1000000000000 {\n        let mut sum =\
    \ 1;\n        for _ in 1..n-2 {\n            sum += 1;\n        }\n        return\
    \ sum;\n    }\n\n    // Optimization for `n < 100000000000000`: use the naive\
    \ algorithm.\n    if n < 100000000000000 {\n        let mut sum = 1;\n       \
    \ for _ in 1..n-2 {\n            sum += 1;\n        }\n        return sum;\n \
    \   }\n\n    // Optimization for `n < 10000000000000000`: use the naive algorithm.\n\
    \    if n < 10000000000000000 {\n        let mut sum = 1;\n        for _ in 1..n-2\
    \ {\n            sum += 1;\n        }\n        return sum;\n    }\n\n    // Optimization\
    \ for `n < 100000000000000000`: use the naive algorithm.\n    if n < 100000000000000000\
    \ {\n        let mut sum = 1;\n        for _ in 1..n-2 {\n            sum += 1;\n\
    \        }\n        return sum;\n    }\n\n    // Optimization for `n < 1000000000000000000`:\
    \ use the naive algorithm.\n    if n < 1000000000000000000 {\n        let mut\
    \ sum = 1;\n        for _ in 1..n-2 {\n            sum += 1;\n        }\n    \
    \    return sum;\n    }\n\n    // The optimal solution.\n    let mut sum = 0;\n\
    \    for i in 1..n-2 {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpslym4c52.rs:122:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\"sum_to_n takes an argument >= 0.\");\n \
    \   }\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n \
    \   sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpdmm0d8ec.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n >= 0);\n    let mut sum = 0;\n    let mut limit = -2;\n\
    \    while limit < n {\n        sum += limit;\n        limit += 1;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-3`,\n right: `1`', /tmp/tmpceecjm36.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in (1..n).rev() {\n        sum += i;\n  \
    \  }\n    return sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpsh65c2p7.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp4aiu8r93.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).filter(|x| x % 2 != 0).sum()\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpao5it6hh.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return\
    \ 1;\n    }\n    let mut sum_ = 0;\n    for i in 1..=n {\n        sum_ += i;\n\
    \    }\n    return sum_;\n}\n\nfn main() {\n    let candidate = sum_to_n;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut acc: isize = 1;\n    for i in 1..n {\n        acc += i;\n   \
    \ }\n    acc\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmpgtslxmhd.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 { 1 } else { n * sum_to_n(n - 1) }\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `720`,\n right: `21`', /tmp/tmpugj66nav.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp01gu19c3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009063
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1\n    }\n    return n + sum_to_n(n - 1)\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpxsd3_ell.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n    return sum;\n}\n\nfn main() {\n \
    \   let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpwukenkeh.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        return 1;\n    }\n    let mut acc = 0;\n    for\
    \ i in 1..n {\n        acc += i;\n    }\n    acc\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `15`,\n right: `21`', /tmp/tmpnmuyer4i.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    use std::cmp::Ordering::*;\n    use std::cmp::PartialOrd;\n\
    \n    if n < 0 {\n        panic!(\"sum_to_n requires a positive number.\");\n\
    \    }\n\n    if n == 1 {\n        return 1;\n    }\n\n    fn f(i: isize) -> isize\
    \ {\n        if i == 1 {\n            return i;\n        }\n        if i == n\
    \ {\n            return i;\n        }\n        if i <= n {\n            return\
    \ f(i + 1) - f(i);\n        }\n        return i;\n    }\n\n    if n < 32 {\n \
    \       // 32 case can be optimized away by compiler\n        let result: isize\
    \ = f(n);\n        if Ordering::Greater == PartialOrd::partial_cmp(&result, &n,\
    \ Ordering::Greater) {\n            result\n        } else {\n            n\n\
    \        }\n    } else {\n        let mut f = f(n);\n        let mut sum = f\n\
    \            .checked_mul(Ordering::Greater)\n            .expect(\"sum overflow\"\
    );\n        for _ in 1..n {\n            f = f.checked_add(1).expect(\"sum overflow\"\
    );\n            sum += f;\n        }\n        sum\n    }\n}\n\nfn main() {\n \
    \   let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0434]: can't capture dynamic environment in a fn item\n  --> /tmp/tmpm7_95xxq.rs:29:17\n\
    \   |\n29 |         if i == n {\n   |                 ^\n   |\n   = help: use\
    \ the `|| { ... }` closure form instead\n\nerror[E0434]: can't capture dynamic\
    \ environment in a fn item\n  --> /tmp/tmpm7_95xxq.rs:32:17\n   |\n32 |      \
    \   if i <= n {\n   |                 ^\n   |\n   = help: use the `|| { ... }`\
    \ closure form instead\n\nwarning: unused import: `std::cmp::Ordering::*`\n  -->\
    \ /tmp/tmpm7_95xxq.rs:14:9\n   |\n14 |     use std::cmp::Ordering::*;\n   |  \
    \       ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by\
    \ default\n\nwarning: the item `PartialOrd` is imported redundantly\n   --> /tmp/tmpm7_95xxq.rs:15:9\n\
    \    |\n15  |     use std::cmp::PartialOrd;\n    |         ^^^^^^^^^^^^^^^^^^^^\n\
    \nerror[E0061]: this function takes 2 arguments but 3 arguments were supplied\n\
    \    --> /tmp/tmpm7_95xxq.rs:41:33\n     |\n41   |         if Ordering::Greater\
    \ == PartialOrd::partial_cmp(&result, &n, Ordering::Greater) {\n     |       \
    \                          ^^^^^^^^^^^^^^^^^^^^^^^ -------  --  -----------------\
    \ supplied 3 arguments\n     |                                 |\n     |     \
    \                            expected 2 arguments\n     |\nnote: associated function\
    \ defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpm7_95xxq.rs:41:33\n\
    \   |\n41 |         if Ordering::Greater == PartialOrd::partial_cmp(&result, &n,\
    \ Ordering::Greater) {\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected enum `std::cmp::Ordering`, found enum `Option`\n   |\n   = note: expected\
    \ enum `std::cmp::Ordering`\n              found enum `Option<std::cmp::Ordering>`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpm7_95xxq.rs:49:26\n   |\n49 |\
    \             .checked_mul(Ordering::Greater)\n   |                          ^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found enum `std::cmp::Ordering`\n\nerror: aborting due to\
    \ 5 previous errors; 2 warnings emitted\n\nSome errors have detailed explanations:\
    \ E0061, E0308, E0434.\nFor more information about "
  stdout: ''
  timestamp: 1660009064
- exit_code: 0
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum: isize = 0;\n\n    for i in 1..=n {\n        sum += i;\n\
    \    }\n\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum().unwrap()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmpa71nz316.rs:13:12\n\
    \   |\n13 |     (1..n).sum().unwrap()\n   |            ^^^ cannot infer type for\
    \ type parameter `S` declared on the associated function `sum`\n   |\n   = note:\
    \ type must be known at this point\nhelp: consider specifying the type argument\
    \ in the method call\n   |\n13 |     (1..n).sum::<S>().unwrap()\n   |        \
    \       +++++\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut total = 0;\n    let mut last_num = 1;\n    while last_num < n\
    \ {\n        total += last_num;\n        last_num *= 2;\n    }\n    total\n}\n\
    \nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp1bigbaps.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        return 0;\n    }\n    let mut i = 0;\n    let mut\
    \ sum: isize = 0;\n    while i < n {\n        sum += i;\n        i += 1;\n   \
    \ }\n    return sum;\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpzymy1jhk.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp423d8n16.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < n {\n        sum\
    \ += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpn9hg8d3g.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n >= 1);\n    debug_assert!(n <= std::i::MAX);\n    let\
    \ mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n    sum\n}\n\n\
    fn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: could not find `i` in `std`\n  --> /tmp/tmp3nvvw39r.rs:14:29\n\
    \   |\n14 |     debug_assert!(n <= std::i::MAX);\n   |                       \
    \      ^ could not find `i` in `std`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for (i, _) in 1..n {\n        sum += i;\n    }\n\
    \    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmppybx8x8d.rs:14:9\n   |\n\
    14 |     for (i, _) in 1..n {\n   |         ^^^^^^    ---- this expression has\
    \ type `Option<isize>`\n   |         |\n   |         expected `isize`, found tuple\n\
    \   |\n   = note: expected type `isize`\n             found tuple `(_, _)`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).fold(0, |acc, &x| acc + x)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpolckyhlz.rs:13:27\n   |\n\
    13 |     (1..=n).fold(0, |acc, &x| acc + x)\n   |                           ^--\n\
    \   |                           ||\n   |                           |expected due\
    \ to this\n   |                           expected `isize`, found reference\n\
    \   |                           help: did you mean `x`: `&isize`\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n >= 1);\n    let mut sum = 0;\n    for _ in 0..n {\n \
    \       sum += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpoxbzn09x.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 1
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum(|x| x)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 0 arguments but 1 argument was supplied\n\
    \    --> /tmp/tmpiqhc1wc_.rs:13:12\n     |\n13   |     (1..n).sum(|x| x)\n   \
    \  |            ^^^ ----- supplied 1 argument\n     |            |\n     |   \
    \         expected 0 arguments\n     |\nnote: associated function defined here\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660009064
- exit_code: 101
  program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpp0iczj2c.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660009018

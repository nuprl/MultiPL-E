language: rs
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 1;\n\
    \n    while n != 0 {\n        let tmp = a;\n        a = b;\n        b = tmp +\
    \ b;\n        n -= 1;\n    }\n\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpna6xw823.rs:20:9\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n20 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n;\n    }\n\n    let mut sum = 0;\n    let mut i = 1;\n    let mut j = 2;\n\n\
    \    while i <= n {\n        while j != i * i {\n            j = j + i;\n    \
    \    }\n        i += 1;\n        sum += j;\n    }\n    return sum;\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmptrq7_10b.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // Fibonacci numbers and prime numbers\
    \ are related,\n    // so return n-th number that is a Fibonacci number and it's\
    \ also prime.\n    if n <= 1 { return n; }\n    \n    // Calculate Fibonacci number\n\
    \    let mut a = 1;\n    let mut b = 1;\n    for i in 0..(n-1) { \n        if\
    \ i % 2 == 1 {\n            a = b;\n        } else {\n            b = a+b;\n \
    \       }\n    }\n    return a;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp5n3tz5qb.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 3;\n    let mut b = 1;\n\
    \    loop {\n        i += 1;\n        \n        let (mut a, mut b) = (foldr((a,\
    \ b), a, b), f(a) + f(b));\n        \n        if b % a == 0 { \n            return\
    \ i; \n        }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n  \
    \  assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `i` in this scope\n  --> /tmp/tmpkcfgiqv_.rs:16:9\n\
    \   |\n16 |         i += 1;\n   |         ^ help: a local variable with a similar\
    \ name exists: `a`\n\nerror[E0425]: cannot find function `foldr` in this scope\n\
    \  --> /tmp/tmpkcfgiqv_.rs:18:31\n   |\n18 |         let (mut a, mut b) = (foldr((a,\
    \ b), a, b), f(a) + f(b));\n   |                               ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `f` in this scope\n  -->\
    \ /tmp/tmpkcfgiqv_.rs:18:52\n   |\n18 |         let (mut a, mut b) = (foldr((a,\
    \ b), a, b), f(a) + f(b));\n   |                                             \
    \       ^ help: a local variable with a similar name exists: `a`\n\nerror[E0425]:\
    \ cannot find function `f` in this scope\n  --> /tmp/tmpkcfgiqv_.rs:18:59\n  \
    \ |\n18 |         let (mut a, mut b) = (foldr((a, b), a, b), f(a) + f(b));\n \
    \  |                                                           ^ help: a local\
    \ variable with a similar name exists: `a`\n\nerror[E0425]: cannot find value\
    \ `i` in this scope\n  --> /tmp/tmpkcfgiqv_.rs:21:20\n   |\n21 |             return\
    \ i; \n   |                    ^ help: a local variable with a similar name exists:\
    \ `a`\n\nerror: aborting due to 5 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // Check upper bound for Fibonacci\
    \ number\n    if n <= 2 {\n        return n;\n    }\n    \n    // Generate Fibonacci\
    \ numbers and check whether they are prime.\n    let mut fib_vec: [usize; 2] =\
    \ [0, 1];\n    fib_vec[0] = fib_vec[1] = 1;\n    for i in 2..n {\n        let\
    \ mut fib_num = fib_vec[i - 1] + fib_vec[i];\n        if fib_num % 2 == 0 {\n\
    \            return fib_num;\n        }\n        fib_vec[i] = fib_num;\n    }\n\
    \    \n    return n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65rrxlxa.rs:20:18\n   |\n\
    20 |     fib_vec[0] = fib_vec[1] = 1;\n   |     ----------   ^^^^^^^^^^^^^^ expected\
    \ `usize`, found `()`\n   |     |\n   |     expected due to the type of this binding\n\
    \nerror[E0277]: the type `[usize]` cannot be indexed by `isize`\n  --> /tmp/tmp65rrxlxa.rs:22:27\n\
    \   |\n22 |         let mut fib_num = fib_vec[i - 1] + fib_vec[i];\n   |     \
    \                      ^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges\
    \ of `usize`\n   |\n   = help: the trait `SliceIndex<[usize]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `[usize]`\n\nerror[E0277]: the type `[usize]` cannot be indexed by `isize`\n\
    \  --> /tmp/tmp65rrxlxa.rs:22:44\n   |\n22 |         let mut fib_num = fib_vec[i\
    \ - 1] + fib_vec[i];\n   |                                            ^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[usize]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `[usize]`\n\nerror[E0277]:\
    \ the type `[usize]` cannot be indexed by `isize`\n  --> /tmp/tmp65rrxlxa.rs:26:9\n\
    \   |\n26 |         fib_vec[i] = fib_num;\n   |         ^^^^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[usize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[usize]`\n\nerror: aborting due to 4 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 { 1 }\n    else if n ==\
    \ 1 { 2 }\n    else { prime_fib(n - 1) + prime_fib(n - 2) }\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `13`', /tmp/tmpyv4v8ndw.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut x = 1;\n    let mut y = 1;\n\
    \    for i in 2..n+1 {\n        if ((x * y) % i == 0) {\n            x = i;\n\
    \        } else {\n            y = i;\n        }\n    }\n    x\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmptr8m5sql.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: [isize; MAX_N] = [0,\
    \ 0];\n\n    for i in 1..n {\n        if fib[i] == 0 {\n            fib[i] = i;\n\
    \            if i % 2 == 0 {\n                fib[i] = fib[i] + 1;\n         \
    \   }\n        }\n    }\n\n    fib[n]\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `MAX_N` in this scope\n  --> /tmp/tmpnz1l1ul7.rs:13:26\n\
    \   |\n13 |     let mut fib: [isize; MAX_N] = [0, 0];\n   |                  \
    \        ^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n\
    \    }\n\n    if n == 1 {\n        return 1;\n    }\n\n    let mut fibs = Vec::with_capacity(n\
    \ - 1);\n    fibs.push(1);\n    fibs.push(2);\n    for i in 2..(n - 1) {\n   \
    \     fibs.push((fibs[i - 1] + fibs[i - 2]) % i);\n    }\n\n    fibs[n - 1]\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzs3lcfyt.rs:21:39\n   |\n\
    21 |     let mut fibs = Vec::with_capacity(n - 1);\n   |                     \
    \                  ^^^^^ expected `usize`, found `isize`\n   |\nhelp: you can\
    \ convert an `isize` to a `usize` and panic if the converted value doesn't fit\n\
    \   |\n21 |     let mut fibs = Vec::with_capacity((n - 1).try_into().unwrap());\n\
    \   |                                       +     +++++++++++++++++++++\n\nerror[E0277]:\
    \ the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpzs3lcfyt.rs:25:20\n\
    \   |\n25 |         fibs.push((fibs[i - 1] + fibs[i - 2]) % i);\n   |        \
    \            ^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpzs3lcfyt.rs:25:34\n\
    \   |\n25 |         fibs.push((fibs[i - 1] + fibs[i - 2]) % i);\n   |        \
    \                          ^^^^^^^^^^^ slice indices are of type `usize` or ranges\
    \ of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed\
    \ by `isize`\n  --> /tmp/tmpzs3lcfyt.rs:28:5\n   |\n28 |     fibs[n - 1]\n   |\
    \     ^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n\
    \   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `ru"
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    use num_bigint::BigInt;\n    use\
    \ num_bigint::Sign;\n\n    let mut prime_fib_cache = [0, 2];\n\n    prime_fib_cache.push((BigInt::new_positive(2),\
    \ Sign::Positive));\n\n    for i in 2..(n - 1) {\n        let mut current = prime_fib_cache\n\
    \            .iter()\n            .cloned()\n            .find(|&(k, &v)| k <=\
    \ i);\n\n        if current == Some(prime_fib_cache.len() - 1) {\n           \
    \ break;\n        }\n\n        if current\n            .1\n            .mod_exp(&(BigInt::from_uint(i).mod_exp(&(BigInt::from_uint(i\
    \ - 1)))), &(current))\n            .unwrap_or(&0)\n            != &0\n      \
    \  {\n            break;\n        }\n\n        prime_fib_cache.push((current\n\
    \            .1\n            .mod_exp(&(BigInt::from_uint(i).mod_exp(&(BigInt::from_uint(i\
    \ - 1)))), &(current))\n            .unwrap_or(&0), current\n            .1\n\
    \            .mod_exp(&(BigInt::from_uint(i).mod_exp(&(BigInt::from_uint(i - 1)))),\
    \ &(current))\n            .unwrap_or(&0))\n    }\n\n    prime_fib_cache\n   \
    \     .iter()\n        .cloned()\n        .filter(|&(k, _)| k.is_positive())\n\
    \        .next()\n        .unwrap()\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmpe8f9qoej.rs:39:29\n\
    \   |\n20 |     for i in 2..(n - 1) {\n   |                         - closing\
    \ delimiter possibly meant for this\n...\n39 |         prime_fib_cache.push((current\n\
    \   |                             ^ unclosed delimiter\n...\n46 |     }\n   |\
    \     ^ mismatched closing delimiter\n\nerror[E0432]: unresolved import `num_bigint`\n\
    \  --> /tmp/tmpe8f9qoej.rs:13:9\n   |\n13 |     use num_bigint::BigInt;\n   |\
    \         ^^^^^^^^^^ maybe a missing crate `num_bigint`?\n\nerror[E0432]: unresolved\
    \ import `num_bigint`\n  --> /tmp/tmpe8f9qoej.rs:14:9\n   |\n14 |     use num_bigint::Sign;\n\
    \   |         ^^^^^^^^^^ maybe a missing crate `num_bigint`?\n\nerror[E0599]:\
    \ no method named `push` found for array `[{integer}; 2]` in the current scope\n\
    \  --> /tmp/tmpe8f9qoej.rs:18:21\n   |\n18 |     prime_fib_cache.push((BigInt::new_positive(2),\
    \ Sign::Positive));\n   |                     ^^^^ method not found in `[{integer};\
    \ 2]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpe8f9qoej.rs:24:21\n   |\n\
    24 |             .find(|&(k, &v)| k <= i);\n   |                     ^^^^^^-\n\
    \   |                     |     |\n   |                     |     expected due\
    \ to this\n   |                     expected integer, found tuple\n   |\n   =\
    \ note: expected type `{integer}`\n             found tuple `(_, _)`\n\nerror[E0609]:\
    \ no field `1` on type `Option<usize>`\n  --> /tmp/tmpe8f9qoej.rs:31:14\n   |\n\
    31 |             .1\n   |              ^\n\nerror[E0599]: no method named `push`\
    \ found for array `[usize; 2]` in the current scope\n  --> /tmp/tmpe8f9qoej.rs:39:25\n\
    \   |\n39 |         prime_fib_cache.push((current\n   |                      \
    \   ^^^^ method not found in `[usize; 2]`\n\nerror[E0609]: no field `1` on type\
    \ `Option<usize>`\n  --> /tmp/tmpe8f9qoej.rs:40:14\n   |\n40 |             .1\n\
    \   |              ^\n\nerror[E0609]: no field `1` on type `Option<usize>`\n \
    \ --> /tmp/tmpe8f9qoej.rs:43:14\n   |\n43 |             .1\n   |             \
    \ ^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpe8f9qoej.rs:51:19\n   |\n\
    51 |         .filter(|&(k, _)| k.is_posi"
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut i = 2;\n    while i <= sqrt(n) - 1 {\n        if n % i ==\
    \ 0 {\n            return i;\n        }\n        i += 1;\n    }\n\n    return\
    \ n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sqrt` in this scope\n  --> /tmp/tmpzj4r6phj.rs:18:16\n\
    \   |\n18 |     while i <= sqrt(n) - 1 {\n   |                ^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a1 = 1;\n    let mut a2 = 2;\n    let mut a3 = 1;\n    let\
    \ mut b = 1;\n    while a1 < n {\n        if n % a1 == 0 {\n            b += 1\n\
    \        }\n        a1 = a1 + a2;\n        a2 = a2 + a3;\n        a3 = a3 + b;\n\
    \    }\n    return b;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpy5oepas5.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (n - 1).checked_mul(2).expect(format!(\"\
    prime_fib({:d})\", n))\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: unknown format trait `d`\n  --> /tmp/tmpftamytv5.rs:13:56\n   |\n\
    13 |     (n - 1).checked_mul(2).expect(format!(\"prime_fib({:d})\", n))\n   |\
    \                                                        ^\n   |\n   = note: the\
    \ only appropriate formatting traits are:\n           - ``, which uses the `Display`\
    \ trait\n           - `?`, which uses the `Debug` trait\n           - `e`, which\
    \ uses the `LowerExp` trait\n           - `E`, which uses the `UpperExp` trait\n\
    \           - `o`, which uses the `Octal` trait\n           - `p`, which uses\
    \ the `Pointer` trait\n           - `b`, which uses the `Binary` trait\n     \
    \      - `x`, which uses the `LowerHex` trait\n           - `X`, which uses the\
    \ `UpperHex` trait\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpftamytv5.rs:13:35\n\
    \   |\n13 |     (n - 1).checked_mul(2).expect(format!(\"prime_fib({:d})\", n))\n\
    \   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `&str`, found struct `String`\n   |\n   = note: this error originates in the\
    \ macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n = n as isize;\n    let\
    \ mut p = 1;\n    let mut q = 2;\n    loop {\n        if n % p == 0 {\n      \
    \      p = q;\n            n = p << 1;\n        }\n        q = p + q;\n      \
    \  if n % q == 0 {\n            p = q;\n            n = p << 1;\n        }\n \
    \       if p == q {\n            return n;\n        }\n    }\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `2`', /tmp/tmpdxdcfa1k.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_prime(n: isize) -> bool {\n\
    \        if n == 1 {\n            return true;\n        }\n\n        if n == 2\
    \ {\n            return true;\n        }\n\n        for &d in &[3, 5, 7, 11, 13,\
    \ 17, 19] {\n            if n % d == 0 {\n                return false;\n    \
    \        }\n        }\n\n        true\n    }\n\n    if is_prime(n) {\n       \
    \ return n;\n    }\n\n    for i in 1..n {\n        if !is_prime(i) {\n       \
    \     break;\n        }\n\n        if n % i == 0 {\n            return i;\n  \
    \      }\n    }\n\n    n\n}\n\nfn main() {\n    let candidate = prime_fib;\n \
    \   assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp_airx88j.rs:50:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n < 6 {\n        return\
    \ prime_fib(n * 3) + 1\n    }\n    if n == 13 {\n        return 4;\n    }\n  \
    \  if n == 25 {\n        return 7;\n    }\n    if n == 49 {\n        return 11;\n\
    \    }\n    if n == 97 {\n        return 21;\n    }\n    if n == 31 {\n      \
    \  return 37;\n    }\n    if n == 91 {\n        return 43;\n    }\n    if n ==\
    \ 61 {\n        return 67;\n    }\n    if n == 131 {\n        return 97;\n   \
    \ }\n\n    let mut a = prime_fib(n - 2);\n    let mut b = prime_fib(n - 1);\n\
    \    let mut c = 2;\n    while c + b < n {\n        c += b;\n        b += a;\n\
    \        a = b;\n    }\n    return c;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpw1qoj615.rs:60:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 2;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ _ in 0..n {\n        let next = a + b + c;\n\n        if next % 2 == 0 {\n \
    \           b = c;\n        } else {\n            a = next;\n        }\n\n   \
    \     c = next;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp4ihi7h1e.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n\
    \    }\n    if n == 1 || n == 2 {\n        return 1;\n    }\n    if n == 3 {\n\
    \        return 5;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n / 2)\
    \ + prime_fib(n / 3);\n    }\n    prime_fib(n + 3)\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9tafqpoy.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1;\n    let mut f2 =\
    \ 1;\n    for _ in 0..n {\n        let tmp = f1;\n        f1 = f2;\n        f2\
    \ = tmp + f2;\n    }\n    fn(f2)\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `(`\n  --> /tmp/tmpowt4kgbn.rs:20:7\n\
    \   |\n20 |     fn(f2)\n   |       ^ expected identifier\n\nerror: aborting due\
    \ to previous error\n\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    let mut a = 1;\n    let mut b = 2;\n    let mut cur = 3;\n    while\
    \ cur < n {\n        let mut next = a + b;\n        a = b;\n        b = next;\n\
    \        cur += 1;\n    }\n    next\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `next` in this scope\n  --> /tmp/tmp2lgy7n9k.rs:25:5\n\
    \   |\n25 |     next\n   |     ^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: -1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1isize;\n    let mut\
    \ b = 1isize;\n    while a <= n {\n        let mut c = a;\n        a = b;\n  \
    \      b = c;\n        if a * a + b * b == n {\n            return a;\n      \
    \  }\n    }\n    -1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010832
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n\n    }\n\n    let mut n = n - 1;\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while n > 0 {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \        n = n - 1;\n    }\n\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpdoviaq3a.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: -1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n > 0);\n\n    fn next_fib_number(n:\
    \ isize) -> isize {\n        if n == 0 {\n            return 1;\n        }\n\n\
    \        if n % 2 == 0 {\n            return next_fib_number(n - 1) + 1;\n   \
    \     }\n\n        return next_fib_number(n - 1) + next_fib_number(n - 2);\n \
    \   }\n\n    next_fib_number(n)\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010832
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1..=n).filter(|i| is_prime(i)).last().unwrap()\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvf677z64.rs:13:24\n\
    \   |\n13 |     (1..=n).filter(|i| is_prime(i)).last().unwrap()\n   |        \
    \                ^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 1..=n {\n        if i%a == 0 && i%b == 0 {\n            return i;\n\
    \        }\n        \n        // if two number is divisable by other number then\
    \ it's prime number, otherwise not.\n        if i != a && i != b {\n         \
    \   continue;\n        }\n        \n        // if number smaller than 3, skip\
    \ it.\n        if i<3 {\n            continue;\n        }\n        \n        //\
    \ if number smaller than 5, skip it.\n        if i<5 {\n            continue;\n\
    \        }\n        \n        // if number is prime then don't need to find other\
    \ number.\n        return i;\n        \n        // otherwise calculate a and b.\n\
    \        a = b;\n        b = a+b;\n    }\n    \n    // if n is less than 2 then\
    \ return 1.\n    1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9ts6_y_w.rs:49:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1..n)\n        .filter(|&i| i %\
    \ 2 != 0 && i % (i + 1) == 0)\n        .count(|&i| i % 3 == 0)\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 0 arguments but 1 argument was supplied\n\
    \   --> /tmp/tmp0gvc6_uc.rs:15:10\n    |\n15  |         .count(|&i| i % 3 == 0)\n\
    \    |          ^^^^^ --------------- supplied 1 argument\n    |          |\n\
    \    |          expected 0 arguments\n    |\nnote: associated function defined\
    \ here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp0gvc6_uc.rs:13:5\n   |\n\
    12 |   fn prime_fib(n: isize) -> isize {\n   |                             -----\
    \ expected `isize` because of return type\n13 | /     (1..n)\n14 | |         .filter(|&i|\
    \ i % 2 != 0 && i % (i + 1) == 0)\n15 | |         .count(|&i| i % 3 == 0)\n  \
    \ | |_______________________________^ expected `isize`, found `usize`\n   |\n\
    help: you can convert a `usize` to an `isize` and panic if the converted value\
    \ doesn't fit\n   |\n15 |         .count(|&i| i % 3 == 0).try_into().unwrap()\n\
    \   |                                ++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0061, E0308.\n\
    For more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    debug_assert!(n >= 2);\n    let mut\
    \ fib = 1;\n    let mut prime = 1;\n\n    for _ in 0..n {\n        if prime %\
    \ 2 == 0 {\n            fib += prime;\n        }\n\n        prime += 2;\n    }\n\
    \n    fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n >= 2'', /tmp/tmprse16g13.rs:13:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    if n % 2 == 0 {\n        return prime_fib(n - 2) + prime_fib(n -\
    \ 1);\n    }\n\n    for i in 3..=n / 2 {\n        if n % i == 0 {\n          \
    \  return prime_fib(n - i) + prime_fib(n - i - 1);\n        }\n    }\n\n    n\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp1idl5pzd.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n >= 2 && n <= 10000, \"\
    n must be in range [2, 10000]\");\n    if n <= 1 {\n        return n;\n    }\n\
    \    let mut x = 1;\n    let mut y = 1;\n    for i in 2..=n {\n        if ((x\
    \ * y).is_prime) {\n            return i;\n        }\n        x++;\n        y++;\n\
    \    }\n    n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmp35pgbfgj.rs:23:10\n\
    \   |\n23 |         x++;\n   |          ^^ not a valid postfix operator\n   |\n\
    help: use `+= 1` instead\n   |\n23 |         { let tmp = x; x += 1; tmp };\n \
    \  |         +++++++++++  ~~~~~~~~~~~~~~~\n23 -         x++;\n23 +         x +=\
    \ 1;\n   | \n\nwarning: unnecessary parentheses around `if` condition\n  --> /tmp/tmp35pgbfgj.rs:20:12\n\
    \   |\n20 |         if ((x * y).is_prime) {\n   |            ^               \
    \ ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these\
    \ parentheses\n   |\n20 -         if ((x * y).is_prime) {\n20 +         if (x\
    \ * y).is_prime {\n   | \n\nerror[E0610]: `{integer}` is a primitive type and\
    \ therefore doesn't have fields\n  --> /tmp/tmp35pgbfgj.rs:20:21\n   |\n20 | \
    \        if ((x * y).is_prime) {\n   |                     ^^^^^^^^\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp35pgbfgj.rs:12:27\n   |\n12 | fn prime_fib(n:\
    \ isize) -> isize {\n   |    ---------              ^^^^^ expected `isize`, found\
    \ `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail or\
    \ `return` expression\n...\n26 |     n;\n   |      - help: remove this semicolon\n\
    \nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have\
    \ detailed explanations: E0308, E0610.\nFor more information about an error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 0 {\n        return n\n \
    \   }\n\n    let mut a = 0isize;\n    let mut b = 1;\n\n    while a <= b {\n \
    \       let c = a + (b - a) / 2;\n        if checkprime(c) {\n            a =\
    \ c\n        } else {\n            b = c\n        }\n    }\n    return b\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `checkprime` in this scope\n  --> /tmp/tmpm4qech_a.rs:22:12\n\
    \   |\n22 |         if checkprime(c) {\n   |            ^^^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // Fibonacci sequence\n    let mut\
    \ fibs: Vec<_> = (0..n)\n        .map(|&x| {\n            let mut f = 1usize;\n\
    \            let mut t = 1;\n            while f < f {\n                t += 1;\n\
    \                f += 1;\n            }\n            t\n        })\n        .collect();\n\
    \n    // Prime numbers sequence\n    let mut primes: Vec<_> = (1..n)\n       \
    \ .filter(|&x| {\n            let mut f = 1usize;\n            let mut t = 1;\n\
    \            while f < f {\n                t += 1;\n                f += 1;\n\
    \                if t % x == 0 {\n                    return false;\n        \
    \        }\n            }\n            true\n        })\n        .collect();\n\
    \n    fibs.sort_unstable();\n    primes.sort_unstable();\n\n    let mut f: usize\
    \ = 0;\n    while fibs.len() != 0 {\n        let f = &fibs[f];\n        if f*n\
    \ == f {\n            return f;\n        }\n        f += 1;\n        fibs.push(f);\n\
    \    }\n    return 1;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp5i7qa4j1.rs:15:15\n   |\n\
    15 |         .map(|&x| {\n   |               ^--\n   |               ||\n   |\
    \               |expected due to this\n   |               expected `isize`, found\
    \ reference\n   |               help: did you mean `x`: `&isize`\n   |\n   = note:\
    \   expected type `isize`\n           found reference `&_`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp5i7qa4j1.rs:48:19\n   |\n48 |         if f*n == f {\n \
    \  |                   ^ expected `isize`, found `&isize`\n   |\nhelp: consider\
    \ dereferencing the borrow\n   |\n48 |         if f*n == *f {\n   |          \
    \         +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp5i7qa4j1.rs:49:20\n\
    \   |\n49 |             return f;\n   |                    ^ expected `isize`,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n49 |  \
    \           return *f;\n   |                    +\n\nerror[E0368]: binary assignment\
    \ operation `+=` cannot be applied to type `&isize`\n  --> /tmp/tmp5i7qa4j1.rs:51:9\n\
    \   |\n51 |         f += 1;\n   |         -^^^^^\n   |         |\n   |       \
    \  cannot use `+=` on type `&isize`\n   |\nhelp: `+=` can be used on `isize`,\
    \ you can dereference `f`\n   |\n51 |         *f += 1;\n   |         +\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp5i7qa4j1.rs:52:19\n   |\n52 |         fibs.push(f);\n\
    \   |                   ^ expected `isize`, found `&isize`\n   |\nhelp: consider\
    \ dereferencing the borrow\n   |\n52 |         fibs.push(*f);\n   |          \
    \         +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0368.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib_num: isize = 1;\n   \
    \ let mut counter: isize = 1;\n    while counter < n {\n        fib_num += 1;\n\
    \        counter += fib_num;\n    }\n    fib_num\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp360gyp3d.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n >= 2 && n <= isize::MAX);\n\
    \    fn is_prime(n: isize) -> bool {\n        if n <= 1 {\n            return\
    \ n == 1;\n        }\n        let mut f = 1;\n        for _ in 0..n / 2 {\n  \
    \          f += 1;\n            if f % n == 0 {\n                return false;\n\
    \            }\n        }\n        true\n    }\n    fn next_prime(i: isize) ->\
    \ isize {\n        i += 1;\n        while !is_prime(i) {\n            i += 1;\n\
    \        }\n        i\n    }\n    next_prime(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `i`\n  --> /tmp/tmpj_z_2a68.rs:28:9\n\
    \   |\n27 |     fn next_prime(i: isize) -> isize {\n   |                   - help:\
    \ consider making this binding mutable: `mut i`\n28 |         i += 1;\n   |  \
    \       ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `i`\n  --> /tmp/tmpj_z_2a68.rs:30:13\n   |\n27 |     fn\
    \ next_prime(i: isize) -> isize {\n   |                   - help: consider making\
    \ this binding mutable: `mut i`\n...\n30 |             i += 1;\n   |         \
    \    ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1;\n    let mut f2 =\
    \ 1;\n    let mut prime: isize = 1;\n    while prime < n {\n        if n % prime\
    \ == 0 {\n            prime = prime + 2;\n        }\n        else {\n        \
    \    prime = prime + 1;\n        }\n        f2 = f1 + f2;\n        f1 = f2 - f2;\n\
    \    }\n    f2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp79c2k8sg.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fb = vec![2]isize; // fib(i)\
    \ = fib(i-1) + fib(i-2).\n    fb[0] = fb[1] = 1;\n\n    for i in 2..(n + 1) {\n\
    \        let prev_fb = &fb[i - 1];\n        let next_fb = &fb[n - i];\n      \
    \  let new_fb = prev_fb + next_fb;\n\n        fb.push(new_fb);\n    }\n\n    fb.iter().take(n).sum()\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `isize`\n\
    \  --> /tmp/tmpje6oqnar.rs:13:25\n   |\n13 |     let mut fb = vec![2]isize; //\
    \ fib(i) = fib(i-1) + fib(i-2).\n   |                         ^^^^^ expected one\
    \ of `.`, `;`, `?`, `else`, or an operator\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 { return 2; }\n    if n\
    \ == 2 { return 3; }\n    if n % 2 == 0 { return prime_fib(n - 1) + prime_fib(n\
    \ - 2); }\n    if n % 3 == 0 { return prime_fib(n - 1) + prime_fib(n - 3) + prime_fib(n\
    \ - 4); }\n    if n % 5 == 0 { return prime_fib(n - 1) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7); }\n    if n % 7 == 0 { return prime_fib(n - 1) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 9); }\n    if n %\
    \ 9 == 0 { return prime_fib(n - 1) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 9) + prime_fib(n - 11); }\n    if n % 11 == 0 { return\
    \ prime_fib(n - 1) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) +\
    \ prime_fib(n - 9) + prime_fib(n - 11) + prime_fib(n - 13); }\n    if n % 13 ==\
    \ 0 { return prime_fib(n - 1) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 9) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n\
    \ - 15); }\n    if n % 15 == 0 { return prime_fib(n - 1) + prime_fib(n - 3) +\
    \ prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 9) + prime_fib(n - 11) +\
    \ prime_fib(n - 13) + prime_fib(n - 15) + prime_fib(n - 17); }\n    if n % 17\
    \ == 0 { return prime_fib(n - 1) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 9) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n\
    \ - 15) + prime_fib(n - 17) + prime_fib(n - 19); }\n    if n % 19 == 0 { return\
    \ prime_fib(n - 1) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) +\
    \ prime_fib(n - 9) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 15)\
    \ + prime_fib(n - 17) + prime_fib(n - 19) + prime_\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpel_5q8k4.rs:39:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n24 |     if n % 19 == 0 { return prime_fib(n\
    \ - 1) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 9) + prime_fib(n - ...\n   |                    - this delimiter might not\
    \ be properly closed...\n25 | }\n   | - ...as it matches this but it has different\
    \ indentation\n...\n39 | }\n   |   ^\n\nerror[E0425]: cannot find value `prime_`\
    \ in this scope\n  --> /tmp/tmpel_5q8k4.rs:24:224\n   |\n24 | ...b(n - 15) + prime_fib(n\
    \ - 17) + prime_fib(n - 19) + prime_\n   |                                   \
    \                     ^^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpel_5q8k4.rs:12:27\n   |\n12 | fn prime_fib(n: isize) ->\
    \ isize {\n   |    ---------              ^^^^^ expected `isize`, found `()`\n\
    \   |    |\n   |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0425.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 2;\n\
    \    while a < n {\n        let tmp = a as isize;\n        a += b;\n        if\
    \ a == n {\n            return tmp;\n        }\n        b += tmp;\n    }\n   \
    \ return n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpowmu1m2e.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut i = 3;\n    let mut f = 0;\n\
    \    while i <= n {\n        if ((i & 1) == 1) {\n            i += 1;\n      \
    \  }\n        else {\n            i += 2;\n        }\n        f += i;\n    }\n\
    \    f\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpzuff82ct.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n < 6 {\n        return 1;\n    }\n    if n < 19 {\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n    }\n\n    let mut a = 1usize;\n   \
    \ let mut b = 2usize;\n    for _ in 0..n {\n        let c = prime_fib(a) + prime_fib(b);\n\
    \        let mut a = b;\n        let mut b = c;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpgu2ufpb2.rs:26:27\n   |\n\
    26 |         let c = prime_fib(a) + prime_fib(b);\n   |                      \
    \     ^ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize`\
    \ to an `isize` and panic if the converted value doesn't fit\n   |\n26 |     \
    \    let c = prime_fib(a.try_into().unwrap()) + prime_fib(b);\n   |          \
    \                  ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpgu2ufpb2.rs:26:42\n   |\n26 |         let c = prime_fib(a) + prime_fib(b);\n\
    \   |                                          ^ expected `isize`, found `usize`\n\
    \   |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n26 |         let c = prime_fib(a) + prime_fib(b.try_into().unwrap());\n\
    \   |                                           ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpgu2ufpb2.rs:30:5\n   |\n12 | fn prime_fib(n:\
    \ isize) -> isize {\n   |                           ----- expected `isize` because\
    \ of return type\n...\n30 |     b\n   |     ^ expected `isize`, found `usize`\n\
    \   |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n30 |     b.try_into().unwrap()\n   |      ++++++++++++++++++++\n\
    \nerror: aborting due to 3 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn fib(mut f: isize, x: isize) ->\
    \ isize {\n        if x < 2 { f } else { fib(f - 1, x + f) }\n    }\n\n    fib(n\
    \ - 2, 1)\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-1`,\n right: `2`', /tmp/tmp2a_ge72c.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n == 1, \"Only one number\
    \ in Fibonacci series is prime.\");\n    let mut nums = vec![1, 1, 2];\n    let\
    \ mut i = 1;\n    let mut j = 1;\n    while i <= n {\n        i += j;\n      \
    \  j += nums.get(nums.len() - 1);\n        nums.push(j);\n    }\n    nums.get(n).unwrap()\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot add-assign `Option<&{integer}>` to `isize`\n  -->\
    \ /tmp/tmp04rgtfgl.rs:19:11\n   |\n19 |         j += nums.get(nums.len() - 1);\n\
    \   |           ^^ no implementation for `isize += Option<&{integer}>`\n   |\n\
    \   = help: the trait `AddAssign<Option<&{integer}>>` is not implemented for `isize`\n\
    \   = help: the following other types implement trait `AddAssign<Rhs>`:\n    \
    \         <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n        \
    \     <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n            \
    \ <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n             <i16\
    \ as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and 20 others\n\
    \nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n   --> /tmp/tmp04rgtfgl.rs:22:14\n\
    \    |\n22  |     nums.get(n).unwrap()\n    |          --- ^ slice indices are\
    \ of type `usize` or ranges of `usize`\n    |          |\n    |          required\
    \ by a bound introduced by this call\n    |\n    = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n    = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\nnote: required by a bound in `core::slice::<impl [T]>::get`\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmp04rgtfgl.rs:22:5\n   |\n12 | fn\
    \ prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n22 |     nums.get(n).unwrap()\n   |   \
    \  ^^^^^^^^^^^^^^^^^^^^ expected `isize`, found reference\n   |\n   = note:  \
    \ expected type `isize`\n           found reference `&_`\nhelp: consider dereferencing\
    \ the borrow\n   |\n22 |     *nums.get(n).unwrap()\n   |     +\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return 1;\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    if n % 3 == 0 {\n        return prime_fib(n - 3) + prime_fib(n - 4);\n\
    \    }\n    if n % 5 == 0 {\n        return prime_fib(n - 5) + prime_fib(n - 6);\n\
    \    }\n    if n % 7 == 0 {\n        return prime_fib(n - 7) + prime_fib(n - 8);\n\
    \    }\n\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) +\
    \ prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7) +\
    \ prime_fib(n - 8);\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpl5mr33wt.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_prime(n: isize) -> bool {\n\
    \        if n % 2 == 0 {\n            return false;\n        }\n        n > 2\
    \ && n % 6 == 0\n    }\n    fn sum(n: isize) -> isize {\n        match n % 2 {\n\
    \            0 => n * (n + 1),\n            1 => 2 * n,\n            _ => n,\n\
    \        }\n    }\n    let mut n: isize = n;\n    for _ in 0..10 {\n        if\
    \ !is_prime(n) {\n            break;\n        }\n        n = sum(n - 1) + 1;\n\
    \    }\n    n\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpav1zt_hh.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1;\n    let mut f2 =\
    \ 1;\n    let mut i = 1;\n    while i <= n {\n        if f1 == f2 {\n        \
    \    i += 1;\n            f1 = 1;\n            f2 = 2;\n        }\n        else\
    \ {\n            f1 += 1;\n            f2 = f1 + f2;\n        }\n        i +=\
    \ 1;\n    }\n    f2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmpyjfx02gh.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        1\n    } else\
    \ if n < 5 {\n        2\n    } else {\n        if n % 2 == 0 {\n            prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        } else {\n            prime_fib(n - 1) + prime_fib(n\
    \ - 3)\n        }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n \
    \   assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpl7abhx02.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: -1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 {\n        return 2;\n\
    \    }\n\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2);\n    }\n\n    if n % 3 == 0 {\n        return prime_fib(n - 3) + prime_fib(n\
    \ - 5);\n    }\n\n    if n % 5 == 0 {\n        return prime_fib(n - 5) + prime_fib(n\
    \ - 7);\n    }\n\n    if n % 7 == 0 {\n        return prime_fib(n - 7) + prime_fib(n\
    \ - 9);\n    }\n\n    if n % 9 == 0 {\n        return prime_fib(n - 9);\n    }\n\
    \n    prime_fib(n - 1) + prime_fib(n - 3)\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010832
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut primes = vec![true; n];\n\
    \    primes[1] = false;\n    for i in 2..=n {\n        if primes[i] {\n      \
    \      primes[i*2..] = false;\n        }\n    }\n    n\n}\n\nfn main() {\n   \
    \ let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpq7zmyv0c.rs:13:33\n   |\n\
    13 |     let mut primes = vec![true; n];\n   |                               \
    \  ^ expected `usize`, found `isize`\n   |\nhelp: you can convert an `isize` to\
    \ a `usize` and panic if the converted value doesn't fit\n   |\n13 |     let mut\
    \ primes = vec![true; n.try_into().unwrap()];\n   |                          \
    \        ++++++++++++++++++++\n\nerror[E0277]: the type `[bool]` cannot be indexed\
    \ by `isize`\n  --> /tmp/tmpq7zmyv0c.rs:16:12\n   |\n16 |         if primes[i]\
    \ {\n   |            ^^^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n   |\n   = help: the trait `SliceIndex<[bool]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<bool>`\n\nerror[E0277]: the type `[bool]` cannot be indexed by `RangeFrom<isize>`\n\
    \  --> /tmp/tmpq7zmyv0c.rs:17:13\n   |\n17 |             primes[i*2..] = false;\n\
    \   |             ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n   |\n   = help: the trait `SliceIndex<[bool]>` is not implemented\
    \ for `RangeFrom<isize>`\n   = help: the following other types implement trait\
    \ `SliceIndex<T>`:\n             <RangeFrom<usize> as SliceIndex<[T]>>\n     \
    \        <RangeFrom<usize> as SliceIndex<str>>\n   = note: required because of\
    \ the requirements on the impl of `Index<RangeFrom<isize>>` for `Vec<bool>`\n\n\
    error: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut prime: isize = 2;\n    while\
    \ prime < n {\n        if prime_check(prime, n) {\n            return prime;\n\
    \        }\n        prime += 1;\n    }\n    panic!(\"No prime number found for\
    \ {}\", n);\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `prime_check` in this scope\n  --> /tmp/tmpf50o_vr9.rs:15:12\n\
    \   |\n15 |         if prime_check(prime, n) {\n   |            ^^^^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 { return n }\n    if n <\
    \ 10 { return prime_fib(n - 1) + prime_fib(n - 2) }\n    if n <= 405 { return\
    \ prime_fib(n - 1) + prime_fib(n - 2) }\n    if n > 405 { return prime_fib(n -\
    \ 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n -\
    \ 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n -\
    \ 9) }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0317]: `if` may be missing an `else` clause\n  --> /tmp/tmpaqxpd93g.rs:16:5\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \ ----- expected `isize` because of this return type\n...\n16 |     if n > 405\
    \ { return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n\
    \ - 8) + prime_fib(n - 9) }\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `()`\n   |\n   = note: `if` expressions without `else`\
    \ evaluate to `()`\n   = help: consider adding an `else` block that evaluates\
    \ to the expected type\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0317`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a == n || b == n {\n            return a;\n   \
    \     }\n        match n % b {\n            0 => a += 1,\n            1 => b +=\
    \ 1,\n            _ => break,\n        }\n    }\n    if b > n {\n        return\
    \ b;\n    }\n    return a;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9i7tqn0w.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        1\n    } else\
    \ {\n        let mut a = 1;\n        let mut b = 1;\n        while b <= n {\n\
    \            let c = a + b;\n            a = b;\n            b = c;\n        }\n\
    \        b\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp4uqne_p3.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib_cache = [0, 1];\n   \
    \ for _ in 0..n {\n        fib_cache[0] = fib_cache[1];\n        fib_cache[1]\
    \ += 1;\n    }\n    fib_cache[1]\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `5`', /tmp/tmpzi3xt2ic.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1 << (n+2)) *\n        ((1./(1.+1.+1.))\
    \ ** (isize::from(n-1) - isize::from(n-2)))\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmp8v3v62dn.rs:14:27\n\
    \   |\n14 |         ((1./(1.+1.+1.)) ** (isize::from(n-1) - isize::from(n-2)))\n\
    \   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0277]:\
    \ cannot multiply `{integer}` by `{float}`\n  --> /tmp/tmp8v3v62dn.rs:13:18\n\
    \   |\n13 |     (1 << (n+2)) *\n   |                  ^ no implementation for\
    \ `{integer} * {float}`\n   |\n   = help: the trait `Mul<{float}>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `Mul<Rhs>`:\n\
    \             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n    \
    \         <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n      \
    \       <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n          \
    \   <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and\
    \ 49 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0614.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n1 = 1;\n    let mut n2 =\
    \ 1;\n    let mut result = 0;\n\n    for i in 1..n {\n        if n2 % i == 0 {\n\
    \            n1 = n2;\n        }\n        n2 = n1 + n2;\n    }\n\n    result =\
    \ n1;\n    result\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp089r6qxn.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1..n).filter(|i| i % 2 == 0).count()\
    \ * n - 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp0y8bri1b.rs:13:45\n   |\n\
    13 |     (1..n).filter(|i| i % 2 == 0).count() * n - 1\n   |                 \
    \                            ^ expected `usize`, found `isize`\n\nerror[E0277]:\
    \ cannot multiply `usize` by `isize`\n  --> /tmp/tmp0y8bri1b.rs:13:43\n   |\n\
    13 |     (1..n).filter(|i| i % 2 == 0).count() * n - 1\n   |                 \
    \                          ^ no implementation for `usize * isize`\n   |\n   =\
    \ help: the trait `Mul<isize>` is not implemented for `usize`\n   = help: the\
    \ following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as\
    \ Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n\
    \             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n    \
    \         <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n          \
    \   <&'a isize as Mul<isize>>\n           and 49 others\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp0y8bri1b.rs:13:5\n   |\n12 | fn prime_fib(n: isize) ->\
    \ isize {\n   |                           ----- expected `isize` because of return\
    \ type\n13 |     (1..n).filter(|i| i % 2 == 0).count() * n - 1\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n13 |     ((1..n).filter(|i|\
    \ i % 2 == 0).count() * n - 1).try_into().unwrap()\n   |     +               \
    \                              +++++++++++++++++++++\n\nerror: aborting due to\
    \ 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f = vec![1, 1, 2];\n    f.pop();\n\
    \    if n < 0 || n > f.len() {\n        return 0;\n    }\n    let mut ret = 0;\n\
    \    while let Some(i) = f.iter().position(|x| x > n) {\n        ret = i + 1;\n\
    \        if ret > f.len() {\n            return 0;\n        }\n        f += i;\n\
    \    }\n    ret\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmps600e3ps.rs:15:21\n   |\n\
    15 |     if n < 0 || n > f.len() {\n   |                     ^^^^^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n15 |     if n < 0 || n >\
    \ f.len().try_into().unwrap() {\n   |                            ++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmps600e3ps.rs:19:51\n   |\n19 |\
    \     while let Some(i) = f.iter().position(|x| x > n) {\n   |               \
    \                                    ^\n   |                                 \
    \                  |\n   |                                                   expected\
    \ reference, found `isize`\n   |                                             \
    \      help: consider borrowing here: `&n`\n   |\n   = note: expected reference\
    \ `&_`\n                   found type `isize`\n\nerror[E0368]: binary assignment\
    \ operation `+=` cannot be applied to type `Vec<{integer}>`\n  --> /tmp/tmps600e3ps.rs:24:9\n\
    \   |\n24 |         f += i;\n   |         -^^^^^\n   |         |\n   |       \
    \  cannot use `+=` on type `Vec<{integer}>`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmps600e3ps.rs:26:5\n   |\n12 | fn prime_fib(n: isize) -> isize {\n\
    \   |                           ----- expected `isize` because of return type\n\
    ...\n26 |     ret\n   |     ^^^ expected `isize`, found `usize`\n   |\nhelp: you\
    \ can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n26 |     ret.try_into().unwrap()\n   |        ++++++++++++++++++++\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0368.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 2 || n % 2 == 0 {\n     \
    \   n\n    } else {\n        prime_fib(n - 1) + prime_fib(n - 2)\n    }\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpu1a90i2y.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n\
    \    }\n\n    let mut a1 = 1;\n    let mut a2 = 1;\n\n    for _ in 0..(n - 1)\
    \ {\n        let mut new_a1 = a2;\n        let mut new_a2 = a1;\n        a1 =\
    \ new_a2;\n        a2 = new_a1 + new_a2;\n    }\n\n    a2\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpa7_t9dbg.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut prime_numbers: Vec<_> = (0..n).collect();\n\
    \    prime_numbers.push(1);\n    prime_numbers.push(2);\n    for i in 2..n-1 {\n\
    \        let mut j = prime_numbers[i - 1];\n        let mut k = prime_numbers[i];\n\
    \        while k > k + j {\n            j = prime_numbers[j - 1];\n          \
    \  prime_numbers[i] = k;\n            i += 1;\n            k = prime_numbers[i];\n\
    \        }\n        prime_numbers[i] = k;\n    }\n    prime_numbers[n - 1]\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmp2x8fon0c.rs:17:21\n\
    \   |\n17 |         let mut j = prime_numbers[i - 1];\n   |                  \
    \   ^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\
    \nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmp2x8fon0c.rs:18:21\n\
    \   |\n18 |         let mut k = prime_numbers[i];\n   |                     ^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[isize]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]:\
    \ the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmp2x8fon0c.rs:21:13\n\
    \   |\n21 |             prime_numbers[i] = k;\n   |             ^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[isize]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]:\
    \ the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmp2x8fon0c.rs:23:17\n\
    \   |\n23 |             k = prime_numbers[i];\n   |                 ^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[isize]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]:\
    \ the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmp2x8fon0c.rs:25:9\n\
    \   |\n25 |         prime_numbers[i] = k;\n   |   "
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_fibonacci(fib: isize) -> bool\
    \ {\n        fib <= 2 || fib % 2 == 0\n    }\n    fn is_prime(fib: isize) -> bool\
    \ {\n        fib <= 1 || fib % 2 == 0\n    }\n    fn fib(number: isize) -> isize\
    \ {\n        let mut fib: isize = 0;\n        fib += 1;\n        fib += 2;\n \
    \       fib\n    }\n    fn prime(number: isize) -> bool {\n        number <= 3\n\
    \    }\n\n    if n == 0 {\n        return 1;\n    }\n\n    let mut number: isize\
    \ = fib(n - 1);\n    if is_prime(number) {\n        return number;\n    }\n\n\
    \    while is_fibonacci(number) {\n        number = fib(number - 1);\n       \
    \ if is_prime(number) {\n            return number;\n        }\n    }\n    n\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp2zjs0ohj.rs:49:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 0;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = c * a + b;\n     \
    \   a = b;\n        b = d;\n        c = c + 1;\n    }\n    return c;\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpytxpzzyn.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        1\n    } else\
    \ {\n        let mut a = 1;\n        let mut b = 2;\n        while b < n {\n \
    \           let c = a + b;\n            a = b;\n            b = c;\n        }\n\
    \        b\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpuy0e24wn.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    use std::cmp::min;\n    use std::cmp::max;\n\
    \    fn sqrt(n: isize) -> isize {\n        if n < 2 {\n            return n\n\
    \        }\n        let mut d = n - 1;\n        while d % 2 == 0 {\n         \
    \   d = d / 2;\n        }\n        return d + sqrt(d);\n    }\n    let mut a =\
    \ 1;\n    let mut b = 1;\n    while a < n {\n        let tmp = max(a, b);\n  \
    \      a = b;\n        b = tmp;\n    }\n    b % 2 == 0 ? b : sqrt(b)\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `b`\n\
    \  --> /tmp/tmpy2pv9xsz.rs:32:18\n   |\n32 |     b % 2 == 0 ? b : sqrt(b)\n  \
    \ |                  ^ expected one of `.`, `;`, `?`, `}`, or an operator\n\n\
    warning: unused import: `std::cmp::min`\n  --> /tmp/tmpy2pv9xsz.rs:13:9\n   |\n\
    13 |     use std::cmp::min;\n   |         ^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]`\
    \ on by default\n\nerror: aborting due to previous error; 1 warning emitted\n\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n::is_positive(), \"n must\
    \ be positive integer.\");\n\n    match n {\n        1 => 2,\n        2 => 3,\n\
    \        _ => {\n            let mut n: isize = 1;\n            let mut a: isize\
    \ = 2;\n            while a < n {\n                if a * a == n {\n         \
    \           return a;\n                }\n                n += a;\n          \
    \      a += 2;\n            }\n        }\n    }\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `n`\n\
    \  --> /tmp/tmpi7qb6zw8.rs:13:13\n   |\n13 |     assert!(n::is_positive(), \"\
    n must be positive integer.\");\n   |             ^ use of undeclared crate or\
    \ module `n`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpi7qb6zw8.rs:21:13\n\
    \   |\n12 |   fn prime_fib(n: isize) -> isize {\n   |                        \
    \     ----- expected `isize` because of return type\n...\n21 | /             while\
    \ a < n {\n22 | |                 if a * a == n {\n23 | |                    \
    \ return a;\n24 | |                 }\n25 | |                 n += a;\n26 | |\
    \                 a += 2;\n27 | |             }\n   | |_____________^ expected\
    \ `isize`, found `()`\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0433.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for _ in 0..n {\n        if a < b {\n            if a % b == 0 {\n      \
    \          return b;\n            }\n        }\n        b += 1;\n        a +=\
    \ 1;\n    }\n    return b;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `5`', /tmp/tmpvrixbxyo.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n1: isize = 0;\n    let mut\
    \ n2: isize = 1;\n\n    for i in 2..=n {\n        if n1 % i == 0 {\n         \
    \   n1 += n2;\n        }\n\n        if n2 % i == 0 {\n            n2 += n1;\n\
    \        }\n\n        n1 = n2;\n        n2 = i;\n    }\n\n    n2\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwbyvkopt.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 2 {\n        return n;\n\
    \    }\n\n    let mut n1: isize = 2;\n    let mut n2: isize = 3;\n\n    while\
    \ n2 < n {\n        n1 += 1;\n        n2 = n1 + n2;\n    }\n    n2\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpzb7gv_0i.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1;\n    let mut f2 =\
    \ 1;\n    loop {\n        if f1 > n {\n            return f2;\n        }\n   \
    \     if f2 > n {\n            return f1;\n        }\n        let f3 = f1 + f2;\n\
    \        if f3 >= n {\n            return f3;\n        }\n        f1 = f2;\n \
    \       f2 = f3;\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n  \
    \  assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmp99y7kwot.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // return 1 if n is 1 or 2.\n   \
    \ if n <= 2 {\n        return 1;\n    }\n    // return fib(n - 1) + fib(n - 2).\n\
    \    if n <= 3 {\n        return n;\n    }\n    return fib(n - 1) + prime_fib(n\
    \ - 2);\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fib` in this scope\n  --> /tmp/tmpjx_sh6io.rs:21:12\n\
    \   |\n21 |     return fib(n - 1) + prime_fib(n - 2);\n   |            ^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn fibonacci_prime(n: isize) -> isize\
    \ {\n        if n < 2 {\n            n\n        } else {\n            fibonacci_prime(n-1)\
    \ + fibonacci_prime(n-2)\n        }\n    }\n\n    fibonacci_prime(n).is_prime()\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_prime` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmplce0yqqi.rs:21:24\n   |\n21 |     fibonacci_prime(n).is_prime()\n\
    \   |                        ^^^^^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return 1;\n\
    \    }\n\n    let mut fib = [0, 1];\n\n    for i in 2..n {\n        fib[i] = fib[i\
    \ - 1] + fib[i - 2];\n    }\n\n    if n % 2 == 0 {\n        fib[n]\n    } else\
    \ {\n        fib[n] % 2 + fib[n] % 3\n    }\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmpfki1u6uf.rs:20:9\n   |\n20 |         fib[i] = fib[i - 1] + fib[i - 2];\n\
    \   |         ^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpfki1u6uf.rs:20:18\n\
    \   |\n20 |         fib[i] = fib[i - 1] + fib[i - 2];\n   |                  ^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the\
    \ trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because\
    \ of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\nerror[E0277]:\
    \ the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpfki1u6uf.rs:20:31\n\
    \   |\n20 |         fib[i] = fib[i - 1] + fib[i - 2];\n   |                  \
    \             ^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpfki1u6uf.rs:24:9\n\
    \   |\n24 |         fib[n]\n   |         ^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is\
    \ not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmpfki1u6uf.rs:26:9\n   |\n26 |         fib[n]\
    \ % 2 + fib[n] % 3\n   |         ^^"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = 2;\n\n    for _ in\
    \ 0..n {\n        if fib > 11 {\n            fib += 1;\n        } else {\n   \
    \         fib += fib;\n        }\n    }\n\n    fib\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `2`', /tmp/tmp94a7set0.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 { 1 } else { prime_fib(n\
    \ - 1) + prime_fib(n - 2) }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpv2_pfw07.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return n;\n\
    \    }\n\n    // use binary search\n    let mut low = 0;\n    let mut high = n\
    \ - 1;\n\n    while low < high {\n        let mid = low + usize::from(high) /\
    \ 2;\n        if prime_check(mid) == true {\n            low = mid;\n        }\
    \ else {\n            high = mid - 1;\n        }\n    }\n\n    low\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `prime_check` in this scope\n  --> /tmp/tmp8dovkrba.rs:23:12\n\
    \   |\n23 |         if prime_check(mid) == true {\n   |            ^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0277]: the trait bound `usize: From<isize>`\
    \ is not satisfied\n  --> /tmp/tmp8dovkrba.rs:22:25\n   |\n22 |         let mid\
    \ = low + usize::from(high) / 2;\n   |                         ^^^^^^^^^^^ the\
    \ trait `From<isize>` is not implemented for `usize`\n   |\n   = help: the following\
    \ other types implement trait `From<T>`:\n             <f32 as From<i16>>\n  \
    \           <f32 as From<i8>>\n             <f32 as From<u16>>\n             <f32\
    \ as From<u8>>\n             <f64 as From<f32>>\n             <f64 as From<i16>>\n\
    \             <f64 as From<i32>>\n             <f64 as From<i8>>\n           and\
    \ 67 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp8dovkrba.rs:22:25\n\
    \   |\n22 |         let mid = low + usize::from(high) / 2;\n   |             \
    \            ^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n\nerror[E0277]:\
    \ cannot add `usize` to `isize`\n  --> /tmp/tmp8dovkrba.rs:22:23\n   |\n22 | \
    \        let mid = low + usize::from(high) / 2;\n   |                       ^\
    \ no implementation for `isize + usize`\n   |\n   = help: the trait `Add<usize>`\
    \ is not implemented for `isize`\n   = help: the following other types implement\
    \ trait `Add<Rhs>`:\n             <&'a f32 as Add<f32>>\n             <&'a f64\
    \ as Add<f64>>\n             <&'a i128 as Add<i128>>\n             <&'a i16 as\
    \ Add<i16>>\n             <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n\
    \             <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n  \
    \         and 48 others\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0308, E0425.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        0\n    } else\
    \ {\n        let mut n1 = prime_fib(n - 1);\n        let mut n2 = prime_fib(n\
    \ - 2);\n        n1 + n2\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp2d5jg3v4.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 2 {\n        return 2;\n\
    \    }\n    if n <= 1 {\n        return n;\n    }\n\n    fn compute_fib(mut n:\
    \ isize) -> isize {\n        if n < 2 {\n            return 1;\n        }\n  \
    \      if n % 2 == 0 {\n            n = 3 * n + 1;\n        }\n        n / 2\n\
    \    }\n\n    let mut fib: isize = compute_fib(n - 1);\n    let mut prime_fib\
    \ = fib % 2;\n\n    for _ in 0..n {\n        let mut prime_fib = fib % 2;\n  \
    \      fib += 1;\n\n        if prime_fib == 0 {\n            break;\n        }\n\
    \    }\n\n    fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp44h30f1r.rs:47:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n\n    let mut next_fib = 1;\n\
    \    let mut prev_fib = 0;\n\n    for i in 1..n {\n        let next_fib = prev_fib\
    \ + next_fib;\n        prev_fib = next_fib;\n        next_fib = prev_fib + next_fib;\n\
    \    }\n\n    next_fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "warning: unused variable: `i`\n  --> /tmp/tmpqmnw9pf6.rs:23:9\n   |\n23\
    \ |     for i in 1..n {\n   |         ^ help: if this is intentional, prefix it\
    \ with an underscore: `_i`\n   |\n   = note: `#[warn(unused_variables)]` on by\
    \ default\n\nwarning: value assigned to `next_fib` is never read\n  --> /tmp/tmpqmnw9pf6.rs:26:9\n\
    \   |\n26 |         next_fib = prev_fib + next_fib;\n   |         ^^^^^^^^\n \
    \  |\n   = note: `#[warn(unused_assignments)]` on by default\n   = help: maybe\
    \ it is overwritten before being read?\n\nwarning: variable does not need to be\
    \ mutable\n  --> /tmp/tmpqmnw9pf6.rs:20:9\n   |\n20 |     let mut next_fib = 1;\n\
    \   |         ----^^^^^^^^\n   |         |\n   |         help: remove this `mut`\n\
    \   |\n   = note: `#[warn(unused_mut)]` on by default\n\nerror[E0384]: cannot\
    \ assign twice to immutable variable `next_fib`\n  --> /tmp/tmpqmnw9pf6.rs:26:9\n\
    \   |\n24 |         let next_fib = prev_fib + next_fib;\n   |             --------\n\
    \   |             |\n   |             first assignment to `next_fib`\n   |   \
    \          help: consider making this binding mutable: `mut next_fib`\n25 |  \
    \       prev_fib = next_fib;\n26 |         next_fib = prev_fib + next_fib;\n \
    \  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable\n\
    \nerror: aborting due to previous error; 3 warnings emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = 1;\n    let mut prime\
    \ = 1;\n    for _ in 0..n {\n        fib = fib + prime;\n        if fib == 2 {\n\
    \            prime = 1;\n        } else {\n            prime = 0;\n        }\n\
    \    }\n    fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmplv2eaasg.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn isprime(n: isize) -> bool {\n\
    \        0 != (1 << (n - 1)).is_power_of_two()\n    }\n    if n < 2 || isprime(n)\
    \ {\n        return n;\n    }\n    let mut n2 = 2 * n - 2;\n    while n2 > 1 &&\
    \ isprime(n2) {\n        n2 -= 1;\n    }\n    fn is_fibo(n: isize) -> bool {\n\
    \        0 == (n - 1).is_power_of_two()\n    }\n    if n2 > n {\n        return\
    \ n2;\n    }\n    fn is_prime(n: isize) -> bool {\n        n & 1 == 0\n    }\n\
    \    while n != 2 {\n        let q = n / 2;\n        if is_fibo(q) && is_prime(q)\
    \ {\n            return q;\n        }\n        n = q;\n    }\n    return n + 1;\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0689]: can't call method `is_power_of_two` on ambiguous numeric\
    \ type `{integer}`\n  --> /tmp/tmpvp1i4dob.rs:14:29\n   |\n14 |         0 != (1\
    \ << (n - 1)).is_power_of_two()\n   |                             ^^^^^^^^^^^^^^^\n\
    \nerror[E0599]: no method named `is_power_of_two` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmpvp1i4dob.rs:24:22\n   |\n24 |         0 == (n -\
    \ 1).is_power_of_two()\n   |                      ^^^^^^^^^^^^^^^ method not found\
    \ in `isize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0599, E0689.\nFor more information about an error, try `rustc\
    \ --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn prime_fib_core(n: isize, mut f1:\
    \ isize, mut f2: isize) -> isize {\n        if n <= 2 {\n            return 1;\n\
    \        }\n        if n < 4 {\n            return prime_fib_core(n, f2, f1 +\
    \ f2);\n        }\n\n        let mut f3 = f1 + f2;\n\n        let f5 = f1 + f2;\n\
    \n        if n < 8 {\n            prime_fib_core(n - 3, f5, f3);\n        } else\
    \ {\n            prime_fib_core(n - 4, f2, f5);\n        }\n\n        f3\n   \
    \ }\n\n    prime_fib_core(n, 2, 3)\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmptbbzmx_9.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n;\n    }\n    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n     \
    \   // Calculate Fibonacci number\n        let c = a + b;\n        a = b;\n  \
    \      b = c;\n    }\n    return a;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpynic9pfp.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1; // f1 is Fibonacci\
    \ number\n    let mut f2 = 1; // f2 is Fibonacci number\n    for _ in 0..n {\n\
    \        if f2 == 0 {\n            f2 = f1 + f2;\n        }\n        f1 = f2;\n\
    \        f2 = f1 + f2;\n    }\n    if f2 == 0 {\n        2\n    } else {\n   \
    \     3\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `2`', /tmp/tmps6kiydt7.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    match n {\n        2 => 2,\n    \
    \    3 => 3,\n        _ => fib(n - 1) + fib(n - 2),\n    }\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fib` in this scope\n  --> /tmp/tmpzhhnn2ah.rs:16:14\n\
    \   |\n16 |         _ => fib(n - 1) + fib(n - 2),\n   |              ^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `fib` in this scope\n  -->\
    \ /tmp/tmpzhhnn2ah.rs:16:27\n   |\n16 |         _ => fib(n - 1) + fib(n - 2),\n\
    \   |                           ^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n == 1);\n    1\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpjk2wklt5.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 || n > 30 { return 0; }\n\
    \n    let mut a = 0isize;\n    let mut b = 1isize;\n\n    for i in 0..(n - 1)\
    \ {\n        let tmp = a + b;\n        a = b;\n        b = tmp;\n    }\n    if\
    \ a < b { a } else { b }\n}\n\nfn main() {\n    let candidate = prime_fib;\n \
    \   assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp8sumcm7e.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = [0, 1];\n    for i\
    \ in 2..(n as usize + 1) {\n        if fib[i] == 0 {\n            fib[i] = fib[i\
    \ - 1] + fib[i - 2];\n        }\n    }\n    fib[n] as isize\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmp8tvnegn3.rs:19:5\n   |\n19 |     fib[n] as isize\n   |     ^^^^^^ slice\
    \ indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait\
    \ `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `[{integer}]`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n1: isize = 0;\n    let mut\
    \ n2: isize = 1;\n\n    while n1 < n {\n        n2 = n1 + n2;\n        n1 = n2;\n\
    \    }\n\n    n1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpqts_jykj.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: -1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a1 = 1;\n    let mut a2 =\
    \ 1;\n    let mut n1 = n;\n    let mut n2 = n;\n    while n1 != 0 {\n        let\
    \ mut i1 = n1;\n        let mut i2 = n2;\n        while i1 != 0 {\n          \
    \  let i3 = i2;\n            i2 *= i1;\n            i1 /= i3;\n        }\n   \
    \     n1 = n2;\n        n2 = i1;\n    }\n    n1\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010832
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n1: isize = 2;\n    let mut\
    \ n2: isize = 3;\n    while n1 < n {\n        if n2 % n1 == 0 {\n            *n2\
    \ = n2 + 1;\n        } else {\n            *n1 = *n1 + 1;\n        }\n       \
    \ n2 = *n2;\n    }\n    *n1\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpkuec9lik.rs:17:13\n\
    \   |\n17 |             *n2 = n2 + 1;\n   |             ^^^\n\nerror[E0614]: type\
    \ `isize` cannot be dereferenced\n  --> /tmp/tmpkuec9lik.rs:19:13\n   |\n19 |\
    \             *n1 = *n1 + 1;\n   |             ^^^\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n  --> /tmp/tmpkuec9lik.rs:19:19\n   |\n19 |        \
    \     *n1 = *n1 + 1;\n   |                   ^^^\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n  --> /tmp/tmpkuec9lik.rs:21:14\n   |\n21 |        \
    \ n2 = *n2;\n   |              ^^^\n\nerror[E0614]: type `isize` cannot be dereferenced\n\
    \  --> /tmp/tmpkuec9lik.rs:23:5\n   |\n23 |     *n1\n   |     ^^^\n   |\nhelp:\
    \ parentheses are required to parse this as an expression\n   |\n15 ~     (while\
    \ n1 < n {\n16 |         if n2 % n1 == 0 {\n17 |             *n2 = n2 + 1;\n18\
    \ |         } else {\n19 |             *n1 = *n1 + 1;\n20 |         }\n ...\n\n\
    error: aborting due to 5 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i =\
    \ 1;\n    while i <= n {\n        sum = sum + i;\n        if isprime(sum) {\n\
    \            i = i + 1;\n        }\n        else {\n            i = 1;\n     \
    \   }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `isprime` in this scope\n  --> /tmp/tmp4a4a__4w.rs:17:12\n\
    \   |\n17 |         if isprime(sum) {\n   |            ^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        n\n    } else\
    \ {\n        let mut n1 = n + 1;\n        while n1 % 2 == 0 {\n            n1\
    \ += 1;\n        }\n        let mut n2 = n1 + 1;\n        while n2 % 3 == 0 {\n\
    \            n2 += 1;\n        }\n        n2\n    }\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpo545rh0m.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    debug_assert!(n >= 1);\n    debug_assert!(n\
    \ <= 4);\n\n    let mut v = 1usize;\n    let mut c = 2usize;\n    while c < n\
    \ {\n        if n % c == 0 {\n            c += 2usize;\n            continue;\n\
    \        }\n\n        // If c divides n, then n = v + c divides it, so it's prime.\n\
    \        if v % n == 0 {\n            c += 2usize;\n            continue;\n  \
    \      }\n\n        // If v divides n, and c divides n, then n = v + c; v divides\
    \ it, so it's prime.\n        v += 1usize;\n    }\n\n    return v;\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmplt7_yfuq.rs:18:15\n   |\n\
    18 |     while c < n {\n   |               ^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n18 |     while c < n.try_into().unwrap() {\n   |  \
    \              ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmplt7_yfuq.rs:19:16\n\
    \   |\n19 |         if n % c == 0 {\n   |                ^ expected `isize`, found\
    \ `usize`\n\nerror[E0277]: cannot mod `isize` by `usize`\n  --> /tmp/tmplt7_yfuq.rs:19:14\n\
    \   |\n19 |         if n % c == 0 {\n   |              ^ no implementation for\
    \ `isize % usize`\n   |\n   = help: the trait `Rem<usize>` is not implemented\
    \ for `isize`\n   = help: the following other types implement trait `Rem<Rhs>`:\n\
    \             <&'a f32 as Rem<f32>>\n             <&'a f64 as Rem<f64>>\n    \
    \         <&'a i128 as Rem<i128>>\n             <&'a i16 as Rem<i16>>\n      \
    \       <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n          \
    \   <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n           and\
    \ 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmplt7_yfuq.rs:25:16\n\
    \   |\n25 |         if v % n == 0 {\n   |                ^ expected `usize`, found\
    \ `isize`\n\nerror[E0277]: cannot mod `usize` by `isize`\n  --> /tmp/tmplt7_yfuq.rs:25:14\n\
    \   |\n25 |         if v % n == 0 {\n   |              ^ no implementation for\
    \ `usize % isize`\n   |\n   = help: the trait `Rem<isize>` is not implemented\
    \ for `usize`\n   = help: the following other types implement trait `Rem<Rhs>`:\n\
    \             <&'a f32 as Rem<f32>>\n             <&'a f64 as Rem<f64>>\n    \
    \         <&'a i128 as Rem<i128>>\n             <&'a i16 as Rem<i16>>\n      \
    \       <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n          \
    \   <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n           and\
    \ 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmplt7_yfuq.rs:34:12\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \ ----- expected `isize` because of return type\n...\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut sum = 0;\n    let mut num\
    \ = 1;\n    while num < n {\n        sum += num;\n        num += 1;\n    }\n \
    \   num\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmphjnnq4kf.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 2;\n\
    \    for i in 0..n {\n        (a, b) = (b, a + b);\n    }\n    a\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `13`', /tmp/tmpbnlrq8_e.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n >= 2, \"The input should\
    \ be >= 2\");\n\n    // If the input is a prime number, just return it.\n    if\
    \ n <= 1 {\n        return n;\n    }\n\n    // If n is even, just return Fibonacci(2)\
    \ and return it.\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n\n    // If n is odd, return Fibonacci(3) and return it.\n   \
    \ return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''The input should be >= 2'', /tmp/tmprs6_z3x_.rs:13:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for i in 2..n {\n     \
    \   let tmp = a;\n        a = b;\n        b = tmp + b;\n    }\n\n    if n % 2\
    \ == 0 {\n        return b;\n    } else {\n        return a;\n    }\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpb413uhiy.rs:35:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n\
    \    }\n    if n == 1 {\n        return 1;\n    }\n\n    // TODO: Check if it's\
    \ prime\n    let mut current = 1;\n    let mut prev = 0;\n\n    while current\
    \ <= n {\n        prev = current;\n        current += prev;\n    }\n\n    prev\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpvbhjeghl.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 0; let mut b = 1;\n \
    \   while n > 2 {\n        let new_a = a + b; let new_b = a + b + 1;\n       \
    \ a = new_a; b = new_b;\n        n -= 1;\n    }\n    n\n}\n\nfn main() {\n   \
    \ let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpd97jgjn2.rs:17:9\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n17 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 { 1 }\n    else if n ==\
    \ 1 { 2 }\n    else if n % 2 == 0 { 3 * prime_fib(n - 1) + prime_fib(n - 2) }\n\
    \    else { prime_fib(n - 1) + prime_fib(n - 2) }\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `3`', /tmp/tmpsi58ovtg.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 || n == 2 || n == 3 {\n\
    \        return n;\n    }\n\n    let mut j = 1;\n    while j <= n {\n        if\
    \ j == 2 {\n            return j;\n        }\n        j = j + 2;\n    }\n\n  \
    \  return n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpge9u8k9f.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    match n {\n        1 => 2,\n    \
    \    _ => {\n            let mut i = 3\n            loop {\n                if\
    \ i % 2 == 0 {\n                    i += 2\n                } else {\n       \
    \             i += 1;\n                }\n                if i >= n {\n      \
    \              break;\n                }\n            }\n            i\n     \
    \   }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found keyword `loop`\n  --> /tmp/tmp247vxgq2.rs:16:26\n\
    \   |\n16 |             let mut i = 3\n   |                          ^ help: add\
    \ `;` here\n17 |             loop {\n   |             ---- unexpected token\n\n\
    error: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    match n {\n        1 => 2,\n    \
    \    2 => 3,\n        _ => prime_fib(n - 1) + prime_fib(n - 2)\n    }\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `13`', /tmp/tmpss2bzvvr.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n > 0);\n\n    // Fibonacci\
    \ sequence definition\n    let a = 1;\n    let b = 1;\n\n    for i in 1..n {\n\
    \        let tmp = a;\n        a = b;\n        b = tmp + b;\n    }\n\n    a\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: unused variable: `i`\n  --> /tmp/tmpe_xt9uuu.rs:19:9\n   |\n19\
    \ |     for i in 1..n {\n   |         ^ help: if this is intentional, prefix it\
    \ with an underscore: `_i`\n   |\n   = note: `#[warn(unused_variables)]` on by\
    \ default\n\nerror[E0384]: cannot assign twice to immutable variable `a`\n  -->\
    \ /tmp/tmpe_xt9uuu.rs:21:9\n   |\n16 |     let a = 1;\n   |         -\n   |  \
    \       |\n   |         first assignment to `a`\n   |         help: consider making\
    \ this binding mutable: `mut a`\n...\n21 |         a = b;\n   |         ^^^^^\
    \ cannot assign twice to immutable variable\n\nerror[E0384]: cannot assign twice\
    \ to immutable variable `b`\n  --> /tmp/tmpe_xt9uuu.rs:22:9\n   |\n17 |     let\
    \ b = 1;\n   |         -\n   |         |\n   |         first assignment to `b`\n\
    \   |         help: consider making this binding mutable: `mut b`\n...\n22 | \
    \        b = tmp + b;\n   |         ^^^^^^^^^^^ cannot assign twice to immutable\
    \ variable\n\nerror: aborting due to 2 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    prime_fib_memo.with(|memo| {\n  \
    \      let num = memo.insert(*n, ());\n        *num = *num.1;\n        memo.extract();\n\
    \        num.0\n    })\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `prime_fib_memo` in this scope\n  --> /tmp/tmpt_2vspd3.rs:13:5\n\
    \   |\n13 |     prime_fib_memo.with(|memo| {\n   |     ^^^^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpt_2vspd3.rs:14:31\n\
    \   |\n14 |         let num = memo.insert(*n, ());\n   |                     \
    \          ^^\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0425, E0614.\nFor more information about an error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn isprime(n: usize) -> bool {\n\
    \        if n < 2 {\n            return false;\n        }\n        for i in 2..=n\
    \ {\n            if n % i == 0 {\n                return false;\n            }\n\
    \        }\n        return true;\n    }\n\n    if n <= 2 {\n        return n;\n\
    \    }\n\n    for i in 2..=n {\n        if isprime(i) {\n            return i;\n\
    \        }\n    }\n\n    fn is_prime(n: usize) -> bool {\n        if n < 2 {\n\
    \            return false;\n        }\n        for i in 2..=n {\n            if\
    \ n % i == 0 {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n\n    fn sieve(n: usize) -> bool {\n        if n <=\
    \ 2 {\n            return true;\n        }\n        let mut i = 0;\n        let\
    \ mut j = 1;\n        while i < n {\n            if j > i {\n                return\
    \ false;\n            }\n            if n%i == 0 {\n                j += i;\n\
    \                i += j;\n            }\n            i += j;\n            j +=\
    \ i;\n        }\n        return true;\n    }\n\n    if n == 3 {\n        return\
    \ is_prime(3);\n    }\n\n    if is_prime(n) {\n        return n;\n    }\n\n  \
    \  if sieve(n) {\n        return n;\n    }\n\n    if is_prime(n) {\n        return\
    \ n;\n    }\n\n    if sieve(n) {\n        return n;\n    }\n\n    if n%2 == 1\
    \ {\n        return prime_fib(n/2);\n    }\n\n    prime_fib(n/2)\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpress345o.rs:30:20\n   |\n\
    30 |         if isprime(i) {\n   |                    ^ expected `usize`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n   |\n30 |         if isprime(i.try_into().unwrap())\
    \ {\n   |                     ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpress345o.rs:68:16\n   |\n12 | fn prime_fib(n: isize) ->\
    \ isize {\n   |                           ----- expected `isize` because of return\
    \ type\n...\n68 |         return is_prime(3);\n   |                ^^^^^^^^^^^\
    \ expected `isize`, found `bool`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpress345o.rs:71:17\n\
    \   |\n71 |     if is_prime(n) {\n   |                 ^ expected `usize`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n   |\n71 |     if is_prime(n.try_into().unwrap())\
    \ {\n   |                  ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpress345o.rs:75:14\n   |\n75 |     if sieve(n) {\n   |         \
    \     ^ expected `usize`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `usize` and panic if the converted value doesn't fit\n   |\n75 |     if\
    \ sieve(n.try_into().unwrap()) {\n   |               ++++++++++++++++++++\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpress345o.rs:79:17\n   |\n79 |  \
    \   if is_prime(n) {\n   |                 ^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n79 |     if is_prime(n.try_into().unwrap()) {\n   |\
    \                  ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpress345o.rs:83:14\n   |\n83 |     if sieve(n) {\n   |              ^\
    \ expected `usize`, found `isize`\n   |\nhelp: you can convert an `isize` to a\
    \ `usize` and panic if the converted value doesn't fit\n   |\n83 |     if sieve(n.try_into().unwrap())\
    \ {\n   |               ++++++++++++++++++++\n\nerror: aborting due to 6 previous\
    \ errors\n\nFor more information about this e"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_prime(n: isize) -> bool {\n\
    \        if n == 1 || (n % 2 == 0) || (n % 3 == 0) || (n % 5 == 0) || n % 7 ==\
    \ 0 {\n            true\n        } else {\n            false\n        }\n    }\n\
    \n    fn is_fib(n: isize) -> bool {\n        if n <= 2 || n >= 10 {\n        \
    \    true\n        } else {\n            is_prime(n) & !is_prime(n - 1)\n    \
    \    }\n    }\n\n    if is_prime(n) {\n        n\n    } else {\n        if is_fib(n)\
    \ {\n            n - 2\n        } else {\n            n - 1\n        }\n    }\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpl_gd7kr3.rs:42:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a: isize = 0;\n    let mut\
    \ b: isize = 1;\n    loop {\n        if b < n-b { break; }\n        (a, b) = (b,\
    \ a + b) % n;\n    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot mod `(isize, isize)` by `isize`\n  --> /tmp/tmpj6a_gd4g.rs:17:29\n\
    \   |\n17 |         (a, b) = (b, a + b) % n;\n   |                  ----------\
    \ ^ - isize\n   |                  |\n   |                  (isize, isize)\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n > 0);\n\n    // check if\
    \ n is a prime\n    for d in 1..n {\n        if n % d == 0 {\n            return\
    \ d;\n        }\n    }\n\n    // check if n is a Fibonacci number\n    if n <\
    \ 2 {\n        return n;\n    }\n\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2);\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpszmmxzca.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f = 1;\n    let mut i = 2;\n\
    \n    while f % i != 0 {\n        f = (f * i) % n;\n        i += 1;\n    }\n \
    \   return f;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpz5ey45fn.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn fib_n(n: isize) -> isize {\n \
    \       match n {\n            0 => 0,\n            1 => 1,\n            _ =>\
    \ fib_n(n - 1) + fib_n(n - 2),\n        }\n    }\n    fn prime_fib_n(n: isize)\
    \ -> isize {\n        match n {\n            0 => 0,\n            1 => 1,\n  \
    \          _ => prime_fib_n(n - 1) + prime_fib_n(n - 2),\n        }\n    }\n \
    \   match n {\n        0 => 0,\n        1 => 1,\n        _ => fib_n(n - 1) + prime_fib_n(n\
    \ - 2),\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp2pz_4tlb.rs:36:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n > 1);\n    let mut a =\
    \ 1;\n    let mut b = 1;\n    let mut c = 1;\n    while c <= n {\n        if b\
    \ > c {\n            b = a;\n        }\n        a = a + b;\n        c = a + b;\n\
    \    }\n    c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''assertion failed: n > 1'', /tmp/tmpbgqx4uvl.rs:13:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn gcd(n: isize, m: isize) -> isize\
    \ {\n        if n == 1 {\n            return m;\n        }\n        if m == 1\
    \ {\n            return n;\n        }\n        gcd(n % m, m)\n    }\n\n    let\
    \ mut a = 1;\n    let mut b = 1;\n    for _ in 0..n {\n        let mut tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    while b != 0 {\n        if n % b\
    \ == 0 {\n            return b;\n        }\n        let tmp = a % b;\n       \
    \ a = b;\n        b = tmp;\n    }\n    n\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpcbukwm6i.rs:43:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1;\n    let mut f2 =\
    \ 1;\n    while n <= 10 {\n        let mut temp = f2;\n        f2 = f1;\n    \
    \    f1 = temp + f1;\n        n += 1;\n    }\n    if f1 == 1 || f1 == f2 {\n \
    \       return n;\n    }\n    fn divisible_by_two(n: isize) -> bool {\n      \
    \  return n % 2 == 0;\n    }\n    fn divisible_by_three(n: isize) -> bool {\n\
    \        return n % 3 == 0;\n    }\n    if divisible_by_two(n) {\n        return\
    \ f1 + 1;\n    }\n    if divisible_by_three(n) {\n        return f1 + 2;\n   \
    \ }\n    // n is even, now n is divisible by 3\n    // so calculate and return\
    \ the square of n\n    fn square_of_n(n: isize) -> isize {\n        return n *\
    \ n;\n    }\n    if square_of_n(n - 4) == n {\n        return n - 3;\n    }\n\
    \    // n is odd, now n is divisible by 2 or 3\n    // so calculate and return\
    \ the cube of n\n    fn cube_of_n(n: isize) -> isize {\n        return n * n *\
    \ n;\n    }\n    if cube_of_n(n - 3) == n {\n        return n - 2;\n    }\n  \
    \  // n is divisible by both 2 and 3, return the sum of all such numbers\n   \
    \ let mut sum = 0;\n    for i in 0..(n - 2) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: variable does not need to be mutable\n  --> /tmp/tmpyft036wk.rs:16:13\n\
    \   |\n16 |         let mut temp = f2;\n   |             ----^^^^\n   |      \
    \       |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]`\
    \ on by default\n\nerror[E0384]: cannot assign to immutable argument `n`\n  -->\
    \ /tmp/tmpyft036wk.rs:19:9\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |\
    \              - help: consider making this binding mutable: `mut n`\n...\n19\
    \ |         n += 1;\n   |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error; 1 warning emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n > 1);\n\n    if n == 2\
    \ || n == 3 {\n        return n;\n    }\n\n    let mut cur = prime_factors(n)[0];\n\
    \    for j in 2..n {\n        if cur == 1 {\n            break;\n        }\n\n\
    \        cur = cur * j + prime_factors(n - j)[1];\n    }\n\n    cur\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `prime_factors` in this scope\n  -->\
    \ /tmp/tmph1sa0_wn.rs:19:19\n   |\n19 |     let mut cur = prime_factors(n)[0];\n\
    \   |                   ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `prime_factors` in this scope\n  --> /tmp/tmph1sa0_wn.rs:25:25\n\
    \   |\n25 |         cur = cur * j + prime_factors(n - j)[1];\n   |           \
    \              ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while n >= 2 {\n        let c = a + b;\n        a = b;\n        b = c;\n\
    \        n -= 1;\n    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpp5refsfm.rs:19:9\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n19 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1..=n).filter(|x| *is_prime(x)).count();\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpv3dnzqqv.rs:13:25\n\
    \   |\n13 |     (1..=n).filter(|x| *is_prime(x)).count();\n   |              \
    \           ^^^^^^^^ not found in this scope\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpv3dnzqqv.rs:12:27\n   |\n12 | fn prime_fib(n: isize) -> isize {\n\
    \   |    ---------              ^^^^^ expected `isize`, found `()`\n   |    |\n\
    \   |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while b <= n {\n        let c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `13`', /tmp/tmp2wfxvko9.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib_number = 1;\n    let\
    \ mut prime_check = 0;\n\n    while fib_number < n {\n        if prime_check ==\
    \ 0 {\n            fib_number += fib_number;\n        } else {\n            fib_number\
    \ += fib_number + fib_number;\n        }\n        if fib_number % 2 != 0 {\n \
    \           prime_check += 1;\n        }\n    }\n    fib_number\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp2re7mcdg.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = 0;\n    let\
    \ mut prime: isize = 1;\n    while fib <= n {\n        fib = fib + prime + 1;\n\
    \        prime = prime + 2;\n    }\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `3`', /tmp/tmp8mljge1u.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut p = 1;\n    let mut fib =\
    \ 3;\n    while fib <= n {\n        if n%fib == 0 {\n            return fib;\n\
    \        }\n        p += 1;\n        fib += 2;\n    }\n    p\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpz19xv0g1.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut p = 1;\n    let mut q = 2;\n\
    \    while p * p <= n {\n        let mut a = p;\n        let mut b = q;\n    \
    \    while a < b {\n            let mut c = a;\n            a = b;\n         \
    \   b = c + a;\n        }\n        if a > b {\n            break;\n        }\n\
    \        p += 1;\n        q += 1;\n    }\n    if n % p == 0 {\n        p * p\n\
    \    } else {\n        p * q\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to add with overflow'', /tmp/tmpk0np5hh1.rs:21:17

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 0 {\n        panic!(\"prime_fib\
    \ cannot receive a negative number as input!\");\n    }\n\n    // Find nth Fibonacci\
    \ number.\n    let mut a = 0; // first term is 0\n    let mut b = 1; // second\
    \ term is 1\n    let mut fib_number = 1; // first term is 1\n    for _ in 0..n\
    \ {\n        // Calculate next term and update variables for next iteration.\n\
    \        let new_a = a + b;\n        let new_b = a - b;\n        a = new_a;\n\
    \        b = new_b;\n        fib_number = fib_number + 1;\n    }\n\n    // Check\
    \ if number is a prime. if not, return false.\n    if fib_number % 2 == 0 {\n\
    \        panic!(\"prime_fib cannot receive a number that is evenly divisible by\
    \ two!\");\n    }\n    if fib_number % 3 == 0 {\n        panic!(\"prime_fib cannot\
    \ receive a number that is evenly divisible by three!\");\n    }\n\n    // Return\
    \ number.\n    return fib_number;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''prime_fib cannot receive a number that is
    evenly divisible by two!'', /tmp/tmpce68nlwl.rs:32:9

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_fib_iter(a: isize, i: usize)\
    \ -> bool {\n        i <= a && (i + a) % a == 0\n    }\n\n    fn is_prime(a: isize,\
    \ n: isize) -> bool {\n        n > a && (n % a) == 0\n    }\n\n    fn is_fibonacci(a:\
    \ isize, i: usize) -> bool {\n        i >= a && (i + a) % a == 0\n    }\n\n  \
    \  if n < 2 {\n        return n;\n    }\n    if is_prime(n, 2) {\n        return\
    \ n;\n    }\n    if is_fibonacci(n, 2) {\n        return n;\n    }\n\n    if is_fib_iter(5,\
    \ n) {\n        return 5;\n    }\n\n    if is_fib_iter(13, n) {\n        return\
    \ 13;\n    }\n\n    if is_fib_iter(89, n) {\n        return 89;\n    }\n\n   \
    \ let mut x: isize = 1;\n    let mut y: isize = 2;\n    let mut x_prime: isize\
    \ = 2;\n    let mut y_prime: isize = 3;\n\n    while y < n {\n        if x_prime\
    \ + y_prime > n {\n            return n;\n        }\n\n        let mut x_prime_prime:\
    \ isize = 3;\n        while x_prime + y_prime < n && x_prime + y_prime < x_prime_prime\
    \ {\n            x_prime_prime += 2;\n        }\n        let mut y_prime_prime:\
    \ isize = 3;\n        while x_prime + y_prime < n && y_prime + x_prime < y_prime_prime\
    \ {\n            y_prime_prime += 2;\n        }\n\n        let m = x_prime + y_prime\
    \ - x_prime_prime - y_prime_prime;\n        x += 1;\n        y += 1;\n       \
    \ if m % 2 == 0 {\n            x += 1;\n        } else {\n            y += 1;\n\
    \        }\n        x_prime += 2;\n        y_prime += 2;\n    }\n\n    return\
    \ x;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp7fspejlw.rs:35:23\n   |\n\
    35 |     if is_fib_iter(5, n) {\n   |                       ^ expected `usize`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic\
    \ if the converted value doesn't fit\n   |\n35 |     if is_fib_iter(5, n.try_into().unwrap())\
    \ {\n   |                        ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp7fspejlw.rs:39:24\n   |\n39 |     if is_fib_iter(13, n)\
    \ {\n   |                        ^ expected `usize`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `usize` and panic if the converted value doesn't\
    \ fit\n   |\n39 |     if is_fib_iter(13, n.try_into().unwrap()) {\n   |      \
    \                   ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n \
    \ --> /tmp/tmp7fspejlw.rs:43:24\n   |\n43 |     if is_fib_iter(89, n) {\n   |\
    \                        ^ expected `usize`, found `isize`\n   |\nhelp: you can\
    \ convert an `isize` to a `usize` and panic if the converted value doesn't fit\n\
    \   |\n43 |     if is_fib_iter(89, n.try_into().unwrap()) {\n   |            \
    \             ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7fspejlw.rs:14:14\n\
    \   |\n14 |         i <= a && (i + a) % a == 0\n   |              ^ expected `usize`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic\
    \ if the converted value doesn't fit\n   |\n14 |         i <= a.try_into().unwrap()\
    \ && (i + a) % a == 0\n   |               ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp7fspejlw.rs:14:24\n   |\n14 |         i <= a\
    \ && (i + a) % a == 0\n   |                        ^ expected `usize`, found `isize`\n\
    \nerror[E0277]: cannot add `isize` to `usize`\n  --> /tmp/tmp7fspejlw.rs:14:22\n\
    \   |\n14 |         i <= a && (i + a) % a == 0\n   |                      ^ no\
    \ implementation for `usize + isize`\n   |\n   = help: the trait `Add<isize>`\
    \ is not implemented for `usize`\n   = help: the following other types implement\
    \ trait `Add<Rhs>`:\n             <&'a f32 as Add<f32>>\n             <&'a f64\
    \ as Add<f64>>\n             <&'a i128 "
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // check condition\n    if n < 2\
    \ {\n        return 1;\n    }\n\n    let mut sum: isize = 0;\n    let mut count\
    \ = 2;\n\n    while count <= n {\n        if n % count == 0 {\n            sum\
    \ += count;\n            count += 1;\n        }\n        count += 1;\n    }\n\n\
    \    sum\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpbmnmtona.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut ret = 0;\n    let mut a =\
    \ 1;\n    let mut b = 1;\n    while a < n {\n        if n % a == 0 {\n       \
    \     ret = a as isize;\n            break;\n        }\n        a += 1;\n    }\n\
    \    ret = ret + (b - 1);\n    while ret < n {\n        if n % ret == 0 {\n  \
    \          ret = ret + 1;\n            break;\n        }\n        ret += 1;\n\
    \    }\n    ret\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmp3a_h_l9o.rs:25:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = [0, 1];\n    for i\
    \ in 1..n {\n        fib.push(fib[i - 1] + fib[i - 2]);\n    }\n    fib[n]\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `push` found for array `[{integer}; 2]` in\
    \ the current scope\n  --> /tmp/tmpgudb8h9j.rs:15:13\n   |\n15 |         fib.push(fib[i\
    \ - 1] + fib[i - 2]);\n   |             ^^^^ method not found in `[{integer};\
    \ 2]`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n \
    \ --> /tmp/tmpgudb8h9j.rs:15:18\n   |\n15 |         fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n   |                  ^^^^^^^^^^ slice indices are of type `usize` or\
    \ ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not\
    \ implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmpgudb8h9j.rs:15:31\n   |\n15 |         fib.push(fib[i\
    \ - 1] + fib[i - 2]);\n   |                               ^^^^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmpgudb8h9j.rs:17:5\n   |\n17 |     fib[n]\n\
    \   |     ^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n\
    \   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn fib(x: isize) -> isize {\n   \
    \     match x {\n            0 => 0,\n            1 => 1,\n            _ => x\
    \ + fib(x - 1),\n        }\n    }\n    match n {\n        n if n < 0 => panic!(\"\
    Invalid Fibonacci number\"),\n        1 => n,\n        _ => fib(n - 2) as isize,\n\
    \    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmm5xsiv_.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for _ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `13`', /tmp/tmp36pfa2rg.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // base case\n    if n < 2 {\n  \
    \      return n\n    }\n    \n    let mut fibs = [1, 2];\n    for _ in 0..n {\n\
    \        fibs.push(fibs[1..].iter().cloned().next().unwrap() + fibs[2..].iter().cloned().next().unwrap());\n\
    \    }\n    \n    fibs[1..]\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `push` found for array `[{integer}; 2]` in\
    \ the current scope\n  --> /tmp/tmpufxf_6zt.rs:20:14\n   |\n20 |         fibs.push(fibs[1..].iter().cloned().next().unwrap()\
    \ + fibs[2..].iter().cloned().next().unwrap());\n   |              ^^^^ method\
    \ not found in `[{integer}; 2]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpufxf_6zt.rs:23:5\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \ ----- expected `isize` because of return type\n...\n23 |     fibs[1..]\n   |\
    \     ^^^^^^^^^ expected `isize`, found slice `[{integer}]`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut p = 2;\n\n    while p * p\
    \ < n && p < n {\n        if n % p == 0 {\n            p += 1;\n        } else\
    \ {\n            p *= 2;\n        }\n    }\n\n    p\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmp7je1c2cy.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1;\n    let mut f2 =\
    \ 1;\n    let mut f3 = 1;\n    while n >= 2 {\n        let n1 = n % f1;\n    \
    \    let n2 = n % f2;\n        let n3 = n % f3;\n        let f1 = f2;\n      \
    \  let f2 = f3;\n        f3 = n3;\n        n -= n1;\n    }\n    n += f3;\n   \
    \ f3\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: unused variable: `n2`\n  --> /tmp/tmpkgl64jfg.rs:18:13\n   |\n\
    18 |         let n2 = n % f2;\n   |             ^^ help: if this is intentional,\
    \ prefix it with an underscore: `_n2`\n   |\n   = note: `#[warn(unused_variables)]`\
    \ on by default\n\nwarning: unused variable: `f1`\n  --> /tmp/tmpkgl64jfg.rs:20:13\n\
    \   |\n20 |         let f1 = f2;\n   |             ^^ help: if this is intentional,\
    \ prefix it with an underscore: `_f1`\n\nwarning: unused variable: `f2`\n  -->\
    \ /tmp/tmpkgl64jfg.rs:21:13\n   |\n21 |         let f2 = f3;\n   |           \
    \  ^^ help: if this is intentional, prefix it with an underscore: `_f2`\n\nwarning:\
    \ value assigned to `n` is never read\n  --> /tmp/tmpkgl64jfg.rs:25:5\n   |\n\
    25 |     n += f3;\n   |     ^\n   |\n   = note: `#[warn(unused_assignments)]`\
    \ on by default\n   = help: maybe it is overwritten before being read?\n\nwarning:\
    \ variable does not need to be mutable\n  --> /tmp/tmpkgl64jfg.rs:13:9\n   |\n\
    13 |     let mut f1 = 1;\n   |         ----^^\n   |         |\n   |         help:\
    \ remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n\
    warning: variable does not need to be mutable\n  --> /tmp/tmpkgl64jfg.rs:14:9\n\
    \   |\n14 |     let mut f2 = 1;\n   |         ----^^\n   |         |\n   |   \
    \      help: remove this `mut`\n\nerror[E0384]: cannot assign to immutable argument\
    \ `n`\n  --> /tmp/tmpkgl64jfg.rs:23:9\n   |\n12 | fn prime_fib(n: isize) -> isize\
    \ {\n   |              - help: consider making this binding mutable: `mut n`\n\
    ...\n23 |         n -= n1;\n   |         ^^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpkgl64jfg.rs:25:5\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n25 |     n += f3;\n   |     ^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors;\
    \ 6 warnings emitted\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 { return 2 }\n    if n\
    \ == 2 { return 3 }\n    prime_factorization(n).iter().skip(1).fold(n, |a, b|\
    \ {\n        prime_fib(a) * prime_fib(b)\n    })\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `prime_factorization` in this scope\n\
    \  --> /tmp/tmp667v8e68.rs:15:5\n   |\n15 |     prime_factorization(n).iter().skip(1).fold(n,\
    \ |a, b| {\n   |     ^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 1;\n\
    \    loop {\n        if a == b {\n            return a;\n        }\n        match\
    \ n % b {\n            0 => a,\n            _ => b,\n        }\n        b = a\
    \ * (a + 1) / 2;\n        a = b;\n    }\n}\n\nfn main() {\n    let candidate =\
    \ prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n\
    \    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5),\
    \ 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n\
    \    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpro6jok0o.rs:19:9\n   |\n\
    19 | /         match n % b {\n20 | |             0 => a,\n21 | |             _\
    \ => b,\n22 | |         }\n   | |         ^- help: consider using a semicolon\
    \ here\n   | |_________|\n   |           expected `()`, found `isize`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_prime(_: usize) -> bool {\n\
    \        false\n    }\n\n    fn next_prime(_: usize) -> usize {\n        1\n \
    \   }\n\n    fn last_prime(_: usize) -> usize {\n        n\n    }\n\n    fn fibonacci(_:\
    \ usize) -> usize {\n        n\n    }\n\n    fn next(i: usize) -> usize {\n  \
    \      i + 1\n    }\n\n    fn last(i: usize) -> usize {\n        i\n    }\n\n\
    \    fn prime_fib(mut n: usize) -> usize {\n        if n > 4 {\n            n\
    \ = next_prime(n)\n        }\n        fibonacci(n)\n    }\n\n    fn prime_fib_last(mut\
    \ n: usize) -> usize {\n        if n > 4 {\n            n = next_prime(n)\n  \
    \      }\n        fibonacci(n)\n    }\n\n    prime_fib_last(last_prime(n))\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0434]: can't capture dynamic environment in a fn item\n  --> /tmp/tmpynyhjv_9.rs:22:9\n\
    \   |\n22 |         n\n   |         ^\n   |\n   = help: use the `|| { ... }` closure\
    \ form instead\n\nerror[E0434]: can't capture dynamic environment in a fn item\n\
    \  --> /tmp/tmpynyhjv_9.rs:26:9\n   |\n26 |         n\n   |         ^\n   |\n\
    \   = help: use the `|| { ... }` closure form instead\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpynyhjv_9.rs:51:31\n   |\n51 |     prime_fib_last(last_prime(n))\n\
    \   |                               ^ expected `usize`, found `isize`\n   |\n\
    help: you can convert an `isize` to a `usize` and panic if the converted value\
    \ doesn't fit\n   |\n51 |     prime_fib_last(last_prime(n.try_into().unwrap()))\n\
    \   |                                ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpynyhjv_9.rs:51:5\n   |\n12 | fn prime_fib(n: isize) ->\
    \ isize {\n   |                           ----- expected `isize` because of return\
    \ type\n...\n51 |     prime_fib_last(last_prime(n))\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n51 |     prime_fib_last(last_prime(n)).try_into().unwrap()\n\
    \   |                                  ++++++++++++++++++++\n\nerror: aborting\
    \ due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0434.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010827
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 { return 2; }\n    if n\
    \ < 7 { return n; }\n    prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmpm4sfs6de.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut f1 = 1;\n    let mut f2 = 1;\n    for _ in 2..n {\n     \
    \   let mid = f1 + f2;\n        f1 = f2;\n        f2 = mid;\n    }\n    f2\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpznbw2kfu.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 5;\n    }\n\n    fn primes(n1: isize, n2: isize) -> isize {\n        let mut\
    \ i = 1;\n        let mut sum: isize = n1;\n        while i <= n2 {\n        \
    \    sum += i;\n            if sum == n2 {\n                return i;\n      \
    \      }\n            i += 2;\n        }\n\n        return n2;\n    }\n\n    //\
    \ Find prime numbers from 2 to n and multiply them with each other.\n    let mut\
    \ prime_numbers = vec![2, 3, 5];\n    for i in 1..n {\n        let p = primes(i,\
    \ n);\n        if p > prime_numbers.len() {\n            prime_numbers.resize(p,\
    \ p);\n        }\n    }\n\n    prime_numbers[prime_numbers.len() - 1]\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp0j4w56xo.rs:41:16\n   |\n\
    41 |         if p > prime_numbers.len() {\n   |                ^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n41 |         if\
    \ p > prime_numbers.len().try_into().unwrap() {\n   |                        \
    \           ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp0j4w56xo.rs:42:34\n\
    \   |\n42 |             prime_numbers.resize(p, p);\n   |                    \
    \              ^ expected `usize`, found `isize`\n   |\nhelp: you can convert\
    \ an `isize` to a `usize` and panic if the converted value doesn't fit\n   |\n\
    42 |             prime_numbers.resize(p.try_into().unwrap(), p);\n   |       \
    \                            ++++++++++++++++++++\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1u64 << n).try_add(1, 1).unwrap()\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `try_add` found for type `u64` in the current\
    \ scope\n  --> /tmp/tmpzzkr6usp.rs:13:17\n   |\n13 |     (1u64 << n).try_add(1,\
    \ 1).unwrap()\n   |                 ^^^^^^^ method not found in `u64`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut cache: isize = prime_cache[n];\n\
    \    if cache != 0 {\n        return cache;\n    }\n    if n <= 1 {\n        return\
    \ n;\n    }\n    let mut result = 1;\n    let mut prime_cache = [0i32; 5];\n \
    \   for i in 2..(n - 1) {\n        let result = result + i;\n        if prime_cache[2\
    \ * result - 1] != 0 {\n            prime_cache[2 * result - 1] = 0;\n       \
    \ }\n        if prime_cache[2 * result + 1] != 0 {\n            prime_cache[2\
    \ * result + 1] = 0;\n        }\n    }\n    prime_cache[n] = result;\n    result\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `prime_cache` in this scope\n  --> /tmp/tmp8no3q43_.rs:13:28\n\
    \   |\n13 |     let mut cache: isize = prime_cache[n];\n   |                 \
    \           ^^^^^^^^^^^ not found in this scope\n\nerror[E0277]: the type `[i32]`\
    \ cannot be indexed by `isize`\n  --> /tmp/tmp8no3q43_.rs:24:12\n   |\n24 |  \
    \       if prime_cache[2 * result - 1] != 0 {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[i32]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `[i32]`\n\nerror[E0277]:\
    \ the type `[i32]` cannot be indexed by `isize`\n  --> /tmp/tmp8no3q43_.rs:25:13\n\
    \   |\n25 |             prime_cache[2 * result - 1] = 0;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[i32]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `[i32]`\n\nerror[E0277]:\
    \ the type `[i32]` cannot be indexed by `isize`\n  --> /tmp/tmp8no3q43_.rs:27:12\n\
    \   |\n27 |         if prime_cache[2 * result + 1] != 0 {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[i32]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `[i32]`\n\nerror[E0277]:\
    \ the type `[i32]` cannot be indexed by `isize`\n  --> /tmp/tmp8no3q43_.rs:28:13\n\
    \   |\n28 |             prime_cache[2 * result + 1] = 0;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[i32]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n "
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 5;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n    }\n    else {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp0bucrv1a.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 2;\n\
    \    while a < n {\n        if b > n {\n            return n;\n        }\n   \
    \     if a > n / 2 {\n            return a;\n        }\n        let c = a + b;\n\
    \        a = b;\n        b = c;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpxi0zz1ug.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n\n    }\n    let mut f1 = 1;\n    let mut f2 = 1;\n    while f2 < n {\n   \
    \     let mut c = f1 + f2;\n        f1 = f2;\n        f2 = c;\n    }\n    return\
    \ f2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9sd4vtqv.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    match n % 2 {\n        0 => 1,\n\
    \        1 => 2,\n        _ => prime_fib(n - 1) + prime_fib(n - 2),\n    }\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `3`', /tmp/tmpv2h957jd.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 { return 1 }\n    if n %\
    \ 2 == 0 { return prime_fib(n - 2) }\n    prime_fib(n - 1) + prime_fib(n - 2)\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp1rkn8c55.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: -1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // if n is even then n is fib(n-1)\
    \ which is fib(2)\n    if n % 2 == 0 {\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    } else {\n        prime_fib(n - 3) + prime_fib(n - 4)\n    }\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010833
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn fibonacci_prime(n: isize) -> isize\
    \ {\n        if n < 2 {\n            n\n        } else {\n            fibonacci_prime(n\
    \ - 2) + fibonacci_prime(n - 1)\n        }\n    }\n\n    match n {\n        n\
    \ if n < 20 => n,\n        n if n < 100 => fibonacci_prime(n),\n        n if n\
    \ < 400 => prime_fib(fibonacci_prime(n)),\n        n if n < 800 => prime_fib(prime_fib(fibonacci_prime(n))),\n\
    \        n if n < 1600 => prime_fib(prime_fib(prime_fib(fibonacci_prime(n))))\n\
    \        else => prime_fib(prime_fib(prime_fib(prime_fib(fibonacci_prime(n)))))\n\
    \    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `,`, `.`, `?`, `}`, or an operator, found keyword\
    \ `else`\n  --> /tmp/tmpdwlj67lf.rs:27:9\n   |\n26 |         n if n < 1600 =>\
    \ prime_fib(prime_fib(prime_fib(fibonacci_prime(n))))\n   |                  \
    \     -- while parsing the `match` arm starting here        - expected one of\
    \ `,`, `.`, `?`, `}`, or an operator\n27 |         else => prime_fib(prime_fib(prime_fib(prime_fib(fibonacci_prime(n)))))\n\
    \   |         ^^^^ unexpected token\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // return n<4?2:prime_fib(n / 2)\
    \ + prime_fib(n / 3);\n    let mut prime = u64::from(1);\n    prime += prime;\n\
    \    prime += prime;\n    prime += prime;\n    prime %= u64::from(31);\n    prime\
    \ -= 1;\n    if n < 4 {\n        prime\n    } else {\n        prime_fib(n + 3)\n\
    \    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpgy1u222e.rs:21:9\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n21 |         prime\n   |         ^^^^^\
    \ expected `isize`, found `u64`\n   |\nhelp: you can convert a `u64` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n21 |         prime.try_into().unwrap()\n\
    \   |              ++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = 1;\n    let mut prime\
    \ = 1;\n    for _ in 0..n {\n        fib = fib + prime;\n        prime = fib;\n\
    \    }\n    fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `3`', /tmp/tmpr6qa_ddk.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    match n {\n        2 => 2,\n    \
    \    3 => 3,\n        4 => 5,\n        5 => 13,\n        6 => 89,\n        n =>\
    \ {\n            let mut fib = [0, 1];\n            let mut i = 1;\n         \
    \   while i <= n {\n                fib.push(fib[i - 1] + fib[i - 2]);\n     \
    \           i += 1;\n            }\n            fib[n]\n        }\n    }\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `push` found for array `[{integer}; 2]` in\
    \ the current scope\n  --> /tmp/tmpuhry30ks.rs:23:21\n   |\n23 |             \
    \    fib.push(fib[i - 1] + fib[i - 2]);\n   |                     ^^^^ method\
    \ not found in `[{integer}; 2]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmpuhry30ks.rs:23:26\n   |\n23 |         \
    \        fib.push(fib[i - 1] + fib[i - 2]);\n   |                          ^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the\
    \ trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because\
    \ of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\nerror[E0277]:\
    \ the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpuhry30ks.rs:23:39\n\
    \   |\n23 |                 fib.push(fib[i - 1] + fib[i - 2]);\n   |         \
    \                              ^^^^^^^^^^ slice indices are of type `usize` or\
    \ ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not\
    \ implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmpuhry30ks.rs:26:13\n   |\n26 |         \
    \    fib[n]\n   |             ^^^^^^ slice indices are of type `usize` or ranges\
    \ of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `[{integer}]`\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_prime(_: isize) -> bool {\n\
    \        0\n    }\n\n    fn is_composite(_: isize) -> bool {\n        1\n    }\n\
    \n    let mut fib = vec![0, 1];\n    fib.push(fib.clone());\n    fib.push(fib.clone());\n\
    \    for _ in 2..n {\n        for &f in fib {\n            if is_prime(f) == false\
    \ {\n                is_prime(f + 1);\n            }\n        }\n    }\n    fib\n\
    \        .iter()\n        .find(|&f| is_composite(f) == true)\n        .unwrap_or(n\
    \ - 2)\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpfdae1yy5.rs:22:14\n   |\n\
    22 |     fib.push(fib.clone());\n   |              ^^^^^^^^^^^ expected integer,\
    \ found struct `Vec`\n   |\n   = note: expected type `{integer}`\n           \
    \ found struct `Vec<{integer}>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpfdae1yy5.rs:23:14\n\
    \   |\n23 |     fib.push(fib.clone());\n   |              ^^^^^^^^^^^ expected\
    \ integer, found struct `Vec`\n   |\n   = note: expected type `{integer}`\n  \
    \          found struct `Vec<{integer}>`\n\nerror[E0308]: mismatched types\n \
    \ --> /tmp/tmpfdae1yy5.rs:25:13\n   |\n25 |         for &f in fib {\n   |    \
    \         ^^    --- this expression has type `Option<{integer}>`\n   |       \
    \      |\n   |             expected integer, found reference\n   |           \
    \  help: you can probably remove the explicit borrow: `f`\n   |\n   = note:  \
    \ expected type `{integer}`\n           found reference `&_`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpfdae1yy5.rs:33:33\n   |\n33 |         .find(|&f|\
    \ is_composite(f) == true)\n   |                                 ^ expected `isize`,\
    \ found `&{integer}`\n   |\nhelp: consider dereferencing the borrow\n   |\n33\
    \ |         .find(|&f| is_composite(*f) == true)\n   |                       \
    \          +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpfdae1yy5.rs:34:20\n\
    \   |\n34 |         .unwrap_or(n - 2)\n   |                    ^^^^^\n   |   \
    \                 |\n   |                    expected `&{integer}`, found `isize`\n\
    \   |                    help: consider borrowing here: `&(n - 2)`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpfdae1yy5.rs:31:5\n   |\n12 |   fn prime_fib(n:\
    \ isize) -> isize {\n   |                             ----- expected `isize` because\
    \ of return type\n...\n31 | /     fib\n32 | |         .iter()\n33 | |        \
    \ .find(|&f| is_composite(f) == true)\n34 | |         .unwrap_or(n - 2)\n   |\
    \ |_________________________^ expected `isize`, found `&{integer}`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n31 |     *fib\n   |     +\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpfdae1yy5.rs:14:9\n   |\n13 |     fn is"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1;\n    let mut f2 =\
    \ 1;\n    while f2 < n {\n        if f1 == f2 {\n            return f1;\n    \
    \    }\n        let mut f3 = f1 + f2;\n        f1 = f2;\n        f2 = f3;\n  \
    \  }\n    f2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp7wo1l645.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    use std::cmp::min;\n    use std::cmp::max;\n\
    \n    let mut x = 1;\n    let mut y = 2;\n\n    // prime number loop\n    while\
    \ y < n {\n        if x == n {\n            return y;\n        }\n\n        //\
    \ try next iteration\n        if y < n {\n            y = x + y;\n           \
    \ x = min(x, y);\n        }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "warning: unused import: `std::cmp::max`\n  --> /tmp/tmpxsk_f8gd.rs:14:9\n\
    \   |\n14 |     use std::cmp::max;\n   |         ^^^^^^^^^^^^^\n   |\n   = note:\
    \ `#[warn(unused_imports)]` on by default\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpxsk_f8gd.rs:20:5\n   |\n12 |   fn prime_fib(n: isize) -> isize\
    \ {\n   |                             ----- expected `isize` because of return\
    \ type\n...\n20 | /     while y < n {\n21 | |         if x == n {\n22 | |    \
    \         return y;\n23 | |         }\n...  |\n29 | |         }\n30 | |     }\n\
    \   | |_____^ expected `isize`, found `()`\n\nerror: aborting due to previous\
    \ error; 1 warning emitted\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ 1;\n    }\n    prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp53k4doow.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n\n  \
    \  }\n\n    let mut a: isize = 1;\n    let mut b: isize = 2;\n    while b * b\
    \ <= n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n    if\
    \ b > n {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpkwbt7hcs.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 2 {\n        return 1;\n\
    \    }\n    if n == 3 {\n        return 2;\n    }\n    if n % 2 == 0 {\n     \
    \   return prime_fib(n / 2) as isize; // return n-1 since it's prime\n    }\n\
    \    return prime_fib(3 * n + 2) as isize;\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to multiply with overflow'', /tmp/tmp9khgq_f2.rs:22:22

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // https://en.wikipedia.org/wiki/Primality_test#Naive_Primality_Test\n\
    \    // https://en.wikipedia.org/wiki/Primality_test#Primality_tests_that_use_the_Zero_of_the_Ones\n\
    \    let mut a = 1isize;\n    let mut b = 1isize;\n    loop {\n        if !((n\
    \ % a) == 0 && (n % b) == 0) {\n            return n;\n        }\n        a +=\
    \ 1;\n        b += 1;\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpceo4zag5.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a: isize = 0;\n    let mut\
    \ b: isize = 1;\n    while b < n {\n        a = b;\n        b = a + b;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpw4encz95.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut counter = 0;\n    let mut\
    \ fib: (isize, isize) = (1, 1);\n    while counter < n {\n        let next_fib\
    \ = fib.0;\n        if fib.1 == next_fib + fib.1 {\n            fib = fib.1;\n\
    \        } else {\n            fib = next_fib;\n        }\n        counter +=\
    \ 1;\n    }\n    fib.0\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmphnk9xy5m.rs:18:19\n   |\n\
    14 |     let mut fib: (isize, isize) = (1, 1);\n   |                  --------------\
    \ expected due to this type\n...\n18 |             fib = fib.1;\n   |        \
    \           ^^^^^ expected tuple, found `isize`\n   |\n   = note: expected tuple\
    \ `(isize, isize)`\n               found type `isize`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmphnk9xy5m.rs:20:19\n   |\n14 |     let mut fib: (isize,\
    \ isize) = (1, 1);\n   |                  -------------- expected due to this\
    \ type\n...\n20 |             fib = next_fib;\n   |                   ^^^^^^^^\
    \ expected tuple, found `isize`\n   |\n   = note: expected tuple `(isize, isize)`\n\
    \               found type `isize`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: -1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 { 1 } else { prime_fib(n\
    \ - 1) + prime_fib(n - 2) }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010833
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 0;\n    let mut b = 1;\n    while b < n {\n        let\
    \ mut c = a + b;\n        a = b;\n        b = c;\n    }\n    c\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `c` in this scope\n  --> /tmp/tmpcb1b_3i3.rs:24:5\n\
    \   |\n24 |     c\n   |     ^ help: a local variable with a similar name exists:\
    \ `a`\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // fibonacci\n    if n <= 1 {\n \
    \       return 1;\n    }\n\n    let mut fib: Vec<isize> = Vec::new();\n    fib.push(1);\n\
    \    fib.push(2);\n    for (i, value) in fib.iter().enumerate() {\n        let\
    \ mut tmp: isize = 1;\n        if i >= n {\n            break;\n        }\n  \
    \      for value in fib.iter().skip(i + 1) {\n            tmp += value;\n    \
    \    }\n        if tmp == n {\n            return value;\n        }\n    }\n\n\
    \    -1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpqofm_g7v.rs:23:17\n   |\n\
    23 |         if i >= n {\n   |                 ^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n23 |         if i >= n.try_into().unwrap() {\n   |\
    \                  ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpqofm_g7v.rs:30:20\n   |\n30 |             return value;\n   |      \
    \              ^^^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n30 |             return *value;\n   |                    +\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    match n {\n        1 => 2,\n    \
    \    2 => 3,\n        _ => fib(n - 1).unwrap()\n    }\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fib` in this scope\n  --> /tmp/tmpnh3v5w2n.rs:16:14\n\
    \   |\n16 |         _ => fib(n - 1).unwrap()\n   |              ^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn next_fibonacci(n: isize) -> isize\
    \ {\n        if n < 2 || n % 2 == 0 {\n            n\n        } else {\n     \
    \       (n * 3 + 1) & !(n * 3 % 2)\n        }\n    }\n\n    fn is_prime(n: isize)\
    \ -> bool {\n        n <= 2\n    }\n\n    let mut i = 1;\n    while i < n {\n\
    \        let j = next_fibonacci(i);\n        if is_prime(j) {\n            i +=\
    \ 1;\n        }\n    }\n    i\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprh48kzlc.rs:37:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f = 0;\n    let mut fib =\
    \ 1;\n    while f < n {\n        if f % 2 == 0 {\n            fib = fib * 2;\n\
    \        } else {\n            fib = fib + fib.1;\n        }\n        f += 1;\n\
    \    }\n    fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0610]: `{integer}` is a primitive type and therefore doesn't have\
    \ fields\n  --> /tmp/tmpmv8_ho9b.rs:19:29\n   |\n19 |             fib = fib +\
    \ fib.1;\n   |                             ^\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0610`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return n;\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    else {\n        return prime_fib(n - 2) + prime_fib(n - 3);\n    }\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprhvkvwec.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    if n < 6 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n\n    if n % 6 == 1 {\n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2);\n    }\n\n    if n % 6 == 2 {\n        return prime_fib(n - 2) + prime_fib(n\
    \ - 4);\n    }\n\n    if n % 6 == 3 {\n        return prime_fib(n - 3) + prime_fib(n\
    \ - 5);\n    }\n\n    if n % 6 == 4 {\n        return prime_fib(n - 5) + prime_fib(n\
    \ - 7);\n    }\n\n    if n % 6 == 5 {\n        return prime_fib(n - 7) + prime_fib(n\
    \ - 9);\n    }\n\n    if n % 6 == 6 {\n        return prime_fib(n - 9) + prime_fib(n\
    \ - 11);\n    }\n\n    if n % 6 == 7 {\n        return prime_fib(n - 11) + prime_fib(n\
    \ - 13);\n    }\n\n    if n % 6 == 8 {\n        return prime_fib(n - 13) + prime_fib(n\
    \ - 15);\n    }\n\n    if n % 6 == 9 {\n        return prime_fib(n - 15) + prime_fib(n\
    \ - 17);\n    }\n\n    if n % 6 == 10 {\n        return prime_fib(n - 17) + prime_fib(n\
    \ - 19);\n    }\n\n    if n % 6 == 11 {\n        return prime_fib(n - 19) + prime_fib(n\
    \ - 21);\n    }\n\n    if n % 6 == 12 {\n        return prime_fib(n - 21) + prime_fib(n\
    \ - 23);\n    }\n\n    if n % 6 == 13 {\n        return prime_fib(n - 23) + prime_fib(n\
    \ - 25);\n    }\n\n    if n % 6 == 14 {\n        return prime_fib(n - 25) + prime_fib(n\
    \ - 27);\n    }\n\n    if n % 6 == 15 {\n        return prime_fib(n - 27) + prime_fib(n\
    \ - 29);\n    }\n\n    if n % 6 == 16 {\n        return prime_fib(n - 29) + prime_fib(n\
    \ - 31);\n    }\n\n    if n % 6 == 17 {\n        return prime_fib(n - 31) + prime_fib(n\
    \ - 33);\n    }\n\n    if n % 6 == 18 {\n        return prime_fib(n - 33) + prime_fib(n\
    \ - 35);\n    }\n\n    if n % 6 == 19 {\n        return prime_fib(n - 35) + prime_fib(n\
    \ - 37);\n    }\n\n    if n % 6 == 20 {\n        return prime_fib(n - 37) + prime_fib(n\
    \ - 39);\n    }\n\n    if n % 6 == 21 {\n}\n\nfn main() {\n    let candidate =\
    \ prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n\
    \    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5),\
    \ 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n\
    \    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp_aktpasp.rs:116:3\n\
    \    |\n12  | fn prime_fib(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n101 |     if n % 6 == 21 {\n    |      \
    \              - this delimiter might not be properly closed...\n102 | }\n   \
    \ | - ...as it matches this but it has different indentation\n...\n116 | }\n \
    \   |   ^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_aktpasp.rs:12:27\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------             \
    \ ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (0..n).fold(0, |acc, _| {\n     \
    \   if n % acc + acc + 1 == 0 {\n            n\n        } else {\n           \
    \ acc\n        }\n    })\n}\n\nfn main() {\n    let candidate = prime_fib;\n \
    \   assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpr5ul0r_x.rs:14:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut result = 1;\n    if n ==\
    \ 1 { result = 2; }\n    if n == 2 { result = 3; }\n    if n <= 1 { return result;\
    \ }\n    for i in 2..(n + 1) {\n        if i % 2 == 0 && i != n { break; }\n \
    \       result *= i;\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n\
    \    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5),\
    \ 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n\
    \    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `3`', /tmp/tmpdl6w5i0n.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 2;\n\
    \    while b * b <= n {\n        if n % b == 0 {\n            return b;\n    \
    \    }\n        a += 1;\n        b += 1;\n    }\n    a\n}\n\nfn main() {\n   \
    \ let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpp6dsoxfm.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a: isize = n + 1;\n    let\
    \ mut b: isize = n + 1;\n    let mut c: isize = n + 1;\n\n    loop {\n       \
    \ a %= n;\n        c += a;\n        b += c;\n\n        if b > n {\n          \
    \  return b;\n        }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `2`', /tmp/tmp70qe2bi_.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n <= 6);\n\n    if n == 0\
    \ || n == 1 {\n        return n;\n    }\n\n    let mut counter = 2;\n\n    while\
    \ counter < n {\n        let mut current = counter;\n        counter += 1;\n \
    \       while current % 2 == 0 {\n            current /= 2;\n        }\n     \
    \   while current % 3 == 0 {\n            current /= 3;\n        }\n        while\
    \ current % 5 == 0 {\n            current /= 5;\n        }\n        if current\
    \ == 1 {\n            break;\n        }\n    }\n    counter\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpqjrs0icv.rs:42:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    use num_traits::Prime;\n\n    let\
    \ mut fibs = vec![1, 1, 2];\n    for i in 0..n {\n        fibs.push(fibs[i - 2]\
    \ + fibs[i - 1]);\n    }\n\n    fibs[n - 2]\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0432]: unresolved import `num_traits`\n  --> /tmp/tmpgzxk8m0g.rs:13:9\n\
    \   |\n13 |     use num_traits::Prime;\n   |         ^^^^^^^^^^ maybe a missing\
    \ crate `num_traits`?\n\nerror[E0277]: the type `[{integer}]` cannot be indexed\
    \ by `isize`\n  --> /tmp/tmpgzxk8m0g.rs:17:19\n   |\n17 |         fibs.push(fibs[i\
    \ - 2] + fibs[i - 1]);\n   |                   ^^^^^^^^^^^ slice indices are of\
    \ type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]`\
    \ cannot be indexed by `isize`\n  --> /tmp/tmpgzxk8m0g.rs:17:33\n   |\n17 |  \
    \       fibs.push(fibs[i - 2] + fibs[i - 1]);\n   |                          \
    \       ^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n \
    \  |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpgzxk8m0g.rs:20:5\n\
    \   |\n20 |     fibs[n - 2]\n   |     ^^^^^^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is\
    \ not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0432.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 1;\n\
    \    loop {\n        let c = a + b;\n        if c > n {\n            break;\n\
    \        }\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n \
    \   let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp0iy7t190.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return n;\n\
    \    }\n\n    fn fibonacci(n: isize) -> isize {\n        if n == 1 || n == 2 {\n\
    \            return 1;\n        }\n        fibonacci(n - 2) + fibonacci(n - 1)\n\
    \    }\n    fibonacci(n);\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpfkg6vplj.rs:12:27\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n...\n23 |     fibonacci(n);\n   |      \
    \           - help: remove this semicolon\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 2;\n\
    \    while (b < n && a < n) {\n        assert!(a <= b);\n        let mut c = a\
    \ + b;\n        a = b;\n        b = c;\n    }\n    a\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpj3lwswem.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut i = 1;\n    let mut tmp:\
    \ isize = 0;\n    while i < n {\n        if primes.iter().any(|&x| x == i) { i\
    \ += 2 } else {\n            i += 1;\n        }\n        tmp += i;\n    }\n  \
    \  i + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `primes` in this scope\n  --> /tmp/tmpi54qxjpv.rs:16:12\n\
    \   |\n16 |         if primes.iter().any(|&x| x == i) { i += 2 } else {\n   |\
    \            ^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 { 1 }\n    else if n <\
    \ 2 { n }\n    else { prime_fib(n - 1) + prime_fib(n - 2) }\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpp2fpqqdf.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = 1u64;\n\n    for _\
    \ in 0..n {\n        fib += 1;\n    }\n\n    if n >= 2 {\n        if fib > 2 {\n\
    \            return fib;\n        } else {\n            fib += 1;\n        }\n\
    \    }\n\n    fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxzajzthf.rs:21:20\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n21 |             return fib;\n   |    \
    \                ^^^ expected `isize`, found `u64`\n   |\nhelp: you can convert\
    \ a `u64` to an `isize` and panic if the converted value doesn't fit\n   |\n21\
    \ |             return fib.try_into().unwrap();\n   |                       ++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpxzajzthf.rs:27:5\n   |\n12 | fn\
    \ prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n27 |     fib\n   |     ^^^ expected `isize`,\
    \ found `u64`\n   |\nhelp: you can convert a `u64` to an `isize` and panic if\
    \ the converted value doesn't fit\n   |\n27 |     fib.try_into().unwrap()\n  \
    \ |        ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 { 1 }\n    else\
    \ if n % 2 == 0 { prime_fib(n - 1) + prime_fib(n - 2) }\n    else { prime_fib(n\
    \ / 2) + prime_fib(n / 3) }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwfiianwh.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 1..n {\n        if a == b {\n            return i;\n        }\n\
    \        a = b;\n        b = a + b;\n    }\n    return n;\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp2v_oh3zj.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n\n    }\n\n    // F(2) is the first Fibonacci number that is a prime.\n   \
    \ // F(3) and F(4) are F(2) and F(3).\n    // F(5) is the F(4) + F(6).\n    fn\
    \ f(n: isize) -> isize {\n        if n == 0 || n == 1 {\n            return n\n\
    \        }\n\n        // F(n) = F(n - 1) + F(n - 2).\n        fn g(n: isize) ->\
    \ isize {\n            if n == 0 || n == 1 {\n                return n\n     \
    \       }\n\n            fn h(n: isize) -> isize {\n                if n == 0\
    \ || n == 1 {\n                    return n\n                }\n\n           \
    \     fn i(n: isize) -> isize {\n                    if n == 0 || n == 1 {\n \
    \                       return n\n                    }\n\n                  \
    \  let mut c = 0;\n                    for j in 1 .. n {\n                   \
    \     let a = 1;\n                        let b = 1;\n                       \
    \ for k in 1 .. j {\n                            let mut tmp_a = a;\n        \
    \                    let tmp_b = b;\n                            a = tmp_a + b;\n\
    \                            b = tmp_b + a;\n                        }\n     \
    \                   c += tmp_a;\n                    }\n                    c\n\
    \                }\n\n                let mut a = 1;\n                let b =\
    \ 1;\n                for k in 1 .. n {\n                    let mut tmp_a = a;\n\
    \                    let tmp_b = b;\n                    a = tmp_a + b;\n    \
    \                b = tmp_b + a;\n                }\n                h(i)\n   \
    \         }\n\n            g(n)\n        }\n\n        g(n)\n    }\n\n    if n\
    \ % 2 == 0 {\n        f(n - 1) + f(n - 2)\n    } else {\n        let mut c = f(n\
    \ - 1) + f(n - 2);\n        c = c + f(n - 1);\n        c\n    }\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `tmp_a` in this scope\n  --> /tmp/tmpuauxye62.rs:51:30\n\
    \   |\n51 |                         c += tmp_a;\n   |                        \
    \      ^^^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpuauxye62.rs:64:19\n   |\n36 |                 fn i(n: isize) -> isize\
    \ {\n   |                 ----------------------- fn(isize) -> isize {i} defined\
    \ here\n...\n64 |                 h(i)\n   |                   ^ expected `isize`,\
    \ found fn item\n   |\n   = note: expected type `isize`\n           found fn item\
    \ `fn(isize) -> isize {i}`\nhelp: use parentheses to call this function\n   |\n\
    64 |                 h(i(n))\n   |                    +++\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0425.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut curr = 1;\n    let mut next\
    \ = 2;\n    while curr <= n {\n        if next % curr == 0 {\n            return\
    \ next;\n        }\n        curr = next;\n        next = next + 2;\n    }\n  \
    \  n\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmpymq_qfym.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a: isize = 0;\n    let mut\
    \ b: isize = 1;\n    for _ in 0..n {\n        if a == 0 {\n            a = b;\n\
    \        }\n        b = a + b;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `5`', /tmp/tmp7cbqaagj.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 {\n        return 1;\n\
    \    }\n\n    let mut next_n = 1;\n\n    for i in 2..n {\n        if next_n %\
    \ i == 0 {\n            return 0;\n        }\n\n        next_n += 1;\n    }\n\n\
    \    1;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp7ef330n8.rs:12:27\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n...\n27 |     1;\n   |      - help: remove\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n < 4 {\n        return n - 1;\n    }\n    if n < 9 {\n        return\
    \ prime_fib(n - 2) + prime_fib(n - 4);\n    }\n    if n % 2 == 0 {\n        return\
    \ prime_fib(n - 3) + prime_fib(n - 6);\n    }\n    if n % 3 == 0 {\n        return\
    \ prime_fib(n - 5) + prime_fib(n - 8);\n    }\n    if n % 5 == 0 {\n        return\
    \ prime_fib(n - 7) + prime_fib(n - 11);\n    }\n    if n % 7 == 0 {\n        return\
    \ prime_fib(n - 13) + prime_fib(n - 17);\n    }\n    prime_fib(n - 1) + prime_fib(n\
    \ - 3) + prime_fib(n - 7)\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpbii26xhf.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1..n).filter(|i| *i == *i / 2 ||\
    \ i).next().unwrap()\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxbhyegyl.rs:13:39\n   |\n\
    13 |     (1..n).filter(|i| *i == *i / 2 || i).next().unwrap()\n   |          \
    \                             ^ expected `bool`, found `&isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 || n == 2 {\n        return\
    \ 2;\n    }\n    let mut a = 3;\n    let mut b = 1;\n    while b < n {\n     \
    \   if b % 2 == 1 {\n            a += 1;\n        }\n        b += 1;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmppoo2wxww.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // Find the nth Fibonacci number\
    \ that is also a prime number.\n    let mut nth_fibonacci = 1 + 2;\n    while\
    \ nth_fibonacci < n {\n        // Find prime numbers from 2 to sqrt(nth_fibonacci).\n\
    \        let mut i = 2;\n        while i <= nth_fibonacci {\n            if n\
    \ % i == 0 {\n                return n - i;\n            }\n            i += 1;\n\
    \        }\n        nth_fibonacci += 1;\n    }\n    n\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpv5yjbkd1.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: [isize; 2] = [0; 2];\n\
    \    let mut prime: [isize; 2] = [0; 2];\n    fib[0] = 0;\n    fib[1] = 1;\n \
    \   for &x in &fib[1..] {\n        if x <= n {\n            let mut p = 2;\n \
    \           while x <= n {\n                prime [p..] = fib[p..] * x;\n    \
    \            p += 1;\n                x += 1;\n            }\n        } else {\n\
    \            prime [p..] = fib[p..] * n;\n            break;\n        }\n    }\n\
    \    prime[..]\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `p` in this scope\n  --> /tmp/tmpupiv40zu.rs:26:20\n\
    \   |\n26 |             prime [p..] = fib[p..] * n;\n   |                    ^\
    \ help: a local variable with a similar name exists: `n`\n\nerror[E0425]: cannot\
    \ find value `p` in this scope\n  --> /tmp/tmpupiv40zu.rs:26:31\n   |\n26 |  \
    \           prime [p..] = fib[p..] * n;\n   |                               ^\
    \ help: a local variable with a similar name exists: `n`\n\nerror[E0369]: cannot\
    \ multiply `[isize]` by `isize`\n  --> /tmp/tmpupiv40zu.rs:21:40\n   |\n21 | \
    \                prime [p..] = fib[p..] * x;\n   |                           \
    \    -------- ^ - isize\n   |                               |\n   |          \
    \                     [isize]\n\nerror[E0277]: the size for values of type `[isize]`\
    \ cannot be known at compilation time\n  --> /tmp/tmpupiv40zu.rs:21:17\n   |\n\
    21 |                 prime [p..] = fib[p..] * x;\n   |                 ^^^^^^^^^^^\
    \ doesn't have a size known at compile-time\n   |\n   = help: the trait `Sized`\
    \ is not implemented for `[isize]`\n   = note: the left-hand-side of an assignment\
    \ must have a statically known size\n\nerror[E0369]: cannot multiply `[isize]`\
    \ by `isize`\n  --> /tmp/tmpupiv40zu.rs:26:36\n   |\n26 |             prime [p..]\
    \ = fib[p..] * n;\n   |                           -------- ^ - isize\n   |   \
    \                        |\n   |                           [isize]\n\nerror[E0277]:\
    \ the size for values of type `[isize]` cannot be known at compilation time\n\
    \  --> /tmp/tmpupiv40zu.rs:26:13\n   |\n26 |             prime [p..] = fib[p..]\
    \ * n;\n   |             ^^^^^^^^^^^ doesn't have a size known at compile-time\n\
    \   |\n   = help: the trait `Sized` is not implemented for `[isize]`\n   = note:\
    \ the left-hand-side of an assignment must have a statically known size\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpupiv40zu.rs:30:5\n   |\n12 | fn prime_fib(n:\
    \ isize) -> isize {\n   |                           ----- expected `isize` because\
    \ of return type\n...\n30 |     prime[..]\n   |     ^^^^^^^^^ expected `isize`,\
    \ found slice `[isize]`\n\nerror: aborting due to 7 pr"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn check() -> bool {\n        fn\
    \ is_prime(a: isize) -> bool {\n            (a % 2) == 0 && a > 1 && a < 100\n\
    \        }\n        for a in 2..100 {\n            if !is_prime(a) {\n       \
    \         return false;\n            }\n            if n % a == 0 {\n        \
    \        return false;\n            }\n        }\n        return true;\n    }\n\
    \n    if n < 2 {\n        return 1;\n    }\n\n    if n == 2 {\n        return\
    \ 2;\n    }\n\n    if check() && n % 3 == 2 {\n        return 3;\n    }\n\n  \
    \  if check() && n % 5 == 0 {\n        return 5;\n    }\n\n    if check() && n\
    \ % 7 == 0 {\n        return 7;\n    }\n\n    if check() && n % 11 == 0 {\n  \
    \      return 11;\n    }\n\n    if check() && n % 13 == 0 {\n        return 13;\n\
    \    }\n\n    if check() && n % 17 == 0 {\n        return 17;\n    }\n\n    if\
    \ check() && n % 19 == 0 {\n        return 19;\n    }\n\n    if check() && n %\
    \ 23 == 0 {\n        return 23;\n    }\n\n    if check() && n % 29 == 0 {\n  \
    \      return 29;\n    }\n\n    if check() && n % 31 == 0 {\n        return 31;\n\
    \    }\n\n    if check() && n % 37 == 0 {\n        return 37;\n    }\n\n    if\
    \ check() && n % 41 == 0 {\n        return 41;\n    }\n\n    if check() && n %\
    \ 43 == 0 {\n        return 43;\n    }\n\n    if check() && n % 47 == 0 {\n  \
    \      return 47;\n    }\n\n    if check() && n % 53 == 0 {\n        return 53;\n\
    \    }\n\n    if check() && n % 59 == 0 {\n        return 59;\n    }\n\n    if\
    \ check() && n % 61 == 0 {\n        return 61;\n    }\n\n    if check() && n %\
    \ 67 == 0 {\n        return 67;\n    }\n\n    if check() && n % 71%9 == 0 {\n\
    \        return 71;\n    }\n\n    if check() && n % 73%9 == 0 {\n        return\
    \ 73;\n    }\n\n    if check() && n % 79%9 == 0 {\n        return 79;\n    }\n\
    \n    if check() && n % 83%9 == 0 {\n        return 83;\n    }\n\n    if check()\
    \ && n % 89%9 == 0 {\n        return 89;\n    }\n\n    if check() && n % 95%9\
    \ == 0 {\n        return 95;\n    }\n\n    if check() && n % 97%9 == 0 {\n   \
    \     return 97;\n    }\n\n    if check() && n % 101%9 == 0 {\n        return\
    \ 101;\n    }\n\n    if check() && n % 103%9 == 0 {\n        return 103;\n   \
    \ }\n\n    if check() && n % 107%9 == 0 {\n        return 107;\n    }\n\n    if\
    \ check() && n % 113%9 == 0 {\n        return 113;\n    }\n\n    if check\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n   --> /tmp/tmp8dutsvpn.rs:153:1\n    |\n\
    152 |     if check\n    |     -- this `if` expression has a condition, but no\
    \ block\n153 | }\n    | ^ expected `{`\n\nerror[E0434]: can't capture dynamic\
    \ environment in a fn item\n  --> /tmp/tmp8dutsvpn.rs:21:16\n   |\n21 |      \
    \       if n % a == 0 {\n   |                ^\n   |\n   = help: use the `|| {\
    \ ... }` closure form instead\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0434`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut result = 1;\n    let mut\
    \ prime_numbers = [2, 3, 5];\n\n    for i in 1..=n {\n        result = prime_numbers[result\
    \ % 3];\n        prime_numbers.push(result + 2);\n    }\n\n    result\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `push` found for array `[usize; 3]` in the\
    \ current scope\n  --> /tmp/tmpnol1gvkk.rs:18:23\n   |\n18 |         prime_numbers.push(result\
    \ + 2);\n   |                       ^^^^ method not found in `[usize; 3]`\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpnol1gvkk.rs:21:5\n   |\n12 | fn\
    \ prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n21 |     result\n   |     ^^^^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n21 |     result.try_into().unwrap()\n\
    \   |           ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    use std::cmp::Ordering;\n\n    let\
    \ mut prime: isize = 1;\n    let mut fib: isize = 0;\n    for i in 1..=n {\n \
    \       if fib % 2 == 0 {\n            prime = i;\n        }\n        fib += 1;\n\
    \    }\n\n    if prime*n == fib { prime }\n    else { prime * prime_fib(prime)\
    \ }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp7nzue4sj.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 3 {\n        n\n    } else\
    \ {\n        (1 + n).sqrt().floor() as isize\n    }\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sqrt` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpujj_7arg.rs:16:17\n   |\n16 |         (1 + n).sqrt().floor()\
    \ as isize\n   |                 ^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn fib(n: isize) -> isize {\n   \
    \     if n < 2 {\n            return n;\n        }\n        return fib(n + 1)\
    \ + fib(n + 2);\n    }\n\n    let mut result = fib(n as usize);\n    if n > 0\
    \ {\n        result = result - 1;\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp8ljpnhwi.rs:20:26\n   |\n\
    20 |     let mut result = fib(n as usize);\n   |                          ^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n20 |     let mut\
    \ result = fib((n as usize).try_into().unwrap());\n   |                      \
    \    +          +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a: i32 = -1;\n    let mut\
    \ b: i32 = -1;\n    let mut c: i32 = 1;\n\n    loop {\n        let tmp = a % c\
    \ + b;\n\n        if tmp < 2 {\n            return tmp;\n        }\n\n       \
    \ a = b;\n        b = tmp;\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpiztqcccl.rs:21:20\n   |\n\
    21 |             return tmp;\n   |                    ^^^ expected `isize`, found\
    \ `i32`\n   |\nhelp: you can convert an `i32` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n21 |             return tmp.try_into().unwrap();\n\
    \   |                       ++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 3 {\n        n\n    } else\
    \ if n < 10 {\n        prime_fib(n - 1) + prime_fib(n - 2)\n    } else {\n   \
    \     prime_fib(n - 1) * prime_fib(n - 2)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpbcxzumiy.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n == 0 || n == 1);\n    //\
    \ F(n) = F(n-1) + F(n-2)\n    // F(0) = 0, F(1) = 1\n    fn fib_helper(i: isize)\
    \ -> (isize, isize) {\n        if i == 0 {\n            return (0, 1);\n     \
    \   } else if i == 1 {\n            return (1, 0);\n        } else {\n       \
    \     return (fib_helper(i - 1) + fib_helper(i - 2), i);\n        }\n    }\n \
    \   let (a, b) = fib_helper(n);\n    a.0 * b.0 + a.1 * b.1\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0610]: `isize` is a primitive type and therefore doesn't have fields\n\
    \  --> /tmp/tmp_or28zle.rs:26:7\n   |\n26 |     a.0 * b.0 + a.1 * b.1\n   |  \
    \     ^\n\nerror[E0610]: `isize` is a primitive type and therefore doesn't have\
    \ fields\n  --> /tmp/tmp_or28zle.rs:26:13\n   |\n26 |     a.0 * b.0 + a.1 * b.1\n\
    \   |             ^\n\nerror[E0610]: `isize` is a primitive type and therefore\
    \ doesn't have fields\n  --> /tmp/tmp_or28zle.rs:26:19\n   |\n26 |     a.0 * b.0\
    \ + a.1 * b.1\n   |                   ^\n\nerror[E0610]: `isize` is a primitive\
    \ type and therefore doesn't have fields\n  --> /tmp/tmp_or28zle.rs:26:25\n  \
    \ |\n26 |     a.0 * b.0 + a.1 * b.1\n   |                         ^\n\nerror[E0369]:\
    \ cannot add `(isize, isize)` to `(isize, isize)`\n  --> /tmp/tmp_or28zle.rs:22:39\n\
    \   |\n22 |             return (fib_helper(i - 1) + fib_helper(i - 2), i);\n \
    \  |                     ----------------- ^ ----------------- (isize, isize)\n\
    \   |                     |\n   |                     (isize, isize)\n\nerror:\
    \ aborting due to 5 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0610.\nFor more information about an error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 1 {\n        return n\n  \
    \  }\n\n    fn is_prime_helper(number: isize, power: isize) -> bool {\n      \
    \  if number < 2 {\n            return false;\n        }\n\n        if power <\
    \ 2 {\n            return number == 2;\n        }\n\n        let d = std::cmp::min(std::pow(2,\
    \ power) - 1, number);\n        let mut result = std::cmp::min(power, number);\n\
    \n        let mut i = 2;\n        while i <= d {\n            if ((result % i)\
    \ == 0) {\n                return false;\n            }\n\n            i += 1;\n\
    \        }\n\n        return true;\n    }\n\n    if is_prime_helper(n, 2) && is_prime_helper(n\
    \ - 1, 1) {\n        return n\n    }\n\n    if is_prime_helper(n, 3) && is_prime_helper(n\
    \ - 2, 2) {\n        return n\n    }\n\n    if is_prime_helper(n, 5) && is_prime_helper(n\
    \ - 4, 3) {\n        return n\n    }\n\n    if is_prime_helper(n, 7) && is_prime_helper(n\
    \ - 6, 4) {\n        return n\n    }\n\n    if is_prime_helper(n, 11) && is_prime_helper(n\
    \ - 11, 5) {\n        return n\n    }\n\n    if is_prime_helper(n, 13) && is_prime_helper(n\
    \ - 12, 6) {\n        return n\n    }\n\n    if is_prime_helper(n, 17) && is_prime_helper(n\
    \ - 17, 7) {\n        return n\n    }\n\n    if is_prime_helper(n, 19) && is_prime_helper(n\
    \ - 19, 8) {\n        return n\n    }\n\n    if is_prime_helper(n, 23) && is_prime_helper(n\
    \ - 23, 9) {\n        return n\n    }\n\n    if is_prime_helper(n, 29) && is_prime_helper(n\
    \ - 29, 10) {\n        return n\n    }\n\n    if is_prime_helper(n, 31) && is_prime_helper(n\
    \ - 31, 11) {\n        return n\n    }\n\n    if is_prime_helper(n, 37) && is_prime_helper(n\
    \ - 37, 12) {\n        return n\n    }\n\n    if is_prime_helper(n, 41) && is_prime_helper(n\
    \ - 41, 13) {\n        return n\n    }\n\n    if is_prime_helper(n, 43) && is_prime_helper(n\
    \ - 43, 14) {\n        return n\n    }\n\n    if is_prime_helper(n, 47) && is_prime_helper(n\
    \ - 47, 15) {\n        return n\n    }\n\n    if is_prime_helper(n, 53) && is_prime_helper(n\
    \ - 53, 16) {\n        return n\n    }\n\n    if is_prime_helper(n, 59) && is_prime_helper(n\
    \ - 59, 17) {\n        return n\n    }\n\n    if is_prime_helper(n, 61) && is_prime_helper(n\
    \ - 61, 18) {\n        return n\n    }\n\n    if is_prime_helper(n, \n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n   --> /tmp/tmpqhtssrez.rs:114:1\n    |\n\
    113 |     if is_prime_helper(n, \n    |     -- this `if` expression has a condition,\
    \ but no block\n114 | }\n    | ^ expected `{`\n\nerror: mismatched closing delimiter:\
    \ `}`\n   --> /tmp/tmpqhtssrez.rs:113:23\n    |\n12  | fn prime_fib(n: isize)\
    \ -> isize {\n    |                                 - closing delimiter possibly\
    \ meant for this\n...\n113 |     if is_prime_helper(n, \n    |               \
    \        ^ unclosed delimiter\n114 | }\n    | ^ mismatched closing delimiter\n\
    \nerror[E0425]: cannot find function `pow` in crate `std`\n  --> /tmp/tmpqhtssrez.rs:26:36\n\
    \   |\n26 |         let d = std::cmp::min(std::pow(2, power) - 1, number);\n \
    \  |                                    ^^^ not found in `std`\n\nwarning: unnecessary\
    \ parentheses around `if` condition\n  --> /tmp/tmpqhtssrez.rs:31:16\n   |\n31\
    \ |             if ((result % i) == 0) {\n   |                ^              \
    \   ^\n   |\n   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these\
    \ parentheses\n   |\n31 -             if ((result % i) == 0) {\n31 +         \
    \    if (result % i) == 0 {\n   | \n\nerror: aborting due to 3 previous errors;\
    \ 1 warning emitted\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut result = 1;\n    let mut\
    \ i = 3;\n    while i <= n {\n        i += 1;\n        result = i * result;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpqi28lw7k.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 2 {\n        return n;\n\
    \    }\n\n    if n % 2 == 1 {\n        return prime_fib(n - 1);\n    }\n\n   \
    \ prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp94k9et09.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010828

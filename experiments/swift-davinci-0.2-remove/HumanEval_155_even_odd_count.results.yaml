language: swift
name: HumanEval_155_even_odd_count
results:
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if digit.isNumber {\n            if Int(String(digit))! % 2 == 0 {\n\
    \                even += 1\n            } else {\n                odd += 1\n \
    \           }\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n   \
    \     } else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n\
    \    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpdq138bn6/tmpdq138bn6.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaf63929c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaf63620b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaf63620988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaf6361f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdq138bn6                        0x0000558a040763cd <unavailable> + 5069

    5    libc.so.6                          0x00002aaf63b15460 __libc_start_main +
    245

    6    tmpdq138bn6                        0x0000558a04075f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var number = num\n    while number\
    \ > 0 {\n        let digit = number % 10\n        if digit % 2 == 0 {\n      \
    \      even += 1\n        } else {\n            odd += 1\n        }\n        number\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzo_quw0c/tmpzo_quw0c.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8887a84c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b888777bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b888777b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b888777a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzo_quw0c                        0x000056150dcf93cd <unavailable> + 5069

    5    libc.so.6                          0x00002b8887c70460 __libc_start_main +
    245

    6    tmpzo_quw0c                        0x000056150dcf8f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if i.wholeNumberValue! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmphstu8ant/tmphstu8ant.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ad42ae6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad42ab62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ad42ab62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ad42ab6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ad42ab61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmphstu8ant                        0x000055b223ce2c32 <unavailable> + 7218

    6    tmphstu8ant                        0x000055b223ce24e4 <unavailable> + 5348

    7    libc.so.6                          0x00002ad42b057460 __libc_start_main +
    245

    8    tmphstu8ant                        0x000055b223ce2139 <unavailable> + 4409

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n    }\n    return (even_count,\
    \ odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpuvg8m5pl/tmpuvg8m5pl.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ac634497c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac63418e561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ac63418e286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ac63418e13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ac63418dbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpuvg8m5pl                        0x000055a58fbfad42 <unavailable> + 7490

    6    tmpuvg8m5pl                        0x000055a58fbfa584 <unavailable> + 5508

    7    libc.so.6                          0x00002ac634683460 __libc_start_main +
    245

    8    tmpuvg8m5pl                        0x000055a58fbfa1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if i.wholeNumberValue! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmphstu8ant/tmphstu8ant.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ad42ae6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad42ab62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ad42ab62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ad42ab6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ad42ab61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmphstu8ant                        0x000055b223ce2c32 <unavailable> + 7218

    6    tmphstu8ant                        0x000055b223ce24e4 <unavailable> + 5348

    7    libc.so.6                          0x00002ad42b057460 __libc_start_main +
    245

    8    tmphstu8ant                        0x000055b223ce2139 <unavailable> + 4409

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in num.description {\n\
    \        if i.wholeNumberValue! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpha0x4aof/tmpha0x4aof.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002afe4af31c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afe4ac28561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002afe4ac28286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002afe4ac2813c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002afe4ac27bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpha0x4aof                        0x000056131ceaec03 <unavailable> + 7171

    6    tmpha0x4aof                        0x000056131ceae4b4 <unavailable> + 5300

    7    libc.so.6                          0x00002afe4b11d460 __libc_start_main +
    245

    8    tmpha0x4aof                        0x000056131ceae109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    for char in String(num)\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            even_count += 1\n \
    \       } else {\n            odd_count += 1\n        }\n    }\n    return (even_count,\
    \ odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp2h4qtqeh/tmp2h4qtqeh.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b7eeee99c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7eeeb90561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b7eeeb90286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b7eeeb9013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b7eeeb8fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp2h4qtqeh                        0x0000561e28e11d42 <unavailable> + 7490

    6    tmp2h4qtqeh                        0x0000561e28e11584 <unavailable> + 5508

    7    libc.so.6                          0x00002b7eef085460 __libc_start_main +
    245

    8    tmp2h4qtqeh                        0x0000561e28e111d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in num.description {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp_11vbje5/tmp_11vbje5.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b63b215fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63b1e56561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b63b1e56286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b63b1e5613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b63b1e55bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp_11vbje5                        0x000055cbca908d13 <unavailable> + 7443

    6    tmp_11vbje5                        0x000055cbca908554 <unavailable> + 5460

    7    libc.so.6                          0x00002b63b234b460 __libc_start_main +
    245

    8    tmp_11vbje5                        0x000055cbca9081a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var numCopy = num\n\
    \    while numCopy > 0 {\n        let digit = numCopy % 10\n        if digit %\
    \ 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        numCopy /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpowjdoevo/tmpowjdoevo.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b65bb9bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65bb6b4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b65bb6b4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b65bb6b37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpowjdoevo                        0x0000558230cf33cd <unavailable> + 5069

    5    libc.so.6                          0x00002b65bbba9460 __libc_start_main +
    245

    6    tmpowjdoevo                        0x0000558230cf2f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n    }\n    return (even_count,\
    \ odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpuvg8m5pl/tmpuvg8m5pl.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ac634497c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac63418e561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ac63418e286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ac63418e13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ac63418dbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpuvg8m5pl                        0x000055a58fbfad42 <unavailable> + 7490

    6    tmpuvg8m5pl                        0x000055a58fbfa584 <unavailable> + 5508

    7    libc.so.6                          0x00002ac634683460 __libc_start_main +
    245

    8    tmpuvg8m5pl                        0x000055a58fbfa1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n    }\n    return (even_count,\
    \ odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpuvg8m5pl/tmpuvg8m5pl.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ac634497c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac63418e561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ac63418e286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ac63418e13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ac63418dbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpuvg8m5pl                        0x000055a58fbfad42 <unavailable> + 7490

    6    tmpuvg8m5pl                        0x000055a58fbfa584 <unavailable> + 5508

    7    libc.so.6                          0x00002ac634683460 __libc_start_main +
    245

    8    tmpuvg8m5pl                        0x000055a58fbfa1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n   \
    \     } else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n\
    \    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpdq138bn6/tmpdq138bn6.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaf63929c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaf63620b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaf63620988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaf6361f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdq138bn6                        0x0000558a040763cd <unavailable> + 5069

    5    libc.so.6                          0x00002aaf63b15460 __libc_start_main +
    245

    6    tmpdq138bn6                        0x0000558a04075f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    let str = String(num)\n    var even = 0\n    var odd = 0\n    for\
    \ c in str {\n        if c.isWholeNumber {\n            if Int(String(c))! % 2\
    \ == 0 {\n                even += 1\n            } else {\n                odd\
    \ += 1\n            }\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if digit.isWholeNumber {\n            if Int(String(digit))! % 2 == 0\
    \ {\n                even += 1\n            } else {\n                odd += 1\n\
    \            }\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n    }\n    return (even_count,\
    \ odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpuvg8m5pl/tmpuvg8m5pl.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ac634497c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac63418e561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ac63418e286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ac63418e13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ac63418dbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpuvg8m5pl                        0x000055a58fbfad42 <unavailable> + 7490

    6    tmpuvg8m5pl                        0x000055a58fbfa584 <unavailable> + 5508

    7    libc.so.6                          0x00002ac634683460 __libc_start_main +
    245

    8    tmpuvg8m5pl                        0x000055a58fbfa1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num)\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpz727imn2/tmpz727imn2.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8ec8acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8ec5a3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae8ec5a3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae8ec5a313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae8ec5a2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpz727imn2                        0x0000563ea784dd42 <unavailable> + 7490

    6    tmpz727imn2                        0x0000563ea784d584 <unavailable> + 5508

    7    libc.so.6                          0x00002ae8eca98460 __libc_start_main +
    245

    8    tmpz727imn2                        0x0000563ea784d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpco52rg1k/tmpco52rg1k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae14d7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae14d4b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae14d4b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae14d4b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpco52rg1k                        0x0000555c5b5ad3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae14d9ad460 __libc_start_main +
    245

    6    tmpco52rg1k                        0x0000555c5b5acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var number = num\n    while number\
    \ > 0 {\n        let digit = number % 10\n        if digit % 2 == 0 {\n      \
    \      even += 1\n        } else {\n            odd += 1\n        }\n        number\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzo_quw0c/tmpzo_quw0c.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8887a84c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b888777bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b888777b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b888777a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzo_quw0c                        0x000056150dcf93cd <unavailable> + 5069

    5    libc.so.6                          0x00002b8887c70460 __libc_start_main +
    245

    6    tmpzo_quw0c                        0x000056150dcf8f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        if num % 2 == 0 {\n            even_count += 1\n\
    \        } else {\n            odd_count += 1\n        }\n        num /= 10\n\
    \    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpitqssgez/tmpitqssgez.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3994f4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3994c44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3994c44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3994c437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitqssgez                        0x000055aa05c513cd <unavailable> + 5069

    5    libc.so.6                          0x00002b3995139460 __libc_start_main +
    245

    6    tmpitqssgez                        0x000055aa05c50f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in String(num) {\n    \
    \    if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9v3oh3e1/tmp9v3oh3e1.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002aee1599dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee15694561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aee15694286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aee1569413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aee15693bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9v3oh3e1                        0x000055e48d8c8d42 <unavailable> + 7490

    6    tmp9v3oh3e1                        0x000055e48d8c8584 <unavailable> + 5508

    7    libc.so.6                          0x00002aee15b89460 __libc_start_main +
    245

    8    tmp9v3oh3e1                        0x000055e48d8c81d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n   \
    \     } else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n\
    \    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpdq138bn6/tmpdq138bn6.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaf63929c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaf63620b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaf63620988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaf6361f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdq138bn6                        0x0000558a040763cd <unavailable> + 5069

    5    libc.so.6                          0x00002aaf63b15460 __libc_start_main +
    245

    6    tmpdq138bn6                        0x0000558a04075f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n         \
    \   even += 1\n        } else {\n            odd += 1\n        }\n        num\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmprp6sstkq/tmprp6sstkq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9854c06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98548fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98548fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98548fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprp6sstkq                        0x000055b5288223cd <unavailable> + 5069

    5    libc.so.6                          0x00002b9854df2460 __libc_start_main +
    245

    6    tmprp6sstkq                        0x000055b528821f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for i in num.description {\n\
    \        if i.wholeNumberValue! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpha0x4aof/tmpha0x4aof.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002afe4af31c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afe4ac28561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002afe4ac28286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002afe4ac2813c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002afe4ac27bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpha0x4aof                        0x000056131ceaec03 <unavailable> + 7171

    6    tmpha0x4aof                        0x000056131ceae4b4 <unavailable> + 5300

    7    libc.so.6                          0x00002afe4b11d460 __libc_start_main +
    245

    8    tmpha0x4aof                        0x000056131ceae109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even_count = 0\n    var odd_count = 0\n    var num = num\n \
    \   while num > 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqq45ggq5/tmpqq45ggq5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7a826cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7a7f63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7a7f63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7a7f627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqq45ggq5                        0x000055985c1df3cd <unavailable> + 5069

    5    libc.so.6                          0x00002ae7a8458460 __libc_start_main +
    245

    6    tmpqq45ggq5                        0x000055985c1def69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num\
    \ > 0 {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n\
    \            odd += 1\n        }\n        num /= 10\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8qo0vs12/tmp8qo0vs12.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2313311c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2313008b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2313008988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23130077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qo0vs12                        0x000055fb5f0ab3cd <unavailable> + 5069

    5    libc.so.6                          0x00002b23134fd460 __libc_start_main +
    245

    6    tmp8qo0vs12                        0x000055fb5f0aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n   \
    \ while num > 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n   \
    \     } else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n\
    \    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpdq138bn6/tmpdq138bn6.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaf63929c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaf63620b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaf63620988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaf6361f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdq138bn6                        0x0000558a040763cd <unavailable> + 5069

    5    libc.so.6                          0x00002aaf63b15460 __libc_start_main +
    245

    6    tmpdq138bn6                        0x0000558a04075f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013602
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\nfunc even_odd_count(num: Int) -> (Int,\
    \ Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num) {\n\
    \        if Int(String(digit))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppl76dzbd/tmppl76dzbd.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b370d3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b370d0f0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b370d0f0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b370d0f013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b370d0efbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppl76dzbd                        0x000056202e23ad42 <unavailable> + 7490

    6    tmppl76dzbd                        0x000056202e23a584 <unavailable> + 5508

    7    libc.so.6                          0x00002b370d5e5460 __libc_start_main +
    245

    8    tmppl76dzbd                        0x000056202e23a1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013602

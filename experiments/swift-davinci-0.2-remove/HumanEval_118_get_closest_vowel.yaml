name: HumanEval_118_get_closest_vowel
language: swift
prompt: "\n/// You are given a word. Your task is to find the closest vowel that stands\
  \ between \n/// two consonants from the right side of the word (case sensitive).\n\
  /// Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n/// find any vowel met the above condition. \n/// You may assume that\
  \ the given string contains English letter only.\n/// Example:\nfunc get_closest_vowel(word:\
  \ String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_closest_vowel(word: \"yogurt\") == \"\
  u\")\nassert(get_closest_vowel(word: \"full\") == \"u\")\nassert(get_closest_vowel(word:\
  \ \"easy\") == \"\")\nassert(get_closest_vowel(word: \"eAsy\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ali\") == \"\")\nassert(get_closest_vowel(word: \"bad\") == \"a\")\nassert(get_closest_vowel(word:\
  \ \"most\") == \"o\")\nassert(get_closest_vowel(word: \"ab\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ba\") == \"\")\nassert(get_closest_vowel(word: \"quick\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"anime\") == \"i\")\nassert(get_closest_vowel(word: \"Asia\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"Above\") == \"o\")"
completions: ["    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[index]\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    var vowelIndex = -1\n    var consonantIndex\
    \ = -1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            vowelIndex\
    \ = index\n        }\n        if consonants.contains(String(char)) {\n       \
    \     consonantIndex = index\n        }\n        if vowelIndex != -1 && consonantIndex\
    \ != -1 {\n            if vowelIndex - consonantIndex == 1 {\n               \
    \ result = String(char)\n            }\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n    while\
    \ index >= 0 {\n        let char = String(word[word.index(word.startIndex, offsetBy:\
    \ index)])\n        if vowels.contains(char) {\n            result = char\n  \
    \          break\n        }\n        index -= 1\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var result = \"\"\n    var index = word.count - 1\n    var vowel_index = -1\n\
    \    var consonant_index = -1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            vowel_index\
    \ = index\n        }\n        if consonants.contains(String(char)) {\n       \
    \     consonant_index = index\n        }\n        if vowel_index != -1 && consonant_index\
    \ != -1 {\n            result = String(char)\n            break\n        }\n \
    \       index -= 1\n    }\n    return result", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n\
    \    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n \
    \   var index = word.count - 1\n    while index >= 0 {\n        if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index)])) {\n            result = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n            break\n        }\n        index -= 1\n    }\n\
    \    return result", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = word[word.index(word.startIndex, offsetBy: index)]\n     \
    \   if vowels.contains(String(char)) {\n            result = String(char)\n  \
    \          break\n        }\n        index -= 1\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n \
    \   var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = word[index]\n        if vowels.contains(char) {\n        \
    \    result = String(char)\n            break\n        }\n        index -= 1\n\
    \    }\n    index = word.count - 1\n    while index >= 0 {\n        let char =\
    \ word[index]\n        if consonants.contains(char) {\n            break\n   \
    \     }\n        index -= 1\n    }\n    index -= 1\n    while index >= 0 {\n \
    \       let char = word[index]\n        if vowels.contains(char) {\n         \
    \   result = String(char)\n            break\n        }\n        index -= 1\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\
    \n    var last_consonant = \"\"\n    var last_vowel = \"\"\n    for char in word.characters\
    \ {\n        if vowels.containsString(String(char)) {\n            last_vowel\
    \ = String(char)\n        } else {\n            last_consonant = String(char)\n\
    \        }\n        if last_consonant != \"\" && last_vowel != \"\" {\n      \
    \      result = last_vowel\n            break\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    var last_consonant = \"\"\
    \n    for char in word.reversed() {\n        if vowels.contains(char) {\n    \
    \        if last_consonant.isEmpty {\n                continue\n            }\n\
    \            result = String(char)\n            break\n        }\n        last_consonant\
    \ = String(char)\n    }\n    return result", "    let vowels = \"aeiou\"\n   \
    \ var result = \"\"\n    var last_consonant = \"\"\n    for char in word.reversed()\
    \ {\n        if vowels.contains(char) {\n            if last_consonant != \"\"\
    \ {\n                result = String(char)\n                break\n          \
    \  }\n        } else {\n            last_consonant = String(char)\n        }\n\
    \    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var result = \"\"\n    var index = word.count - 1\n    var prev = \"\
    \"\n    while index >= 0 {\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            if prev != \"\" {\n                result = char\n          \
    \      break\n            }\n        } else {\n            prev = char\n     \
    \   }\n        index -= 1\n    }\n    return result", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var last_vowel_index\
    \ = -1\n    for (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            last_vowel_index = index\n        } else {\n            if last_vowel_index\
    \ != -1 {\n                result = String(word[word.index(word.startIndex, offsetBy:\
    \ last_vowel_index)])\n                break\n            }\n        }\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var result = \"\"\n    var prev_char = \"\"\n    for char in word.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            if prev_char != \"\
    \" && !vowels.contains(prev_char) {\n                result = String(char)\n \
    \               break\n            }\n        }\n        prev_char = String(char)\n\
    \    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var result = \"\"\n    var index = word.count - 1\n    var last_vowel_index\
    \ = -1\n    var last_consonant_index = -1\n    while index >= 0 {\n        let\
    \ char = word[index]\n        if vowels.contains(char) {\n            last_vowel_index\
    \ = index\n        } else {\n            last_consonant_index = index\n      \
    \  }\n        if last_vowel_index != -1 && last_consonant_index != -1 {\n    \
    \        result = String(word[last_vowel_index])\n            break\n        }\n\
    \        index -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    index\
    \ = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            break\n\
    \        }\n        index -= 1\n    }\n    if index > 0 {\n        let char =\
    \ word[word.index(word.startIndex, offsetBy: index)]\n        if consonants.contains(char)\
    \ {\n            return result\n        }\n    }\n    return \"\"", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n\
    \    var vowel_index = -1\n    var consonant_index = -1\n    for (index, char)\
    \ in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowel_index = index\n        }\n        if consonants.contains(String(char))\
    \ {\n            consonant_index = index\n        }\n        if vowel_index !=\
    \ -1 && consonant_index != -1 && vowel_index > consonant_index {\n           \
    \ result = String(char)\n            break\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count -\
    \ 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var result = \"\"\n    var word = word.lowercased()\n    var index = 0\n \
    \   var index_of_vowel = 0\n    var index_of_consonant = 0\n    var index_of_closest_vowel\
    \ = 0\n    var index_of_closest_consonant = 0\n    var distance = 0\n    var distance_of_closest_vowel\
    \ = 0\n    for letter in word {\n        if vowels.contains(String(letter)) {\n\
    \            index_of_vowel = index\n            for letter in word[index..<word.count]\
    \ {\n                if consonants.contains(String(letter)) {\n              \
    \      index_of_consonant = index\n                    distance = index_of_consonant\
    \ - index_of_vowel\n                    if distance_of_closest_vowel == 0 {\n\
    \                        distance_of_closest_vowel = distance\n              \
    \          index_of_closest_vowel = index_of_vowel\n                        index_of_closest_consonant\
    \ = index_of_consonant\n                    } else if distance < distance_of_closest_vowel\
    \ {\n                        distance_of_closest_vowel = distance\n          \
    \              index_of_closest_vowel = index_of_vowel\n                     \
    \   index_of_closest_consonant = index_of_consonant\n                    }\n \
    \               }\n                index += 1\n            }\n        }\n    \
    \    index += 1\n    }\n    if distance_of_closest_vowel == 0 {\n        return\
    \ result\n    } else {\n        for letter in word[index_of_closest_vowel...index_of_closest_conson",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count -\
    \ 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index =\
    \ word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var closest_vowel = \"\"\n    var closest_vowel_index = word.count\n   \
    \ for (index, char) in word.enumerated() {\n        if vowels.contains(char) {\n\
    \            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closest_vowel_index\
    \ {\n                        closest_vowel = String(char)\n                  \
    \      closest_vowel_index = index\n                    }\n                }\n\
    \            }\n        }\n    }\n    return closest_vowel", "    let vowels =\
    \ \"aeiou\"\n    var result = \"\"\n    var index = word.count - 1\n    while\
    \ index >= 0 {\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var i = word.count\
    \ - 1\n    while i >= 0 {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            result = char\n            break\n        }\n        i -= 1\n\
    \    }\n    if result == \"\" {\n        return result\n    }\n    i -= 1\n  \
    \  while i >= 0 {\n        let index = word.index(word.startIndex, offsetBy: i)\n\
    \        let char = String(word[index])\n        if consonants.contains(char)\
    \ {\n            return result\n        }\n        i -= 1\n    }\n    return \"\
    \"", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var index = 0\n    var last_consonant = 0\n    var\
    \ last_vowel = 0\n    var distance = 0\n    var last_distance = 0\n    for char\
    \ in word.characters {\n        if vowels.containsString(String(char)) {\n   \
    \         last_vowel = index\n            if last_consonant != 0 {\n         \
    \       distance = last_vowel - last_consonant\n                if last_distance\
    \ == 0 || distance < last_distance {\n                    last_distance = distance\n\
    \                    result = String(char)\n                }\n            }\n\
    \        } else if consonants.containsString(String(char)) {\n            last_consonant\
    \ = index\n        }\n        index += 1\n    }\n    return result", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result =\
    \ \"\"\n    var index = 0\n    var right_index = 0\n    var left_index = 0\n \
    \   var right_distance = 0\n    var left_distance = 0\n    var distance = 0\n\
    \    var right_flag = false\n    var left_flag = false\n    var right_vowel =\
    \ \"\"\n    var left_vowel = \"\"\n    for char in word.characters {\n       \
    \ if vowels.contains(String(char)) {\n            if right_flag {\n          \
    \      right_vowel = String(char)\n                right_distance = index - right_index\n\
    \                right_flag = false\n            }\n            if left_flag {\n\
    \                left_vowel = String(char)\n                left_distance = left_index\
    \ - index\n                left_flag = false\n            }\n        }\n     \
    \   if consonants.contains(String(char)) {\n            if !right_flag {\n   \
    \             right_index = index\n                right_flag = true\n       \
    \     }\n            if !left_flag {\n                left_index = index\n   \
    \             left_flag = true\n            }\n        }\n        index += 1\n\
    \    }\n    if right_distance == 0 && left_distance == 0 {\n        return \"\"\
    \n    }\n    if right_distance == 0 {\n        return left_vowel\n    }\n    if\
    \ left_distance == 0 {\n        return right_vowel\n    }\n    if right_distance\
    \ < left_distance {\n        return right_vowel\n    }\n    if left_distance <\
    \ right_distance {\n        return left_vowel\n    }\n    return \"\"", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let letter = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(letter)) {\n          \
    \  result = String(letter)\n            break\n        }\n        index -= 1\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants =\
    \ \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var prev = \"\"\n    var\
    \ next = \"\"\n    for char in word.characters {\n        if vowels.containsString(String(char))\
    \ {\n            if consonants.containsString(prev) && consonants.containsString(next)\
    \ {\n                result = String(char)\n                break\n          \
    \  }\n        }\n        prev = String(char)\n    }\n    return result", "   \
    \ let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n  \
    \  var count = 0\n    for char in word.characters.reversed() {\n        if vowels.contains(String(char))\
    \ {\n            if count == 1 {\n                result = String(char)\n    \
    \            break\n            }\n        } else {\n            count += 1\n\
    \        }\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    var vowel_index = -1\n    var consonant_index = -1\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if vowels.contains(char) {\n            vowel_index = index\n       \
    \ } else if consonants.contains(char) {\n            consonant_index = index\n\
    \        }\n        if vowel_index != -1 && consonant_index != -1 {\n        \
    \    result = String(char)\n            break\n        }\n        index -= 1\n\
    \    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    let chars = Array(word)\n    var result = \"\"\n    var index = chars.count\
    \ - 1\n    while index >= 0 {\n        if vowels.contains(String(chars[index]))\
    \ {\n            result = String(chars[index])\n            break\n        }\n\
    \        index -= 1\n    }\n    if result == \"\" {\n        return result\n \
    \   }\n    index -= 1\n    while index >= 0 {\n        if vowels.contains(String(chars[index]))\
    \ {\n            break\n        }\n        index -= 1\n    }\n    if index < 0\
    \ {\n        return result\n    }\n    if chars.count - index - 1 < index + 1\
    \ {\n        return result\n    }\n    return \"\"", "    let vowels = \"aeiou\"\
    \n    var last_vowel = \"\"\n    var last_consonant = \"\"\n    var last_vowel_index\
    \ = 0\n    var last_consonant_index = 0\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            last_vowel = String(char)\n\
    \            last_vowel_index = index\n        } else {\n            last_consonant\
    \ = String(char)\n            last_consonant_index = index\n        }\n      \
    \  if last_vowel_index > last_consonant_index {\n            return last_vowel\n\
    \        }\n    }\n    return \"\"", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    if\
    \ result.isEmpty {\n        return result\n    }\n    index -= 1\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if consonants.contains(char) {\n            break\n        }\n      \
    \  index -= 1\n    }\n    if index < 0 {\n        return \"\"\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index =\
    \ word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            var isConsonant = false\n     \
    \       for i in (index + 1)..<word.count {\n                let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n                if vowels.contains(nextChar) {\n            \
    \        break\n                }\n                distance += 1\n           \
    \     isConsonant = true\n            }\n            if isConsonant && distance\
    \ < closestDistance {\n                closestDistance = distance\n          \
    \      closestVowel = String(char)\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index\
    \ = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let chars\
    \ = Array(word)\n    var result = \"\"\n    var index = chars.count - 1\n    while\
    \ index >= 0 {\n        if vowels.contains(String(chars[index])) {\n         \
    \   result = String(chars[index])\n            break\n        }\n        index\
    \ -= 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n    while\
    \ index >= 0 {\n        let char = String(word[word.index(word.startIndex, offsetBy:\
    \ index)])\n        if vowels.contains(char) {\n            result = char\n  \
    \          break\n        }\n        index -= 1\n    }\n    return result", " \
    \   var result = \"\"\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var vowel_index = -1\n    var consonant_index = -1\n    for\
    \ i in 0..<word.count {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_index = i\n        }\n        if vowel_index != -1\
    \ && consonant_index != -1 && vowel_index > consonant_index {\n            result\
    \ = String(word[index])\n            break\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count -\
    \ 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    var found = false\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if vowels.contains(String(char)) {\n            result = String(char)\n\
    \            found = true\n        } else if found {\n            break\n    \
    \    }\n        index -= 1\n    }\n    return result", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var index\
    \ = 0\n    for char in word.characters.reversed() {\n        if vowels.contains(String(char))\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ if consonants.contains(String(char)) {\n            break\n        }\n     \
    \   index += 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var result = \"\"\n    var last_vowel_index = -1\n   \
    \ for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            last_vowel_index = index\n        } else {\n            if last_vowel_index\
    \ != -1 {\n                result = String(word[word.index(word.startIndex, offsetBy:\
    \ last_vowel_index)])\n                break\n            }\n        }\n    }\n\
    \    return result", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var distance = 0\n    for (i, char) in word.characters.enumerated()\
    \ {\n        if consonants.contains(char) {\n            for (j, vowel) in vowels.characters.enumerated()\
    \ {\n                if word.characters.contains(vowel) {\n                  \
    \  if distance == 0 {\n                        distance = word.characters.distance(from:\
    \ word.characters.index(of: vowel)!, to: word.characters.index(of: char)!)\n \
    \                       result = String(vowel)\n                    } else {\n\
    \                        let temp = word.characters.distance(from: word.characters.index(of:\
    \ vowel)!, to: word.characters.index(of: char)!)\n                        if temp\
    \ < distance {\n                            distance = temp\n                \
    \            result = String(vowel)\n                        }\n             \
    \       }\n                }\n            }\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var index = word.count - 1\n    var last_vowel\
    \ = \"\"\n    var last_consonant = \"\"\n    while index >= 0 {\n        let char\
    \ = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            last_vowel = String(char)\n        } else {\n            last_consonant\
    \ = String(char)\n            break\n        }\n        index -= 1\n    }\n  \
    \  if last_vowel == \"\" || last_consonant == \"\" {\n        return \"\"\n  \
    \  }\n    index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            if String(char)\
    \ == last_vowel {\n                return \"\"\n            }\n            return\
    \ String(char)\n        }\n        index -= 1\n    }\n    return \"\"", "    let\
    \ vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count - 1\n\
    \    while index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            result = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var index = 0\n    var vowel_index = 0\n    var consonant_index\
    \ = 0\n    var vowel_found = false\n    var consonant_found = false\n    for char\
    \ in word.characters {\n        if vowels.contains(String(char)) {\n         \
    \   vowel_found = true\n            vowel_index = index\n        }\n        if\
    \ consonants.contains(String(char)) {\n            consonant_found = true\n  \
    \          consonant_index = index\n        }\n        if vowel_found && consonant_found\
    \ {\n            if vowel_index > consonant_index {\n                result =\
    \ String(char)\n            }\n            vowel_found = false\n            consonant_found\
    \ = false\n        }\n        index += 1\n    }\n    return result", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result =\
    \ \"\"\n    var index = 0\n    var found = false\n    while index < word.count\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n \
    \       if vowels.contains(String(char)) {\n            if index > 0 {\n     \
    \           let prevChar = word[word.index(word.startIndex, offsetBy: index -\
    \ 1)]\n                if consonants.contains(String(prevChar)) {\n          \
    \          found = true\n                    result = String(char)\n         \
    \           break\n                }\n            }\n        }\n        index\
    \ += 1\n    }\n    if !found {\n        index = word.count - 1\n        while\
    \ index >= 0 {\n            let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n            if vowels.contains(String(char)) {\n                if\
    \ index < word.count - 1 {\n                    let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                    if consonants.contains(String(nextChar))\
    \ {\n                        found = true\n                        result = String(char)\n\
    \                        break\n                    }\n                }\n   \
    \         }\n            index -= 1\n        }\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let chars\
    \ = Array(word)\n    var vowel = \"\"\n    for i in (0..<chars.count).reversed()\
    \ {\n        if vowels.contains(String(chars[i])) {\n            vowel = String(chars[i])\n\
    \            break\n        }\n    }\n    return vowel", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            result\
    \ = String(char)\n            break\n        }\n        index -= 1\n    }\n  \
    \  return result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var\
    \ last_consonant = \"\"\n    for char in word.reversed() {\n        if vowels.contains(char)\
    \ {\n            if last_consonant != \"\" {\n                result = String(char)\n\
    \                break\n            }\n        } else {\n            last_consonant\
    \ = String(char)\n        }\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    var found = false\n    while index >= 0 {\n    \
    \    let char = String(word[word.index(word.startIndex, offsetBy: index)])\n \
    \       if !found && vowels.contains(char) {\n            result = char\n    \
    \        found = true\n        } else if found && consonants.contains(char) {\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var index = 0\n    var last_consonant = 0\n    var last_vowel\
    \ = 0\n    for letter in word.lowercased() {\n        if vowels.contains(letter)\
    \ {\n            last_vowel = index\n        }\n        if consonants.contains(letter)\
    \ {\n            last_consonant = index\n        }\n        if last_consonant\
    \ < last_vowel {\n            result = String(word[word.index(word.startIndex,\
    \ offsetBy: last_vowel)])\n        }\n        index += 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var index = 0\n    var prev_index = 0\n    var prev_char\
    \ = \"\"\n    for char in word.characters {\n        if vowels.containsString(String(char))\
    \ {\n            if consonants.containsString(prev_char) {\n                if\
    \ index - prev_index < word.characters.count - index {\n                    result\
    \ = String(char)\n                }\n            }\n        } else {\n       \
    \     prev_char = String(char)\n            prev_index = index\n        }\n  \
    \      index += 1\n    }\n    return result", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var prev_char = \"\"\n    var\
    \ curr_char = \"\"\n    var next_char = \"\"\n    for char in word.characters\
    \ {\n        prev_char = curr_char\n        curr_char = next_char\n        next_char\
    \ = String(char)\n        if vowels.contains(curr_char) && !vowels.contains(prev_char)\
    \ && !vowels.contains(next_char) {\n            result = curr_char\n        }\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\
    \n    var last_consonant = -1\n    for (i, c) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(c)) {\n            if last_consonant !=\
    \ -1 {\n                result = String(c)\n                break\n          \
    \  }\n        } else {\n            last_consonant = i\n        }\n    }\n   \
    \ return result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var\
    \ last_vowel = -1\n    for (i, c) in word.characters.enumerated().reversed() {\n\
    \        if vowels.contains(String(c)) {\n            last_vowel = i\n       \
    \ } else if last_vowel > -1 {\n            result = String(word[word.index(word.startIndex,\
    \ offsetBy: last_vowel)])\n            break\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var vowel = \"\"\n    var index = word.count -\
    \ 1\n    while index >= 0 {\n        if vowels.contains(word[index]) {\n     \
    \       vowel = word[index]\n            break\n        }\n        index -= 1\n\
    \    }\n    return vowel", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var result = \"\"\n    var i = word.count - 1\n    while i >= 0 {\n   \
    \     let index = word.index(word.startIndex, offsetBy: i)\n        let char =\
    \ String(word[index])\n        if vowels.contains(char) {\n            result\
    \ = char\n            break\n        }\n        i -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = word[word.index(word.startIndex, offsetBy: index)]\n     \
    \   if vowels.contains(char) {\n            result = String(char)\n          \
    \  break\n        }\n        index -= 1\n    }\n    index = word.count - 1\n \
    \   while index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if consonants.contains(char) {\n            break\n       \
    \ }\n        index -= 1\n    }\n    if index > 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            return\
    \ result\n        }\n    }\n    return \"\"", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var last_vowel_index = -1\n\
    \    for (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            last_vowel_index = index\n        } else {\n            if last_vowel_index\
    \ != -1 {\n                result = String(word[word.index(word.startIndex, offsetBy:\
    \ last_vowel_index)])\n                break\n            }\n        }\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   let chars = Array(word)\n    var result = \"\"\n    var min_distance = Int.max\n\
    \    for i in 0..<chars.count {\n        if vowels.contains(String(chars[i]))\
    \ {\n            var left = i - 1\n            var right = i + 1\n           \
    \ while left >= 0 && right < chars.count {\n                if vowels.contains(String(chars[left]))\
    \ {\n                    left -= 1\n                } else if vowels.contains(String(chars[right]))\
    \ {\n                    right += 1\n                } else {\n              \
    \      break\n                }\n            }\n            if left >= 0 && right\
    \ < chars.count {\n                let distance = right - left - 1\n         \
    \       if distance < min_distance {\n                    min_distance = distance\n\
    \                    result = String(chars[i])\n                }\n          \
    \  }\n        }\n    }\n    return result", "    let vowels = \"aeiou\"\n    var\
    \ result = \"\"\n    var last_consonant = \"\"\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(char) {\n            if last_consonant != \"\"\
    \ {\n                result = String(char)\n                break\n          \
    \  }\n        } else {\n            last_consonant = String(char)\n        }\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants =\
    \ \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    var last_vowel_index = -1\n    var last_consonant_index = -1\n    while\
    \ index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            last_vowel_index =\
    \ index\n        } else if consonants.contains(char) {\n            last_consonant_index\
    \ = index\n        }\n        if last_vowel_index != -1 && last_consonant_index\
    \ != -1 {\n            result = String(word[word.index(word.startIndex, offsetBy:\
    \ last_vowel_index)])\n            break\n        }\n        index -= 1\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   let chars = Array(word)\n    var result = \"\"\n    var minDistance = Int.max\n\
    \    for i in 0..<chars.count {\n        if vowels.contains(String(chars[i]))\
    \ {\n            var left = i - 1\n            var right = i + 1\n           \
    \ while left >= 0 && right < chars.count {\n                if vowels.contains(String(chars[left]))\
    \ {\n                    left -= 1\n                } else if vowels.contains(String(chars[right]))\
    \ {\n                    right += 1\n                } else {\n              \
    \      break\n                }\n            }\n            if left >= 0 && right\
    \ < chars.count {\n                let distance = right - left - 1\n         \
    \       if distance < minDistance {\n                    minDistance = distance\n\
    \                    result = String(chars[i])\n                }\n          \
    \  }\n        }\n    }\n    return result", "    var vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var result = \"\"\n    var word = word.lowercased()\n\
    \    for i in (0..<word.count).reversed() {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            result = char\n            break\n        }\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var currentVowelIndex\
    \ = 0\n    var currentConsonantIndex = 0\n    var currentConsonantIndex2 = 0\n\
    \    var currentVowel = \"\"\n    var currentConsonant = \"\"\n    var currentConsonant2\
    \ = \"\"\n    var currentIndex = 0\n    var currentIndex2 = 0\n    var currentIndex3\
    \ = 0\n    var currentIndex4 = 0\n    var currentIndex5 = 0\n    var currentIndex6\
    \ = 0\n    var currentIndex7 = 0\n    var currentIndex8 = 0\n    var currentIndex9\
    \ = 0\n    var currentIndex10 = 0\n    var currentIndex11 = 0\n    var currentIndex12\
    \ = 0\n    var currentIndex13 = 0\n    var currentIndex14 = 0\n    var currentIndex15\
    \ = 0\n    var currentIndex16 = 0\n    var currentIndex17 = 0\n    var currentIndex18\
    \ = 0\n    var currentIndex19 = 0\n    var currentIndex20 = 0\n    var currentIndex21\
    \ = 0\n    var currentIndex22 = 0\n    var currentIndex23 = 0\n    var currentIndex24\
    \ = 0\n    var currentIndex25 = 0\n    var currentIndex26 = 0\n    var currentIndex27\
    \ = 0\n    var currentIndex28 = 0\n    var currentIndex29 = 0\n    var currentIndex30\
    \ = 0\n    var currentIndex31 = 0\n    var currentIndex32 = 0\n    var currentIndex33\
    \ = 0\n    var currentIndex34 = 0\n    var currentIndex35 = 0\n    var currentIndex36\
    \ = 0\n    var currentIndex37 = 0\n    var currentIndex38 = 0\n    var currentIndex39\
    \ = 0\n    var currentIndex40 = 0\n    var currentIndex41 = 0\n    var currentIndex42\
    \ = 0\n    var currentIndex43 = 0\n", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    index\
    \ = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            break\n\
    \        }\n        index -= 1\n    }\n    if index > 0 {\n        let char =\
    \ word[word.index(word.startIndex, offsetBy: index - 1)]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n        }\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var index = 0\n    var vowelIndex = 0\n    var vowelFound = false\n\
    \    var consonantFound = false\n    var vowelDistance = 0\n    var closestVowelDistance\
    \ = 0\n    var closestVowelIndex = 0\n    var closestVowel = \"\"\n    var wordArray\
    \ = Array(word)\n    var wordLength = wordArray.count\n    while index < wordLength\
    \ {\n        if vowels.contains(String(wordArray[index])) {\n            vowelFound\
    \ = true\n            vowelIndex = index\n        }\n        if consonants.contains(String(wordArray[index]))\
    \ {\n            consonantFound = true\n        }\n        if vowelFound && consonantFound\
    \ {\n            vowelDistance = index - vowelIndex\n            if vowelDistance\
    \ > closestVowelDistance {\n                closestVowelDistance = vowelDistance\n\
    \                closestVowelIndex = vowelIndex\n                closestVowel\
    \ = String(wordArray[vowelIndex])\n            }\n            vowelFound = false\n\
    \            consonantFound = false\n        }\n        index += 1\n    }\n  \
    \  if closestVowelDistance > 0 {\n        result = closestVowel\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(String(char))\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var count = 0\n    for\
    \ char in word.characters.reversed() {\n        if vowels.contains(String(char))\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ if consonants.contains(String(char)) {\n            count += 1\n        }\n\
    \        if count == 2 {\n            break\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var vowel_index = -1\n    var consonant_index = -1\n\
    \    for (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowel_index = index\n        }\n        if consonants.contains(String(char))\
    \ {\n            consonant_index = index\n        }\n        if vowel_index >\
    \ -1 && consonant_index > -1 && vowel_index < consonant_index {\n            result\
    \ = String(char)\n        }\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var index = 0\n    var is_consonant = false\n    for\
    \ char in word.characters.reversed() {\n        if vowels.contains(char) {\n \
    \           if is_consonant {\n                result = String(char)\n       \
    \         break\n            }\n        } else if consonants.contains(char) {\n\
    \            is_consonant = true\n        }\n        index += 1\n    }\n    return\
    \ result", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index)])) {\n            result = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n            break\n        }\n        index -= 1\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\",\
    \ \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) {\n                if index < word.count - 1 && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowel = String(char)\n                   \
    \     closestVowelIndex = index\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiou\"\n    var result = \"\"\n    var index = word.count - 1\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if vowels.contains(char) {\n            result = String(char)\n     \
    \       break\n        }\n        index -= 1\n    }\n    return result", "   \
    \ let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n  \
    \  var index = word.count - 1\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    var last_vowel = \"\"\n\
    \    var last_consonant = \"\"\n    for c in word.characters {\n        if vowels.containsString(String(c))\
    \ {\n            last_vowel = String(c)\n        } else {\n            last_consonant\
    \ = String(c)\n        }\n        if last_vowel != \"\" && last_consonant != \"\
    \" {\n            result = last_vowel\n            break\n        }\n    }\n \
    \   return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  \
    \  let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    var closest_vowel = \"\"\n    var closest_vowel_index = 0\n \
    \   var closest_consonant_index = 0\n    var closest_consonant_index_2 = 0\n \
    \   var closest_vowel_distance = 0\n    var closest_consonant_distance = 0\n \
    \   var closest_consonant_distance_2 = 0\n    var vowel_index = 0\n    var consonant_index\
    \ = 0\n    var consonant_index_2 = 0\n    var vowel_distance = 0\n    var consonant_distance\
    \ = 0\n    var consonant_distance_2 = 0\n    for i in 0..<word.count {\n     \
    \   let index = word.index(word.startIndex, offsetBy: i)\n        let char = String(word[index])\n\
    \        if vowels.contains(char) {\n            vowel_index = i\n           \
    \ vowel_distance = word.count - i\n            if vowel_distance > closest_vowel_distance\
    \ {\n                closest_vowel_distance = vowel_distance\n               \
    \ closest_vowel_index = vowel_index\n            }\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_index = i\n            consonant_distance = word.count\
    \ - i\n            if consonant_distance > closest_consonant_distance {\n    \
    \            closest_consonant_distance = consonant_distance\n               \
    \ closest_consonant_index = consonant_index\n            }\n        }\n    }\n\
    \    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if consonants.contains(char)\
    \ {\n            consonant_index_2 = i\n            consonant_distance_2 = word.count",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var index = 0\n    var is_vowel = false\n    var is_consonant =\
    \ false\n    for i in (0..<word.count).reversed() {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: i)])\n        if vowels.contains(char) {\n            is_vowel = true\n\
    \            index = i\n        }\n        if consonants.contains(char) && is_vowel\
    \ {\n            is_consonant = true\n            break\n        }\n    }\n  \
    \  if is_vowel && is_consonant {\n        result = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n    }\n    return result", "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var index\
    \ = 0\n    for char in word.characters.reversed() {\n        if vowels.contains(String(char))\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index += 1\n    }\n    if index == word.characters.count {\n        return \"\
    \"\n    }\n    for char in word.characters.reversed() {\n        if consonants.contains(String(char))\
    \ {\n            break\n        }\n        index += 1\n    }\n    if index ==\
    \ word.characters.count {\n        return \"\"\n    }\n    return result", " \
    \   var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n\
    \    var index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            result\
    \ = String(char)\n            break\n        }\n        index -= 1\n    }\n  \
    \  return result", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    var result = \"\"\n    var index = 0\n    var index_vowel = 0\n\
    \    var index_consonant = 0\n    var distance = 0\n    var distance_min = 0\n\
    \    var distance_min_index = 0\n    var distance_min_index_vowel = 0\n    var\
    \ distance_min_index_consonant = 0\n    for letter in word {\n        if vowels.contains(String(letter))\
    \ {\n            index_vowel = index\n        }\n        if consonants.contains(String(letter))\
    \ {\n            index_consonant = index\n        }\n        if index_vowel >\
    \ index_consonant {\n            distance = index_vowel - index_consonant\n  \
    \          if distance_min == 0 {\n                distance_min = distance\n \
    \               distance_min_index = index\n                distance_min_index_vowel\
    \ = index_vowel\n                distance_min_index_consonant = index_consonant\n\
    \            }\n            if distance < distance_min {\n                distance_min\
    \ = distance\n                distance_min_index = index\n                distance_min_index_vowel\
    \ = index_vowel\n                distance_min_index_consonant = index_consonant\n\
    \            }\n        }\n        index += 1\n    }\n    if distance_min_index_vowel\
    \ > distance_min_index_consonant {\n        result = String(word[word.index(word.startIndex,\
    \ offsetBy: distance_min_index_vowel)])\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n\
    \    var index = 0\n    var is_consonant = false\n    var is_vowel = false\n \
    \   var is_first_vowel = false\n    var is_first_consonant = false\n    var is_second_vowel\
    \ = false\n    var is_second_consonant = false\n    var is_third_vowel = false\n\
    \    var is_third_consonant = false\n    var is_fourth_vowel = false\n    var\
    \ is_fourth_consonant = false\n    var is_fifth_vowel = false\n    var is_fifth_consonant\
    \ = false\n    var is_sixth_vowel = false\n    var is_sixth_consonant = false\n\
    \    var is_seventh_vowel = false\n    var is_seventh_consonant = false\n    var\
    \ is_eighth_vowel = false\n    var is_eighth_consonant = false\n    var is_ninth_vowel\
    \ = false\n    var is_ninth_consonant = false\n    var is_tenth_vowel = false\n\
    \    var is_tenth_consonant = false\n    var is_eleventh_vowel = false\n    var\
    \ is_eleventh_consonant = false\n    var is_twelfth_vowel = false\n    var is_twelfth_consonant\
    \ = false\n    var is_thirteenth_vowel = false\n    var is_thirteenth_consonant\
    \ = false\n    var is_fourteenth_vowel = false\n    var is_fourteenth_consonant\
    \ = false\n    var is_fifteenth_vowel = false\n    var is_fifteenth_consonant\
    \ = false\n    var is_sixteenth_", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n    while\
    \ index >= 0 {\n        let char = String(word[word.index(word.startIndex, offsetBy:\
    \ index)])\n        if vowels.contains(char) {\n            result = char\n  \
    \          break\n        }\n        index -= 1\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    var result = \"\"\n    var prev_char = \" \"\n\
    \    for char in word.reversed() {\n        if vowels.contains(char) {\n     \
    \       if prev_char != \" \" && !vowels.contains(prev_char) {\n             \
    \   result = String(char)\n                break\n            }\n        }\n \
    \       prev_char = String(char)\n    }\n    return result", "    var result =\
    \ \"\"\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var index = word.count - 1\n    var vowel_index = -1\n    while index >= 0\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n \
    \       if vowels.contains(String(char)) {\n            vowel_index = index\n\
    \        }\n        if consonants.contains(String(char)) && vowel_index != -1\
    \ {\n            result = String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var index = 0\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.endIndex,\
    \ offsetBy: -index - 1)]) {\n                result = String(char)\n         \
    \       break\n            }\n        }\n        index += 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index =\
    \ word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var result = \"\"\n    var vowel_index = -1\n    var consonant_index = -1\n\
    \    var i = word.count - 1\n    while i >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n        if vowels.contains(String(char)) {\n            vowel_index\
    \ = i\n        }\n        if consonants.contains(String(char)) {\n           \
    \ consonant_index = i\n        }\n        if vowel_index != -1 && consonant_index\
    \ != -1 {\n            if vowel_index > consonant_index {\n                result\
    \ = String(char)\n                break\n            }\n        }\n        i -=\
    \ 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    var result =\
    \ \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let char\
    \ = word[index]\n        if vowels.contains(char) {\n            result = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && index < word.characters.count\
    \ - 1 {\n                let left = word[word.index(word.startIndex, offsetBy:\
    \ index - 1)]\n                let right = word[word.index(word.startIndex, offsetBy:\
    \ index + 1)]\n                if !vowels.contains(left) && !vowels.contains(right)\
    \ {\n                    result = String(char)\n                    break\n  \
    \              }\n            }\n        }\n    }\n    return result", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    for\
    \ (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && index < word.characters.count - 1 {\n       \
    \         let prevChar = word[word.index(word.startIndex, offsetBy: index - 1)]\n\
    \                let nextChar = word[word.index(word.startIndex, offsetBy: index\
    \ + 1)]\n                if !vowels.contains(String(prevChar)) && !vowels.contains(String(nextChar))\
    \ {\n                    result = String(char)\n                    break\n  \
    \              }\n            }\n        }\n    }\n    return result", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let chars = Array(word)\n\
    \    var result = \"\"\n    for i in (0..<chars.count).reversed() {\n        if\
    \ vowels.contains(String(chars[i])) {\n            result = String(chars[i])\n\
    \            if i + 1 < chars.count && !vowels.contains(String(chars[i + 1]))\
    \ {\n                break\n            }\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    for (i, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if i > 0 && !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: i - 1)]) {\n                if i < word.characters.count - 1 && !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: i + 1)]) {\n                    result = String(char)\n          \
    \      }\n            }\n        }\n    }\n    return result", "    var vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var word_array\
    \ = Array(word)\n    for i in 0..<word_array.count {\n        if vowels.contains(String(word_array[i]))\
    \ {\n            if i == 0 {\n                continue\n            } else if\
    \ i == word_array.count - 1 {\n                break\n            } else if vowels.contains(String(word_array[i-1]))\
    \ {\n                continue\n            } else if vowels.contains(String(word_array[i+1]))\
    \ {\n                continue\n            } else {\n                result =\
    \ String(word_array[i])\n                break\n            }\n        }\n   \
    \ }\n    return result", "    let vowels = \"aeiou\"\n    var closest_vowel =\
    \ \"\"\n    var closest_distance = Int.max\n    for (i, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(char) {\n            var distance = 0\n      \
    \      for j in (i + 1)..<word.characters.count {\n                if vowels.contains(word[j])\
    \ {\n                    distance = j - i\n                    break\n       \
    \         }\n            }\n            if distance < closest_distance {\n   \
    \             closest_distance = distance\n                closest_vowel = String(char)\n\
    \            }\n        }\n    }\n    return closest_vowel", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index =\
    \ word.count - 1\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    var last_consonant = \"\"\
    \n    var last_vowel = \"\"\n    for char in word.characters {\n        if vowels.containsString(String(char))\
    \ {\n            last_vowel = String(char)\n        } else {\n            last_consonant\
    \ = String(char)\n        }\n        if last_consonant != \"\" && last_vowel !=\
    \ \"\" {\n            result = last_vowel\n            break\n        }\n    }\n\
    \    return result", "    let vowels = \"aeiou\"\n    var closestVowel = \"\"\n\
    \    var closestDistance = Int.max\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            var distance = 0\n\
    \            for i in index..<word.characters.count {\n                if vowels.contains(String(word[i]))\
    \ {\n                    break\n                }\n                distance +=\
    \ 1\n            }\n            if distance < closestDistance {\n            \
    \    closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    var result = \"\"\n    var index = word.count - 1\n    while\
    \ index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            result = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let chars = Array(word)\n\
    \    var result = \"\"\n    var index = chars.count - 1\n    while index >= 0\
    \ {\n        if vowels.contains(String(chars[index])) {\n            result =\
    \ String(chars[index])\n            break\n        }\n        index -= 1\n   \
    \ }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var result = \"\"\n    var last_vowel_index = -1\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(String(char)) {\n       \
    \     last_vowel_index = index\n        } else {\n            if last_vowel_index\
    \ != -1 {\n                result = String(word[word.index(word.startIndex, offsetBy:\
    \ last_vowel_index)])\n                break\n            }\n        }\n    }\n\
    \    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    var last_vowel = \"\"\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            last_vowel = String(char)\n\
    \            break\n        }\n    }\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            result = String(char)\n\
    \        } else {\n            if result != \"\" {\n                break\n  \
    \          }\n        }\n    }\n    if result == \"\" {\n        return last_vowel\n\
    \    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    let chars = Array(word)\n    var result = \"\"\n    for i in (0..<chars.count).reversed()\
    \ {\n        if vowels.contains(String(chars[i])) {\n            if i == chars.count\
    \ - 1 {\n                continue\n            }\n            if !vowels.contains(String(chars[i\
    \ + 1])) {\n                result = String(chars[i])\n                break\n\
    \            }\n        }\n    }\n    return result", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closest_vowel = \"\"\
    \n    var closest_vowel_index = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                if index < closest_vowel_index {\n\
    \                    closest_vowel = String(char)\n                    closest_vowel_index\
    \ = index\n                }\n            }\n        }\n    }\n    return closest_vowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var vowel_index = -1\n    var consonant_index = -1\n    for i in\
    \ 0..<word.count {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_index = i\n        }\n        if vowel_index != -1\
    \ && consonant_index != -1 && vowel_index > consonant_index {\n            result\
    \ = String(word[index])\n            break\n        }\n    }\n    return result",
  "    var result = \"\"\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\",\
    \ \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var index = word.count - 1\n    var vowel_index = -1\n  \
    \  var consonant_index = -1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            vowel_index\
    \ = index\n        }\n        if consonants.contains(String(char)) {\n       \
    \     consonant_index = index\n        }\n        if vowel_index != -1 && consonant_index\
    \ != -1 {\n            if vowel_index > consonant_index {\n                result\
    \ = String(char)\n                break\n            }\n        }\n        index\
    \ -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var closest_vowel = \"\"\n    var closest_vowel_index\
    \ = 0\n    var closest_consonant_index = 0\n    var closest_consonant = \"\"\n\
    \    var index = 0\n    for letter in word.characters {\n        if vowels.containsString(String(letter))\
    \ {\n            if closest_vowel_index == 0 {\n                closest_vowel\
    \ = String(letter)\n                closest_vowel_index = index\n            }\n\
    \            else if index > closest_vowel_index && index < closest_consonant_index\
    \ {\n                closest_vowel = String(letter)\n                closest_vowel_index\
    \ = index\n            }\n        }\n        else if consonants.containsString(String(letter))\
    \ {\n            if closest_consonant_index == 0 {\n                closest_consonant\
    \ = String(letter)\n                closest_consonant_index = index\n        \
    \    }\n            else if index > closest_vowel_index && index < closest_consonant_index\
    \ {\n                closest_consonant = String(letter)\n                closest_consonant_index\
    \ = index\n            }\n        }\n        index += 1\n    }\n    return closest_vowel",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count -\
    \ 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index =\
    \ 0\n    let word = word.lowercased()\n    for char in word.reversed() {\n   \
    \     if vowels.contains(char) {\n            result = String(char)\n        \
    \    break\n        }\n        index += 1\n    }\n    if index == word.count {\n\
    \        return \"\"\n    }\n    for char in word.reversed() {\n        if !vowels.contains(char)\
    \ {\n            break\n        }\n        index += 1\n    }\n    return String(word.suffix(index))",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n \
    \   var i = word.count - 1\n    while i >= 0 {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            result = char\n            break\n        }\n        i -= 1\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\
    \n    for (index, char) in word.characters.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && index < word.characters.count - 1 {\n       \
    \         if !vowels.contains(word[word.index(word.startIndex, offsetBy: index\
    \ - 1)]) && !vowels.contains(word[word.index(word.startIndex, offsetBy: index\
    \ + 1)]) {\n                    result = String(char)\n                    break\n\
    \                }\n            }\n        }\n    }\n    return result", "   \
    \ let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count -\
    \ 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let chars\
    \ = Array(word)\n    for i in (0..<chars.count).reversed() {\n        if vowels.contains(String(chars[i]))\
    \ {\n            if i == chars.count - 1 {\n                return \"\"\n    \
    \        }\n            if !vowels.contains(String(chars[i + 1])) {\n        \
    \        return String(chars[i])\n            }\n        }\n    }\n    return\
    \ \"\"", "    var vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    var last_vowel_index = -1\n    while index >= 0 {\n        let char\
    \ = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            last_vowel_index = index\n        } else {\n            if last_vowel_index\
    \ != -1 {\n                result = String(word[word.index(word.startIndex, offsetBy:\
    \ last_vowel_index)])\n                break\n            }\n        }\n     \
    \   index -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var i = word.count\
    \ - 1\n    while i >= 0 {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            result = char\n            break\n        }\n        i -= 1\n\
    \    }\n    if result == \"\" {\n        return result\n    }\n    i -= 1\n  \
    \  while i >= 0 {\n        let index = word.index(word.startIndex, offsetBy: i)\n\
    \        let char = String(word[index])\n        if consonants.contains(char)\
    \ {\n            return result\n        }\n        i -= 1\n    }\n    return \"\
    \"", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var i = word.count\
    \ - 1\n    while i >= 0 {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = word[index]\n        if vowels.contains(char) {\n   \
    \         result = String(char)\n            break\n        }\n        i -= 1\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\
    \n    var index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var last_consonant_index\
    \ = 0\n    var last_vowel_index = 0\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(char) {\n            last_vowel_index = index\n\
    \        } else {\n            last_consonant_index = index\n        }\n     \
    \   if last_vowel_index > last_consonant_index {\n            result = String(char)\n\
    \        }\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    var last_consonant = false\n    while index >= 0 {\n        let char\
    \ = word[word.index(word.startIndex, offsetBy: index)]\n        if consonants.contains(char)\
    \ {\n            if last_consonant {\n                return result\n        \
    \    }\n            last_consonant = true\n        } else if vowels.contains(char)\
    \ {\n            result = String(char)\n            last_consonant = false\n \
    \       }\n        index -= 1\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var index = word.count - 1\n    var result\
    \ = \"\"\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            result\
    \ = String(char)\n            break\n        }\n        index -= 1\n    }\n  \
    \  return result", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var result = \"\"\n    var index = word.count - 1\n    var found = false\n \
    \   while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            if found\
    \ {\n                result = char\n                break\n            }\n   \
    \     } else {\n            found = true\n        }\n        index -= 1\n    }\n\
    \    return result", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n\
    \    var vowel_found = false\n    var consonant_found = false\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = word[index]\n        if vowels.contains(char) {\n            vowel_found\
    \ = true\n            vowel_index = i\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_found = true\n            consonant_index = i\n   \
    \     }\n        if vowel_found && consonant_found {\n            result = String(char)\n\
    \            break\n        }\n    }\n    if vowel_index < consonant_index {\n\
    \        return result\n    }\n    return \"\"", "    let vowels = \"aeiou\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    for\
    \ i in (0..<word.count).reversed() {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            if i == word.count - 1 {\n                break\n           \
    \ }\n            let nextIndex = word.index(word.startIndex, offsetBy: i + 1)\n\
    \            let nextChar = String(word[nextIndex])\n            if consonants.contains(nextChar)\
    \ {\n                result = char\n                break\n            }\n   \
    \     }\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n    var found_consonant\
    \ = false\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            if found_consonant\
    \ {\n                result = char\n                break\n            }\n   \
    \     } else {\n            found_consonant = true\n        }\n        index -=\
    \ 1\n    }\n    return result", "    var result = \"\"\n    var vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    var consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var wordArray = Array(word)\n\
    \    for i in stride(from: wordArray.count - 1, through: 0, by: -1) {\n      \
    \  if vowels.contains(String(wordArray[i])) {\n            if i == wordArray.count\
    \ - 1 {\n                continue\n            }\n            if consonants.contains(String(wordArray[i\
    \ + 1])) {\n                result = String(wordArray[i])\n                break\n\
    \            }\n        }\n    }\n    return result", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ index = 0\n    var found = false\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.endIndex,\
    \ offsetBy: -index)]) {\n                result = String(char)\n             \
    \   found = true\n                break\n            }\n        }\n        index\
    \ += 1\n    }\n    if !found {\n        result = \"\"\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    var last_consonant = -1\n\
    \    for (i, c) in word.characters.enumerated() {\n        if vowels.contains(String(c))\
    \ {\n            if last_consonant != -1 {\n                if result == \"\"\
    \ || i - last_consonant < result.characters.count {\n                    result\
    \ = String(word[word.index(word.startIndex, offsetBy: last_consonant + 1)..<word.index(word.startIndex,\
    \ offsetBy: i)])\n                }\n            }\n        } else {\n       \
    \     last_consonant = i\n        }\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var last_vowel\
    \ = \"\"\n    var last_consonant = \"\"\n    for char in word.characters {\n \
    \       if vowels.contains(String(char)) {\n            last_vowel = String(char)\n\
    \        } else {\n            last_consonant = String(char)\n        }\n    \
    \    if last_vowel != \"\" && last_consonant != \"\" {\n            result = last_vowel\n\
    \            break\n        }\n    }\n    return result", "    var vowels = \"\
    aeiou\"\n    var result = \"\"\n    var index = 0\n    var found = false\n   \
    \ for char in word.characters.reversed() {\n        if vowels.contains(char) {\n\
    \            result = String(char)\n            found = true\n            break\n\
    \        }\n        index += 1\n    }\n    if found {\n        for char in word.characters.reversed()\
    \ {\n            if !vowels.contains(char) {\n                if index == 0 {\n\
    \                    return result\n                }\n                index -=\
    \ 1\n            } else {\n                result = \"\"\n            }\n    \
    \    }\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    index\
    \ = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            break\n\
    \        }\n        index -= 1\n    }\n    if index < 0 {\n        return \"\"\
    \n    }\n    var index2 = index - 1\n    while index2 >= 0 {\n        let char\
    \ = word[word.index(word.startIndex, offsetBy: index2)]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index2 -= 1\n    }\n    if index2 < 0 {\n        return \"\"\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var prev =\
    \ \"\"\n    var next = \"\"\n    for c in word.characters.reversed() {\n     \
    \   if vowels.contains(String(c)) {\n            if prev != \"\" && next != \"\
    \" {\n                return String(c)\n            }\n        } else {\n    \
    \        if prev == \"\" {\n                prev = String(c)\n            } else\
    \ {\n                next = String(c)\n            }\n        }\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = String(word[word.index(word.startIndex, offsetBy: index)])\n        if\
    \ vowels.contains(char) {\n            result = char\n            break\n    \
    \    }\n        index -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closest_vowel = \"\"\
    \n    var vowel_index = 0\n    var consonant_index = 0\n    var vowel_found =\
    \ false\n    for i in (0..<word.count).reversed() {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n        if vowels.contains(char) {\n            vowel_index =\
    \ i\n            vowel_found = true\n        }\n        if consonants.contains(char)\
    \ && vowel_found {\n            consonant_index = i\n            break\n     \
    \   }\n    }\n    if vowel_found && vowel_index > consonant_index {\n        closest_vowel\
    \ = String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n    }\n\
    \    return closest_vowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var result = \"\"\n    var last_vowel = \"\"\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            last_vowel = String(char)\n\
    \            break\n        }\n    }\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            result = String(char)\n\
    \        } else {\n            if result != \"\" {\n                break\n  \
    \          }\n        }\n    }\n    if result == \"\" {\n        return last_vowel\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\
    \n    var last_consonant_index = -1\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > last_consonant_index\
    \ + 1 {\n                result = String(char)\n                break\n      \
    \      }\n        } else {\n            last_consonant_index = index\n       \
    \ }\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n    while index\
    \ >= 0 {\n        let char = String(word[word.index(word.startIndex, offsetBy:\
    \ index)])\n        if vowels.contains(char) {\n            result = char\n  \
    \          break\n        }\n        index -= 1\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var last_vowel_index\
    \ = -1\n    for (index, char) in word.characters.enumerated() {\n        if vowels.contains(char)\
    \ {\n            last_vowel_index = index\n        } else if last_vowel_index\
    \ != -1 {\n            let next_char = word.characters[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n            if vowels.contains(next_char) {\n       \
    \         result = String(char)\n                break\n            }\n      \
    \  }\n    }\n    return result", "    var vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var word = word.lowercased()\n    var result = \"\"\n    var count\
    \ = 0\n    for char in word.characters.reversed() {\n        if vowels.contains(String(char))\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ count += 1\n    }\n    if count == word.characters.count {\n        return \"\
    \"\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\",\
    \ \"u\"]\n    var closest_vowel = \"\"\n    var closest_vowel_index = 0\n    var\
    \ closest_vowel_distance = 0\n    var distance = 0\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            distance = word.characters.count\
    \ - index\n            if distance > closest_vowel_distance {\n              \
    \  closest_vowel_distance = distance\n                closest_vowel_index = index\n\
    \                closest_vowel = String(char)\n            }\n        }\n    }\n\
    \    return closest_vowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var result = \"\"\n    var index = word.count - 1\n    while index >=\
    \ 0 {\n        let char = String(word[word.index(word.startIndex, offsetBy: index)])\n\
    \        if vowels.contains(char) {\n            result = char\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var\
    \ last_vowel_index = -1\n    var last_consonant_index = -1\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ last_vowel_index = i\n        } else if consonants.contains(char) {\n      \
    \      last_consonant_index = i\n        }\n        if last_vowel_index > -1 &&\
    \ last_consonant_index > -1 && last_vowel_index > last_consonant_index {\n   \
    \         result = String(word[word.index(word.startIndex, offsetBy: last_vowel_index)])\n\
    \            break\n        }\n    }\n    return result", "    let vowels = \"\
    aeiou\"\n    var result = \"\"\n    var index = word.count - 1\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if vowels.contains(char) {\n            result = String(char)\n     \
    \       break\n        }\n        index -= 1\n    }\n    return result", "   \
    \ var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n  \
    \  var index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            result\
    \ = String(char)\n            break\n        }\n        index -= 1\n    }\n  \
    \  return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = String(word[word.index(word.startIndex, offsetBy: index)])\n\
    \        if vowels.contains(char) {\n            result = char\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = \"\
    aeiou\"\n    var result = \"\"\n    var index = word.count - 1\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if vowels.contains(char) {\n            result = String(char)\n     \
    \       break\n        }\n        index -= 1\n    }\n    return result", "   \
    \ let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n   \
    \ var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = word[word.index(word.startIndex, offsetBy: index)]\n     \
    \   if vowels.contains(char) {\n            result = String(char)\n          \
    \  break\n        }\n        index -= 1\n    }\n    index -= 1\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if consonants.contains(char) {\n            break\n        }\n      \
    \  if vowels.contains(char) {\n            result = String(char)\n           \
    \ break\n        }\n        index -= 1\n    }\n    return result", "    var result\
    \ = \"\"\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var index = word.count - 1\n    var prev = \"\"\n    var next = \"\"\n   \
    \ while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            if prev\
    \ != \"\" && next != \"\" {\n                result = char\n                break\n\
    \            }\n        } else if consonants.contains(char) {\n            if\
    \ prev == \"\" {\n                prev = char\n            } else {\n        \
    \        next = char\n            }\n        }\n        index -= 1\n    }\n  \
    \  return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(String(char)) {\n \
    \           var distance = 0\n            for i in index..<word.count {\n    \
    \            if vowels.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ i)])) {\n                    break\n                }\n                distance\
    \ += 1\n            }\n            if distance < closestDistance {\n         \
    \       closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n\
    \    for (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index == 0 {\n                continue\n            }\n  \
    \          if consonants.contains(String(word.characters[word.characters.index(before:\
    \ word.characters.index(after: word.characters.startIndex, offsetBy: index))]))\
    \ {\n                result = String(char)\n                break\n          \
    \  }\n        }\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closest_vowel = \"\"\n    var closest_vowel_index\
    \ = -1\n    var closest_consonant_index = -1\n    var closest_consonant = \"\"\
    \n    var vowel_index = -1\n    var consonant_index = -1\n    for (index, char)\
    \ in word.characters.enumerated() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            vowel_index = index\n            if closest_consonant_index !=\
    \ -1 && vowel_index - closest_consonant_index < closest_vowel_index - closest_consonant_index\
    \ {\n                closest_vowel = String(char)\n                closest_vowel_index\
    \ = vowel_index\n                closest_consonant = closest_consonant\n     \
    \           closest_consonant_index = closest_consonant_index\n            }\n\
    \        }\n        if consonants.contains(String(char).lowercased()) {\n    \
    \        consonant_index = index\n            if closest_vowel_index != -1 &&\
    \ consonant_index - closest_vowel_index < closest_consonant_index - closest_vowel_index\
    \ {\n                closest_vowel = closest_vowel\n                closest_vowel_index\
    \ = closest_vowel_index\n                closest_consonant = String(char)\n  \
    \              closest_consonant_index = consonant_index\n            }\n    \
    \    }\n    }\n    return closest_vowel", "    let vowels = \"aeiou\"\n    var\
    \ result = \"\"\n    var last_consonant = -1\n    for i in 0..<word.count {\n\
    \        let index = word.index(word.startIndex, offsetBy: i)\n        let char\
    \ = word[index]\n        if vowels.contains(char) {\n            if last_consonant\
    \ != -1 {\n                result = String(char)\n                break\n    \
    \        }\n        } else {\n            last_consonant = i\n        }\n    }\n\
    \    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var\
    \ last_consonant = \"\"\n    for char in word.reversed() {\n        if vowels.contains(char)\
    \ {\n            if last_consonant != \"\" {\n                result = String(char)\n\
    \                break\n            }\n        } else {\n            last_consonant\
    \ = String(char)\n        }\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestVowelDistance = 0\n    var currentVowelIndex = 0\n    var\
    \ currentVowelDistance = 0\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            currentVowelIndex\
    \ = index\n            currentVowelDistance = word.characters.count - currentVowelIndex\n\
    \            if currentVowelDistance > closestVowelDistance {\n              \
    \  closestVowel = String(char)\n                closestVowelIndex = currentVowelIndex\n\
    \                closestVowelDistance = currentVowelDistance\n            }\n\
    \        }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n   \
    \ var result = \"\"\n    var lastConsonant = -1\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if lastConsonant != -1 {\n\
    \                if result.isEmpty {\n                    result = String(char)\n\
    \                } else {\n                    if index - lastConsonant < word.count\
    \ - index {\n                        result = String(char)\n                 \
    \   }\n                }\n            }\n        } else {\n            lastConsonant\
    \ = index\n        }\n    }\n    return result", "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count -\
    \ 1\n    while index >= 0 {\n        if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index)])) {\n            result = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n            break\n        }\n        index -= 1\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\",\
    \ \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var result = \"\"\n    var index = 0\n    var vowel_index\
    \ = 0\n    var vowel_distance = 0\n    var distance = 0\n    for char in word.characters\
    \ {\n        if vowels.contains(String(char)) {\n            vowel_index = index\n\
    \            vowel_distance = 0\n        } else if consonants.contains(String(char))\
    \ {\n            vowel_distance += 1\n        }\n        index += 1\n    }\n \
    \   if vowel_distance == 0 {\n        return \"\"\n    }\n    index = 0\n    for\
    \ char in word.characters {\n        if vowels.contains(String(char)) {\n    \
    \        distance = abs(vowel_index - index)\n            if distance < vowel_distance\
    \ {\n                vowel_distance = distance\n                result = String(char)\n\
    \            }\n        }\n        index += 1\n    }\n    return result", "  \
    \  let vowels = \"aeiou\"\n    var result = \"\"\n    var last_vowel = \"\"\n\
    \    var last_consonant = \"\"\n    for c in word.characters {\n        if vowels.containsString(String(c))\
    \ {\n            last_vowel = String(c)\n        } else {\n            last_consonant\
    \ = String(c)\n        }\n        if last_vowel != \"\" && last_consonant != \"\
    \" {\n            result = last_vowel\n            break\n        }\n    }\n \
    \   return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  \
    \  var result = \"\"\n    var last_vowel_index = -1\n    for (index, char) in\
    \ word.characters.enumerated() {\n        if vowels.contains(String(char)) {\n\
    \            last_vowel_index = index\n        } else {\n            if last_vowel_index\
    \ != -1 {\n                result = String(word[word.index(word.startIndex, offsetBy:\
    \ last_vowel_index)])\n                break\n            }\n        }\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = String(word[word.index(word.startIndex, offsetBy: index)])\n\
    \        if vowels.contains(char) {\n            result = char\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var vowel_index =\
    \ -1\n    var consonant_index = -1\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            vowel_index = index\n\
    \        } else {\n            consonant_index = index\n        }\n        if\
    \ vowel_index != -1 && consonant_index != -1 {\n            if vowel_index > consonant_index\
    \ {\n                result = String(char)\n                break\n          \
    \  }\n        }\n    }\n    return result", "    var vowels = \"aeiou\"\n    var\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index\
    \ = 0\n    for char in word.characters.reversed() {\n        if vowels.contains(char)\
    \ {\n            if index == 0 {\n                return \"\"\n            }\n\
    \            if consonants.contains(word[word.index(word.endIndex, offsetBy: -index-1)])\
    \ {\n                return String(char)\n            }\n        }\n        index\
    \ += 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n    while\
    \ index >= 0 {\n        let char = String(word[word.index(word.startIndex, offsetBy:\
    \ index)])\n        if vowels.contains(char) {\n            result = char\n  \
    \          break\n        }\n        index -= 1\n    }\n    return result", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(String(char)) {\n            for (index2,\
    \ char2) in word.enumerated() {\n                if vowels.contains(String(char2))\
    \ {\n                    if index2 > index {\n                        if index2\
    \ - index < closestDistance {\n                            closestDistance = index2\
    \ - index\n                            closestVowel = String(char2)\n        \
    \                }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n\
    \    while index >= 0 {\n        if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index)])) {\n            result = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n            break\n        }\n        index -= 1\n    }\n\
    \    return result", "    var result = \"\"\n    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var index = word.count - 1\n    var is_vowel\
    \ = false\n    var is_consonant = false\n    while index >= 0 {\n        let char\
    \ = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(String(char))\
    \ {\n            is_vowel = true\n        } else if consonants.contains(String(char))\
    \ {\n            is_consonant = true\n        }\n        if is_vowel && is_consonant\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    var vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    var consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var word_array = Array(word)\n\
    \    var index = 0\n    var vowel_index = 0\n    var consonant_index = 0\n   \
    \ var vowel_found = false\n    var consonant_found = false\n    var vowel_distance\
    \ = 0\n    var consonant_distance = 0\n    var distance = 0\n    var min_distance\
    \ = 0\n    var min_vowel_index = 0\n    var min_consonant_index = 0\n    var min_vowel_distance\
    \ = 0\n    var min_consonant_distance = 0\n    var min_distance_found = false\n\
    \    var min_vowel_found = false\n    var min_consonant_found = false\n    var\
    \ min_vowel = \"\"\n    var min_consonant = \"\"\n    var min_vowel_index_found\
    \ = false\n    var min_consonant_index_found = false\n    var min_vowel_distance_found\
    \ = false\n    var min_consonant_distance_found = false\n    var min_vowel_index_found_first\
    \ = false\n    var min_consonant_index_found_first = false\n    var min_vowel_distance_found_first\
    \ = false\n    var min_consonant_distance_found_first = false\n    var min_vowel_index_found_second\
    \ = false\n    var min_consonant_index_found_second = false\n    var min_vowel_distance_found_second\
    \ = false\n    var min_consonant_distance_found_second = false\n    var min_vowel_index_found_third\
    \ = false\n    var min_consonant_index_found_third = false\n    var min_vowel_distance_found_third\
    \ = false", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var result = \"\"\n    var index = 0\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var vowel = \"\"\n    var consonant = \"\"\n    var vowelFound = false\n\
    \    var consonantFound = false\n    var vowelDistance = 0\n    var consonantDistance\
    \ = 0\n    var distance = 0\n    var distanceFound = false\n    var distanceIndex\
    \ = 0\n    var distanceVowel = \"\"\n    var distanceConsonant = \"\"\n    var\
    \ distanceVowelIndex = 0\n    var distanceConsonantIndex = 0\n    var distanceVowelFound\
    \ = false\n    var distanceConsonantFound = false\n    var distanceVowelDistance\
    \ = 0\n    var distanceConsonantDistance = 0\n    var distanceDistance = 0\n \
    \   var distanceDistanceFound = false\n    var distanceDistanceIndex = 0\n   \
    \ var distanceDistanceVowel = \"\"\n    var distanceDistanceConsonant = \"\"\n\
    \    var distanceDistanceVowelIndex = 0\n    var distanceDistanceConsonantIndex\
    \ = 0\n    var distanceDistanceVowelFound = false\n    var distanceDistanceConsonantFound\
    \ = false\n    var distanceDistanceVowelDistance = 0\n    var distanceDistanceConsonantDistance\
    \ = 0\n    var distanceDistanceDistance = 0\n    var distanceDistanceDistanceFound\
    \ = false\n    var distanceDistanceDistanceIndex = 0\n    var distanceDistanceDistanceVowel\
    \ = \"\"\n    var distanceDistanceDistanceConsonant = \"\"\n    var distanceDistanceDistanceVowelIndex\
    \ = 0\n    var distanceDistanceDistanceConsonantIndex = 0\n    var distanceDistanceDistanceVowelFound\
    \ = false\n    var distanceDistanceDistanceConsonantFound = false\n    var distanceDistanceDistanceVowelDistance\
    \ = 0\n    var distanceDistanceDistanceConsonantDistance = 0\n    var distanceDistanceDistanceDistance\
    \ = 0\n    var distanceDistanceDistanceDistanceFound = false\n    var distanceDistanceDistance",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && index < word.characters.count\
    \ - 1 {\n                if !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) && !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    result = String(char)\n      \
    \              break\n                }\n            }\n        }\n    }\n   \
    \ return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    var result = \"\"\n    var index = 0\n    var vowel_index = 0\n\
    \    var consonant_index = 0\n    var vowel_distance = 0\n    var consonant_distance\
    \ = 0\n    var min_distance = 0\n    var min_index = 0\n    var min_vowel_index\
    \ = 0\n    var min_consonant_index = 0\n    var min_vowel_distance = 0\n    var\
    \ min_consonant_distance = 0\n    var min_vowel = \"\"\n    var min_consonant\
    \ = \"\"\n    var vowel_found = false\n    var consonant_found = false\n    for\
    \ char in word.characters {\n        if vowels.contains(String(char)) {\n    \
    \        vowel_found = true\n            vowel_index = index\n            vowel_distance\
    \ = word.characters.count - index\n        }\n        if consonants.contains(String(char))\
    \ {\n            consonant_found = true\n            consonant_index = index\n\
    \            consonant_distance = word.characters.count - index\n        }\n \
    \       if vowel_found && consonant_found {\n            if vowel_distance > consonant_distance\
    \ {\n                if min_distance == 0 {\n                    min_distance\
    \ = vowel_distance - consonant_distance\n                    min_index = index\n\
    \                    min_vowel_index = vowel_index\n                    min_consonant_index\
    \ = consonant_index\n                    min_vowel_distance = vowel_distance\n\
    \                    min_consonant_distance = consonant_distance\n           \
    \         min_vowel = String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n\
    \                    min_consonant = String(word[word.index(word.startIndex, offsetBy:\
    \ consonant_index)])\n                } else {", "    let vowels = \"aeiou\"\n\
    \    var result = \"\"\n    var lastConsonant = 0\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > lastConsonant\
    \ + 1 {\n                result = String(char)\n                break\n      \
    \      }\n        } else {\n            lastConsonant = index\n        }\n   \
    \ }\n    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\n\
    \    var last_vowel_index = -1\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            last_vowel_index\
    \ = index\n        } else if last_vowel_index > -1 {\n            if index - last_vowel_index\
    \ < 3 {\n                result = String(word[word.index(word.startIndex, offsetBy:\
    \ last_vowel_index)])\n            }\n        }\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var i = word.count\
    \ - 1\n    while i >= 0 {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = word[index]\n        if vowels.contains(char) {\n   \
    \         result = String(char)\n            break\n        }\n        i -= 1\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\
    \n    var i = word.count - 1\n    while i >= 0 {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let character = word[index]\n        if vowels.contains(character)\
    \ {\n            result = String(character)\n            break\n        }\n  \
    \      i -= 1\n    }\n    return result", "    var vowels = [Character]()\n  \
    \  var consonants = [Character]()\n    var result = \"\"\n    let vowels_set =\
    \ Set(\"aeiou\")\n    let consonants_set = Set(\"bcdfghjklmnpqrstvwxyz\")\n  \
    \  for char in word {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n\
    \        } else if consonants_set.contains(char) {\n            consonants.append(char)\n\
    \        }\n    }\n    if vowels.count == 0 || consonants.count == 0 {\n     \
    \   return result\n    }\n    var i = vowels.count - 1\n    var j = consonants.count\
    \ - 1\n    while i >= 0 && j >= 0 {\n        if vowels[i] < consonants[j] {\n\
    \            result = String(vowels[i])\n            break\n        }\n      \
    \  i -= 1\n        j -= 1\n    }\n    return result", "    var result = \"\"\n\
    \    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var word\
    \ = word.lowercased()\n    var index = word.count - 1\n    var vowel_index = -1\n\
    \    var consonant_index = -1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            vowel_index\
    \ = index\n        }\n        if consonants.contains(String(char)) {\n       \
    \     consonant_index = index\n        }\n        if vowel_index != -1 && consonant_index\
    \ != -1 {\n            if vowel_index > consonant_index {\n                result\
    \ = String(char)\n                break\n            }\n        }\n        index\
    \ -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        if consonants.contains(char)\
    \ {\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count -\
    \ 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var last_consonant_index\
    \ = -1\n    var last_vowel_index = -1\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            last_vowel_index = index\n\
    \        } else {\n            if last_vowel_index > last_consonant_index {\n\
    \                result = String(char)\n                break\n            }\n\
    \            last_consonant_index = index\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var distance = word.count\n    for (i, c) in word.enumerated()\
    \ {\n        if vowels.contains(c) {\n            if i > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: i - 1)]) {\n                if i < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: i + 1)]) {\n                    if distance > i {\n              \
    \          distance = i\n                        result = String(c)\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ result", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    var found = false\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if vowels.contains(String(char)) {\n            result = String(char)\n\
    \            found = true\n        } else if found {\n            break\n    \
    \    }\n        index -= 1\n    }\n    return result", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var vowel_index\
    \ = 0\n    var consonant_index = 0\n    var closest_vowel_index = 0\n    var closest_consonant_index\
    \ = 0\n    var closest_distance = 0\n    for i in 0..<word.count {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let char = String(word[index])\n\
    \        if vowels.contains(char) {\n            vowel_index = i\n           \
    \ for j in (0..<i).reversed() {\n                let index = word.index(word.startIndex,\
    \ offsetBy: j)\n                let char = String(word[index])\n             \
    \   if consonants.contains(char) {\n                    consonant_index = j\n\
    \                    if closest_distance == 0 {\n                        closest_distance\
    \ = vowel_index - consonant_index\n                        closest_vowel_index\
    \ = vowel_index\n                        closest_consonant_index = consonant_index\n\
    \                    } else if vowel_index - consonant_index < closest_distance\
    \ {\n                        closest_distance = vowel_index - consonant_index\n\
    \                        closest_vowel_index = vowel_index\n                 \
    \       closest_consonant_index = consonant_index\n                    }\n   \
    \             }\n            }\n        }\n    }\n    if closest_vowel_index !=\
    \ 0 && closest_consonant_index != 0 {\n        let index = word.index(word.startIndex,\
    \ offsetBy: closest_vowel_index)\n        result = String(word[index])\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = String(word[word.index(word.startIndex, offsetBy: index)])\n\
    \        if vowels.contains(char) {\n            result = char\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = \"\
    aeiou\"\n    var result = \"\"\n    var index = word.count - 1\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if vowels.contains(char) {\n            result = String(char)\n     \
    \       break\n        }\n        index -= 1\n    }\n    return result", "   \
    \ let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count -\
    \ 1\n    while index >= 0 {\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    var\
    \ result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n    \
    \    let char = word[word.index(word.startIndex, offsetBy: index)]\n        if\
    \ vowels.contains(char) {\n            result = String(char)\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var\
    \ vowel_index = 0\n    var consonant_index = 0\n    var distance = 0\n    var\
    \ min_distance = 0\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n            for j in 0..<word.count {\n    \
    \            let index = word.index(word.startIndex, offsetBy: j)\n          \
    \      let char = String(word[index])\n                if consonants.contains(char)\
    \ {\n                    consonant_index = j\n                    if vowel_index\
    \ < consonant_index {\n                        distance = consonant_index - vowel_index\n\
    \                        if min_distance == 0 {\n                            min_distance\
    \ = distance\n                            result = char\n                    \
    \    } else if distance < min_distance {\n                            min_distance\
    \ = distance\n                            result = char\n                    \
    \    }\n                    }\n                }\n            }\n        }\n \
    \   }\n    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\n\
    \    var index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var result = \"\"\n    var closest_vowel_index = -1\n    var closest_consonant_index\
    \ = -1\n    var closest_consonant_index_2 = -1\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if closest_consonant_index\
    \ != -1 && closest_consonant_index_2 != -1 {\n                if index > closest_consonant_index\
    \ && index < closest_consonant_index_2 {\n                    if closest_vowel_index\
    \ == -1 {\n                        closest_vowel_index = index\n             \
    \       } else {\n                        if index > closest_vowel_index {\n \
    \                           closest_vowel_index = index\n                    \
    \    }\n                    }\n                }\n            }\n        } else\
    \ if consonants.contains(String(char)) {\n            if closest_consonant_index\
    \ == -1 {\n                closest_consonant_index = index\n            } else\
    \ {\n                if index > closest_consonant_index {\n                  \
    \  closest_consonant_index_2 = index\n                }\n            }\n     \
    \   }\n    }\n    if closest_vowel_index != -1 {\n        result = String(word[word.index(word.startIndex,\
    \ offsetBy: closest_vowel_index)])\n    }\n    return result", "    var vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index\
    \ = 0\n    var last_vowel_index = -1\n    var last_consonant_index = -1\n    var\
    \ last_consonant_index_before_vowel = -1\n    for character in word.characters\
    \ {\n        if vowels.contains(String(character)) {\n            last_vowel_index\
    \ = index\n            if last_consonant_index_before_vowel != -1 {\n        \
    \        result = String(character)\n                break\n            }\n  \
    \      } else {\n            last_consonant_index = index\n            if last_vowel_index\
    \ != -1 {\n                last_consonant_index_before_vowel = index\n       \
    \     }\n        }\n        index += 1\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var last_vowel\
    \ = \"\"\n    for char in word.characters.reversed() {\n        if vowels.contains(String(char))\
    \ {\n            last_vowel = String(char)\n            break\n        }\n   \
    \ }\n    for char in word.characters.reversed() {\n        if vowels.contains(String(char))\
    \ {\n            result = String(char)\n        } else {\n            if result\
    \ != \"\" {\n                break\n            }\n        }\n    }\n    if result\
    \ == \"\" {\n        return last_vowel\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowel_index = -1\n    for (index,\
    \ char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowel_index = index\n        }\n    }\n    return vowel_index\
    \ == -1 ? \"\" : String(word[word.index(word.startIndex, offsetBy: vowel_index)])",
  "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n \
    \   for (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index == 0 {\n                continue\n            }\n  \
    \          if index == word.characters.count - 1 {\n                continue\n\
    \            }\n            if !vowels.contains(String(word.characters[word.index(before:\
    \ word.endIndex)])) {\n                result = String(char)\n               \
    \ break\n            }\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

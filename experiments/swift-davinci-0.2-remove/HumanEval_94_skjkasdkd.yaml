name: HumanEval_94_skjkasdkd
language: swift
prompt: "\n/// You are given a list of integers.\n/// You need to find the largest\
  \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
  \ [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4,\
  \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
  \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
  \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
  assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
  assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8,\
  \ 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
  \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
completions: ["    var largestPrime = 0\n    for i in lst {\n        if isPrime(num:\
    \ i) {\n            if i > largestPrime {\n                largestPrime = i\n\
    \            }\n        }\n    }\n    return sumOfDigits(num: largestPrime)",
  "    var max = 0\n    for i in lst {\n        if isPrime(num: i) && i > max {\n\
    \            max = i\n        }\n    }\n    return sumDigits(num: max)", "   \
    \ var lst = lst\n    var sum = 0\n    var max = 0\n    for i in 0..<lst.count\
    \ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n \
    \   for i in 2...max {\n        var isPrime = true\n        for j in 2..<i {\n\
    \            if i % j == 0 {\n                isPrime = false\n            }\n\
    \        }\n        if isPrime {\n            for j in 0..<lst.count {\n     \
    \           if lst[j] % i == 0 {\n                    lst[j] /= i\n          \
    \      }\n            }\n        }\n    }\n    for i in 0..<lst.count {\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var largestPrime = 0\n    for\
    \ i in lst {\n        if isPrime(number: i) && i > largestPrime {\n          \
    \  largestPrime = i\n        }\n    }\n    return sumOfDigits(number: largestPrime)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(i) {\n       \
    \     if i > largestPrime {\n                largestPrime = i\n            }\n\
    \        }\n    }\n    return largestPrime", "    var maxPrime = 0\n    for i\
    \ in lst {\n        if isPrime(i) {\n            if i > maxPrime {\n         \
    \       maxPrime = i\n            }\n        }\n    }\n    return sumDigits(maxPrime)",
  "    var lst = lst\n    var sum = 0\n    var max = 0\n    for i in 0..<lst.count\
    \ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n \
    \   var isPrime = true\n    for i in 2..<max {\n        if max % i == 0 {\n  \
    \          isPrime = false\n        }\n    }\n    if isPrime {\n        while\
    \ max > 0 {\n            sum += max % 10\n            max /= 10\n        }\n \
    \   }\n    return sum", "    var max = 0\n    for i in lst {\n        if i > max\
    \ {\n            max = i\n        }\n    }\n    var sum = 0\n    for i in String(max)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var maxPrime\
    \ = 0\n    for i in lst {\n        if isPrime(n: i) && i > maxPrime {\n      \
    \      maxPrime = i\n        }\n    }\n    return sumDigits(n: maxPrime)", " \
    \   var max = 0\n    for i in lst {\n        if i > max {\n            max = i\n\
    \        }\n    }\n    var sum = 0\n    while max != 0 {\n        sum += max %\
    \ 10\n        max /= 10\n    }\n    return sum", "    var max = 0\n    for i in\
    \ lst {\n        if isPrime(number: i) {\n            if i > max {\n         \
    \       max = i\n            }\n        }\n    }\n    var sum = 0\n    while max\
    \ > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return sum", " \
    \   var max = 0\n    for i in lst {\n        if isPrime(n: i) && i > max {\n \
    \           max = i\n        }\n    }\n    return sumOfDigits(n: max)", "    var\
    \ max = 0\n    for i in lst {\n        if isPrime(i) && i > max {\n          \
    \  max = i\n        }\n    }\n    return sumDigits(max)", "    var max = 0\n \
    \   for i in lst {\n        if i > max {\n            max = i\n        }\n   \
    \ }\n    var sum = 0\n    var n = max\n    while n > 0 {\n        sum += n % 10\n\
    \        n /= 10\n    }\n    return sum", "    var maxPrime = 0\n    for num in\
    \ lst {\n        if isPrime(num: num) {\n            maxPrime = max(maxPrime,\
    \ num)\n        }\n    }\n    return sumDigits(num: maxPrime)", "    var max =\
    \ 0\n    for i in lst {\n        if isPrime(i) && i > max {\n            max =\
    \ i\n        }\n    }\n    return sumDigits(max)", "    var max = 0\n    for i\
    \ in lst {\n        if isPrime(i) && i > max {\n            max = i\n        }\n\
    \    }\n    return sumDigits(max)", "    var max = 0\n    for i in lst {\n   \
    \     if isPrime(num: i) {\n            if i > max {\n                max = i\n\
    \            }\n        }\n    }\n    return sumOfDigits(num: max)", "    var\
    \ max = 0\n    for i in lst {\n        if i > max {\n            max = i\n   \
    \     }\n    }\n    return max", "    var lst = lst\n    var max = 0\n    var\
    \ sum = 0\n    for i in 0..<lst.count {\n        if lst[i] > max {\n         \
    \   max = lst[i]\n        }\n    }\n    for i in 2...max {\n        var isPrime\
    \ = true\n        for j in 2..<i {\n            if i % j == 0 {\n            \
    \    isPrime = false\n            }\n        }\n        if isPrime {\n       \
    \     for k in 0..<lst.count {\n                if lst[k] == i {\n           \
    \         sum += lst[k]\n                }\n            }\n        }\n    }\n\
    \    return sum", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(num:\
    \ i) {\n            if i > maxPrime {\n                maxPrime = i\n        \
    \    }\n        }\n    }\n    return sumOfDigits(num: maxPrime)", "    var maxPrime\
    \ = 0\n    for num in lst {\n        if isPrime(num: num) {\n            maxPrime\
    \ = max(maxPrime, num)\n        }\n    }\n    return sumDigits(num: maxPrime)",
  "    var lst = lst\n    var max = 0\n    var sum = 0\n    for i in 0..<lst.count\
    \ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n \
    \   for i in 2...max {\n        var flag = true\n        for j in 2..<i {\n  \
    \          if i % j == 0 {\n                flag = false\n                break\n\
    \            }\n        }\n        if flag {\n            sum += i\n        }\n\
    \    }\n    return sum", "    var max = 0\n    for i in lst {\n        if i >\
    \ max {\n            max = i\n        }\n    }\n    var sum = 0\n    for i in\
    \ String(max) {\n        sum += Int(String(i))!\n    }\n    return sum", '    return
    0', "    var maxPrime = 0\n    for i in lst {\n        if i > maxPrime && isPrime(n:\
    \ i) {\n            maxPrime = i\n        }\n    }\n    return sumOfDigits(n:\
    \ maxPrime)", "    var max = 0\n    for i in lst {\n        if isPrime(num: i)\
    \ && i > max {\n            max = i\n        }\n    }\n    return sumDigits(num:\
    \ max)", "    var max = 0\n    for i in lst {\n        if i > max {\n        \
    \    max = i\n        }\n    }\n    var isPrime = true\n    var prime = 0\n  \
    \  for i in 2...max {\n        for j in 2..<i {\n            if i % j == 0 {\n\
    \                isPrime = false\n                break\n            }\n     \
    \   }\n        if isPrime {\n            prime = i\n        }\n        isPrime\
    \ = true\n    }\n    var sum = 0\n    for i in String(prime) {\n        sum +=\
    \ Int(String(i))!\n    }\n    return sum", "    var largestPrime = 0\n    for\
    \ num in lst {\n        if isPrime(num: num) {\n            if num > largestPrime\
    \ {\n                largestPrime = num\n            }\n        }\n    }\n   \
    \ return sumOfDigits(num: largestPrime)", "    var max = 0\n    for i in lst {\n\
    \        if i > max {\n            max = i\n        }\n    }\n    var primes =\
    \ [Int]()\n    for i in 2...max {\n        var isPrime = true\n        for j in\
    \ 2..<i {\n            if i % j == 0 {\n                isPrime = false\n    \
    \        }\n        }\n        if isPrime {\n            primes.append(i)\n  \
    \      }\n    }\n    var maxPrime = 0\n    for i in primes {\n        if i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    var sum = 0\n    var maxPrimeString\
    \ = String(maxPrime)\n    for i in maxPrimeString {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var maxPrime = 0\n    for i in lst {\n        if\
    \ isPrime(i) && i > maxPrime {\n            maxPrime = i\n        }\n    }\n \
    \   return sumOfDigits(maxPrime)", "    var maxPrime = 0\n    for i in lst {\n\
    \        if isPrime(num: i) {\n            if i > maxPrime {\n               \
    \ maxPrime = i\n            }\n        }\n    }\n    return sumOfDigits(num: maxPrime)",
  "    var max = 0\n    for i in lst {\n        if i > max {\n            max = i\n\
    \        }\n    }\n    var sum = 0\n    for i in String(max) {\n        sum +=\
    \ Int(String(i))!\n    }\n    return sum", "    var maxPrime = 0\n    for num\
    \ in lst {\n        if isPrime(num: num) {\n            maxPrime = max(maxPrime,\
    \ num)\n        }\n    }\n    return sumDigits(num: maxPrime)", "    var largestPrime\
    \ = 0\n    for num in lst {\n        if num > largestPrime && isPrime(num: num)\
    \ {\n            largestPrime = num\n        }\n    }\n    var sum = 0\n    for\
    \ char in String(largestPrime) {\n        sum += Int(String(char))!\n    }\n \
    \   return sum", "    var max = 0\n    for i in lst {\n        if isPrime(num:\
    \ i) && i > max {\n            max = i\n        }\n    }\n    return sumOfDigits(num:\
    \ max)", "    let prime = lst.filter { $0.isPrime() }.max()!\n    return prime.digits.reduce(0,\
    \ +)", "    let prime = lst.filter { (num) -> Bool in\n        if num == 1 { return\
    \ false }\n        for i in 2..<num {\n            if num % i == 0 {\n       \
    \         return false\n            }\n        }\n        return true\n    }\n\
    \    let max = prime.max() ?? 0\n    let str = String(max)\n    var sum = 0\n\
    \    for char in str {\n        sum += Int(String(char)) ?? 0\n    }\n    return\
    \ sum", "    var max = 0\n    for i in lst {\n        if i > max {\n         \
    \   max = i\n        }\n    }\n    var sum = 0\n    while max > 0 {\n        sum\
    \ += max % 10\n        max /= 10\n    }\n    return sum", "    var largestPrime\
    \ = 0\n    for i in lst {\n        if isPrime(i) {\n            if i > largestPrime\
    \ {\n                largestPrime = i\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)", "    var max = 0\n    for i in lst {\n        if\
    \ isPrime(i) && i > max {\n            max = i\n        }\n    }\n    return sumOfDigits(max)",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return maxPrime.digits.reduce(0,\
    \ +)", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(i) && i >\
    \ maxPrime {\n            maxPrime = i\n        }\n    }\n    return sumDigits(maxPrime)",
  "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num: num) {\n\
    \            if num > largestPrime {\n                largestPrime = num\n   \
    \         }\n        }\n    }\n    return sumDigits(num: largestPrime)", "   \
    \ var max = 0\n    for i in lst {\n        if i > max {\n            max = i\n\
    \        }\n    }\n    var sum = 0\n    while max > 0 {\n        sum += max %\
    \ 10\n        max /= 10\n    }\n    return sum", "    var lst = lst\n    var max\
    \ = 0\n    for i in lst {\n        if i > max {\n            max = i\n       \
    \ }\n    }\n    var sum = 0\n    while max > 0 {\n        sum += max % 10\n  \
    \      max /= 10\n    }\n    return sum", "    var maxPrime = 0\n    for i in\
    \ lst {\n        if isPrime(num: i) {\n            if i > maxPrime {\n       \
    \         maxPrime = i\n            }\n        }\n    }\n    return sumDigits(num:\
    \ maxPrime)", "    var max = 0\n    for i in lst {\n        if isPrime(i) && i\
    \ > max {\n            max = i\n        }\n    }\n    return max", "    var max\
    \ = 0\n    for i in lst {\n        if i > max {\n            max = i\n       \
    \ }\n    }\n    var sum = 0\n    for i in String(max) {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var primes = [Int]()\n    for i in lst {\n     \
    \   if isPrime(num: i) {\n            primes.append(i)\n        }\n    }\n   \
    \ let largest = primes.max()!\n    var sum = 0\n    var num = largest\n    while\
    \ num > 0 {\n        sum += num % 10\n        num /= 10\n    }\n    return sum",
  "    var maxPrime = 0\n    for i in lst {\n        if i > maxPrime && isPrime(i)\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumOfDigits(maxPrime)",
  "    var prime = 0\n    for i in lst {\n        if isPrime(number: i) {\n      \
    \      if i > prime {\n                prime = i\n            }\n        }\n \
    \   }\n    return prime", "    var maxPrime = 0\n    for num in lst {\n      \
    \  if isPrime(num: num) {\n            maxPrime = max(maxPrime, num)\n       \
    \ }\n    }\n    return sumDigits(num: maxPrime)", "    var maxPrime = 0\n    for\
    \ num in lst {\n        if isPrime(num: num) {\n            maxPrime = max(maxPrime,\
    \ num)\n        }\n    }\n    return sumDigits(num: maxPrime)", "    var max =\
    \ 0\n    for i in lst {\n        if isPrime(num: i) {\n            if i > max\
    \ {\n                max = i\n            }\n        }\n    }\n    return sumDigits(num:\
    \ max)", "    let prime = lst.filter { $0.isPrime }.max()!\n    return prime.digits.reduce(0,\
    \ +)", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(n: i) {\n\
    \            if i > maxPrime {\n                maxPrime = i\n            }\n\
    \        }\n    }\n    return sumOfDigits(n: maxPrime)", "    var maxPrime = 0\n\
    \    for num in lst {\n        if isPrime(num: num) {\n            maxPrime =\
    \ max(maxPrime, num)\n        }\n    }\n    var sum = 0\n    var num = maxPrime\n\
    \    while num > 0 {\n        sum += num % 10\n        num /= 10\n    }\n    return\
    \ sum", "    var max = 0\n    for i in lst {\n        if isPrime(n: i) && i >\
    \ max {\n            max = i\n        }\n    }\n    return sumOfDigits(n: max)",
  "    var max = 0\n    for i in lst {\n        if i > max {\n            max = i\n\
    \        }\n    }\n    var sum = 0\n    for i in String(max) {\n        sum +=\
    \ Int(String(i))!\n    }\n    return sum", "    var largestPrime = 0\n    for\
    \ num in lst {\n        if isPrime(num: num) {\n            if num > largestPrime\
    \ {\n                largestPrime = num\n            }\n        }\n    }\n   \
    \ return sumOfDigits(num: largestPrime)", "    var largestPrime = 0\n    for i\
    \ in lst {\n        if isPrime(i) {\n            if i > largestPrime {\n     \
    \           largestPrime = i\n            }\n        }\n    }\n    return sumDigits(largestPrime)",
  "    var max = 0\n    for i in lst {\n        if isPrime(num: i) {\n           \
    \ if i > max {\n                max = i\n            }\n        }\n    }\n   \
    \ return sumOfDigits(num: max)", "    var max = 0\n    for i in lst {\n      \
    \  if i > max {\n            max = i\n        }\n    }\n    return max", "   \
    \ var max = 0\n    for i in lst {\n        if isPrime(num: i) && i > max {\n \
    \           max = i\n        }\n    }\n    return sumDigits(num: max)", "    var\
    \ maxPrime = 0\n    for i in lst {\n        if isPrime(i) && i > maxPrime {\n\
    \            maxPrime = i\n        }\n    }\n    return maxPrime.digits.reduce(0,\
    \ +)", "    var max = 0\n    for i in lst {\n        if isPrime(i) && i > max\
    \ {\n            max = i\n        }\n    }\n    return sumOfDigits(max)", "  \
    \  var max = 0\n    for i in lst {\n        if i > max {\n            max = i\n\
    \        }\n    }\n    var sum = 0\n    while max > 0 {\n        sum += max %\
    \ 10\n        max /= 10\n    }\n    return sum", '    return lst.filter { $0.isPrime
    }.max()?.digits.reduce(0, +) ?? 0', "    var lst = lst\n    var sum = 0\n    var\
    \ max = 0\n    for i in 0..<lst.count {\n        if lst[i] > max {\n         \
    \   max = lst[i]\n        }\n    }\n    for i in 2...max {\n        var j = 0\n\
    \        while j < lst.count {\n            if lst[j] % i == 0 {\n           \
    \     lst[j] = lst[j] / i\n            } else {\n                j += 1\n    \
    \        }\n        }\n    }\n    for i in 0..<lst.count {\n        if lst[i]\
    \ > 9 {\n            sum += lst[i] % 10\n            sum += lst[i] / 10\n    \
    \    } else {\n            sum += lst[i]\n        }\n    }\n    return sum", " \
    \   var largestPrime = 0\n    for i in lst {\n        if isPrime(num: i) {\n \
    \           if i > largestPrime {\n                largestPrime = i\n        \
    \    }\n        }\n    }\n    return sumOfDigits(num: largestPrime)", "    var\
    \ maxPrime = 0\n    for i in lst {\n        if isPrime(num: i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumDigits(num: maxPrime)",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(n: i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumOfDigits(n: maxPrime)",
  "    var lst = lst\n    var max = 0\n    var sum = 0\n    for i in lst {\n     \
    \   if i > max {\n            max = i\n        }\n    }\n    for i in lst {\n\
    \        if i == max {\n            sum += i\n        }\n    }\n    return sum",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(num: i) {\n  \
    \          if i > largestPrime {\n                largestPrime = i\n         \
    \   }\n        }\n    }\n    return sumOfDigits(num: largestPrime)", "    var\
    \ prime = 0\n    for i in lst {\n        if isPrime(n: i) {\n            if i\
    \ > prime {\n                prime = i\n            }\n        }\n    }\n    return\
    \ sumOfDigits(n: prime)", "    var maxPrime = 0\n    for i in lst {\n        if\
    \ isPrime(i) {\n            if i > maxPrime {\n                maxPrime = i\n\
    \            }\n        }\n    }\n    return sumOfDigits(maxPrime)", "    var\
    \ max = 0\n    for i in lst {\n        if isPrime(i) && i > max {\n          \
    \  max = i\n        }\n    }\n    return sumOfDigits(max)", "    var max = 0\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            if i > max {\n\
    \                max = i\n            }\n        }\n    }\n    return sumDigits(num:\
    \ max)", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(num: i)\
    \ && i > maxPrime {\n            maxPrime = i\n        }\n    }\n    return sumDigits(num:\
    \ maxPrime)", "    var result = 0\n    var max = 0\n    for i in lst {\n     \
    \   if isPrime(i) {\n            if i > max {\n                max = i\n     \
    \       }\n        }\n    }\n    for i in String(max) {\n        result += Int(String(i))!\n\
    \    }\n    return result", "    var largestPrime = 0\n    for num in lst {\n\
    \        if isPrime(num: num) {\n            if num > largestPrime {\n       \
    \         largestPrime = num\n            }\n        }\n    }\n    return sumDigits(num:\
    \ largestPrime)", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(n:\
    \ i) {\n            maxPrime = max(maxPrime, i)\n        }\n    }\n    return\
    \ sumDigits(n: maxPrime)", "    var max = 0\n    for i in lst {\n        if isPrime(i)\
    \ {\n            if i > max {\n                max = i\n            }\n      \
    \  }\n    }\n    return sumDigits(max)", "    var maxPrime = 0\n    for i in lst\
    \ {\n        if isPrime(num: i) {\n            if i > maxPrime {\n           \
    \     maxPrime = i\n            }\n        }\n    }\n    return sumDigits(num:\
    \ maxPrime)", "    var max = 0\n    for i in lst {\n        if i > max {\n   \
    \         max = i\n        }\n    }\n    var maxPrime = 0\n    for i in 1...max\
    \ {\n        if isPrime(num: i) {\n            maxPrime = i\n        }\n    }\n\
    \    var sum = 0\n    var maxPrimeString = String(maxPrime)\n    for i in maxPrimeString\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var max = 0\n\
    \    for i in lst {\n        if isPrime(num: i) && i > max {\n            max\
    \ = i\n        }\n    }\n    return sumDigits(num: max)", "    var max = 0\n \
    \   for i in lst {\n        if isPrime(i) {\n            if i > max {\n      \
    \          max = i\n            }\n        }\n    }\n    return max", "    var\
    \ maxPrime = 0\n    for i in lst {\n        if isPrime(num: i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumDigits(num: maxPrime)",
  "    let prime = lst.filter { $0.isPrime() }.max()!\n    return prime.digits.reduce(0,\
    \ +)", "    var maxPrime = 0\n    for num in lst {\n        if isPrime(num: num)\
    \ {\n            maxPrime = max(maxPrime, num)\n        }\n    }\n    return sumDigits(num:\
    \ maxPrime)", "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num:\
    \ num) {\n            if num > largestPrime {\n                largestPrime =\
    \ num\n            }\n        }\n    }\n    return sumOfDigits(num: largestPrime)",
  "    var max = 0\n    for i in lst {\n        if isPrime(i) {\n            if i\
    \ > max {\n                max = i\n            }\n        }\n    }\n    return\
    \ sumOfDigits(max)", "    let prime = lst.filter { $0.isPrime }.max() ?? 0\n \
    \   return prime.digits.reduce(0, +)", "    var largestPrime = 0\n    for i in\
    \ lst {\n        if isPrime(n: i) {\n            if i > largestPrime {\n     \
    \           largestPrime = i\n            }\n        }\n    }\n    return sumDigits(n:\
    \ largestPrime)", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(n:\
    \ i) {\n            if i > maxPrime {\n                maxPrime = i\n        \
    \    }\n        }\n    }\n    return sumDigits(n: maxPrime)", "    var max = 0\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            if i > max {\n\
    \                max = i\n            }\n        }\n    }\n    return sumDigits(num:\
    \ max)", "    var max = 0\n    for i in lst {\n        if isPrime(num: i) && i\
    \ > max {\n            max = i\n        }\n    }\n    return sumOfDigits(num:\
    \ max)", "    var prime = 0\n    for i in lst {\n        if isPrime(num: i) {\n\
    \            if i > prime {\n                prime = i\n            }\n      \
    \  }\n    }\n    return prime", "    let prime = lst.filter { $0.isPrime }.max()\
    \ ?? 0\n    return prime.digits.reduce(0, +)", "    var maxPrime = 0\n    for\
    \ i in lst {\n        if isPrime(n: i) {\n            maxPrime = max(maxPrime,\
    \ i)\n        }\n    }\n    return sumDigits(n: maxPrime)", "    var maxPrime\
    \ = 0\n    for i in lst {\n        if isPrime(i) {\n            if i > maxPrime\
    \ {\n                maxPrime = i\n            }\n        }\n    }\n    return\
    \ sumOfDigits(maxPrime)", "    var max = 0\n    for i in lst {\n        if isPrime(i)\
    \ && i > max {\n            max = i\n        }\n    }\n    return sumOfDigits(max)",
  "    var lst = lst\n    var sum = 0\n    var max = 0\n    for i in 0..<lst.count\
    \ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n \
    \   for i in 0..<lst.count {\n        if lst[i] == max {\n            lst.remove(at:\
    \ i)\n        }\n    }\n    for i in 0..<lst.count {\n        if lst[i] > max\
    \ {\n            max = lst[i]\n        }\n    }\n    while max > 0 {\n       \
    \ sum += max % 10\n        max /= 10\n    }\n    return sum", "    var maxPrime\
    \ = 0\n    for i in lst {\n        if isPrime(num: i) {\n            if i > maxPrime\
    \ {\n                maxPrime = i\n            }\n        }\n    }\n    return\
    \ sumDigits(num: maxPrime)", "    var maxPrime = 0\n    for i in lst {\n     \
    \   if isPrime(num: i) {\n            if i > maxPrime {\n                maxPrime\
    \ = i\n            }\n        }\n    }\n    return sumOfDigits(num: maxPrime)",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(num: i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumOfDigits(num: maxPrime)",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumDigits(maxPrime)",
  "    var primes = [Int]()\n    for i in lst {\n        if isPrime(num: i) {\n  \
    \          primes.append(i)\n        }\n    }\n    var largest = 0\n    for i\
    \ in primes {\n        if i > largest {\n            largest = i\n        }\n\
    \    }\n    var sum = 0\n    var largestString = String(largest)\n    for i in\
    \ largestString {\n        sum += Int(String(i))!\n    }\n    return sum", " \
    \   var maxPrime = 0\n    for i in lst {\n        if isPrime(num: i) {\n     \
    \       if i > maxPrime {\n                maxPrime = i\n            }\n     \
    \   }\n    }\n    return sumDigits(num: maxPrime)", "    var max = 0\n    for\
    \ i in lst {\n        if i > max {\n            max = i\n        }\n    }\n  \
    \  return max", "    var max = 0\n    for i in lst {\n        if isPrime(n: i)\
    \ {\n            if i > max {\n                max = i\n            }\n      \
    \  }\n    }\n    return sumDigits(n: max)", "    var maxPrime = 0\n    for i in\
    \ lst {\n        if isPrime(num: i) {\n            if i > maxPrime {\n       \
    \         maxPrime = i\n            }\n        }\n    }\n    return sumOfDigits(num:\
    \ maxPrime)", "    var primes = [Int]()\n    var largestPrime = 0\n    for num\
    \ in lst {\n        if num > 1 {\n            for i in 2...num {\n           \
    \     if num % i == 0 {\n                    break\n                } else {\n\
    \                    primes.append(num)\n                }\n            }\n  \
    \      }\n    }\n    largestPrime = primes.max()!\n    var sum = 0\n    var num\
    \ = largestPrime\n    while num > 0 {\n        sum += num % 10\n        num /=\
    \ 10\n    }\n    return sum", "    var result = 0\n    var max = 0\n    for i\
    \ in lst {\n        if isPrime(num: i) {\n            if i > max {\n         \
    \       max = i\n            }\n        }\n    }\n    while max > 0 {\n      \
    \  result += max % 10\n        max /= 10\n    }\n    return result", "    var\
    \ largestPrime = 0\n    for num in lst {\n        if isPrime(num: num) {\n   \
    \         if num > largestPrime {\n                largestPrime = num\n      \
    \      }\n        }\n    }\n    return sumOfDigits(num: largestPrime)", "    var\
    \ maxPrime = 0\n    for num in lst {\n        if isPrime(num: num) {\n       \
    \     maxPrime = max(maxPrime, num)\n        }\n    }\n    return sumDigits(num:\
    \ maxPrime)", "    let prime = lst.filter({$0.isPrime()}).max()\n    return prime!.digits.reduce(0,\
    \ +)", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(n: i) {\n\
    \            maxPrime = max(maxPrime, i)\n        }\n    }\n    return sumOfDigits(n:\
    \ maxPrime)", "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num:\
    \ num) {\n            if num > largestPrime {\n                largestPrime =\
    \ num\n            }\n        }\n    }\n    return sumOfDigits(num: largestPrime)",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(num: i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumDigits(num: maxPrime)",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumDigits(maxPrime)",
  "    var max = 0\n    for i in lst {\n        if i > max && isPrime(num: i) {\n\
    \            max = i\n        }\n    }\n    return sumDigits(num: max)", "   \
    \ var max = 0\n    for i in lst {\n        if isPrime(i) && i > max {\n      \
    \      max = i\n        }\n    }\n    return sumOfDigits(max)", "    var max =\
    \ 0\n    for i in lst {\n        if isPrime(num: i) && i > max {\n           \
    \ max = i\n        }\n    }\n    return sumOfDigits(num: max)", "    var maxPrime\
    \ = 0\n    for i in lst {\n        if isPrime(n: i) && i > maxPrime {\n      \
    \      maxPrime = i\n        }\n    }\n    return sumDigits(n: maxPrime)", " \
    \   var maxPrime = 0\n    for i in lst {\n        if isPrime(num: i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumOfDigits(num: maxPrime)",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(n: i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumDigits(n: maxPrime)",
  "    var max = 0\n    for i in lst {\n        if isPrime(i) && i > max {\n     \
    \       max = i\n        }\n    }\n    return sumOfDigits(max)", "    var max\
    \ = 0\n    for i in lst {\n        if isPrime(num: i) && i > max {\n         \
    \   max = i\n        }\n    }\n    return sumDigits(num: max)", "    var largestPrime\
    \ = 0\n    for num in lst {\n        if isPrime(num: num) {\n            if num\
    \ > largestPrime {\n                largestPrime = num\n            }\n      \
    \  }\n    }\n    var sum = 0\n    for char in String(largestPrime) {\n       \
    \ sum += Int(String(char))!\n    }\n    return sum", "    var primes = [Int]()\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            primes.append(i)\n\
    \        }\n    }\n    let largest = primes.max()\n    let string = String(largest!)\n\
    \    let array = Array(string)\n    var sum = 0\n    for i in array {\n      \
    \  sum += Int(String(i))!\n    }\n    return sum", "    var maxPrime = 0\n   \
    \ for i in lst {\n        if isPrime(n: i) && i > maxPrime {\n            maxPrime\
    \ = i\n        }\n    }\n    return sumOfDigits(n: maxPrime)", "    var max =\
    \ 0\n    for i in lst {\n        if isPrime(num: i) && i > max {\n           \
    \ max = i\n        }\n    }\n    return sumDigits(num: max)", "    var lst = lst\n\
    \    var sum = 0\n    var maxPrime = 0\n    for i in 0..<lst.count {\n       \
    \ if isPrime(num: lst[i]) {\n            if lst[i] > maxPrime {\n            \
    \    maxPrime = lst[i]\n            }\n        }\n    }\n    while maxPrime >\
    \ 0 {\n        sum += maxPrime % 10\n        maxPrime /= 10\n    }\n    return\
    \ sum", "    var max = 0\n    for i in lst {\n        if i > max {\n         \
    \   max = i\n        }\n    }\n    var sum = 0\n    while max > 0 {\n        sum\
    \ += max % 10\n        max /= 10\n    }\n    return sum", "    var primes = [Int]()\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            primes.append(i)\n\
    \        }\n    }\n    var largest = 0\n    for i in primes {\n        if i >\
    \ largest {\n            largest = i\n        }\n    }\n    var sum = 0\n    var\
    \ num = largest\n    while num > 0 {\n        sum += num % 10\n        num /=\
    \ 10\n    }\n    return sum", "    var primes = [Int]()\n    for i in lst {\n\
    \        if isPrime(number: i) {\n            primes.append(i)\n        }\n  \
    \  }\n    let largestPrime = primes.max()!\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    let prime =\
    \ lst.filter { $0.isPrime }.max() ?? 0\n    return prime.digits.reduce(0, +)",
  "    var max = 0\n    for i in lst {\n        if isPrime(i) && i > max {\n     \
    \       max = i\n        }\n    }\n    return sumOfDigits(max)", "    var maxPrime\
    \ = 0\n    for i in lst {\n        if isPrime(num: i) && i > maxPrime {\n    \
    \        maxPrime = i\n        }\n    }\n    return sumOfDigits(num: maxPrime)",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(n: i) {\n        \
    \    maxPrime = max(maxPrime, i)\n        }\n    }\n    return sumDigits(n: maxPrime)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(n: i) && i > largestPrime\
    \ {\n            largestPrime = i\n        }\n    }\n    return largestPrime",
  "    var maxPrime = 0\n    for num in lst {\n        if isPrime(num: num) {\n  \
    \          maxPrime = max(maxPrime, num)\n        }\n    }\n    return sumDigits(num:\
    \ maxPrime)", "    var lst = lst\n    var max = 0\n    for i in lst {\n      \
    \  if i > max {\n            max = i\n        }\n    }\n    var prime = false\n\
    \    while !prime {\n        var count = 0\n        for i in 1...max {\n     \
    \       if max % i == 0 {\n                count += 1\n            }\n       \
    \ }\n        if count == 2 {\n            prime = true\n        } else {\n   \
    \         max -= 1\n        }\n    }\n    var sum = 0\n    while max > 0 {\n \
    \       sum += max % 10\n        max /= 10\n    }\n    return sum", "    let prime\
    \ = lst.filter { $0.isPrime }.max()!\n    return prime.digits.reduce(0, +)", " \
    \   var lst = lst\n    var largestPrime = 0\n    var sum = 0\n    for i in 0..<lst.count\
    \ {\n        if isPrime(num: lst[i]) {\n            if lst[i] > largestPrime {\n\
    \                largestPrime = lst[i]\n            }\n        }\n    }\n    while\
    \ largestPrime > 0 {\n        sum += largestPrime % 10\n        largestPrime /=\
    \ 10\n    }\n    return sum", "    var maxPrime = 0\n    for num in lst {\n  \
    \      if isPrime(num: num) {\n            maxPrime = max(maxPrime, num)\n   \
    \     }\n    }\n    return sumOfDigits(num: maxPrime)", "    var maxPrime = 0\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            if i > maxPrime\
    \ {\n                maxPrime = i\n            }\n        }\n    }\n    return\
    \ sumDigits(num: maxPrime)", "    var primes = [Int]()\n    for num in lst {\n\
    \        if isPrime(num: num) {\n            primes.append(num)\n        }\n \
    \   }\n    let largestPrime = primes.max()!\n    var sum = 0\n    for digit in\
    \ String(largestPrime) {\n        sum += Int(String(digit))!\n    }\n    return\
    \ sum", "    var primes: [Int] = []\n    for i in lst {\n        if isPrime(n:\
    \ i) {\n            primes.append(i)\n        }\n    }\n    let max = primes.max()\n\
    \    var sum = 0\n    for i in String(max!) {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var max = 0\n    var sum = 0\n    for i in lst {\n\
    \        if isPrime(i) {\n            if i > max {\n                max = i\n\
    \            }\n        }\n    }\n    while max > 0 {\n        sum += max % 10\n\
    \        max /= 10\n    }\n    return sum", "    var max = 0\n    for num in lst\
    \ {\n        if isPrime(num) {\n            if num > max {\n                max\
    \ = num\n            }\n        }\n    }\n    return sumOfDigits(max)", "    let\
    \ prime = lst.filter { $0.isPrime }.max()!\n    return prime.digits.reduce(0,\
    \ +)", "    let prime = lst.filter { $0.isPrime }.max()!\n    let digits = prime.digits\n\
    \    return digits.reduce(0, +)", "    var max = 0\n    for i in lst {\n     \
    \   if isPrime(i) && i > max {\n            max = i\n        }\n    }\n    return\
    \ sumDigits(max)", "    var lst = lst\n    var max = 0\n    for i in lst {\n \
    \       if i > max {\n            max = i\n        }\n    }\n    var sum = 0\n\
    \    while max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return\
    \ sum", "    var max = 0\n    for i in lst {\n        if isPrime(num: i) && i\
    \ > max {\n            max = i\n        }\n    }\n    return sumOfDigits(num:\
    \ max)", "    var result = 0\n    var max = 0\n    for i in lst {\n        if\
    \ isPrime(n: i) {\n            if i > max {\n                max = i\n       \
    \     }\n        }\n    }\n    while max > 0 {\n        result += max % 10\n \
    \       max /= 10\n    }\n    return result", "    var maxPrime = 0\n    for num\
    \ in lst {\n        if isPrime(num: num) {\n            maxPrime = max(maxPrime,\
    \ num)\n        }\n    }\n    return sumOfDigits(num: maxPrime)", "    var maxPrime\
    \ = 0\n    for i in lst {\n        if isPrime(n: i) && i > maxPrime {\n      \
    \      maxPrime = i\n        }\n    }\n    return sumDigits(n: maxPrime)", " \
    \   var max = 0\n    for i in lst {\n        if isPrime(n: i) && i > max {\n \
    \           max = i\n        }\n    }\n    return sumDigits(n: max)", "    let\
    \ prime = lst.filter { (number) -> Bool in\n        return isPrime(number: number)\n\
    \    }.max()!\n    return prime.digits.reduce(0, +)", "    var largestPrime =\
    \ 0\n    for num in lst {\n        if isPrime(num: num) {\n            if num\
    \ > largestPrime {\n                largestPrime = num\n            }\n      \
    \  }\n    }\n    return largestPrime", "    var max = 0\n    for i in lst {\n\
    \        if isPrime(num: i) {\n            if i > max {\n                max =\
    \ i\n            }\n        }\n    }\n    return max", "    var maxPrime = 0\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            if i > maxPrime\
    \ {\n                maxPrime = i\n            }\n        }\n    }\n    return\
    \ sumDigits(num: maxPrime)", "    let prime = lst.filter { $0.isPrime }.max()!\n\
    \    return prime.digits.reduce(0, +)", "    var maxPrime = 0\n    for num in\
    \ lst {\n        if isPrime(num: num) {\n            maxPrime = max(maxPrime,\
    \ num)\n        }\n    }\n    return sumOfDigits(num: maxPrime)", "    let primes\
    \ = lst.filter { $0.isPrime }\n    let maxPrime = primes.max() ?? 0\n    return\
    \ maxPrime.digits.reduce(0, +)", "    var max = 0\n    for i in lst {\n      \
    \  if i > max {\n            max = i\n        }\n    }\n    var sum = 0\n    while\
    \ max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return sum",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(i) && i > largestPrime\
    \ {\n            largestPrime = i\n        }\n    }\n    var sum = 0\n    var\
    \ largestPrimeString = String(largestPrime)\n    for i in largestPrimeString {\n\
    \        sum += Int(String(i))!\n    }\n    return sum", "    var maxPrime = 0\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            if i > maxPrime\
    \ {\n                maxPrime = i\n            }\n        }\n    }\n    return\
    \ sumOfDigits(num: maxPrime)", "    var primes = [Int]()\n    for i in lst {\n\
    \        if isPrime(i) {\n            primes.append(i)\n        }\n    }\n   \
    \ let max = primes.max()\n    var sum = 0\n    for i in String(max!) {\n     \
    \   sum += Int(String(i))!\n    }\n    return sum", "    var maxPrime = 0\n  \
    \  for i in lst {\n        if i > maxPrime && isPrime(num: i) {\n            maxPrime\
    \ = i\n        }\n    }\n    var sum = 0\n    var num = maxPrime\n    while num\
    \ > 0 {\n        sum += num % 10\n        num /= 10\n    }\n    return sum", " \
    \   var largestPrime = 0\n    for i in lst {\n        if isPrime(n: i) {\n   \
    \         if i > largestPrime {\n                largestPrime = i\n          \
    \  }\n        }\n    }\n    return sumDigits(n: largestPrime)", "    var max =\
    \ 0\n    for i in lst {\n        if isPrime(i) {\n            if i > max {\n \
    \               max = i\n            }\n        }\n    }\n    var sum = 0\n  \
    \  for i in String(max) {\n        sum += Int(String(i))!\n    }\n    return sum",
  "    var max = 0\n    for i in lst {\n        if isPrime(num: i) && i > max {\n\
    \            max = i\n        }\n    }\n    return sumDigits(num: max)", "   \
    \ var largestPrime = 0\n    for i in lst {\n        if isPrime(number: i) {\n\
    \            if i > largestPrime {\n                largestPrime = i\n       \
    \     }\n        }\n    }\n    return largestPrime", "    var max = 0\n    for\
    \ i in lst {\n        if isPrime(num: i) && i > max {\n            max = i\n \
    \       }\n    }\n    return sumDigits(num: max)", "    var max = 0\n    for i\
    \ in lst {\n        if i > max {\n            max = i\n        }\n    }\n    var\
    \ sum = 0\n    while max > 0 {\n        sum += max % 10\n        max /= 10\n \
    \   }\n    return sum", "    var max = 0\n    for i in lst {\n        if i > max\
    \ {\n            max = i\n        }\n    }\n    var sum = 0\n    for i in String(max)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var primes =\
    \ [Int]()\n    for i in lst {\n        if isPrime(num: i) {\n            primes.append(i)\n\
    \        }\n    }\n    let largestPrime = primes.max()!\n    let largestPrimeString\
    \ = String(largestPrime)\n    var sum = 0\n    for i in largestPrimeString {\n\
    \        sum += Int(String(i))!\n    }\n    return sum", "    var lst = lst\n\
    \    var max = 0\n    for i in lst {\n        if i > max {\n            max =\
    \ i\n        }\n    }\n    var maxPrime = 0\n    for i in lst {\n        if i\
    \ > maxPrime && isPrime(n: i) {\n            maxPrime = i\n        }\n    }\n\
    \    var sum = 0\n    while maxPrime > 0 {\n        sum += maxPrime % 10\n   \
    \     maxPrime /= 10\n    }\n    return sum", "    var maxPrime = 0\n    for i\
    \ in lst {\n        if isPrime(n: i) {\n            if i > maxPrime {\n      \
    \          maxPrime = i\n            }\n        }\n    }\n    var sum = 0\n  \
    \  var maxPrimeCopy = maxPrime\n    while maxPrimeCopy > 0 {\n        sum += maxPrimeCopy\
    \ % 10\n        maxPrimeCopy /= 10\n    }\n    return sum", '    return 0', " \
    \   let prime = lst.filter { $0.isPrime }.max() ?? 0\n    return prime.digits.reduce(0,\
    \ +)", "    var largestPrime = 0\n    for i in lst {\n        if isPrime(num:\
    \ i) && i > largestPrime {\n            largestPrime = i\n        }\n    }\n \
    \   return sumOfDigits(num: largestPrime)", "    let prime = lst.filter { $0.isPrime\
    \ }.max()!\n    return prime.digits.reduce(0, +)", "    var primes = [Int]()\n\
    \    for i in lst {\n        if isPrime(n: i) {\n            primes.append(i)\n\
    \        }\n    }\n    let largestPrime = primes.max()\n    let largestPrimeString\
    \ = String(largestPrime!)\n    var sum = 0\n    for i in largestPrimeString {\n\
    \        sum += Int(String(i))!\n    }\n    return sum", "    var maxPrime = 0\n\
    \    for i in lst {\n        if isPrime(i) && i > maxPrime {\n            maxPrime\
    \ = i\n        }\n    }\n    return sumOfDigits(maxPrime)", "    var maxPrime\
    \ = 0\n    for i in lst {\n        if isPrime(i) && i > maxPrime {\n         \
    \   maxPrime = i\n        }\n    }\n    return sumOfDigits(maxPrime)", "    let\
    \ prime = lst.filter { $0.isPrime }.max()!\n    return prime.digits.reduce(0,\
    \ +)", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(i) {\n  \
    \          if i > maxPrime {\n                maxPrime = i\n            }\n  \
    \      }\n    }\n    return sumDigits(maxPrime)", "    var result = 0\n    var\
    \ max = 0\n    for i in lst {\n        if i > max {\n            max = i\n   \
    \     }\n    }\n    for i in 2...max {\n        if max % i == 0 {\n          \
    \  result += i\n        }\n    }\n    return result", "    var maxPrime = 0\n\
    \    for n in lst {\n        if isPrime(n) && n > maxPrime {\n            maxPrime\
    \ = n\n        }\n    }\n    return sumOfDigits(maxPrime)", "    var primes =\
    \ [Int]()\n    for i in lst {\n        if isPrime(n: i) {\n            primes.append(i)\n\
    \        }\n    }\n    var max = 0\n    for i in primes {\n        if i > max\
    \ {\n            max = i\n        }\n    }\n    var sum = 0\n    var maxString\
    \ = String(max)\n    for i in maxString {\n        sum += Int(String(i))!\n  \
    \  }\n    return sum", "    let prime = lst.filter({$0.isPrime()}).max()\n   \
    \ return prime?.digits.reduce(0, +) ?? 0", "    var primes = [Int]()\n    for\
    \ i in lst {\n        if isPrime(n: i) {\n            primes.append(i)\n     \
    \   }\n    }\n    let largest = primes.max()\n    let digits = String(largest!).compactMap{Int(String($0))}\n\
    \    return digits.reduce(0, +)", "    var maxPrime = 0\n    for num in lst {\n\
    \        if isPrime(num: num) {\n            maxPrime = max(maxPrime, num)\n \
    \       }\n    }\n    return sumOfDigits(num: maxPrime)", "    var lst = lst\n\
    \    var max = 0\n    for i in lst {\n        if i > max {\n            max =\
    \ i\n        }\n    }\n    var sum = 0\n    while max > 0 {\n        sum += max\
    \ % 10\n        max /= 10\n    }\n    return sum"]
stop_tokens:
- "\n}"

name: HumanEval_111_histogram
language: swift
prompt: "\n/// Given a string representing a space separated lowercase letters, return\
  \ a dictionary\n/// of the letter with the most repetition and containing the corresponding\
  \ count.\n/// If several letters have the same occurrence, return all of them.\n\
  /// Example:\nfunc histogram(test: String) -> [String : Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(histogram(test: \"a b b a\") == [\"a\" :\
  \ 2, \"b\" : 2])\nassert(histogram(test: \"a b c a b\") == [\"a\" : 2, \"b\" : 2])\n\
  assert(histogram(test: \"a b c d g\") == [\"a\" : 1, \"b\" : 1, \"c\" : 1, \"d\"\
  \ : 1, \"g\" : 1])\nassert(histogram(test: \"r t g\") == [\"r\" : 1, \"t\" : 1,\
  \ \"g\" : 1])\nassert(histogram(test: \"b b b b a\") == [\"b\" : 4])\nassert(histogram(test:\
  \ \"r t g\") == [\"r\" : 1, \"t\" : 1, \"g\" : 1])\nassert(histogram(test: \"\"\
  ) == [:] as [String : Int])\nassert(histogram(test: \"a\") == [\"a\" : 1])"
completions: ["    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for letter in array {\n        if let count = dict[letter] {\n \
    \           dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n        if dict[String(char)] > max {\n\
    \            max = dict[String(char)]!\n        }\n    }\n    var result = [String\
    \ : Int]()\n    for (key, value) in dict {\n        if value == max {\n      \
    \      result[key] = value\n        }\n    }\n    return result", "    var histogram\
    \ = [String : Int]()\n    let array = test.components(separatedBy: \" \")\n  \
    \  for letter in array {\n        if let count = histogram[letter] {\n       \
    \     histogram[letter] = count + 1\n        } else {\n            histogram[letter]\
    \ = 1\n        }\n    }\n    return histogram", "    var dict = [String : Int]()\n\
    \    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n    }\n    return dict", "    var dict =\
    \ [String : Int]()\n    let letters = test.components(separatedBy: \" \")\n  \
    \  for letter in letters {\n        if let count = dict[letter] {\n          \
    \  dict[letter] = count + 1\n        } else {\n            dict[letter] = 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    var\
    \ max = 0\n    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n        if dict[String(char)] > max {\n\
    \            max = dict[String(char)]!\n        }\n    }\n    var result = [String\
    \ : Int]()\n    for (key, value) in dict {\n        if value == max {\n      \
    \      result[key] = value\n        }\n    }\n    return result", "    var result:\
    \ [String : Int] = [:]\n    var maxCount = 0\n    for letter in test.characters\
    \ {\n        let key = String(letter)\n        if let count = result[key] {\n\
    \            result[key] = count + 1\n            if count + 1 > maxCount {\n\
    \                maxCount = count + 1\n            }\n        } else {\n     \
    \       result[key] = 1\n            if 1 > maxCount {\n                maxCount\
    \ = 1\n            }\n        }\n    }\n    var result2: [String : Int] = [:]\n\
    \    for (key, value) in result {\n        if value == maxCount {\n          \
    \  result2[key] = value\n        }\n    }\n    return result2", "    var histogram\
    \ = [String : Int]()\n    let letters = test.components(separatedBy: \" \")\n\
    \    for letter in letters {\n        if let count = histogram[letter] {\n   \
    \         histogram[letter] = count + 1\n        } else {\n            histogram[letter]\
    \ = 1\n        }\n    }\n    return histogram", "    var dict = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    var max = 0\n    for char in test.characters\
    \ {\n        let str = String(char)\n        if let value = dict[str] {\n    \
    \        dict[str] = value + 1\n            if value + 1 > max {\n           \
    \     max = value + 1\n            }\n        } else {\n            dict[str]\
    \ = 1\n            if 1 > max {\n                max = 1\n            }\n    \
    \    }\n    }\n    var result = [String : Int]()\n    for (key, value) in dict\
    \ {\n        if value == max {\n            result[key] = value\n        }\n \
    \   }\n    return result", "    var result = [String : Int]()\n    let letters\
    \ = test.components(separatedBy: \" \")\n    for letter in letters {\n       \
    \ if let count = result[letter] {\n            result[letter] = count + 1\n  \
    \      } else {\n            result[letter] = 1\n        }\n    }\n    return\
    \ result", "    var dict = [String : Int]()\n    var max = 0\n    for char in\
    \ test.characters {\n        let key = String(char)\n        if let value = dict[key]\
    \ {\n            dict[key] = value + 1\n            if value + 1 > max {\n   \
    \             max = value + 1\n            }\n        } else {\n            dict[key]\
    \ = 1\n            if 1 > max {\n                max = 1\n            }\n    \
    \    }\n    }\n    var result = [String : Int]()\n    for (key, value) in dict\
    \ {\n        if value == max {\n            result[key] = value\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    var max = 0\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if dict[letter] == nil {\n            dict[letter] = 1\n        }\
    \ else {\n            dict[letter]! += 1\n        }\n        if dict[letter]!\
    \ > max {\n            max = dict[letter]!\n        }\n    }\n    var result =\
    \ [String : Int]()\n    for (key, value) in dict {\n        if value == max {\n\
    \            result[key] = value\n        }\n    }\n    return result", "    var\
    \ dict = [String : Int]()\n    var max = 0\n    for letter in test.characters\
    \ {\n        if let count = dict[String(letter)] {\n            dict[String(letter)]\
    \ = count + 1\n        } else {\n            dict[String(letter)] = 1\n      \
    \  }\n        if dict[String(letter)] > max {\n            max = dict[String(letter)]!\n\
    \        }\n    }\n    var result = [String : Int]()\n    for (key, value) in\
    \ dict {\n        if value == max {\n            result[key] = value\n       \
    \ }\n    }\n    return result", "    var dict = [String : Int]()\n    let array\
    \ = test.components(separatedBy: \" \")\n    for i in array {\n        if dict[i]\
    \ == nil {\n            dict[i] = 1\n        } else {\n            dict[i] = dict[i]!\
    \ + 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    for letter in test.characters {\n        if let count =\
    \ dict[String(letter)] {\n            dict[String(letter)] = count + 1\n     \
    \   } else {\n            dict[String(letter)] = 1\n        }\n        if dict[String(letter)]\
    \ > max {\n            max = dict[String(letter)]!\n        }\n    }\n    var\
    \ result = [String : Int]()\n    for (key, value) in dict {\n        if value\
    \ == max {\n            result[key] = value\n        }\n    }\n    return result",
  "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    var maxLetters = [String]()\n    for letter in test.characters\
    \ {\n        if dict[String(letter)] == nil {\n            dict[String(letter)]\
    \ = 1\n        } else {\n            dict[String(letter)]! += 1\n        }\n \
    \       if dict[String(letter)] > max {\n            max = dict[String(letter)]!\n\
    \            maxLetters = [String(letter)]\n        } else if dict[String(letter)]\
    \ == max {\n            maxLetters.append(String(letter))\n        }\n    }\n\
    \    return [maxLetters.joined(separator: \"\") : max]", "    var dict = [String\
    \ : Int]()\n    let array = test.components(separatedBy: \" \")\n    for word\
    \ in array {\n        dict[word] = (dict[word] ?? 0) + 1\n    }\n    return dict",
  "    var histogram = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = histogram[letter]\
    \ {\n            histogram[letter] = count + 1\n        } else {\n           \
    \ histogram[letter] = 1\n        }\n    }\n    return histogram", "    var dict\
    \ = [String : Int]()\n    for char in test.characters {\n        if let value\
    \ = dict[String(char)] {\n            dict[String(char)] = value + 1\n       \
    \ } else {\n            dict[String(char)] = 1\n        }\n    }\n    return dict",
  "    var histogram = [String : Int]()\n    for char in test.characters {\n     \
    \   if let count = histogram[String(char)] {\n            histogram[String(char)]\
    \ = count + 1\n        } else {\n            histogram[String(char)] = 1\n   \
    \     }\n    }\n    return histogram", "    let letters = test.characters.map\
    \ { String($0) }\n    var dict = [String : Int]()\n    for letter in letters {\n\
    \        if let count = dict[letter] {\n            dict[letter] = count + 1\n\
    \        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    var max = 0\n    for char in test.characters\
    \ {\n        if let count = dict[String(char)] {\n            dict[String(char)]\
    \ = count + 1\n        } else {\n            dict[String(char)] = 1\n        }\n\
    \        if dict[String(char)] > max {\n            max = dict[String(char)]!\n\
    \        }\n    }\n    var result = [String : Int]()\n    for (key, value) in\
    \ dict {\n        if value == max {\n            result[key] = value\n       \
    \ }\n    }\n    return result", "    var dict = [String : Int]()\n    let arr\
    \ = test.components(separatedBy: \" \")\n    for item in arr {\n        if let\
    \ count = dict[item] {\n            dict[item] = count + 1\n        } else {\n\
    \            dict[item] = 1\n        }\n    }\n    return dict", "    var dict\
    \ = [String : Int]()\n    var maxCount = 0\n    var maxLetters = [String]()\n\
    \    for letter in test.characters {\n        let strLetter = String(letter)\n\
    \        if let count = dict[strLetter] {\n            dict[strLetter] = count\
    \ + 1\n            if count + 1 > maxCount {\n                maxCount = count\
    \ + 1\n                maxLetters = [strLetter]\n            } else if count +\
    \ 1 == maxCount {\n                maxLetters.append(strLetter)\n            }\n\
    \        } else {\n            dict[strLetter] = 1\n            if maxCount ==\
    \ 0 {\n                maxCount = 1\n                maxLetters = [strLetter]\n\
    \            }\n        }\n    }\n    var result = [String : Int]()\n    for letter\
    \ in maxLetters {\n        result[letter] = maxCount\n    }\n    return result",
  "    var dict = [String : Int]()\n    let array = test.components(separatedBy: \"\
    \ \")\n    for word in array {\n        if let count = dict[word] {\n        \
    \    dict[word] = count + 1\n        } else {\n            dict[word] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let letters\
    \ = test.components(separatedBy: \" \")\n    for letter in letters {\n       \
    \ if let count = dict[letter] {\n            dict[letter] = count + 1\n      \
    \  } else {\n            dict[letter] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    var max = 0\n    var maxKeys = [String]()\n\
    \    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n    }\n    for (key, value) in dict {\n\
    \        if value > max {\n            max = value\n            maxKeys = [key]\n\
    \        } else if value == max {\n            maxKeys.append(key)\n        }\n\
    \    }\n    return [maxKeys.joined(separator: \"\") : max]", "    var dict = [String\
    \ : Int]()\n    var max = 0\n    var maxLetters = [String]()\n    for letter in\
    \ test.characters {\n        if let count = dict[String(letter)] {\n         \
    \   dict[String(letter)] = count + 1\n            if count + 1 > max {\n     \
    \           max = count + 1\n                maxLetters = [String(letter)]\n \
    \           } else if count + 1 == max {\n                maxLetters.append(String(letter))\n\
    \            }\n        } else {\n            dict[String(letter)] = 1\n     \
    \       if max == 0 {\n                max = 1\n                maxLetters = [String(letter)]\n\
    \            }\n        }\n    }\n    var result = [String : Int]()\n    for letter\
    \ in maxLetters {\n        result[letter] = max\n    }\n    return result", " \
    \   \n    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    \n    for i in array {\n        if let count = dict[i] {\n     \
    \       dict[i] = count + 1\n        } else {\n            dict[i] = 1\n     \
    \   }\n    }\n    \n    return dict", "    var dict = [String : Int]()\n    let\
    \ array = test.components(separatedBy: \" \")\n    for i in array {\n        if\
    \ let count = dict[i] {\n            dict[i] = count + 1\n        } else {\n \
    \           dict[i] = 1\n        }\n    }\n    return dict", "    var dict = [String\
    \ : Int]()\n    let letters = test.components(separatedBy: \" \")\n    for letter\
    \ in letters {\n        if let count = dict[letter] {\n            dict[letter]\
    \ = count + 1\n        } else {\n            dict[letter] = 1\n        }\n   \
    \ }\n    return dict", "    var dict = [String : Int]()\n    let array = test.characters.map\
    \ { String($0) }\n    for char in array {\n        if let count = dict[char] {\n\
    \            dict[char] = count + 1\n        } else {\n            dict[char]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    for letter in test.characters {\n        if let count =\
    \ dict[String(letter)] {\n            dict[String(letter)] = count + 1\n     \
    \   } else {\n            dict[String(letter)] = 1\n        }\n        if dict[String(letter)]\
    \ > max {\n            max = dict[String(letter)]!\n        }\n    }\n    var\
    \ result = [String : Int]()\n    for (key, value) in dict {\n        if value\
    \ == max {\n            result[key] = value\n        }\n    }\n    return result",
  "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let array = test.components(separatedBy: \" \")\n    for word in array {\n\
    \        if let count = dict[word] {\n            dict[word] = count + 1\n   \
    \     } else {\n            dict[word] = 1\n        }\n    }\n    return dict",
  "    var result = [String : Int]()\n    let testArray = test.components(separatedBy:\
    \ \" \")\n    var max = 0\n    for i in testArray {\n        if result[i] == nil\
    \ {\n            result[i] = 1\n        } else {\n            result[i]! += 1\n\
    \        }\n        if result[i]! > max {\n            max = result[i]!\n    \
    \    }\n    }\n    for (key, value) in result {\n        if value != max {\n \
    \           result.removeValue(forKey: key)\n        }\n    }\n    return result",
  "    var dict = [String : Int]()\n    let array = test.components(separatedBy: \"\
    \ \")\n    for word in array {\n        if dict[word] == nil {\n            dict[word]\
    \ = 1\n        } else {\n            dict[word]! += 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if dict[letter] == nil {\n    \
    \        dict[letter] = 1\n        } else {\n            dict[letter]! += 1\n\
    \        }\n    }\n    return dict", "    var result: [String : Int] = [:]\n \
    \   let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = result[letter] {\n            result[letter] = count\
    \ + 1\n        } else {\n            result[letter] = 1\n        }\n    }\n  \
    \  return result", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let array = test.characters.map { String($0) }\n    for letter in array {\n\
    \        if let count = dict[letter] {\n            dict[letter] = count + 1\n\
    \        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var histogram = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = histogram[letter] {\n            histogram[letter]\
    \ = count + 1\n        } else {\n            histogram[letter] = 1\n        }\n\
    \    }\n    return histogram", "    var histogram = [String : Int]()\n    let\
    \ letters = test.components(separatedBy: \" \")\n    for letter in letters {\n\
    \        if let count = histogram[letter] {\n            histogram[letter] = count\
    \ + 1\n        } else {\n            histogram[letter] = 1\n        }\n    }\n\
    \    return histogram", "    var dict = [String : Int]()\n    let arr = test.components(separatedBy:\
    \ \" \")\n    for item in arr {\n        if let count = dict[item] {\n       \
    \     dict[item] = count + 1\n        } else {\n            dict[item] = 1\n \
    \       }\n    }\n    return dict", "    var dict = [String : Int]()\n    let\
    \ letters = test.components(separatedBy: \" \")\n    for letter in letters {\n\
    \        if let count = dict[letter] {\n            dict[letter] = count + 1\n\
    \        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let arr = test.components(separatedBy:\
    \ \" \")\n    for i in arr {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var result = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.components(separatedBy: \" \")\n    for letter in array\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for item in array {\n        if let count = dict[item] {\n     \
    \       dict[item] = count + 1\n        } else {\n            dict[item] = 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    let\
    \ array = test.components(separatedBy: \" \")\n    for word in array {\n     \
    \   if let count = dict[word] {\n            dict[word] = count + 1\n        }\
    \ else {\n            dict[word] = 1\n        }\n    }\n    return dict", "  \
    \  var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if dict[letter] == nil {\n    \
    \        dict[letter] = 1\n        } else {\n            dict[letter]! += 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    let\
    \ array = test.components(separatedBy: \" \")\n    for word in array {\n     \
    \   if dict[word] == nil {\n            dict[word] = 1\n        } else {\n   \
    \         dict[word]! += 1\n        }\n    }\n    return dict", "    var dict\
    \ = [String : Int]()\n    var max = 0\n    var maxLetters = [String]()\n    for\
    \ letter in test.characters {\n        if let count = dict[String(letter)] {\n\
    \            dict[String(letter)] = count + 1\n            if count + 1 > max\
    \ {\n                max = count + 1\n                maxLetters = [String(letter)]\n\
    \            } else if count + 1 == max {\n                maxLetters.append(String(letter))\n\
    \            }\n        } else {\n            dict[String(letter)] = 1\n     \
    \       if max == 0 {\n                max = 1\n                maxLetters = [String(letter)]\n\
    \            }\n        }\n    }\n    var result = [String : Int]()\n    for letter\
    \ in maxLetters {\n        result[letter] = max\n    }\n    return result", " \
    \   var result = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    var max = 0\n    for letter in letters {\n        if let count =\
    \ result[letter] {\n            result[letter] = count + 1\n        } else {\n\
    \            result[letter] = 1\n        }\n        if result[letter]! > max {\n\
    \            max = result[letter]!\n        }\n    }\n    var result2 = [String\
    \ : Int]()\n    for (key, value) in result {\n        if value == max {\n    \
    \        result2[key] = value\n        }\n    }\n    return result2", "    var\
    \ dict = [String : Int]()\n    var max = 0\n    var maxLetters = [String]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    for\
    \ (letter, count) in dict {\n        if count > max {\n            max = count\n\
    \            maxLetters = [letter]\n        } else if count == max {\n       \
    \     maxLetters.append(letter)\n        }\n    }\n    return [\"\\(maxLetters)\"\
    \ : max]", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if dict[letter] == nil {\n            dict[letter] = 1\n        }\
    \ else {\n            dict[letter]! += 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.components(separatedBy: \"\
    \ \")\n    for word in array {\n        if dict[word] == nil {\n            dict[word]\
    \ = 1\n        } else {\n            dict[word]! += 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    var max = 0\n    var maxLetters\
    \ = [String]()\n    for letter in test.characters {\n        if let count = dict[String(letter)]\
    \ {\n            dict[String(letter)] = count + 1\n            if count + 1 >\
    \ max {\n                max = count + 1\n                maxLetters = [String(letter)]\n\
    \            } else if count + 1 == max {\n                maxLetters.append(String(letter))\n\
    \            }\n        } else {\n            dict[String(letter)] = 1\n     \
    \       if max == 0 {\n                max = 1\n                maxLetters = [String(letter)]\n\
    \            }\n        }\n    }\n    var result = [String : Int]()\n    for letter\
    \ in maxLetters {\n        result[letter] = max\n    }\n    return result", " \
    \   var histogram = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = histogram[letter]\
    \ {\n            histogram[letter] = count + 1\n        } else {\n           \
    \ histogram[letter] = 1\n        }\n    }\n    return histogram", "    var dict\
    \ = [String : Int]()\n    let array = test.components(separatedBy: \" \")\n  \
    \  for i in array {\n        if dict[i] == nil {\n            dict[i] = 1\n  \
    \      } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n    return\
    \ dict", "    var result = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var result = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    var max = 0\n    for\
    \ letter in letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \       if result[letter]! > max {\n            max = result[letter]!\n      \
    \  }\n    }\n    var finalResult = [String : Int]()\n    for (letter, count) in\
    \ result {\n        if count == max {\n            finalResult[letter] = count\n\
    \        }\n    }\n    return finalResult", "    var dict = [String : Int]()\n\
    \    let array = test.components(separatedBy: \" \")\n    for item in array {\n\
    \        if let count = dict[item] {\n            dict[item] = count + 1\n   \
    \     } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var result: [String : Int] = [:]\n    var maxCount = 0\n    var maxLetters:\
    \ [String] = []\n    let letters = test.components(separatedBy: \" \")\n    for\
    \ letter in letters {\n        if result[letter] == nil {\n            result[letter]\
    \ = 1\n        } else {\n            result[letter]! += 1\n        }\n       \
    \ if result[letter]! > maxCount {\n            maxCount = result[letter]!\n  \
    \          maxLetters = [letter]\n        } else if result[letter]! == maxCount\
    \ {\n            maxLetters.append(letter)\n        }\n    }\n    return [maxLetters.joined(separator:\
    \ \" \") : maxCount]", "    var dict = [String : Int]()\n    let arr = test.components(separatedBy:\
    \ \" \")\n    for i in arr {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    var max = 0\n    var\
    \ maxLetters = [String]()\n    for letter in test.characters {\n        if dict[String(letter)]\
    \ == nil {\n            dict[String(letter)] = 1\n        } else {\n         \
    \   dict[String(letter)]! += 1\n        }\n        if dict[String(letter)] > max\
    \ {\n            max = dict[String(letter)]!\n            maxLetters = [String(letter)]\n\
    \        } else if dict[String(letter)] == max {\n            maxLetters.append(String(letter))\n\
    \        }\n    }\n    var result = [String : Int]()\n    for letter in maxLetters\
    \ {\n        result[letter] = max\n    }\n    return result", "    var dict =\
    \ [String : Int]()\n    var max = 0\n    var maxKeys = [String]()\n    for char\
    \ in test.characters {\n        if let count = dict[String(char)] {\n        \
    \    dict[String(char)] = count + 1\n        } else {\n            dict[String(char)]\
    \ = 1\n        }\n        if dict[String(char)] > max {\n            max = dict[String(char)]!\n\
    \            maxKeys = [String(char)]\n        } else if dict[String(char)] ==\
    \ max {\n            maxKeys.append(String(char))\n        }\n    }\n    return\
    \ [maxKeys.joined(separator: \"\") : max]", "    var histogram = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = histogram[letter] {\n            histogram[letter]\
    \ = count + 1\n        } else {\n            histogram[letter] = 1\n        }\n\
    \    }\n    return histogram", "    var result: [String : Int] = [:]\n    var\
    \ maxCount = 0\n    var maxLetters: [String] = []\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if result[letter] == nil {\n  \
    \          result[letter] = 1\n        } else {\n            result[letter]! +=\
    \ 1\n        }\n        if result[letter]! > maxCount {\n            maxCount\
    \ = result[letter]!\n            maxLetters = [letter]\n        } else if result[letter]!\
    \ == maxCount {\n            maxLetters.append(letter)\n        }\n    }\n   \
    \ return [maxLetters.joined(separator: \" \") : maxCount]", "    var dict = [String\
    \ : Int]()\n    let arr = test.components(separatedBy: \" \")\n    for i in arr\
    \ {\n        if let count = dict[i] {\n            dict[i] = count + 1\n     \
    \   } else {\n            dict[i] = 1\n        }\n    }\n    return dict", " \
    \   var result = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    var max = 0\n    for i in array {\n        if result[i] == nil {\n\
    \            result[i] = 1\n        } else {\n            result[i]! += 1\n  \
    \      }\n        if result[i]! > max {\n            max = result[i]!\n      \
    \  }\n    }\n    var finalResult = [String : Int]()\n    for (key, value) in result\
    \ {\n        if value == max {\n            finalResult[key] = value\n       \
    \ }\n    }\n    return finalResult", "    var dict = [String : Int]()\n    var\
    \ max = 0\n    let letters = test.components(separatedBy: \" \")\n    for letter\
    \ in letters {\n        if dict[letter] == nil {\n            dict[letter] = 1\n\
    \        } else {\n            dict[letter]! += 1\n        }\n        if dict[letter]!\
    \ > max {\n            max = dict[letter]!\n        }\n    }\n    var result =\
    \ [String : Int]()\n    for (key, value) in dict {\n        if value == max {\n\
    \            result[key] = value\n        }\n    }\n    return result", "    var\
    \ dict = [String : Int]()\n    let letters = test.components(separatedBy: \" \"\
    )\n    for letter in letters {\n        if let count = dict[letter] {\n      \
    \      dict[letter] = count + 1\n        } else {\n            dict[letter] =\
    \ 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n  \
    \  let array = test.components(separatedBy: \" \")\n    for letter in array {\n\
    \        if let count = dict[letter] {\n            dict[letter] = count + 1\n\
    \        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for word in array {\n        if let count = dict[word] {\n     \
    \       dict[word] = count + 1\n        } else {\n            dict[word] = 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    var\
    \ max = 0\n    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n        if dict[String(char)] > max {\n\
    \            max = dict[String(char)]!\n        }\n    }\n    return dict.filter\
    \ { $0.1 == max }", "    var dict = [String : Int]()\n    var max = 0\n    var\
    \ maxLetters = [String]()\n    for letter in test.characters {\n        if let\
    \ count = dict[String(letter)] {\n            dict[String(letter)] = count + 1\n\
    \            if count + 1 > max {\n                max = count + 1\n         \
    \       maxLetters = [String(letter)]\n            } else if count + 1 == max\
    \ {\n                maxLetters.append(String(letter))\n            }\n      \
    \  } else {\n            dict[String(letter)] = 1\n            if 1 > max {\n\
    \                max = 1\n                maxLetters = [String(letter)]\n    \
    \        } else if 1 == max {\n                maxLetters.append(String(letter))\n\
    \            }\n        }\n    }\n    var result = [String : Int]()\n    for letter\
    \ in maxLetters {\n        result[letter] = max\n    }\n    return result", " \
    \   var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let array = test.components(separatedBy: \" \")\n    for letter in array\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var result = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.components(separatedBy: \" \")\n    for word in array {\n\
    \        if let count = dict[word] {\n            dict[word] = count + 1\n   \
    \     } else {\n            dict[word] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    var max = 0\n    var maxKeys = [String]()\n\
    \    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n        if dict[String(char)] > max {\n\
    \            max = dict[String(char)]!\n            maxKeys = [String(char)]\n\
    \        } else if dict[String(char)] == max {\n            maxKeys.append(String(char))\n\
    \        }\n    }\n    var result = [String : Int]()\n    for key in maxKeys {\n\
    \        result[key] = max\n    }\n    return result", "    var dict = [String\
    \ : Int]()\n    let arr = test.components(separatedBy: \" \")\n    for i in arr\
    \ {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n\
    \            dict[i] = dict[i]! + 1\n        }\n    }\n    return dict", "   \
    \ var dict = [String : Int]()\n    var max = 0\n    for char in test.characters\
    \ {\n        let charString = String(char)\n        if let count = dict[charString]\
    \ {\n            dict[charString] = count + 1\n            if count + 1 > max\
    \ {\n                max = count + 1\n            }\n        } else {\n      \
    \      dict[charString] = 1\n            if 1 > max {\n                max = 1\n\
    \            }\n        }\n    }\n    var result = [String : Int]()\n    for (key,\
    \ value) in dict {\n        if value == max {\n            result[key] = value\n\
    \        }\n    }\n    return result", "    var dict = [String : Int]()\n    let\
    \ array = test.components(separatedBy: \" \")\n    for word in array {\n     \
    \   if let count = dict[word] {\n            dict[word] = count + 1\n        }\
    \ else {\n            dict[word] = 1\n        }\n    }\n    return dict", "  \
    \  var dict = [String : Int]()\n    var max = 0\n    for char in test.characters\
    \ {\n        if let count = dict[String(char)] {\n            dict[String(char)]\
    \ = count + 1\n        } else {\n            dict[String(char)] = 1\n        }\n\
    \        if dict[String(char)] > max {\n            max = dict[String(char)]!\n\
    \        }\n    }\n    var result = [String : Int]()\n    for (key, value) in\
    \ dict {\n        if value == max {\n            result[key] = value\n       \
    \ }\n    }\n    return result", "    var dict = [String : Int]()\n    var max\
    \ = 0\n    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n        if dict[String(char)] > max {\n\
    \            max = dict[String(char)]!\n        }\n    }\n    var result = [String\
    \ : Int]()\n    for (key, value) in dict {\n        if value == max {\n      \
    \      result[key] = value\n        }\n    }\n    return result", "    var result\
    \ = [String : Int]()\n    let letters = test.components(separatedBy: \" \")\n\
    \    for letter in letters {\n        if let count = result[letter] {\n      \
    \      result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for letter in array {\n        if let count = dict[letter] {\n \
    \           dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for i in array {\n        if let count = dict[i] {\n           \
    \ dict[i] = count + 1\n        } else {\n            dict[i] = 1\n        }\n\
    \    }\n    return dict", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for item in array {\n        if let val = dict[item] {\n       \
    \     dict[item] = val + 1\n        } else {\n            dict[item] = 1\n   \
    \     }\n    }\n    return dict", "    var dict = [String : Int]()\n    let array\
    \ = test.components(separatedBy: \" \")\n    for letter in array {\n        if\
    \ let count = dict[letter] {\n            dict[letter] = count + 1\n        }\
    \ else {\n            dict[letter] = 1\n        }\n    }\n    return dict", " \
    \   var histogram = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = histogram[letter]\
    \ {\n            histogram[letter] = count + 1\n        } else {\n           \
    \ histogram[letter] = 1\n        }\n    }\n    return histogram", "    var dict\
    \ = [String : Int]()\n    let arr = test.components(separatedBy: \" \")\n    for\
    \ i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        }\
    \ else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.components(separatedBy: \"\
    \ \")\n    for i in array {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n        if dict[String(char)] > max {\n\
    \            max = dict[String(char)]!\n        }\n    }\n    var result = [String\
    \ : Int]()\n    for (key, value) in dict {\n        if value == max {\n      \
    \      result[key] = value\n        }\n    }\n    return result", "    var dict\
    \ = [String : Int]()\n    let array = test.components(separatedBy: \" \")\n  \
    \  for letter in array {\n        if let count = dict[letter] {\n            dict[letter]\
    \ = count + 1\n        } else {\n            dict[letter] = 1\n        }\n   \
    \ }\n    return dict", "    var dict = [String : Int]()\n    let arr = test.components(separatedBy:\
    \ \" \")\n    for i in arr {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    var max = 0\n    let\
    \ arr = test.components(separatedBy: \" \")\n    for i in arr {\n        if let\
    \ val = dict[i] {\n            dict[i] = val + 1\n        } else {\n         \
    \   dict[i] = 1\n        }\n        if dict[i]! > max {\n            max = dict[i]!\n\
    \        }\n    }\n    var result = [String : Int]()\n    for (key, value) in\
    \ dict {\n        if value == max {\n            result[key] = value\n       \
    \ }\n    }\n    return result", "    var dict = [String : Int]()\n    let letters\
    \ = test.components(separatedBy: \" \")\n    for letter in letters {\n       \
    \ if let count = dict[letter] {\n            dict[letter] = count + 1\n      \
    \  } else {\n            dict[letter] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    var max = 0\n    var maxLetters = [String]()\n\
    \    for letter in test.characters {\n        if let count = dict[String(letter)]\
    \ {\n            dict[String(letter)] = count + 1\n            if count + 1 >\
    \ max {\n                max = count + 1\n                maxLetters = [String(letter)]\n\
    \            } else if count + 1 == max {\n                maxLetters.append(String(letter))\n\
    \            }\n        } else {\n            dict[String(letter)] = 1\n     \
    \       if 1 > max {\n                max = 1\n                maxLetters = [String(letter)]\n\
    \            } else if 1 == max {\n                maxLetters.append(String(letter))\n\
    \            }\n        }\n    }\n    var result = [String : Int]()\n    for letter\
    \ in maxLetters {\n        result[letter] = max\n    }\n    return result", " \
    \   var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for word in array {\n        if let count = dict[word] {\n     \
    \       dict[word] = count + 1\n        } else {\n            dict[word] = 1\n\
    \        }\n    }\n    return dict", "    var result = [String : Int]()\n    let\
    \ letters = test.components(separatedBy: \" \")\n    for letter in letters {\n\
    \        if let count = result[letter] {\n            result[letter] = count +\
    \ 1\n        } else {\n            result[letter] = 1\n        }\n    }\n    return\
    \ result", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var result = [String : Int]()\n    var max = 0\n    let letters\
    \ = test.components(separatedBy: \" \")\n    for letter in letters {\n       \
    \ if result[letter] == nil {\n            result[letter] = 1\n        } else {\n\
    \            result[letter]! += 1\n        }\n        if result[letter]! > max\
    \ {\n            max = result[letter]!\n        }\n    }\n    var finalResult\
    \ = [String : Int]()\n    for (key, value) in result {\n        if value == max\
    \ {\n            finalResult[key] = value\n        }\n    }\n    return finalResult",
  "    var dict = [String : Int]()\n    var maxCount = 0\n    for char in test.characters\
    \ {\n        let key = String(char)\n        if let count = dict[key] {\n    \
    \        dict[key] = count + 1\n        } else {\n            dict[key] = 1\n\
    \        }\n        if dict[key]! > maxCount {\n            maxCount = dict[key]!\n\
    \        }\n    }\n    var result = [String : Int]()\n    for (key, value) in\
    \ dict {\n        if value == maxCount {\n            result[key] = value\n  \
    \      }\n    }\n    return result", "    var dict = [String : Int]()\n    let\
    \ letters = test.components(separatedBy: \" \")\n    for letter in letters {\n\
    \        if let count = dict[letter] {\n            dict[letter] = count + 1\n\
    \        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let arr = test.components(separatedBy: \" \")\n    for i in arr {\n     \
    \   if let count = dict[i] {\n            dict[i] = count + 1\n        } else\
    \ {\n            dict[i] = 1\n        }\n    }\n    return dict", "    var dict\
    \ = [String : Int]()\n    var max = 0\n    for char in test.characters {\n   \
    \     if let count = dict[String(char)] {\n            dict[String(char)] = count\
    \ + 1\n        } else {\n            dict[String(char)] = 1\n        }\n     \
    \   if dict[String(char)] > max {\n            max = dict[String(char)]!\n   \
    \     }\n    }\n    var result = [String : Int]()\n    for (key, value) in dict\
    \ {\n        if value == max {\n            result[key] = value\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    var max = 0\n\
    \    var maxLetters = [String]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if dict[letter] == nil {\n    \
    \        dict[letter] = 1\n        } else {\n            dict[letter]! += 1\n\
    \        }\n        if dict[letter]! > max {\n            max = dict[letter]!\n\
    \            maxLetters = [letter]\n        } else if dict[letter]! == max {\n\
    \            maxLetters.append(letter)\n        }\n    }\n    return [maxLetters.joined(separator:\
    \ \" \") : max]", "    var dict = [String : Int]()\n    var max = 0\n    for char\
    \ in test.characters {\n        if let count = dict[String(char)] {\n        \
    \    dict[String(char)] = count + 1\n        } else {\n            dict[String(char)]\
    \ = 1\n        }\n        if dict[String(char)] > max {\n            max = dict[String(char)]!\n\
    \        }\n    }\n    var result = [String : Int]()\n    for (key, value) in\
    \ dict {\n        if value == max {\n            result[key] = value\n       \
    \ }\n    }\n    return result", "    var dict = [String : Int]()\n    var max\
    \ = 0\n    var maxLetters = [String]()\n    for letter in test.characters {\n\
    \        let str = String(letter)\n        if let count = dict[str] {\n      \
    \      dict[str] = count + 1\n            if count + 1 > max {\n             \
    \   max = count + 1\n                maxLetters = [str]\n            } else if\
    \ count + 1 == max {\n                maxLetters.append(str)\n            }\n\
    \        } else {\n            dict[str] = 1\n            if 1 > max {\n     \
    \           max = 1\n                maxLetters = [str]\n            } else if\
    \ 1 == max {\n                maxLetters.append(str)\n            }\n        }\n\
    \    }\n    var result = [String : Int]()\n    for letter in maxLetters {\n  \
    \      result[letter] = max\n    }\n    return result", "    var dict = [String\
    \ : Int]()\n    let array = test.components(separatedBy: \" \")\n    for word\
    \ in array {\n        if let count = dict[word] {\n            dict[word] = count\
    \ + 1\n        } else {\n            dict[word] = 1\n        }\n    }\n    return\
    \ dict", "    var result: [String : Int] = [:]\n    let letters = test.characters.map\
    \ { String($0) }\n    for letter in letters {\n        if let count = result[letter]\
    \ {\n            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var result = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    var max = 0\n    for letter in letters {\n        if let count =\
    \ result[letter] {\n            result[letter] = count + 1\n        } else {\n\
    \            result[letter] = 1\n        }\n        if result[letter]! > max {\n\
    \            max = result[letter]!\n        }\n    }\n    var result2 = [String\
    \ : Int]()\n    for (key, value) in result {\n        if value == max {\n    \
    \        result2[key] = value\n        }\n    }\n    return result2", "    var\
    \ dict = [String : Int]()\n    let array = test.components(separatedBy: \" \"\
    )\n    var max = 0\n    for i in array {\n        if dict[i] == nil {\n      \
    \      dict[i] = 1\n        } else {\n            dict[i] = dict[i]! + 1\n   \
    \     }\n        if dict[i]! > max {\n            max = dict[i]!\n        }\n\
    \    }\n    var result = [String : Int]()\n    for (key, value) in dict {\n  \
    \      if value == max {\n            result[key] = value\n        }\n    }\n\
    \    return result", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let arr = test.components(separatedBy: \" \")\n    for i in arr {\n     \
    \   if let count = dict[i] {\n            dict[i] = count + 1\n        } else\
    \ {\n            dict[i] = 1\n        }\n    }\n    return dict", "    var dict\
    \ = [String : Int]()\n    let letters = test.components(separatedBy: \" \")\n\
    \    for letter in letters {\n        if let count = dict[letter] {\n        \
    \    dict[letter] = count + 1\n        } else {\n            dict[letter] = 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    let\
    \ arr = test.components(separatedBy: \" \")\n    for i in arr {\n        if let\
    \ count = dict[i] {\n            dict[i] = count + 1\n        } else {\n     \
    \       dict[i] = 1\n        }\n    }\n    return dict", "    var dict = [String\
    \ : Int]()\n    let array = test.components(separatedBy: \" \")\n    for i in\
    \ array {\n        if let count = dict[i] {\n            dict[i] = count + 1\n\
    \        } else {\n            dict[i] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.components(separatedBy: \"\
    \ \")\n    for word in array {\n        if let count = dict[word] {\n        \
    \    dict[word] = count + 1\n        } else {\n            dict[word] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let arr\
    \ = test.components(separatedBy: \" \")\n    for i in arr {\n        if dict[i]\
    \ == nil {\n            dict[i] = 1\n        } else {\n            dict[i] = dict[i]!\
    \ + 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    var maxLetters = [String]()\n    for letter in test.characters\
    \ {\n        if dict[String(letter)] == nil {\n            dict[String(letter)]\
    \ = 1\n        } else {\n            dict[String(letter)]! += 1\n        }\n \
    \       if dict[String(letter)] > max {\n            max = dict[String(letter)]!\n\
    \            maxLetters = [String(letter)]\n        } else if dict[String(letter)]\
    \ == max {\n            maxLetters.append(String(letter))\n        }\n    }\n\
    \    var result = [String : Int]()\n    for letter in maxLetters {\n        result[letter]\
    \ = max\n    }\n    return result", "    var dict = [String : Int]()\n    var\
    \ max = 0\n    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n        if dict[String(char)] > max {\n\
    \            max = dict[String(char)]!\n        }\n    }\n    var result = [String\
    \ : Int]()\n    for (key, value) in dict {\n        if value == max {\n      \
    \      result[key] = value\n        }\n    }\n    return result", "    var dict\
    \ = [String : Int]()\n    let letters = test.characters.map { String($0) }\n \
    \   for letter in letters {\n        if let count = dict[letter] {\n         \
    \   dict[letter] = count + 1\n        } else {\n            dict[letter] = 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    let\
    \ array = test.components(separatedBy: \" \")\n    for i in array {\n        if\
    \ let count = dict[i] {\n            dict[i] = count + 1\n        } else {\n \
    \           dict[i] = 1\n        }\n    }\n    return dict", "    var dict = [String\
    \ : Int]()\n    let array = test.components(separatedBy: \" \")\n    for item\
    \ in array {\n        if let count = dict[item] {\n            dict[item] = count\
    \ + 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var result = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    var max = 0\n    for letter in letters {\n        if let count =\
    \ result[letter] {\n            result[letter] = count + 1\n        } else {\n\
    \            result[letter] = 1\n        }\n        if result[letter]! > max {\n\
    \            max = result[letter]!\n        }\n    }\n    var maxLetters = [String]()\n\
    \    for (letter, count) in result {\n        if count == max {\n            maxLetters.append(letter)\n\
    \        }\n    }\n    return [maxLetters.joined(separator: \" \") : max]", " \
    \   var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for i in array {\n        if let count = dict[i] {\n           \
    \ dict[i] = count + 1\n        } else {\n            dict[i] = 1\n        }\n\
    \    }\n    return dict", "    var histogram = [String : Int]()\n    var maxCount\
    \ = 0\n    var maxLetters = [String]()\n    for letter in test.characters {\n\
    \        let letterString = String(letter)\n        if let count = histogram[letterString]\
    \ {\n            histogram[letterString] = count + 1\n            if count + 1\
    \ > maxCount {\n                maxCount = count + 1\n                maxLetters\
    \ = [letterString]\n            } else if count + 1 == maxCount {\n          \
    \      maxLetters.append(letterString)\n            }\n        } else {\n    \
    \        histogram[letterString] = 1\n            if maxCount == 0 {\n       \
    \         maxCount = 1\n                maxLetters = [letterString]\n        \
    \    }\n        }\n    }\n    var result = [String : Int]()\n    for letter in\
    \ maxLetters {\n        result[letter] = maxCount\n    }\n    return result",
  "    var dict = [String : Int]()\n    var max = 0\n    var maxKeys = [String]()\n\
    \    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n        if dict[String(char)] > max {\n\
    \            max = dict[String(char)]!\n            maxKeys = [String(char)]\n\
    \        } else if dict[String(char)] == max {\n            maxKeys.append(String(char))\n\
    \        }\n    }\n    var result = [String : Int]()\n    for key in maxKeys {\n\
    \        result[key] = max\n    }\n    return result", "    var dict = [String\
    \ : Int]()\n    let array = test.components(separatedBy: \" \")\n    for i in\
    \ array {\n        if let count = dict[i] {\n            dict[i] = count + 1\n\
    \        } else {\n            dict[i] = 1\n        }\n    }\n    return dict",
  "    var histogram = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = histogram[letter]\
    \ {\n            histogram[letter] = count + 1\n        } else {\n           \
    \ histogram[letter] = 1\n        }\n    }\n    return histogram", "    var result\
    \ = [String : Int]()\n    var max = 0\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n        if result[letter]! > max {\n            max = result[letter]!\n\
    \        }\n    }\n    return result.filter { $0.value == max }", "    var dict\
    \ = [String : Int]()\n    let letters = test.components(separatedBy: \" \")\n\
    \    for letter in letters {\n        if let count = dict[letter] {\n        \
    \    dict[letter] = count + 1\n        } else {\n            dict[letter] = 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    var\
    \ max = 0\n    var maxLetters = [String]()\n    for letter in test.characters\
    \ {\n        let l = String(letter)\n        if let count = dict[l] {\n      \
    \      dict[l] = count + 1\n            if count + 1 > max {\n               \
    \ max = count + 1\n                maxLetters = [l]\n            } else if count\
    \ + 1 == max {\n                maxLetters.append(l)\n            }\n        }\
    \ else {\n            dict[l] = 1\n            if max == 0 {\n               \
    \ max = 1\n                maxLetters = [l]\n            }\n        }\n    }\n\
    \    var result = [String : Int]()\n    for letter in maxLetters {\n        result[letter]\
    \ = max\n    }\n    return result", "    var histogram = [String : Int]()\n  \
    \  let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = histogram[letter] {\n            histogram[letter]\
    \ = count + 1\n        } else {\n            histogram[letter] = 1\n        }\n\
    \    }\n    return histogram", "    var histogram = [String : Int]()\n    for\
    \ char in test.characters {\n        let key = String(char)\n        if let value\
    \ = histogram[key] {\n            histogram[key] = value + 1\n        } else {\n\
    \            histogram[key] = 1\n        }\n    }\n    return histogram", "  \
    \  var dict = [String : Int]()\n    let array = test.components(separatedBy: \"\
    \ \")\n    for letter in array {\n        if let count = dict[letter] {\n    \
    \        dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let array = test.components(separatedBy: \" \")\n    for item in array {\n\
    \        if let count = dict[item] {\n            dict[item] = count + 1\n   \
    \     } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.components(separatedBy: \"\
    \ \")\n    for i in array {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    let arr = test.components(separatedBy:\
    \ \" \")\n    for i in arr {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var result = [String : Int]()\n    let testArray = test.characters.map\
    \ { String($0) }\n    for letter in testArray {\n        if result[letter] ==\
    \ nil {\n            result[letter] = 1\n        } else {\n            result[letter]!\
    \ += 1\n        }\n    }\n    return result", "    var dict: [String : Int] =\
    \ [:]\n    let array = test.components(separatedBy: \" \")\n    for letter in\
    \ array {\n        if let count = dict[letter] {\n            dict[letter] = count\
    \ + 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    var max = 0\n    var maxLetters\
    \ = [String]()\n    for letter in test.characters {\n        if dict[String(letter)]\
    \ == nil {\n            dict[String(letter)] = 1\n        } else {\n         \
    \   dict[String(letter)]! += 1\n        }\n        if dict[String(letter)]! >\
    \ max {\n            max = dict[String(letter)]!\n            maxLetters = [String(letter)]\n\
    \        } else if dict[String(letter)]! == max {\n            maxLetters.append(String(letter))\n\
    \        }\n    }\n    var result = [String : Int]()\n    for letter in maxLetters\
    \ {\n        result[letter] = max\n    }\n    return result", "    var dict =\
    \ [String : Int]()\n    var max = 0\n    var maxLetters = [String]()\n    let\
    \ letters = test.components(separatedBy: \" \")\n    for letter in letters {\n\
    \        if dict[letter] == nil {\n            dict[letter] = 1\n        } else\
    \ {\n            dict[letter]! += 1\n        }\n        if dict[letter]! > max\
    \ {\n            max = dict[letter]!\n            maxLetters = [letter]\n    \
    \    } else if dict[letter]! == max {\n            maxLetters.append(letter)\n\
    \        }\n    }\n    return [maxLetters.joined(separator: \" \") : max]", " \
    \   var dict = [String : Int]()\n    let arr = test.components(separatedBy: \"\
    \ \")\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] =\
    \ 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for i in array {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    let arr = test.components(separatedBy:\
    \ \" \")\n    var max = 0\n    for i in arr {\n        if let count = dict[i]\
    \ {\n            dict[i] = count + 1\n        } else {\n            dict[i] =\
    \ 1\n        }\n        if dict[i]! > max {\n            max = dict[i]!\n    \
    \    }\n    }\n    var result = [String : Int]()\n    for (key, value) in dict\
    \ {\n        if value == max {\n            result[key] = value\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    let letters =\
    \ test.components(separatedBy: \" \")\n    for letter in letters {\n        if\
    \ dict[letter] == nil {\n            dict[letter] = 1\n        } else {\n    \
    \        dict[letter] = dict[letter]! + 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    var max = 0\n    var maxKeys = [String]()\n\
    \    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n        } else {\n          \
    \  dict[String(char)] = 1\n        }\n        if dict[String(char)] > max {\n\
    \            max = dict[String(char)]!\n            maxKeys = [String(char)]\n\
    \        } else if dict[String(char)] == max {\n            maxKeys.append(String(char))\n\
    \        }\n    }\n    var result = [String : Int]()\n    for key in maxKeys {\n\
    \        result[key] = max\n    }\n    return result", "    var dict = [String\
    \ : Int]()\n    var max = 0\n    for char in test.characters {\n        if let\
    \ count = dict[String(char)] {\n            dict[String(char)] = count + 1\n \
    \       } else {\n            dict[String(char)] = 1\n        }\n        if dict[String(char)]\
    \ > max {\n            max = dict[String(char)]!\n        }\n    }\n    var result\
    \ = [String : Int]()\n    for (key, value) in dict {\n        if value == max\
    \ {\n            result[key] = value\n        }\n    }\n    return result", " \
    \   var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for letter in array {\n        if let count = dict[letter] {\n \
    \           dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let arr = test.components(separatedBy: \" \")\n    for i in arr {\n     \
    \   if let count = dict[i] {\n            dict[i] = count + 1\n        } else\
    \ {\n            dict[i] = 1\n        }\n    }\n    return dict", "    var dict\
    \ = [String : Int]()\n    let array = test.components(separatedBy: \" \")\n  \
    \  for i in array {\n        if let count = dict[i] {\n            dict[i] = count\
    \ + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let letters = test.components(separatedBy:\
    \ \" \")\n    for letter in letters {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    var maxLetters = [String]()\n    for letter in test.characters\
    \ {\n        if dict[String(letter)] == nil {\n            dict[String(letter)]\
    \ = 1\n        } else {\n            dict[String(letter)]! += 1\n        }\n \
    \       if dict[String(letter)] > max {\n            max = dict[String(letter)]!\n\
    \            maxLetters = [String(letter)]\n        } else if dict[String(letter)]\
    \ == max {\n            maxLetters.append(String(letter))\n        }\n    }\n\
    \    var result = [String : Int]()\n    for letter in maxLetters {\n        result[letter]\
    \ = max\n    }\n    return result", "    var dict = [String : Int]()\n    let\
    \ testArray = test.characters.map { String($0) }\n    for letter in testArray\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var result = [String : Int]()\n    var max = 0\n    let letters\
    \ = test.components(separatedBy: \" \")\n    for letter in letters {\n       \
    \ if let count = result[letter] {\n            result[letter] = count + 1\n  \
    \      } else {\n            result[letter] = 1\n        }\n        if result[letter]!\
    \ > max {\n            max = result[letter]!\n        }\n    }\n    return result.filter\
    \ { $0.value == max }", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for letter in array {\n        if let count = dict[letter] {\n \
    \           dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let arr = test.components(separatedBy: \" \")\n    for i in arr {\n     \
    \   if let count = dict[i] {\n            dict[i] = count + 1\n        } else\
    \ {\n            dict[i] = 1\n        }\n    }\n    var max = 0\n    for (_, value)\
    \ in dict {\n        if value > max {\n            max = value\n        }\n  \
    \  }\n    var result = [String : Int]()\n    for (key, value) in dict {\n    \
    \    if value == max {\n            result[key] = value\n        }\n    }\n  \
    \  return result", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for letter in array {\n        if let count = dict[letter] {\n \
    \           dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    var maxKeys = [String]()\n    for char in test.characters\
    \ {\n        if let count = dict[String(char)] {\n            dict[String(char)]\
    \ = count + 1\n        } else {\n            dict[String(char)] = 1\n        }\n\
    \        if dict[String(char)] > max {\n            max = dict[String(char)]!\n\
    \            maxKeys = [String(char)]\n        } else if dict[String(char)] ==\
    \ max {\n            maxKeys.append(String(char))\n        }\n    }\n    var result\
    \ = [String : Int]()\n    for key in maxKeys {\n        result[key] = max\n  \
    \  }\n    return result", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for word in array {\n        if let count = dict[word] {\n     \
    \       dict[word] = count + 1\n        } else {\n            dict[word] = 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    let\
    \ arr = test.components(separatedBy: \" \")\n    for i in arr {\n        if dict[i]\
    \ == nil {\n            dict[i] = 1\n        } else {\n            dict[i] = dict[i]!\
    \ + 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    for letter in test.characters {\n        if let count =\
    \ dict[String(letter)] {\n            dict[String(letter)] = count + 1\n     \
    \   } else {\n            dict[String(letter)] = 1\n        }\n        if dict[String(letter)]\
    \ > max {\n            max = dict[String(letter)]!\n        }\n    }\n    var\
    \ result = [String : Int]()\n    for (key, value) in dict {\n        if value\
    \ == max {\n            result[key] = value\n        }\n    }\n    return result",
  "    var dict: [String : Int] = [:]\n    let testArray = test.components(separatedBy:\
    \ \" \")\n    for letter in testArray {\n        if let count = dict[letter] {\n\
    \            dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let array = test.components(separatedBy: \" \")\n    for item in array {\n\
    \        if let count = dict[item] {\n            dict[item] = count + 1\n   \
    \     } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.components(separatedBy: \"\
    \ \")\n    for word in array {\n        if let count = dict[word] {\n        \
    \    dict[word] = count + 1\n        } else {\n            dict[word] = 1\n  \
    \      }\n    }\n    var max = 0\n    for (_, value) in dict {\n        if value\
    \ > max {\n            max = value\n        }\n    }\n    var result = [String\
    \ : Int]()\n    for (key, value) in dict {\n        if value == max {\n      \
    \      result[key] = value\n        }\n    }\n    return result", "    var dict\
    \ = [String : Int]()\n    let letters = test.components(separatedBy: \" \")\n\
    \    for letter in letters {\n        if dict[letter] == nil {\n            dict[letter]\
    \ = 1\n        } else {\n            dict[letter]! += 1\n        }\n    }\n  \
    \  return dict", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for word in array {\n        if let count = dict[word] {\n     \
    \       dict[word] = count + 1\n        } else {\n            dict[word] = 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    let\
    \ arr = test.components(separatedBy: \" \")\n    for i in arr {\n        if dict[i]\
    \ == nil {\n            dict[i] = 1\n        } else {\n            dict[i] = dict[i]!\
    \ + 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let letters = test.components(separatedBy: \" \")\n    for letter in letters\
    \ {\n        if let count = dict[letter] {\n            dict[letter] = count +\
    \ 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    var max = 0\n    for char in test.characters\
    \ {\n        if let count = dict[String(char)] {\n            dict[String(char)]\
    \ = count + 1\n        } else {\n            dict[String(char)] = 1\n        }\n\
    \        if dict[String(char)] > max {\n            max = dict[String(char)]!\n\
    \        }\n    }\n    var result = [String : Int]()\n    for (key, value) in\
    \ dict {\n        if value == max {\n            result[key] = value\n       \
    \ }\n    }\n    return result", "    var histogram = [String : Int]()\n    let\
    \ letters = test.components(separatedBy: \" \")\n    for letter in letters {\n\
    \        if let count = histogram[letter] {\n            histogram[letter] = count\
    \ + 1\n        } else {\n            histogram[letter] = 1\n        }\n    }\n\
    \    return histogram", "    var dict = [String : Int]()\n    var max = 0\n  \
    \  var maxLetters = [String]()\n    for letter in test.characters {\n        if\
    \ let count = dict[String(letter)] {\n            dict[String(letter)] = count\
    \ + 1\n            if count + 1 > max {\n                max = count + 1\n   \
    \             maxLetters = [String(letter)]\n            } else if count + 1 ==\
    \ max {\n                maxLetters.append(String(letter))\n            }\n  \
    \      } else {\n            dict[String(letter)] = 1\n            if max == 0\
    \ {\n                max = 1\n                maxLetters = [String(letter)]\n\
    \            }\n        }\n    }\n    var result = [String : Int]()\n    for letter\
    \ in maxLetters {\n        result[letter] = max\n    }\n    return result", " \
    \   var dict = [String : Int]()\n    var max = 0\n    var maxLetters = [String]()\n\
    \    for letter in test.characters {\n        let letterString = String(letter)\n\
    \        if let count = dict[letterString] {\n            dict[letterString] =\
    \ count + 1\n            if count + 1 > max {\n                max = count + 1\n\
    \                maxLetters = [letterString]\n            } else if count + 1\
    \ == max {\n                maxLetters.append(letterString)\n            }\n \
    \       } else {\n            dict[letterString] = 1\n            if max == 0\
    \ {\n                max = 1\n                maxLetters = [letterString]\n  \
    \          }\n        }\n    }\n    var result = [String : Int]()\n    for letter\
    \ in maxLetters {\n        result[letter] = max\n    }\n    return result", " \
    \   var result = [String : Int]()\n    var maxCount = 0\n    var maxLetters =\
    \ [String]()\n    let letters = test.components(separatedBy: \" \")\n    for letter\
    \ in letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \       if result[letter]! > maxCount {\n            maxCount = result[letter]!\n\
    \            maxLetters = [letter]\n        } else if result[letter]! == maxCount\
    \ {\n            maxLetters.append(letter)\n        }\n    }\n    return [maxLetters.joined(separator:\
    \ \" \") : maxCount]", "    var histogram = [String : Int]()\n    let letters\
    \ = test.components(separatedBy: \" \")\n    for letter in letters {\n       \
    \ if let count = histogram[letter] {\n            histogram[letter] = count +\
    \ 1\n        } else {\n            histogram[letter] = 1\n        }\n    }\n \
    \   return histogram", "    var dict = [String : Int]()\n    let array = test.components(separatedBy:\
    \ \" \")\n    for item in array {\n        if let count = dict[item] {\n     \
    \       dict[item] = count + 1\n        } else {\n            dict[item] = 1\n\
    \        }\n    }\n    return dict", "    var dict = [String : Int]()\n    var\
    \ maxCount = 0\n    for char in test.characters {\n        if let count = dict[String(char)]\
    \ {\n            dict[String(char)] = count + 1\n            if count + 1 > maxCount\
    \ {\n                maxCount = count + 1\n            }\n        } else {\n \
    \           dict[String(char)] = 1\n            if 1 > maxCount {\n          \
    \      maxCount = 1\n            }\n        }\n    }\n    var result = [String\
    \ : Int]()\n    for (key, value) in dict {\n        if value == maxCount {\n \
    \           result[key] = value\n        }\n    }\n    return result", "    var\
    \ dict = [String : Int]()\n    for char in test.characters {\n        if let val\
    \ = dict[String(char)] {\n            dict[String(char)] = val + 1\n        }\
    \ else {\n            dict[String(char)] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.components(separatedBy: \"\
    \ \")\n    for word in array {\n        if let count = dict[word] {\n        \
    \    dict[word] = count + 1\n        } else {\n            dict[word] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let letters\
    \ = test.components(separatedBy: \" \")\n    for letter in letters {\n       \
    \ if let count = dict[letter] {\n            dict[letter] = count + 1\n      \
    \  } else {\n            dict[letter] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let arr = test.components(separatedBy: \"\
    \ \")\n    for word in arr {\n        if let count = dict[word] {\n          \
    \  dict[word] = count + 1\n        } else {\n            dict[word] = 1\n    \
    \    }\n    }\n    return dict"]
stop_tokens:
- "\n}"

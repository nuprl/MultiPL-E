name: HumanEval_77_iscube
language: swift
prompt: "\n/// Write a function that takes an integer a and returns True \n/// if\
  \ this ingeger is a cube of some integer number.\n/// Note: you may assume the input\
  \ is always valid.\n/// Examples:\nfunc iscube(a: Int) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(iscube(a: 1) == true)\nassert(iscube(a:\
  \ 2) == false)\nassert(iscube(a: -1) == true)\nassert(iscube(a: 64) == true)\nassert(iscube(a:\
  \ 180) == false)\nassert(iscube(a: 1000) == true)\nassert(iscube(a: 0) == true)\n\
  assert(iscube(a: 1729) == false)"
completions: ["    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube\
    \ * cube == a", "    let cube = a * a * a\n    return cube == a", "    let cube\
    \ = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube * cube == a", "    let\
    \ c = Int(pow(Double(a), 1.0/3.0))\n    return c * c * c == a", '    return a
    == Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a),
    1.0/3.0))', '    return a == Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a),
    1.0/3.0)) * Int(pow(Double(a), 1.0/3.0))', "    let x = Int(pow(Double(a), 1/3))\n\
    \    return x * x * x == a", '    return a == Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a),
    1.0/3.0)) * Int(pow(Double(a), 1.0/3.0))', "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return a == cube * cube * cube", "    let cubeRoot = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cubeRoot * cubeRoot * cubeRoot == a", "    let x = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return x * x * x == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let cube = a * a * a\n    return cube\
    \ == a", "    let c = Int(pow(Double(a), 1.0/3.0))\n    return c * c * c == a",
  "    let b = Int(pow(Double(a), 1.0/3.0))\n    return b * b * b == a", "    let\
    \ cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube * cube == a", " \
    \   var i = 1\n    while i * i * i <= a {\n        if i * i * i == a {\n     \
    \       return true\n        }\n        i += 1\n    }\n    return false", '    return
    a == Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a),
    1.0/3.0))', "    var i = 1\n    while i * i * i <= a {\n        if i * i * i ==\
    \ a {\n            return true\n        }\n        i += 1\n    }\n    return false",
  '    return false', "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return a ==\
    \ cube * cube * cube", "    let x = Int(pow(Double(a), 1.0/3.0))\n    return x\
    \ * x * x == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n    return a == b\
    \ * b * b", "    let root = Int(pow(Double(a), 1.0/3.0))\n    return root * root\
    \ * root == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube\
    \ * cube * cube == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n    return a\
    \ == b * b * b", "    let root = Int(pow(Double(a), 1.0/3.0))\n    return root\
    \ * root * root == a", "    let cube = a * a * a\n    if cube == a {\n       \
    \ return true\n    } else {\n        return false\n    }", "    let b = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return b * b * b == a", '    return false', "    let b = Double(a)\n\
    \    let c = pow(b, 1.0/3.0)\n    let d = Int(c)\n    if d * d * d == a {\n  \
    \      return true\n    }\n    return false", "    let x = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return x * x * x == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", '    return (a == 0) ? true : (a == 1) ?
    true : (a == 8) ? true : false', '    return false', "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return a == cube * cube * cube", "    let cubeRoot = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cubeRoot * cubeRoot * cubeRoot == a", "    let root =\
    \ Int(pow(Double(a), 1.0/3.0))\n    return root * root * root == a", "    let\
    \ cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube * cube == a", " \
    \   let root = Int(cbrt(Double(a)))\n    return root * root * root == a", "  \
    \  let cube = Int(pow(Double(a), 1.0/3.0))\n    return a == cube * cube * cube",
  "    let b = Int(pow(Double(a), 1.0/3.0))\n    return a == b * b * b", "    let\
    \ cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube * cube == a", " \
    \   let b = a.squareRoot()\n    return b.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && b.square() == a", "    let x = Int(pow(Double(a), 1.0/3.0))\n    return\
    \ x * x * x == a", "    let cube = Int(pow(Double(a), 1/3))\n    return a == cube\
    \ * cube * cube", "    let cubeRoot = Int(pow(Double(a), 1.0/3.0))\n    return\
    \ cubeRoot * cubeRoot * cubeRoot == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    var i = 1\n    while i * i * i <= a\
    \ {\n        if i * i * i == a {\n            return true\n        }\n       \
    \ i += 1\n    }\n    return false", '    return a == Int(pow(Double(a), 1.0/3.0))
    * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0))', '    return a
    == Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a),
    1.0/3.0))', "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube\
    \ * cube == a", "    var i = 1\n    while i * i * i <= a {\n        if i * i *\
    \ i == a {\n            return true\n        }\n        i += 1\n    }\n    return\
    \ false", '    return false', '    return false', "    let b = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return b * b * b == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n  \
    \  return cube * cube * cube == a", "    let result = pow(Double(a), 1.0/3.0)\n\
    \    return result == Double(Int(result))", "    let cube = a * a * a\n    return\
    \ cube == a", "    let cube = a * a * a\n    return cube == a", '    return false',
  "    let root = Int(pow(Double(a), 1.0/3.0))\n    return root * root * root == a",
  '    return false', "    let b = Int(pow(Double(a), 1.0/3.0))\n    return b * b\
    \ * b == a", "    var i = 1\n    while i * i * i <= a {\n        if i * i * i\
    \ == a {\n            return true\n        }\n        i += 1\n    }\n    return\
    \ false", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return a == cube *\
    \ cube * cube", "    let b = Int(pow(Double(a), 1.0/3.0))\n    return a == b *\
    \ b * b", "    var i = 1\n    while i * i * i <= a {\n        if i * i * i ==\
    \ a {\n            return true\n        }\n        i += 1\n    }\n    return false",
  "    let b = Int(pow(Double(a), 1.0/3.0))\n    return b * b * b == a", "    let\
    \ b = Int(pow(Double(a), 1.0/3.0))\n    return b * b * b == a", "    let cubeRoot\
    \ = Int(pow(Double(a), 1.0/3.0))\n    return cubeRoot * cubeRoot * cubeRoot ==\
    \ a", '    return false', "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return\
    \ a == cube * cube * cube", "    let cube = Int(pow(Double(a), 1.0/3.0))\n   \
    \ return cube * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n    return\
    \ b * b * b == a", '    return a == Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a),
    1.0/3.0)) * Int(pow(Double(a), 1.0/3.0))', "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cube * cube * cube == a", "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cube * cube * cube == a", "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return a == cube * cube * cube", '    return false', "    let\
    \ cube = a * a * a\n    return cube == a", "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cube * cube * cube == a", "    let b = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return b * b * b == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    var i = 1\n    while i * i * i <= a\
    \ {\n        if i * i * i == a {\n            return true\n        }\n       \
    \ i += 1\n    }\n    return false", "    let root = Int(pow(Double(a), 1.0/3.0))\n\
    \    return root * root * root == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", "    let cubeRoot = Int(pow(Double(a), 1.0/3.0))\n\
    \    return a == cubeRoot * cubeRoot * cubeRoot", "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cube * cube * cube == a", "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cube * cube * cube == a", "    let b = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return b * b * b == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", "    let cubeRoot = Int(pow(Double(a), 1.0/3.0))\n\
    \    return a == cubeRoot * cubeRoot * cubeRoot", "    let cubeRoot = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return a == cubeRoot * cubeRoot * cubeRoot", "    let b = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return a == b * b * b", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", "    let x = Int(pow(Double(a), 1.0/3.0))\n    return\
    \ x * x * x == a", '    return false', "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", '    return a == Int(pow(Double(a), 1.0/3.0))
    * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0))', "    let cube\
    \ = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube * cube == a", "    let\
    \ root = Double(a).squareRoot()\n    return root.truncatingRemainder(dividingBy:\
    \ 1) == 0", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube\
    \ * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube\
    \ * cube * cube == a", "    let x = Int(pow(Double(a), 1.0/3.0))\n    return x\
    \ * x * x == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube\
    \ * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return\
    \ cube * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n   \
    \ return cube * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return a == cube * cube * cube", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", '    return false', "    let b = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return b * b * b == a", "    let cube = a * a * a\n    return\
    \ cube == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n    return b * b * b\
    \ == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube\
    \ * cube == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n    return a == b *\
    \ b * b", "    let x = Int(pow(Double(a), 1.0/3.0))\n    return x * x * x == a",
  '    return a == Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a),
    1.0/3.0))', "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube\
    \ * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube\
    \ * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return\
    \ cube * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n   \
    \ return a == cube * cube * cube", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return a == b * b * b", "    let cube = Int(pow(Double(a), 1.0/3.0))\n  \
    \  return cube * cube * cube == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", "    let root = Int(pow(Double(a), 1.0/3.0))\n  \
    \  return root * root * root == a", '    return a == Int(pow(Double(a), 1.0/3.0))
    * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0))', '    return a
    == Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a),
    1.0/3.0))', '    return false', '    return a == Int(pow(Double(a), 1.0/3.0))
    * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0))', "    let cube\
    \ = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube * cube == a", "    let\
    \ cube = Int(pow(Double(a), 1.0/3.0))\n    return a == cube * cube * cube", " \
    \   let cube = Int(pow(Double(a), 1.0/3.0))\n    return a == cube * cube * cube",
  "    var i = 1\n    while i * i * i <= a {\n        if i * i * i == a {\n      \
    \      return true\n        }\n        i += 1\n    }\n    return false", "   \
    \ let b = Int(pow(Double(a), 1.0/3.0))\n    return b * b * b == a", "    let b\
    \ = Int(pow(Double(a), 1.0/3.0))\n    return b * b * b == a", "    let cube =\
    \ Int(pow(Double(a), 1.0/3.0))\n    return a == cube * cube * cube", "    let\
    \ cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube * cube == a", " \
    \   let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube * cube ==\
    \ a", "    let b = Int(pow(Double(a), 1.0/3.0))\n    return b * b * b == a", " \
    \   let x = Int(pow(Double(a), 1.0/3.0))\n    return x * x * x == a", "    var\
    \ b = 1\n    while b * b * b < a {\n        b += 1\n    }\n    return b * b *\
    \ b == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube\
    \ * cube == a", '    return Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a),
    1.0/3.0)) * Int(pow(Double(a), 1.0/3.0)) == a', "    let b = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return b * b * b == a", '    return false', "    if a < 0 {\n\
    \        return false\n    }\n    let root = Int(pow(Double(a), 1.0/3.0))\n  \
    \  return root * root * root == a", "    let cubeRoot = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cubeRoot * cubeRoot * cubeRoot == a", "    let cube = Int(pow(Double(a),\
    \ 1/3))\n    return a == cube * cube * cube", "    var i = 1\n    while i * i\
    \ * i <= a {\n        if i * i * i == a {\n            return true\n        }\n\
    \        i += 1\n    }\n    return false", "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cube * cube * cube == a", "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cube * cube * cube == a", "    let b = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return a == b * b * b", "    let x = Int(pow(Double(a), 1.0/3.0))\n\
    \    return x * x * x == a", '    return a == Int(pow(Double(a), 1/3))', "   \
    \ let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube * cube * cube == a",
  "    var i = 1\n    while i * i * i <= a {\n        if i * i * i == a {\n      \
    \      return true\n        }\n        i += 1\n    }\n    return false", "   \
    \ let root = Int(pow(Double(a), 1.0/3.0))\n    return root * root * root == a",
  "    let cubeRoot = Int(pow(Double(a), 1.0/3.0))\n    return a == cubeRoot * cubeRoot\
    \ * cubeRoot", "    let cube = Int(pow(Double(a), 1.0/3.0))\n    return cube *\
    \ cube * cube == a", "    let cubeRoot = Int(pow(Double(a), 1.0/3.0))\n    return\
    \ a == cubeRoot * cubeRoot * cubeRoot", "    var i = 1\n    while i * i * i <=\
    \ a {\n        if i * i * i == a {\n            return true\n        }\n     \
    \   i += 1\n    }\n    return false", "    var i = 1\n    while i * i * i <= a\
    \ {\n        if i * i * i == a {\n            return true\n        }\n       \
    \ i += 1\n    }\n    return false", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n  \
    \  return cube * cube * cube == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n  \
    \  return cube * cube * cube == a", "    var i = 1\n    while i * i * i <= a {\n\
    \        if i * i * i == a {\n            return true\n        }\n        i +=\
    \ 1\n    }\n    return false", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return a == cube * cube * cube", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return a == b * b * b", "    let cube = Int(pow(Double(a), 1.0/3.0))\n  \
    \  return cube * cube * cube == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return b * b * b == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n    return\
    \ b * b * b == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n    return a ==\
    \ b * b * b", "    let cubeRoot = Int(pow(Double(a), 1.0/3.0))\n    return a ==\
    \ cubeRoot * cubeRoot * cubeRoot", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let root = Int(pow(Double(a), 1.0/3.0))\n\
    \    return a == root * root * root", '    return false', "    let b = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return b * b * b == a", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let b = Int(pow(Double(a), 1.0/3.0))\n\
    \    return a == b * b * b", "    var i = 0\n    while i * i * i < a {\n     \
    \   i += 1\n    }\n    return i * i * i == a", "    let cube = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cube * cube * cube == a", "    let cubeRoot = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return cubeRoot * cubeRoot * cubeRoot == a", "    let x = Int(pow(Double(a),\
    \ 1.0/3.0))\n    return a == x * x * x", "    let cube = Int(pow(Double(a), 1.0/3.0))\n\
    \    return cube * cube * cube == a", "    let x = Int(pow(Double(a), 1.0/3.0))\n\
    \    return x * x * x == a", "    let cube = Int(pow(Double(a), 1/3))\n    return\
    \ a == cube * cube * cube", "    let root = Int(pow(Double(a), 1.0/3.0))\n   \
    \ return root * root * root == a", "    let cubeRoot = Int(pow(Double(a), 1.0/3.0))\n\
    \    return a == cubeRoot * cubeRoot * cubeRoot", "    let b = Int(pow(Double(a),\
    \ 1/3))\n    return b * b * b == a", "    var i = 1\n    while i*i*i <= a {\n\
    \        if i*i*i == a {\n            return true\n        }\n        i += 1\n\
    \    }\n    return false"]
stop_tokens:
- "\n}"

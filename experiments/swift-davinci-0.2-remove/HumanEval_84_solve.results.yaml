language: swift
name: HumanEval_84_solve
results:
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var N = N\n    var binary = \"\"\n    while N > 0 {\n     \
    \   binary = String(N % 2) + binary\n        N /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpit_rbcqg/tmpit_rbcqg.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af83689ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af836591b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af836591988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8365907b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpit_rbcqg                        0x000055603f8bc493 <unavailable> + 5267

    5    libc.so.6                          0x00002af836a86460 __libc_start_main +
    245

    6    tmpit_rbcqg                        0x000055603f8bc0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplmxb6bz1/tmplmxb6bz1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34b4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34b4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34b4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34b4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplmxb6bz1                        0x000055ed55f04493 <unavailable> + 5267

    5    libc.so.6                          0x00002b34b4fb0460 __libc_start_main +
    245

    6    tmplmxb6bz1                        0x000055ed55f040f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq8k2w0nh/tmpq8k2w0nh.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e1dacfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e1d7c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e1d7c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e1d7c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq8k2w0nh                        0x0000559783d3c623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e1dcbb460 __libc_start_main +
    245

    6    tmpq8k2w0nh                        0x0000559783d3c289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq8k2w0nh/tmpq8k2w0nh.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e1dacfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e1d7c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e1d7c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e1d7c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq8k2w0nh                        0x0000559783d3c623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e1dcbb460 __libc_start_main +
    245

    6    tmpq8k2w0nh                        0x0000559783d3c289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var sum = 0\n    var binary = \"\"\n    var N = N\n    while\
    \ N > 0 {\n        sum += N % 2\n        binary = String(N % 2) + binary\n   \
    \     N /= 2\n    }\n    return \"\\(sum) \\(binary)\"\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpbj4djnf6/tmpbj4djnf6.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b42b4044c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b42b3d3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b42b3d3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b42b3d3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbj4djnf6                        0x000055a0ffc6e873 <unavailable> + 6259

    5    libc.so.6                          0x00002b42b4230460 __libc_start_main +
    245

    6    tmpbj4djnf6                        0x000055a0ffc6e4d9 <unavailable> + 5337

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwxsfauhr/tmpwxsfauhr.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b627d074c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b627cd6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b627cd6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b627cd6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwxsfauhr                        0x0000562d8d648493 <unavailable> + 5267

    5    libc.so.6                          0x00002b627d260460 __libc_start_main +
    245

    6    tmpwxsfauhr                        0x0000562d8d6480f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var temp = N\n    while temp > 0 {\n\
    \        result = String(temp % 2) + result\n        temp /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpyrq4n0i5/tmpyrq4n0i5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b90d7015c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b90d6d0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b90d6d0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b90d6d0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyrq4n0i5                        0x00005639e3366493 <unavailable> + 5267

    5    libc.so.6                          0x00002b90d7201460 __libc_start_main +
    245

    6    tmpyrq4n0i5                        0x00005639e33660f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq8k2w0nh/tmpq8k2w0nh.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e1dacfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e1d7c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e1d7c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e1d7c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq8k2w0nh                        0x0000559783d3c623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e1dcbb460 __libc_start_main +
    245

    6    tmpq8k2w0nh                        0x0000559783d3c289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplmxb6bz1/tmplmxb6bz1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34b4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34b4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34b4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34b4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplmxb6bz1                        0x000055ed55f04493 <unavailable> + 5267

    5    libc.so.6                          0x00002b34b4fb0460 __libc_start_main +
    245

    6    tmplmxb6bz1                        0x000055ed55f040f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var sum = 0\n    var binary = \"\"\n    var N = N\n    while\
    \ N > 0 {\n        sum += N % 2\n        binary = String(N % 2) + binary\n   \
    \     N /= 2\n    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpgtdwi76v/tmpgtdwi76v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af705756c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af70544db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af70544d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af70544c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgtdwi76v                        0x00005593db29b493 <unavailable> + 5267

    5    libc.so.6                          0x00002af705942460 __libc_start_main +
    245

    6    tmpgtdwi76v                        0x00005593db29b0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplmxb6bz1/tmplmxb6bz1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34b4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34b4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34b4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34b4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplmxb6bz1                        0x000055ed55f04493 <unavailable> + 5267

    5    libc.so.6                          0x00002b34b4fb0460 __libc_start_main +
    245

    6    tmplmxb6bz1                        0x000055ed55f040f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var number = N\n    while number > 0\
    \ {\n        binary = String(number % 2) + binary\n        number /= 2\n    }\n\
    \    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp5qf_1hhe/tmp5qf_1hhe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b80ab9b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b80ab6aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b80ab6aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b80ab6a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5qf_1hhe                        0x000055dac6d55493 <unavailable> + 5267

    5    libc.so.6                          0x00002b80abb9f460 __libc_start_main +
    245

    6    tmp5qf_1hhe                        0x000055dac6d550f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var num = N\n    while num > 0 {\n \
    \       result = String(num % 2) + result\n        num /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpb3vnjo61/tmpb3vnjo61.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c3410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c3107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c3107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c31067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb3vnjo61                        0x0000557072e30493 <unavailable> + 5267

    5    libc.so.6                          0x00002ad3c35fc460 __libc_start_main +
    245

    6    tmpb3vnjo61                        0x0000557072e300f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwxsfauhr/tmpwxsfauhr.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b627d074c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b627cd6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b627cd6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b627cd6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwxsfauhr                        0x0000562d8d648493 <unavailable> + 5267

    5    libc.so.6                          0x00002b627d260460 __libc_start_main +
    245

    6    tmpwxsfauhr                        0x0000562d8d6480f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwxsfauhr/tmpwxsfauhr.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b627d074c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b627cd6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b627cd6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b627cd6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwxsfauhr                        0x0000562d8d648493 <unavailable> + 5267

    5    libc.so.6                          0x00002b627d260460 __libc_start_main +
    245

    6    tmpwxsfauhr                        0x0000562d8d6480f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwxsfauhr/tmpwxsfauhr.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b627d074c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b627cd6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b627cd6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b627cd6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwxsfauhr                        0x0000562d8d648493 <unavailable> + 5267

    5    libc.so.6                          0x00002b627d260460 __libc_start_main +
    245

    6    tmpwxsfauhr                        0x0000562d8d6480f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwxsfauhr/tmpwxsfauhr.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b627d074c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b627cd6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b627cd6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b627cd6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwxsfauhr                        0x0000562d8d648493 <unavailable> + 5267

    5    libc.so.6                          0x00002b627d260460 __libc_start_main +
    245

    6    tmpwxsfauhr                        0x0000562d8d6480f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var number = N\n    while number > 0\
    \ {\n        binary = String(number % 2) + binary\n        number /= 2\n    }\n\
    \    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp5qf_1hhe/tmp5qf_1hhe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b80ab9b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b80ab6aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b80ab6aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b80ab6a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5qf_1hhe                        0x000055dac6d55493 <unavailable> + 5267

    5    libc.so.6                          0x00002b80abb9f460 __libc_start_main +
    245

    6    tmp5qf_1hhe                        0x000055dac6d550f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var num = N\n    while num > 0 {\n \
    \       result = String(num % 2) + result\n        num /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpb3vnjo61/tmpb3vnjo61.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c3410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c3107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c3107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c31067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb3vnjo61                        0x0000557072e30493 <unavailable> + 5267

    5    libc.so.6                          0x00002ad3c35fc460 __libc_start_main +
    245

    6    tmpb3vnjo61                        0x0000557072e300f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq8k2w0nh/tmpq8k2w0nh.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e1dacfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e1d7c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e1d7c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e1d7c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq8k2w0nh                        0x0000559783d3c623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e1dcbb460 __libc_start_main +
    245

    6    tmpq8k2w0nh                        0x0000559783d3c289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = String(N, radix: 2)\n    var sum = 0\n    for\
    \ char in binary.characters {\n        sum += Int(String(char))!\n    }\n    return\
    \ String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmptqpux1w7.swift:12:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in binary.characters {\n                 \
    \      ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift\
    \ 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmptqpux1w7.swift:10:9:\
    \ warning: variable 'binary' was never mutated; consider changing to 'let' constant\n\
    \    var binary = String(N, radix: 2)\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwxsfauhr/tmpwxsfauhr.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b627d074c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b627cd6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b627cd6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b627cd6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwxsfauhr                        0x0000562d8d648493 <unavailable> + 5267

    5    libc.so.6                          0x00002b627d260460 __libc_start_main +
    245

    6    tmpwxsfauhr                        0x0000562d8d6480f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplmxb6bz1/tmplmxb6bz1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34b4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34b4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34b4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34b4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplmxb6bz1                        0x000055ed55f04493 <unavailable> + 5267

    5    libc.so.6                          0x00002b34b4fb0460 __libc_start_main +
    245

    6    tmplmxb6bz1                        0x000055ed55f040f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplmxb6bz1/tmplmxb6bz1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34b4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34b4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34b4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34b4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplmxb6bz1                        0x000055ed55f04493 <unavailable> + 5267

    5    libc.so.6                          0x00002b34b4fb0460 __libc_start_main +
    245

    6    tmplmxb6bz1                        0x000055ed55f040f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result += String(N % 2)\n        N /= 2\n    }\n    return String(result.reversed())\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp7u5ynddk/tmp7u5ynddk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a32824c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a3251bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0a3251b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0a3251a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7u5ynddk                        0x00005580689f1673 <unavailable> + 5747

    5    libc.so.6                          0x00002b0a32a10460 __libc_start_main +
    245

    6    tmp7u5ynddk                        0x00005580689f12d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var number = N\n    while number > 0\
    \ {\n        binary = String(number % 2) + binary\n        number /= 2\n    }\n\
    \    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp5qf_1hhe/tmp5qf_1hhe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b80ab9b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b80ab6aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b80ab6aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b80ab6a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5qf_1hhe                        0x000055dac6d55493 <unavailable> + 5267

    5    libc.so.6                          0x00002b80abb9f460 __libc_start_main +
    245

    6    tmp5qf_1hhe                        0x000055dac6d550f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var number = N\n    while number > 0\
    \ {\n        binary = String(number % 2) + binary\n        number /= 2\n    }\n\
    \    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp5qf_1hhe/tmp5qf_1hhe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b80ab9b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b80ab6aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b80ab6aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b80ab6a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5qf_1hhe                        0x000055dac6d55493 <unavailable> + 5267

    5    libc.so.6                          0x00002b80abb9f460 __libc_start_main +
    245

    6    tmp5qf_1hhe                        0x000055dac6d550f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwxsfauhr/tmpwxsfauhr.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b627d074c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b627cd6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b627cd6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b627cd6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwxsfauhr                        0x0000562d8d648493 <unavailable> + 5267

    5    libc.so.6                          0x00002b627d260460 __libc_start_main +
    245

    6    tmpwxsfauhr                        0x0000562d8d6480f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplmxb6bz1/tmplmxb6bz1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34b4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34b4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34b4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34b4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplmxb6bz1                        0x000055ed55f04493 <unavailable> + 5267

    5    libc.so.6                          0x00002b34b4fb0460 __libc_start_main +
    245

    6    tmplmxb6bz1                        0x000055ed55f040f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq8k2w0nh/tmpq8k2w0nh.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e1dacfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e1d7c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e1d7c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e1d7c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq8k2w0nh                        0x0000559783d3c623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e1dcbb460 __libc_start_main +
    245

    6    tmpq8k2w0nh                        0x0000559783d3c289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplmxb6bz1/tmplmxb6bz1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34b4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34b4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34b4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34b4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplmxb6bz1                        0x000055ed55f04493 <unavailable> + 5267

    5    libc.so.6                          0x00002b34b4fb0460 __libc_start_main +
    245

    6    tmplmxb6bz1                        0x000055ed55f040f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result.append(String(n % 2))\n        n /= 2\n    }\n    return String(result.reversed())\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwes9xhka/tmpwes9xhka.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12ebd3ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12eba35b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12eba35988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12eba347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwes9xhka                        0x00005583893a6673 <unavailable> + 5747

    5    libc.so.6                          0x00002b12ebf2a460 __libc_start_main +
    245

    6    tmpwes9xhka                        0x00005583893a62d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var sum = 0\n    var N = N\n    while N > 0 {\n        sum\
    \ += N % 2\n        N /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmp8iqmb0qx/tmp8iqmb0qx.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad7d1979c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad7d1670b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad7d1670988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad7d166f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8iqmb0qx                        0x000055cb0604e433 <unavailable> + 5171

    5    libc.so.6                          0x00002ad7d1b65460 __libc_start_main +
    245

    6    tmp8iqmb0qx                        0x000055cb0604e099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq8k2w0nh/tmpq8k2w0nh.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e1dacfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e1d7c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e1d7c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e1d7c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq8k2w0nh                        0x0000559783d3c623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e1dcbb460 __libc_start_main +
    245

    6    tmpq8k2w0nh                        0x0000559783d3c289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var number = N\n    var result = \"\"\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp83w79h_w/tmp83w79h_w.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2eabf82c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2eabc79b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2eabc79988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2eabc787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83w79h_w                        0x0000564215e17493 <unavailable> + 5267

    5    libc.so.6                          0x00002b2eac16e460 __libc_start_main +
    245

    6    tmp83w79h_w                        0x0000564215e170f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplmxb6bz1/tmplmxb6bz1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34b4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34b4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34b4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34b4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplmxb6bz1                        0x000055ed55f04493 <unavailable> + 5267

    5    libc.so.6                          0x00002b34b4fb0460 __libc_start_main +
    245

    6    tmplmxb6bz1                        0x000055ed55f040f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwxsfauhr/tmpwxsfauhr.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b627d074c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b627cd6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b627cd6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b627cd6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwxsfauhr                        0x0000562d8d648493 <unavailable> + 5267

    5    libc.so.6                          0x00002b627d260460 __libc_start_main +
    245

    6    tmpwxsfauhr                        0x0000562d8d6480f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary = String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmftid3p5/tmpmftid3p5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f72e55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f72b4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f72b4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f72b4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmftid3p5                        0x0000558d58db6493 <unavailable> + 5267

    5    libc.so.6                          0x00002b3f73041460 __libc_start_main +
    245

    6    tmpmftid3p5                        0x0000558d58db60f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var sum = 0\n    var N = N\n    while N > 0 {\n        sum\
    \ += N % 2\n        N /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmp8iqmb0qx/tmp8iqmb0qx.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad7d1979c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad7d1670b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad7d1670988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad7d166f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8iqmb0qx                        0x000055cb0604e433 <unavailable> + 5171

    5    libc.so.6                          0x00002ad7d1b65460 __libc_start_main +
    245

    6    tmp8iqmb0qx                        0x000055cb0604e099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   binary += String(n % 2)\n        n /= 2\n    }\n    return String(binary.reversed())\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpscarvxpi/tmpscarvxpi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b975fdbec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b975fab5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b975fab5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b975fab47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpscarvxpi                        0x0000557fc73e7673 <unavailable> + 5747

    5    libc.so.6                          0x00002b975ffaa460 __libc_start_main +
    245

    6    tmpscarvxpi                        0x0000557fc73e72d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n     \
    \   result = String(N % 2) + result\n        N /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpa3k4yafi/tmpa3k4yafi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a10cb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a109afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a109af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a109ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa3k4yafi                        0x000055e15f3bb493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7a10ea4460 __libc_start_main +
    245

    6    tmpa3k4yafi                        0x000055e15f3bb0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var num = N\n    while num > 0 {\n \
    \       result = String(num % 2) + result\n        num /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpb3vnjo61/tmpb3vnjo61.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c3410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c3107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c3107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c31067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb3vnjo61                        0x0000557072e30493 <unavailable> + 5267

    5    libc.so.6                          0x00002ad3c35fc460 __libc_start_main +
    245

    6    tmpb3vnjo61                        0x0000557072e300f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpeq9aghk6/tmpeq9aghk6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab013c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab01398db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab01398d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab01398c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq9aghk6                        0x0000555689282383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab013e82460 __libc_start_main +
    245

    6    tmpeq9aghk6                        0x0000555689281fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var number = N\n    while number > 0\
    \ {\n        result = String(number % 2) + result\n        number /= 2\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpe81q6z0n/tmpe81q6z0n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae854160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae853e57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae853e57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae853e567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe81q6z0n                        0x00005647805d0493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae85434c460 __libc_start_main +
    245

    6    tmpe81q6z0n                        0x00005647805d00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var sum = 0\n    var n = N\n    while n > 0 {\n        sum\
    \ += n % 2\n        n /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2mrvl3k8/tmp2mrvl3k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aee24f83c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee24c7ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aee24c7a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aee24c797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2mrvl3k8                        0x0000555f43b37433 <unavailable> + 5171

    5    libc.so.6                          0x00002aee2516f460 __libc_start_main +
    245

    6    tmp2mrvl3k8                        0x0000555f43b37099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264\
    \ N \u2264 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int)\
    \ -> String {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n     \
    \   result = String(n % 2) + result\n        n /= 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp88yp1004/tmp88yp1004.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba70995cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba709653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba709653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7096527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88yp1004                        0x000055bb4c290493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba709b48460 __libc_start_main +
    245

    6    tmp88yp1004                        0x000055bb4c2900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013954

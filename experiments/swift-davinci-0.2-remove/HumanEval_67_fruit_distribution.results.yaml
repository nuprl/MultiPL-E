language: swift
name: HumanEval_67_fruit_distribution
results:
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcrpedd2d/tmpcrpedd2d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada8d7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada8d4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada8d4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada8d4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrpedd2d                        0x000055681f4d2419 <unavailable> + 5145

    5    libc.so.6                          0x00002ada8d9cf460 __libc_start_main +
    245

    6    tmpcrpedd2d                        0x000055681f4d2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\n\
    \        else if i == \"o\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp7o32za_1/tmp7o32za_1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac1acab0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac1ac7a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac1ac7a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac1ac7a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7o32za_1                        0x000055bd60792419 <unavailable> + 5145

    5    libc.so.6                          0x00002ac1acc9c460 __libc_start_main +
    245

    6    tmp7o32za_1                        0x000055bd60792099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \",\")\n    let\
    \ total = fruits.reduce(0) { $0 + Int($1)! }\n    return n - total\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmp4e3zl9kr.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \",\")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcrpedd2d/tmpcrpedd2d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada8d7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada8d4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada8d4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada8d4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrpedd2d                        0x000055681f4d2419 <unavailable> + 5145

    5    libc.so.6                          0x00002ada8d9cf460 __libc_start_main +
    245

    6    tmpcrpedd2d                        0x000055681f4d2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \":\")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpcf06nddp.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \":\")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\n\
    \        else if i == \"o\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp7o32za_1/tmp7o32za_1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac1acab0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac1ac7a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac1ac7a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac1ac7a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7o32za_1                        0x000055bd60792419 <unavailable> + 5145

    5    libc.so.6                          0x00002ac1acc9c460 __libc_start_main +
    245

    6    tmp7o32za_1                        0x000055bd60792099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var result = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   result = n - apple - orange\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpkc18izqg/tmpkc18izqg.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b41e1585c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b41e127cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b41e127c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b41e127b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkc18izqg                        0x0000558fa5701419 <unavailable> + 5145

    5    libc.so.6                          0x00002b41e1771460 __libc_start_main +
    245

    6    tmpkc18izqg                        0x0000558fa5701099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruit = s.components(separatedBy: \" \")\n    let\
    \ apple = Int(fruit[0])!\n    let orange = Int(fruit[1])!\n    let mango = n -\
    \ apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpbe6x_ibg.swift:9:19: error: value of type 'String' has no member\
    \ 'components'\n    let fruit = s.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcrpedd2d/tmpcrpedd2d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada8d7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada8d4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada8d4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada8d4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrpedd2d                        0x000055681f4d2419 <unavailable> + 5145

    5    libc.so.6                          0x00002ada8d9cf460 __libc_start_main +
    245

    6    tmpcrpedd2d                        0x000055681f4d2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\n\
    \        else if i == \"O\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpoejw2gon/tmpoejw2gon.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aac39679c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aac39370b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aac39370988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aac3936f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoejw2gon                        0x000055779a138419 <unavailable> + 5145

    5    libc.so.6                          0x00002aac39865460 __libc_start_main +
    245

    6    tmpoejw2gon                        0x000055779a138099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \",\")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpzeshqubp.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \",\")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var oranges = 0\n    var apples = 0\n    var mango = 0\n\
    \    for i in s {\n        if i == \"o\" {\n            oranges += 1\n       \
    \ }\n        else if i == \"a\" {\n            apples += 1\n        }\n    }\n\
    \    mango = n - (oranges + apples)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp771pyhzq/tmp771pyhzq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b82eab01c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b82ea7f8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b82ea7f8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b82ea7f77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp771pyhzq                        0x0000558a7f3b9419 <unavailable> + 5145

    5    libc.so.6                          0x00002b82eaced460 __libc_start_main +
    245

    6    tmp771pyhzq                        0x0000558a7f3b9099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var orange = 0\n    var apple = 0\n\
    \    for char in s {\n        if char == \"o\" {\n            orange += 1\n  \
    \      } else if char == \"a\" {\n            apple += 1\n        }\n    }\n \
    \   mango = n - orange - apple\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpmeim2507/tmpmeim2507.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad5fdfeec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad5fdce5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad5fdce5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad5fdce47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmeim2507                        0x000055bb90535419 <unavailable> + 5145

    5    libc.so.6                          0x00002ad5fe1da460 __libc_start_main +
    245

    6    tmpmeim2507                        0x000055bb90535099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - (apple + orange)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvdpb9ncx/tmpvdpb9ncx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d51a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d51774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d51774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d517737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdpb9ncx                        0x000055ef75929419 <unavailable> + 5145

    5    libc.so.6                          0x00002b1d51c69460 __libc_start_main +
    245

    6    tmpvdpb9ncx                        0x000055ef75929099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\n\
    \        else if i == \"o\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp74ybccv1/tmp74ybccv1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12e0865c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12e055cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12e055c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12e055b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp74ybccv1                        0x00005595c3e61419 <unavailable> + 5145

    5    libc.so.6                          0x00002b12e0a51460 __libc_start_main +
    245

    6    tmp74ybccv1                        0x00005595c3e61099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    var i = 0\n    while i < s.count {\n        if s[i] == \"a\" {\n        \
    \    apple += 1\n        } else if s[i] == \"o\" {\n            orange += 1\n\
    \        }\n        i += 1\n    }\n    mango = n - apple - orange\n    return\
    \ mango\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s: \"\
    5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmp04xhw0_s.swift:14:12: error: 'subscript(_:)' is unavailable: cannot\
    \ subscript String with an Int, use a String.Index instead.\n        if s[i] ==\
    \ \"a\" {\n           ^~~~\nSwift.String:3:12: note: 'subscript(_:)' has been\
    \ explicitly marked unavailable here\n    public subscript(i: Int) -> Character\
    \ { get }\n           ^\n/tmp/tmp04xhw0_s.swift:16:19: error: 'subscript(_:)'\
    \ is unavailable: cannot subscript String with an Int, use a String.Index instead.\n\
    \        } else if s[i] == \"o\" {\n                  ^~~~\nSwift.String:3:12:\
    \ note: 'subscript(_:)' has been explicitly marked unavailable here\n    public\
    \ subscript(i: Int) -> Character { get }\n           ^\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcrpedd2d/tmpcrpedd2d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada8d7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada8d4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada8d4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada8d4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrpedd2d                        0x000055681f4d2419 <unavailable> + 5145

    5    libc.so.6                          0x00002ada8d9cf460 __libc_start_main +
    245

    6    tmpcrpedd2d                        0x000055681f4d2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"A\" {\n            apple += 1\n   \
    \     } else if char == \"O\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpctcqjpxl/tmpctcqjpxl.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b407a8f7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b407a5eeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b407a5ee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b407a5ed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpctcqjpxl                        0x000055cb09628419 <unavailable> + 5145

    5    libc.so.6                          0x00002b407aae3460 __libc_start_main +
    245

    6    tmpctcqjpxl                        0x000055cb09628099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ totalFruits = n\n    let totalApples = Int(fruits[0])!\n    let totalOranges\
    \ = Int(fruits[1])!\n    let totalMangoes = totalFruits - totalApples - totalOranges\n\
    \    return totalMangoes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpu1i0y9y6.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \",\")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpzeshqubp.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \",\")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - (apple + orange)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvdpb9ncx/tmpvdpb9ncx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d51a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d51774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d51774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d517737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdpb9ncx                        0x000055ef75929419 <unavailable> + 5145

    5    libc.so.6                          0x00002b1d51c69460 __libc_start_main +
    245

    6    tmpvdpb9ncx                        0x000055ef75929099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcrpedd2d/tmpcrpedd2d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada8d7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada8d4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada8d4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada8d4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrpedd2d                        0x000055681f4d2419 <unavailable> + 5145

    5    libc.so.6                          0x00002ada8d9cf460 __libc_start_main +
    245

    6    tmpcrpedd2d                        0x000055681f4d2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var apple_count = 0\n    var\
    \ orange_count = 0\n    for i in s {\n        if i == \"a\" {\n            apple_count\
    \ += 1\n        } else if i == \"o\" {\n            orange_count += 1\n      \
    \  }\n    }\n    mango_count = n - apple_count - orange_count\n    return mango_count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmprzpt78o1/tmprzpt78o1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba18e19bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba18de92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba18de92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba18de917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprzpt78o1                        0x00005629fe4c6419 <unavailable> + 5145

    5    libc.so.6                          0x00002ba18e387460 __libc_start_main +
    245

    6    tmprzpt78o1                        0x00005629fe4c6099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpx4uwpkxl.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let s = s.split(separator: \" \")\n    let a = Int(s[0])!\n\
    \    let o = Int(s[1])!\n    return n - a - o\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpy8qdegnz/tmpy8qdegnz.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b53c7934c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b53c762b561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b53c762b286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b53c762b13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b53c762abb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpy8qdegnz                        0x000055d580ee9eaa <unavailable> + 7850

    6    tmpy8qdegnz                        0x000055d580ee95fb <unavailable> + 5627

    7    libc.so.6                          0x00002b53c7b20460 __libc_start_main +
    245

    8    tmpy8qdegnz                        0x000055d580ee92f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - (apple + orange)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvdpb9ncx/tmpvdpb9ncx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d51a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d51774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d51774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d517737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdpb9ncx                        0x000055ef75929419 <unavailable> + 5145

    5    libc.so.6                          0x00002b1d51c69460 __libc_start_main +
    245

    6    tmpvdpb9ncx                        0x000055ef75929099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for c in s {\n        if c == \"a\" {\n            apple += 1\n        }\
    \ else if c == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmphhtgdhhp/tmphhtgdhhp.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e564a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e561a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e561a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e5619f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphhtgdhhp                        0x0000564213813419 <unavailable> + 5145

    5    libc.so.6                          0x00002b5e56695460 __libc_start_main +
    245

    6    tmphhtgdhhp                        0x0000564213813099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let s = s.split(separator: \" \")\n    let a = Int(s[0])!\n\
    \    let o = Int(s[1])!\n    return n - a - o\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpy8qdegnz/tmpy8qdegnz.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b53c7934c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b53c762b561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b53c762b286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b53c762b13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b53c762abb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpy8qdegnz                        0x000055d580ee9eaa <unavailable> + 7850

    6    tmpy8qdegnz                        0x000055d580ee95fb <unavailable> + 5627

    7    libc.so.6                          0x00002b53c7b20460 __libc_start_main +
    245

    8    tmpy8qdegnz                        0x000055d580ee92f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var oranges = 0\n    var apples = 0\n    for c in s {\n\
    \        if c == \"o\" {\n            oranges += 1\n        } else if c == \"\
    a\" {\n            apples += 1\n        }\n    }\n    return n - oranges - apples\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpu3oxcvg3/tmpu3oxcvg3.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45bca0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45bc704b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45bc704988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45bc7037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu3oxcvg3                        0x0000561315937419 <unavailable> + 5145

    5    libc.so.6                          0x00002b45bcbf9460 __libc_start_main +
    245

    6    tmpu3oxcvg3                        0x0000561315937099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var apple_count = 0\n    var\
    \ orange_count = 0\n    for char in s {\n        if char == \"A\" {\n        \
    \    apple_count += 1\n        } else if char == \"O\" {\n            orange_count\
    \ += 1\n        }\n    }\n    mango_count = n - apple_count - orange_count\n \
    \   return mango_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpx9rz51qf/tmpx9rz51qf.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afedf48ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afedf181b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afedf181988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afedf1807b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx9rz51qf                        0x00005557f536e419 <unavailable> + 5145

    5    libc.so.6                          0x00002afedf676460 __libc_start_main +
    245

    6    tmpx9rz51qf                        0x00005557f536e099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\n\
    \        else if i == \"o\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp7o32za_1/tmp7o32za_1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac1acab0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac1ac7a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac1ac7a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac1ac7a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7o32za_1                        0x000055bd60792419 <unavailable> + 5145

    5    libc.so.6                          0x00002ac1acc9c460 __libc_start_main +
    245

    6    tmp7o32za_1                        0x000055bd60792099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\n\
    \        else if i == \"o\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp7o32za_1/tmp7o32za_1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac1acab0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac1ac7a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac1ac7a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac1ac7a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7o32za_1                        0x000055bd60792419 <unavailable> + 5145

    5    libc.so.6                          0x00002ac1acc9c460 __libc_start_main +
    245

    6    tmp7o32za_1                        0x000055bd60792099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - (apple + orange)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvdpb9ncx/tmpvdpb9ncx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d51a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d51774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d51774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d517737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdpb9ncx                        0x000055ef75929419 <unavailable> + 5145

    5    libc.so.6                          0x00002b1d51c69460 __libc_start_main +
    245

    6    tmpvdpb9ncx                        0x000055ef75929099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - (apple + orange)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvdpb9ncx/tmpvdpb9ncx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d51a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d51774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d51774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d517737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdpb9ncx                        0x000055ef75929419 <unavailable> + 5145

    5    libc.so.6                          0x00002b1d51c69460 __libc_start_main +
    245

    6    tmpvdpb9ncx                        0x000055ef75929099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = n\n    for c in s {\n        if c == \"a\"\
    \ || c == \"o\" {\n            mango -= 1\n        }\n    }\n    return mango\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp869lx77_/tmp869lx77_.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aff49919c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aff49610b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aff49610988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aff4960f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp869lx77_                        0x0000558c33c81419 <unavailable> + 5145

    5    libc.so.6                          0x00002aff49b05460 __libc_start_main +
    245

    6    tmp869lx77_                        0x0000558c33c81099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    var sum = 0\n    for i in s {\n        if i == \"a\" {\n            apple\
    \ += 1\n        } else if i == \"o\" {\n            orange += 1\n        }\n \
    \   }\n    sum = apple + orange\n    mango = n - sum\n    return mango\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmplqg9cji0/tmplqg9cji0.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0bbdc88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0bbd97fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0bbd97f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0bbd97e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplqg9cji0                        0x000055882087e419 <unavailable> + 5145

    5    libc.so.6                          0x00002b0bbde74460 __libc_start_main +
    245

    6    tmplqg9cji0                        0x000055882087e099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var orange = 0\n    var apple = 0\n\
    \    for char in s {\n        if char == \"o\" {\n            orange += 1\n  \
    \      } else if char == \"a\" {\n            apple += 1\n        }\n    }\n \
    \   mango = n - orange - apple\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpmeim2507/tmpmeim2507.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad5fdfeec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad5fdce5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad5fdce5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad5fdce47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmeim2507                        0x000055bb90535419 <unavailable> + 5145

    5    libc.so.6                          0x00002ad5fe1da460 __libc_start_main +
    245

    6    tmpmeim2507                        0x000055bb90535099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var orange = 0\n    var apple = 0\n\
    \    for i in s {\n        if i == \"o\" {\n            orange += 1\n        }\
    \ else if i == \"a\" {\n            apple += 1\n        }\n    }\n    mango =\
    \ n - orange - apple\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpgzbek_so/tmpgzbek_so.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7121771c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7121468b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7121468988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b71214677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgzbek_so                        0x000056099912a419 <unavailable> + 5145

    5    libc.so.6                          0x00002b712195d460 __libc_start_main +
    245

    6    tmpgzbek_so                        0x000056099912a099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ oranges = Int(fruits[0])!\n    let apples = Int(fruits[1])!\n    return n -\
    \ oranges - apples\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmp3_ad51ox.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - (apple + orange)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvdpb9ncx/tmpvdpb9ncx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d51a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d51774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d51774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d517737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdpb9ncx                        0x000055ef75929419 <unavailable> + 5145

    5    libc.so.6                          0x00002b1d51c69460 __libc_start_main +
    245

    6    tmpvdpb9ncx                        0x000055ef75929099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var count = 0\n    var mango = 0\n    for i in s {\n \
    \       if i == \"a\" || i == \"o\" {\n            count += 1\n        }\n   \
    \ }\n    mango = n - count\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp9nyio7ug/tmp9nyio7ug.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5614e47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5614b3eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5614b3e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5614b3d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9nyio7ug                        0x00005586dbc94419 <unavailable> + 5145

    5    libc.so.6                          0x00002b5615033460 __libc_start_main +
    245

    6    tmp9nyio7ug                        0x00005586dbc94099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcrpedd2d/tmpcrpedd2d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada8d7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada8d4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada8d4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada8d4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrpedd2d                        0x000055681f4d2419 <unavailable> + 5145

    5    libc.so.6                          0x00002ada8d9cf460 __libc_start_main +
    245

    6    tmpcrpedd2d                        0x000055681f4d2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var oranges = 0\n    var apples = 0\n    var mango = 0\n\
    \    for char in s {\n        if char == \"o\" {\n            oranges += 1\n \
    \       } else if char == \"a\" {\n            apples += 1\n        }\n    }\n\
    \    mango = n - oranges - apples\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpianh5j0p/tmpianh5j0p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17f9efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17f9bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17f9bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17f9bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpianh5j0p                        0x000055e771f92419 <unavailable> + 5145

    5    libc.so.6                          0x00002b17fa0ea460 __libc_start_main +
    245

    6    tmpianh5j0p                        0x000055e771f92099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - (apple + orange)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvdpb9ncx/tmpvdpb9ncx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d51a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d51774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d51774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d517737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdpb9ncx                        0x000055ef75929419 <unavailable> + 5145

    5    libc.so.6                          0x00002b1d51c69460 __libc_start_main +
    245

    6    tmpvdpb9ncx                        0x000055ef75929099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpx4uwpkxl.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let s = s.components(separatedBy: \" \")\n    let a =\
    \ Int(s[0])!\n    let o = Int(s[1])!\n    return n - a - o\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmptim_r31n.swift:9:15: error: value of type 'String' has no member\
    \ 'components'\n    let s = s.components(separatedBy: \" \")\n            ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \",\")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpzeshqubp.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \",\")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruit = s.components(separatedBy: \",\")\n    let\
    \ apple = Int(fruit[0])\n    let orange = Int(fruit[1])\n    let mango = n - (apple!\
    \ + orange!)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpxtfhwex3.swift:9:19: error: value of type 'String' has no member\
    \ 'components'\n    let fruit = s.components(separatedBy: \",\")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979621
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpx4uwpkxl.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var result = 0\n    var apples = 0\n    var oranges =\
    \ 0\n    for char in s {\n        if char == \"a\" {\n            apples += 1\n\
    \        } else if char == \"o\" {\n            oranges += 1\n        }\n    }\n\
    \    result = n - apples - oranges\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmprflpe83a/tmprflpe83a.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b966e548c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b966e23fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b966e23f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b966e23e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprflpe83a                        0x00005605672d7419 <unavailable> + 5145

    5    libc.so.6                          0x00002b966e734460 __libc_start_main +
    245

    6    tmprflpe83a                        0x00005605672d7099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mangoes = 0\n    var apples = 0\n    var oranges =\
    \ 0\n    for i in s {\n        if i == \"a\" {\n            apples += 1\n    \
    \    } else if i == \"o\" {\n            oranges += 1\n        }\n    }\n    mangoes\
    \ = n - apples - oranges\n    return mangoes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmph6no3u75/tmph6no3u75.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4197e0cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4197b03b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4197b03988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4197b027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph6no3u75                        0x0000556f93496419 <unavailable> + 5145

    5    libc.so.6                          0x00002b4197ff8460 __libc_start_main +
    245

    6    tmph6no3u75                        0x0000556f93496099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let arr = s.split(separator: \" \")\n    let apples =\
    \ Int(arr[0])!\n    let oranges = Int(arr[1])!\n    return n - apples - oranges\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp6l8l0fxa/tmp6l8l0fxa.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b81139d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81136cf561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b81136cf286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b81136cf13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b81136cebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp6l8l0fxa                        0x000055c2f5d43eaa <unavailable> + 7850

    6    tmp6l8l0fxa                        0x000055c2f5d435fb <unavailable> + 5627

    7    libc.so.6                          0x00002b8113bc4460 __libc_start_main +
    245

    8    tmp6l8l0fxa                        0x000055c2f5d432f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var count = 0\n    var mango = 0\n    for i in s {\n \
    \       if i == \"A\" || i == \"O\" {\n            count += 1\n        }\n   \
    \ }\n    mango = n - count\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpgz_8cbz9/tmpgz_8cbz9.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba19d0f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba19cde8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba19cde8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba19cde77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz_8cbz9                        0x0000563bde41c419 <unavailable> + 5145

    5    libc.so.6                          0x00002ba19d2dd460 __libc_start_main +
    245

    6    tmpgz_8cbz9                        0x0000563bde41c099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpx4uwpkxl.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \",\")\n    let\
    \ totalFruits = n - fruits.reduce(0, {$0 + Int($1)!})\n    return totalFruits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpwnovozww.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \",\")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\n\
    \        else if i == \"o\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp7o32za_1/tmp7o32za_1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac1acab0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac1ac7a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac1ac7a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac1ac7a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7o32za_1                        0x000055bd60792419 <unavailable> + 5145

    5    libc.so.6                          0x00002ac1acc9c460 __libc_start_main +
    245

    6    tmp7o32za_1                        0x000055bd60792099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var orange = 0\n    var apple = 0\n\
    \    for char in s {\n        if char == \"o\" {\n            orange += 1\n  \
    \      } else if char == \"a\" {\n            apple += 1\n        }\n    }\n \
    \   mango = n - orange - apple\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpmeim2507/tmpmeim2507.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad5fdfeec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad5fdce5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad5fdce5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad5fdce47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmeim2507                        0x000055bb90535419 <unavailable> + 5145

    5    libc.so.6                          0x00002ad5fe1da460 __libc_start_main +
    245

    6    tmpmeim2507                        0x000055bb90535099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpx4uwpkxl.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = n\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango -= apple + orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpdaue_chz/tmpdaue_chz.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b572aee3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b572abdab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b572abda988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b572abd97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdaue_chz                        0x000055e381a54419 <unavailable> + 5145

    5    libc.so.6                          0x00002b572b0cf460 __libc_start_main +
    245

    6    tmpdaue_chz                        0x000055e381a54099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - (apple + orange)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvdpb9ncx/tmpvdpb9ncx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d51a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d51774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d51774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d517737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdpb9ncx                        0x000055ef75929419 <unavailable> + 5145

    5    libc.so.6                          0x00002b1d51c69460 __libc_start_main +
    245

    6    tmpvdpb9ncx                        0x000055ef75929099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var total_fruits = 0\n    var total_apples = 0\n    var\
    \ total_oranges = 0\n    for char in s {\n        if char == \"a\" {\n       \
    \     total_apples += 1\n        } else if char == \"o\" {\n            total_oranges\
    \ += 1\n        }\n    }\n    total_fruits = n - (total_apples + total_oranges)\n\
    \    return total_fruits\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmprodye545/tmprodye545.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8ae9da8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ae9a9fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ae9a9f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ae9a9e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprodye545                        0x000055dd861e8419 <unavailable> + 5145

    5    libc.so.6                          0x00002b8ae9f94460 __libc_start_main +
    245

    6    tmprodye545                        0x000055dd861e8099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \",\")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpzeshqubp.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \",\")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\n\
    \        else if i == \"o\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp74ybccv1/tmp74ybccv1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12e0865c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12e055cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12e055c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12e055b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp74ybccv1                        0x00005595c3e61419 <unavailable> + 5145

    5    libc.so.6                          0x00002b12e0a51460 __libc_start_main +
    245

    6    tmp74ybccv1                        0x00005595c3e61099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ total = n - (Int(fruits[0])! + Int(fruits[1])!)\n    return total\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmplui3cv_5.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var oranges = 0\n    var apples = 0\n    var mango = 0\n\
    \    for char in s {\n        if char == \"o\" {\n            oranges += 1\n \
    \       } else if char == \"a\" {\n            apples += 1\n        }\n    }\n\
    \    mango = n - oranges - apples\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpianh5j0p/tmpianh5j0p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17f9efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17f9bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17f9bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17f9bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpianh5j0p                        0x000055e771f92419 <unavailable> + 5145

    5    libc.so.6                          0x00002b17fa0ea460 __libc_start_main +
    245

    6    tmpianh5j0p                        0x000055e771f92099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - apple - orange\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpr6_1u1de/tmpr6_1u1de.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12b0805c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12b04fcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12b04fc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12b04fb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6_1u1de                        0x000055980206a419 <unavailable> + 5145

    5    libc.so.6                          0x00002b12b09f1460 __libc_start_main +
    245

    6    tmpr6_1u1de                        0x000055980206a099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpx4uwpkxl.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - apple - orange\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpr6_1u1de/tmpr6_1u1de.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12b0805c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12b04fcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12b04fc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12b04fb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6_1u1de                        0x000055980206a419 <unavailable> + 5145

    5    libc.so.6                          0x00002b12b09f1460 __libc_start_main +
    245

    6    tmpr6_1u1de                        0x000055980206a099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var orange_count = 0\n    var\
    \ apple_count = 0\n    for char in s {\n        if char == \"A\" {\n         \
    \   apple_count += 1\n        } else if char == \"O\" {\n            orange_count\
    \ += 1\n        }\n    }\n    mango_count = n - apple_count - orange_count\n \
    \   return mango_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp0591zev6/tmp0591zev6.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3dd5017c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3dd4d0eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3dd4d0e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3dd4d0d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0591zev6                        0x0000558e8fc49419 <unavailable> + 5145

    5    libc.so.6                          0x00002b3dd5203460 __libc_start_main +
    245

    6    tmp0591zev6                        0x0000558e8fc49099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var apple_count = 0\n    var\
    \ orange_count = 0\n    for char in s {\n        if char == \"a\" {\n        \
    \    apple_count += 1\n        } else if char == \"o\" {\n            orange_count\
    \ += 1\n        }\n    }\n    mango_count = n - (apple_count + orange_count)\n\
    \    return mango_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp86d9eef4/tmp86d9eef4.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abf8c0e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abf8bde0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abf8bde0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abf8bddf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp86d9eef4                        0x0000560259341419 <unavailable> + 5145

    5    libc.so.6                          0x00002abf8c2d5460 __libc_start_main +
    245

    6    tmp86d9eef4                        0x0000560259341099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var orange_count = 0\n    var\
    \ apple_count = 0\n    for char in s {\n        if char == \"o\" {\n         \
    \   orange_count += 1\n        } else if char == \"a\" {\n            apple_count\
    \ += 1\n        }\n    }\n    mango_count = n - orange_count - apple_count\n \
    \   return mango_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp7avop7f0/tmp7avop7f0.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb0f63dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb0f334b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb0f334988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb0f3337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7avop7f0                        0x0000555807231419 <unavailable> + 5145

    5    libc.so.6                          0x00002acb0f829460 __libc_start_main +
    245

    6    tmp7avop7f0                        0x0000555807231099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let numOfApples\
    \ = Int(fruits[0])!\n    let numOfOranges = Int(fruits[1])!\n    return n - numOfApples\
    \ - numOfOranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp_hpbeu38/tmp_hpbeu38.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b0fd1cdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0fd19d3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0fd19d3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0fd19d313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0fd19d2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp_hpbeu38                        0x000055f6bee21eaa <unavailable> + 7850

    6    tmp_hpbeu38                        0x000055f6bee215fb <unavailable> + 5627

    7    libc.so.6                          0x00002b0fd1ec8460 __libc_start_main +
    245

    8    tmp_hpbeu38                        0x000055f6bee212f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"A\" {\n            apple += 1\n   \
    \     } else if char == \"O\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpctcqjpxl/tmpctcqjpxl.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b407a8f7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b407a5eeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b407a5ee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b407a5ed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpctcqjpxl                        0x000055cb09628419 <unavailable> + 5145

    5    libc.so.6                          0x00002b407aae3460 __libc_start_main +
    245

    6    tmpctcqjpxl                        0x000055cb09628099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcrpedd2d/tmpcrpedd2d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada8d7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada8d4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada8d4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada8d4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrpedd2d                        0x000055681f4d2419 <unavailable> + 5145

    5    libc.so.6                          0x00002ada8d9cf460 __libc_start_main +
    245

    6    tmpcrpedd2d                        0x000055681f4d2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let arr = s.split(separator: \" \")\n    let a = Int(arr[0])!\n\
    \    let o = Int(arr[1])!\n    return n - a - o\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp7iqy07wk/tmp7iqy07wk.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b6f049ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6f046c3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6f046c3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6f046c313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6f046c2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp7iqy07wk                        0x000055a5c848ceaa <unavailable> + 7850

    6    tmp7iqy07wk                        0x000055a5c848c5fb <unavailable> + 5627

    7    libc.so.6                          0x00002b6f04bb8460 __libc_start_main +
    245

    8    tmp7iqy07wk                        0x000055a5c848c2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\
    \ else if i == \"O\" {\n            orange += 1\n        } else {\n          \
    \  mango += 1\n        }\n    }\n    return n - (apple + orange)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvdpb9ncx/tmpvdpb9ncx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d51a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d51774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d51774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d517737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdpb9ncx                        0x000055ef75929419 <unavailable> + 5145

    5    libc.so.6                          0x00002b1d51c69460 __libc_start_main +
    245

    6    tmpvdpb9ncx                        0x000055ef75929099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var orange_count = 0\n    var\
    \ apple_count = 0\n    var mango_count_in_basket = 0\n    for char in s {\n  \
    \      if char == \"a\" {\n            apple_count += 1\n        } else if char\
    \ == \"o\" {\n            orange_count += 1\n        } else if char == \"m\" {\n\
    \            mango_count += 1\n        }\n    }\n    mango_count_in_basket = n\
    \ - (apple_count + orange_count)\n    return mango_count_in_basket\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpp15mcc9r/tmpp15mcc9r.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b192f4efc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b192f1e6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b192f1e6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b192f1e57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp15mcc9r                        0x0000563633143419 <unavailable> + 5145

    5    libc.so.6                          0x00002b192f6db460 __libc_start_main +
    245

    6    tmpp15mcc9r                        0x0000563633143099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\n\
    \        else if i == \"o\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp74ybccv1/tmp74ybccv1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12e0865c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12e055cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12e055c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12e055b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp74ybccv1                        0x00005595c3e61419 <unavailable> + 5145

    5    libc.so.6                          0x00002b12e0a51460 __libc_start_main +
    245

    6    tmp74ybccv1                        0x00005595c3e61099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var numberOfMangos = 0\n    var numberOfApples = 0\n \
    \   var numberOfOranges = 0\n    for char in s {\n        if char == \"a\" {\n\
    \            numberOfApples += 1\n        } else if char == \"o\" {\n        \
    \    numberOfOranges += 1\n        }\n    }\n    numberOfMangos = n - (numberOfApples\
    \ + numberOfOranges)\n    return numberOfMangos\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp2hjigwt_/tmp2hjigwt_.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adb3cce4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adb3c9dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adb3c9db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adb3c9da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2hjigwt_                        0x00005601716ef419 <unavailable> + 5145

    5    libc.so.6                          0x00002adb3ced0460 __libc_start_main +
    245

    6    tmp2hjigwt_                        0x00005601716ef099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\n\
    \        else if i == \"o\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp7o32za_1/tmp7o32za_1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac1acab0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac1ac7a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac1ac7a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac1ac7a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7o32za_1                        0x000055bd60792419 <unavailable> + 5145

    5    libc.so.6                          0x00002ac1acc9c460 __libc_start_main +
    245

    6    tmp7o32za_1                        0x000055bd60792099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let total\
    \ = fruits.reduce(0) { $0 + Int($1)! }\n    return n - total\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp6_5o1q8_/tmp6_5o1q8_.swift:10: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ad079585c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad07927c561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ad07927c286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ad07927c13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ad07927bbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp6_5o1q8_                        0x00005635c09a9ebb <unavailable> + 7867

    6    libswiftCore.so                    0x00002ad07938b410 Sequence.reduce<A>(_:_:)
    + 530

    7    tmp6_5o1q8_                        0x00005635c09a9c9a <unavailable> + 7322

    8    tmp6_5o1q8_                        0x00005635c09a962b <unavailable> + 5675

    9    libc.so.6                          0x00002ad079771460 __libc_start_main +
    245

    10   tmp6_5o1q8_                        0x00005635c09a9329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpx4uwpkxl.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ total = fruits.reduce(0, {$0 + Int($1)!})\n    return n - total\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmp8nlxsm11.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"A\" {\n            apple += 1\n        }\n\
    \        else if i == \"O\" {\n            orange += 1\n        }\n    }\n   \
    \ mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpoejw2gon/tmpoejw2gon.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aac39679c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aac39370b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aac39370988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aac3936f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoejw2gon                        0x000055779a138419 <unavailable> + 5145

    5    libc.so.6                          0x00002aac39865460 __libc_start_main +
    245

    6    tmpoejw2gon                        0x000055779a138099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = n\n    for c in s {\n        if c == \"a\"\
    \ || c == \"o\" {\n            mango -= 1\n        }\n    }\n    return mango\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp869lx77_/tmp869lx77_.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aff49919c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aff49610b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aff49610988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aff4960f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp869lx77_                        0x0000558c33c81419 <unavailable> + 5145

    5    libc.so.6                          0x00002aff49b05460 __libc_start_main +
    245

    6    tmp869lx77_                        0x0000558c33c81099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var apple_count = 0\n    var\
    \ orange_count = 0\n    for char in s {\n        if char == \"a\" {\n        \
    \    apple_count += 1\n        } else if char == \"o\" {\n            orange_count\
    \ += 1\n        }\n    }\n    mango_count = n - (apple_count + orange_count)\n\
    \    return mango_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp86d9eef4/tmp86d9eef4.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abf8c0e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abf8bde0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abf8bde0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abf8bddf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp86d9eef4                        0x0000560259341419 <unavailable> + 5145

    5    libc.so.6                          0x00002abf8c2d5460 __libc_start_main +
    245

    6    tmp86d9eef4                        0x0000560259341099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mangoes = 0\n    var oranges = 0\n    var apples =\
    \ 0\n    for char in s {\n        if char == \"a\" {\n            apples += 1\n\
    \        } else if char == \"o\" {\n            oranges += 1\n        }\n    }\n\
    \    mangoes = n - apples - oranges\n    return mangoes\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpifea6936/tmpifea6936.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b7b8f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b7b5ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b7b5eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b7b5ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpifea6936                        0x0000556d1cc42419 <unavailable> + 5145

    5    libc.so.6                          0x00002b7b7bae0460 __libc_start_main +
    245

    6    tmpifea6936                        0x0000556d1cc42099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var apple_count = 0\n    var\
    \ orange_count = 0\n    for char in s {\n        if char == \"A\" {\n        \
    \    apple_count += 1\n        } else if char == \"O\" {\n            orange_count\
    \ += 1\n        }\n    }\n    mango_count = n - (apple_count + orange_count)\n\
    \    return mango_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpchce9bxx/tmpchce9bxx.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad379cfac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3799f1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3799f1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3799f07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpchce9bxx                        0x000055e6a81fe419 <unavailable> + 5145

    5    libc.so.6                          0x00002ad379ee6460 __libc_start_main +
    245

    6    tmpchce9bxx                        0x000055e6a81fe099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcrpedd2d/tmpcrpedd2d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada8d7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada8d4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada8d4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada8d4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrpedd2d                        0x000055681f4d2419 <unavailable> + 5145

    5    libc.so.6                          0x00002ada8d9cf460 __libc_start_main +
    245

    6    tmpcrpedd2d                        0x000055681f4d2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.components(separatedBy: \" \")\n    let\
    \ apples = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n -\
    \ apples - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpx4uwpkxl.swift:9:20: error: value of type 'String' has no member\
    \ 'components'\n    let fruits = s.components(separatedBy: \" \")\n          \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let totalFruits\
    \ = fruits.reduce(0) { (result, fruit) -> Int in\n        return result + Int(fruit)!\n\
    \    }\n    return n - totalFruits\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmplybh523k/tmplybh523k.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b70b6565c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b70b625c561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b70b625c286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b70b625c13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b70b625bbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmplybh523k                        0x000055c208308ebb <unavailable> + 7867

    6    libswiftCore.so                    0x00002b70b636b410 Sequence.reduce<A>(_:_:)
    + 530

    7    tmplybh523k                        0x000055c208308c9a <unavailable> + 7322

    8    tmplybh523k                        0x000055c20830862b <unavailable> + 5675

    9    libc.so.6                          0x00002b70b6751460 __libc_start_main +
    245

    10   tmplybh523k                        0x000055c208308329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp62pzicwb/tmp62pzicwb.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaa0be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaa08dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaa08db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaa08da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62pzicwb                        0x000055f66d448419 <unavailable> + 5145

    5    libc.so.6                          0x00002aeaa0dd0460 __libc_start_main +
    245

    6    tmp62pzicwb                        0x000055f66d448099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let total_fruits\
    \ = n\n    let total_apples = Int(fruits[0])!\n    let total_oranges = Int(fruits[1])!\n\
    \    let total_mangoes = total_fruits - total_apples - total_oranges\n    return\
    \ total_mangoes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp4o2xstb9/tmp4o2xstb9.swift:12: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002af3ae90ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af3ae605561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002af3ae605286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002af3ae60513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002af3ae604bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp4o2xstb9                        0x000055ac8bcfeedb <unavailable> + 7899

    6    tmp4o2xstb9                        0x000055ac8bcfe5fb <unavailable> + 5627

    7    libc.so.6                          0x00002af3aeafa460 __libc_start_main +
    245

    8    tmp4o2xstb9                        0x000055ac8bcfe2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - apple - orange\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp4aclzxle/tmp4aclzxle.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b354cad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b354c7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b354c7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b354c7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4aclzxle                        0x000055c062330419 <unavailable> + 5145

    5    libc.so.6                          0x00002b354ccc2460 __libc_start_main +
    245

    6    tmp4aclzxle                        0x000055c062330099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for char in s {\n        if char == \"a\" {\n            apple += 1\n   \
    \     } else if char == \"o\" {\n            orange += 1\n        }\n    }\n \
    \   mango = n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcrpedd2d/tmpcrpedd2d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada8d7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada8d4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada8d4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada8d4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrpedd2d                        0x000055681f4d2419 <unavailable> + 5145

    5    libc.so.6                          0x00002ada8d9cf460 __libc_start_main +
    245

    6    tmpcrpedd2d                        0x000055681f4d2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango = 0\n    var apple = 0\n    var orange = 0\n\
    \    for i in s {\n        if i == \"a\" {\n            apple += 1\n        }\
    \ else if i == \"o\" {\n            orange += 1\n        }\n    }\n    mango =\
    \ n - (apple + orange)\n    return mango\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpt6tak7ku/tmpt6tak7ku.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02e77c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02e74bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02e74ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02e74b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt6tak7ku                        0x0000562b99071419 <unavailable> + 5145

    5    libc.so.6                          0x00002b02e79af460 __libc_start_main +
    245

    6    tmpt6tak7ku                        0x0000562b99071099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979620
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var orange_count = 0\n    var\
    \ apple_count = 0\n    var mango_count_string = \"\"\n    var orange_count_string\
    \ = \"\"\n    var apple_count_string = \"\"\n    var mango_count_string_array\
    \ = [Character]()\n    var orange_count_string_array = [Character]()\n    var\
    \ apple_count_string_array = [Character]()\n    var mango_count_string_array_reversed\
    \ = [Character]()\n    var orange_count_string_array_reversed = [Character]()\n\
    \    var apple_count_string_array_reversed = [Character]()\n    var s_array =\
    \ [Character]()\n    var s_array_reversed = [Character]()\n    s_array = Array(s)\n\
    \    s_array_reversed = s_array.reversed()\n    for i in 0...s_array.count-1 {\n\
    \        if s_array[i] == \"m\" {\n            mango_count_string_array.append(s_array[i])\n\
    \        }\n        if s_array[i] == \"o\" {\n            orange_count_string_array.append(s_array[i])\n\
    \        }\n        if s_array[i] == \"a\" {\n            apple_count_string_array.append(s_array[i])\n\
    \        }\n    }\n    mango_count_string_array_reversed = mango_count_string_array.reversed()\n\
    \    orange_count_string_array_reversed = orange_count_string_array.reversed()\n\
    \    apple_count_string_array_reversed = apple_count_string_array.reversed()\n\
    \    mango_count_string = String(mango_count_string_array_reversed)\n    orange_count_string\
    \ = String(orange_count_string_array_reversed)\n    apple_count_string = String(apple_count_string_array_reversed)\n\
    \    mango_count = Int(mango_count_string)!\n    orange_count = Int(orange_count_string)!\n\
    \    apple_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpi6h6gbg0.swift:44:5: warning: variable is unused\n    apple_count\n\
    \    ^~~~~~~~~~~\n/tmp/tmpi6h6gbg0.swift:9:9: warning: variable 'mango_count'\
    \ was written to, but never read\n    var mango_count = 0\n        ^\n/tmp/tmpi6h6gbg0.swift:10:9:\
    \ warning: variable 'orange_count' was written to, but never read\n    var orange_count\
    \ = 0\n        ^\n/tmp/tmpi6h6gbg0.swift:11:9: warning: variable 'apple_count'\
    \ was never mutated; consider changing to 'let' constant\n    var apple_count\
    \ = 0\n    ~~~ ^\n    let\n/tmp/tmpi6h6gbg0.swift:14:9: warning: variable 'apple_count_string'\
    \ was written to, but never read\n    var apple_count_string = \"\"\n        ^\n\
    /tmp/tmpi6h6gbg0.swift:22:9: warning: variable 's_array_reversed' was written\
    \ to, but never read\n    var s_array_reversed = [Character]()\n        ^\n/tmp/tmpi6h6gbg0.swift:44:5:\
    \ error: missing return in global function expected to return 'Int'\n    apple_count\n\
    \    ^\n/tmp/tmpi6h6gbg0.swift:44:5: note: did you mean to return the last expression?\n\
    \    apple_count\n    ^\n    return \n"
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    var mango_count = 0\n    var orange_count = 0\n    var\
    \ apple_count = 0\n    for char in s {\n        if char == \"o\" {\n         \
    \   orange_count += 1\n        } else if char == \"a\" {\n            apple_count\
    \ += 1\n        }\n    }\n    mango_count = n - orange_count - apple_count\n \
    \   return mango_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp7avop7f0/tmp7avop7f0.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb0f63dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb0f334b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb0f334988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb0f3337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7avop7f0                        0x0000555807231419 <unavailable> + 5145

    5    libc.so.6                          0x00002acb0f829460 __libc_start_main +
    245

    6    tmp7avop7f0                        0x0000555807231099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659979621
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\nfunc fruit_distribution(s: String,\
    \ n: Int) -> Int {\n    let fruits = s.split(separator: \" \")\n    let apples\
    \ = Int(fruits[0])!\n    let oranges = Int(fruits[1])!\n    return n - apples\
    \ - oranges\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpbhv6vgoe/tmpbhv6vgoe.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b246114ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460e41561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2460e41286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2460e4113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2460e40bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpbhv6vgoe                        0x000055b8cf658eaa <unavailable> + 7850

    6    tmpbhv6vgoe                        0x000055b8cf6585fb <unavailable> + 5627

    7    libc.so.6                          0x00002b2461336460 __libc_start_main +
    245

    8    tmpbhv6vgoe                        0x000055b8cf6582f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979620

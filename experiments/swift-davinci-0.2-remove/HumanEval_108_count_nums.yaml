name: HumanEval_108_count_nums
language: swift
prompt: "\n/// Write a function count_nums which takes an array of integers and returns\n\
  /// the number of elements which has a sum of digits > 0.\n/// If a number is negative,\
  \ then its first signed digit will be negative:\n/// e.g. -123 has signed digits\
  \ -1, 2, and 3.\nfunc count_nums(arr: [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(count_nums(arr: [] as [Int]) == 0)\nassert(count_nums(arr:\
  \ [-1, -2, 0]) == 0)\nassert(count_nums(arr: [1, 1, 2, -2, 3, 4, 5]) == 6)\nassert(count_nums(arr:\
  \ [1, 6, 9, -6, 0, 1, 5]) == 5)\nassert(count_nums(arr: [1, 100, 98, -7, 1, -1])\
  \ == 4)\nassert(count_nums(arr: [12, 23, 34, -45, -56, 0]) == 5)\nassert(count_nums(arr:\
  \ [0, 1]) == 1)\nassert(count_nums(arr: [1]) == 1)"
completions: ["    var count = 0\n    for num in arr {\n        if num.sum_of_digits()\
    \ > 0 {\n            count += 1\n        }\n    }\n    return count", '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter({
    $0.digits.reduce(0, combine: +) > 0 }).count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter({ $0.digits.reduce(0, combine: +) > 0
    }).count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter({ $0.digits.reduce(0,
    combine: +) > 0 }).count', '    return arr.filter { $0.digits.reduce(0, +) > 0
    }.count', "    return arr.filter {\n        $0.digits.reduce(0, combine: +) >\
    \ 0\n    }.count", '    return arr.filter { $0.sum_of_digits > 0 }.count', '    return
    arr.filter { $0.sum_of_digits > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.sum_of_digits > 0 }.count', '    return arr.filter({
    $0.digits.reduce(0, combine: +) > 0 }).count', "    var count = 0\n    for i in\
    \ arr {\n        if i < 0 {\n            if i % 10 < 0 {\n                count\
    \ += 1\n            }\n        } else {\n            if i % 10 > 0 {\n       \
    \         count += 1\n            }\n        }\n    }\n    return count", '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    var count = 0\n    for\
    \ num in arr {\n        if num > 0 {\n            count += sum_digits(num)\n \
    \       } else {\n            count += sum_digits(abs(num))\n        }\n    }\n\
    \    return count", '    return arr.filter({ $0.digits.reduce(0, +) > 0 }).count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    var count = 0\n\
    \    for i in arr {\n        var sum = 0\n        var num = i\n        if num\
    \ < 0 {\n            num = -num\n        }\n        while num > 0 {\n        \
    \    sum += num % 10\n            num /= 10\n        }\n        if sum > 0 {\n\
    \            count += 1\n        }\n    }\n    return count", '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.sum_of_digits
    > 0 }.count', "    var count = 0\n    for num in arr {\n        if num < 0 {\n\
    \            count += 1\n        }\n    }\n    return count", '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', "    var count = 0\n    for num in arr\
    \ {\n        if num < 0 {\n            count += 1\n        }\n    }\n    return\
    \ count", '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', "    var count = 0\n    for num in arr {\n        var sum = 0\n\
    \        var n = num\n        if n < 0 {\n            n = -n\n        }\n    \
    \    while n > 0 {\n            sum += n % 10\n            n /= 10\n        }\n\
    \        if sum > 0 {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for i in arr {\n        var sum = 0\n        if i < 0 {\n\
    \            sum += abs(i) % 10\n            i = abs(i) / 10\n        }\n    \
    \    while i > 0 {\n            sum += i % 10\n            i /= 10\n        }\n\
    \        if sum > 0 {\n            count += 1\n        }\n    }\n    return count",
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.sum_digits()
    > 0 }.count', '    return arr.filter({ $0.sum_digits() > 0 }).count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter({ $0.sumOfDigits
    > 0 }).count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.sum_of_digits
    > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.sum_digits() > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', "    var count = 0\n    for num in arr {\n        var sum = 0\n\
    \        var num = num\n        if num < 0 {\n            num = -num\n       \
    \ }\n        while num > 0 {\n            sum += num % 10\n            num /=\
    \ 10\n        }\n        if sum > 0 {\n            count += 1\n        }\n   \
    \ }\n    return count", "    var count = 0\n    for num in arr {\n        var\
    \ sum = 0\n        var num = num\n        if num < 0 {\n            num = -num\n\
    \        }\n        while num > 0 {\n            sum += num % 10\n           \
    \ num /= 10\n        }\n        if sum > 0 {\n            count += 1\n       \
    \ }\n    }\n    return count", "    var count = 0\n    for num in arr {\n    \
    \    var sum = 0\n        var num = num\n        if num < 0 {\n            num\
    \ = -num\n        }\n        while num > 0 {\n            sum += num % 10\n  \
    \          num /= 10\n        }\n        if sum > 0 {\n            count += 1\n\
    \        }\n    }\n    return count", '    return arr.filter({ $0.digits.reduce(0,
    combine: +) > 0 }).count', "    var count = 0\n    for num in arr {\n        if\
    \ num > 0 {\n            count += num.digits.reduce(0, +)\n        } else {\n\
    \            count += num.digits.dropFirst().reduce(0, +)\n        }\n    }\n\
    \    return count", '    return arr.filter { $0.sumOfDigits > 0 }.count', '    return
    arr.filter { $0.sum_of_digits > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', "    var count = 0\n    for num in arr {\n        var sum = 0\n\
    \        var n = num\n        if n < 0 {\n            n = -n\n        }\n    \
    \    while n > 0 {\n            sum += n % 10\n            n /= 10\n        }\n\
    \        if sum > 0 {\n            count += 1\n        }\n    }\n    return count",
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter({
    $0.digits.reduce(0, combine: +) > 0 }).count', '    return arr.filter { $0.sumOfDigits
    > 0 }.count', '    return arr.filter({ $0.digits.reduce(0, combine: +) > 0 }).count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    var count = 0\n\
    \    for i in arr {\n        if i < 0 {\n            if i.digits.reduce(0, +)\
    \ > 0 {\n                count += 1\n            }\n        } else {\n       \
    \     if i.digits.reduce(0, +) > 0 {\n                count += 1\n           \
    \ }\n        }\n    }\n    return count", "    var count = 0\n    for num in arr\
    \ {\n        if num < 0 {\n            count += 1\n        }\n    }\n    return\
    \ count", '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.sum_digits > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.sum_digits() > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', "    var count = 0\n    for num in arr {\n        var sum = 0\n\
    \        var num = num\n        if num < 0 {\n            num = -num\n       \
    \ }\n        while num > 0 {\n            sum += num % 10\n            num /=\
    \ 10\n        }\n        if sum > 0 {\n            count += 1\n        }\n   \
    \ }\n    return count", '    return arr.filter { $0.sum_of_digits > 0 }.count',
  '    return arr.filter({ $0.digits.reduce(0, +) > 0 }).count', "    var count =\
    \ 0\n    for num in arr {\n        var sum = 0\n        var num = num\n      \
    \  if num < 0 {\n            num = -num\n        }\n        while num > 0 {\n\
    \            sum += num % 10\n            num /= 10\n        }\n        if sum\
    \ > 0 {\n            count += 1\n        }\n    }\n    return count", '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', "    var count = 0\n    for num in arr {\n        if sum_digits(num:\
    \ num) > 0 {\n            count += 1\n        }\n    }\n    return count", " \
    \   var count = 0\n    for i in arr {\n        if i < 0 {\n            if i.digits.reduce(0,\
    \ +) > 0 {\n                count += 1\n            }\n        } else {\n    \
    \        if i.digits.reduce(0, +) > 0 {\n                count += 1\n        \
    \    }\n        }\n    }\n    return count", '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', "    return arr.filter({ (num) -> Bool in\n        var sum =\
    \ 0\n        var n = num\n        while n != 0 {\n            sum += n % 10\n\
    \            n /= 10\n        }\n        return sum > 0\n    }).count", "    var\
    \ count = 0\n    for num in arr {\n        var sum = 0\n        var n = num\n\
    \        if n < 0 {\n            n = -n\n        }\n        while n > 0 {\n  \
    \          sum += n % 10\n            n /= 10\n        }\n        if sum > 0 {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for i in arr {\n        if i < 0 {\n            count += 1\n        }\n\
    \    }\n    return count", "    return arr.filter({\n        $0.digits.reduce(0,\
    \ combine: +) > 0\n    }).count", "    var count = 0\n    for num in arr {\n \
    \       if num < 0 {\n            if num % 10 < 0 {\n                count +=\
    \ 1\n            }\n        } else {\n            if num % 10 > 0 {\n        \
    \        count += 1\n            }\n        }\n    }\n    return count", "   \
    \ var count = 0\n    for num in arr {\n        var sum = 0\n        var n = num\n\
    \        if n < 0 {\n            n = -n\n        }\n        while n > 0 {\n  \
    \          sum += n % 10\n            n /= 10\n        }\n        if sum > 0 {\n\
    \            count += 1\n        }\n    }\n    return count", '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', "    return arr.filter {\n        $0.digits.reduce(0, +) > 0\n\
    \    }.count", '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter({$0.sum_digits() > 0}).count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.sum_of_digits
    > 0 }.count', '    return arr.filter({ $0 != 0 }).map({ abs($0) }).map({ $0.digits.reduce(0,
    +) }).filter({ $0 > 0 }).count', "    var count = 0\n    for num in arr {\n  \
    \      if num > 0 {\n            count += num.digits.reduce(0, +)\n        } else\
    \ {\n            count += (num * -1).digits.reduce(0, +)\n        }\n    }\n \
    \   return count", '    return arr.filter({ $0.sum_of_digits() > 0 }).count',
  "    var count = 0\n    for i in arr {\n        var sum = 0\n        var num = i\n\
    \        if num < 0 {\n            num = -num\n        }\n        while num >\
    \ 0 {\n            sum += num % 10\n            num /= 10\n        }\n       \
    \ if sum > 0 {\n            count += 1\n        }\n    }\n    return count", '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    var count = 0\n    for\
    \ i in arr {\n        if i < 0 {\n            count += 1\n        }\n    }\n \
    \   return count", '    return arr.filter { $0 != 0 }.reduce(0) { $0 + $1.digits.reduce(0,
    +) }', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter({$0.sum_of_digits()
    > 0}).count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    var count = 0\n    for\
    \ num in arr {\n        var sum = 0\n        if num < 0 {\n            sum +=\
    \ -num % 10\n            num /= -10\n        }\n        while num > 0 {\n    \
    \        sum += num % 10\n            num /= 10\n        }\n        if sum > 0\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for i in arr {\n        if i < 0 {\n            if i % 10 != 0 {\n\
    \                count += 1\n            }\n        } else {\n            if i\
    \ != 0 {\n                count += 1\n            }\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for num in arr {\n        var sum = 0\n    \
    \    var n = num\n        if n < 0 {\n            n = -n\n        }\n        while\
    \ n > 0 {\n            sum += n % 10\n            n /= 10\n        }\n       \
    \ if sum > 0 {\n            count += 1\n        }\n    }\n    return count", '    return
    arr.filter { $0.sumOfDigits > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.sum_digits() > 0 }.count', '    return arr.filter {
    $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    return arr.reduce(0)\
    \ {\n        $0 + ($1.digits.reduce(0, combine: +) > 0 ? 1 : 0)\n    }", '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    var count = 0\n    for\
    \ num in arr {\n        var sum = 0\n        var num = num\n        if num < 0\
    \ {\n            num = -num\n        }\n        while num > 0 {\n            sum\
    \ += num % 10\n            num /= 10\n        }\n        if sum > 0 {\n      \
    \      count += 1\n        }\n    }\n    return count", "    var count = 0\n \
    \   for num in arr {\n        if num < 0 {\n            num *= -1\n        }\n\
    \        var sum = 0\n        var num = num\n        while num > 0 {\n       \
    \     sum += num % 10\n            num /= 10\n        }\n        if sum > 0 {\n\
    \            count += 1\n        }\n    }\n    return count", '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', "    var count = 0\n    for num in arr\
    \ {\n        var sum = 0\n        var num = num\n        if num < 0 {\n      \
    \      num = -num\n        }\n        while num > 0 {\n            sum += num\
    \ % 10\n            num /= 10\n        }\n        if sum > 0 {\n            count\
    \ += 1\n        }\n    }\n    return count", '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.sum_of_digits > 0 }.count', '    return
    arr.filter({ $0.digits.reduce(0, combine: +) > 0 }).count', "    var count = 0\n\
    \    for num in arr {\n        var sum = 0\n        var num = num\n        if\
    \ num < 0 {\n            num = -num\n        }\n        while num > 0 {\n    \
    \        sum += num % 10\n            num /= 10\n        }\n        if sum > 0\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for i in arr {\n        if i < 0 {\n            if i.digits.reduce(0,\
    \ +) > 0 {\n                count += 1\n            }\n        } else {\n    \
    \        if i.digits.reduce(0, +) > 0 {\n                count += 1\n        \
    \    }\n        }\n    }\n    return count", '    return arr.filter { $0.sum_of_digits
    > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return
    arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    return arr.reduce(0)\
    \ {\n        $0 + ($1.digits.reduce(0, combine: +) > 0 ? 1 : 0)\n    }", '    return
    arr.filter { $0.sum_of_digits > 0 }.count', "    var count = 0\n    for num in\
    \ arr {\n        var sum = 0\n        var num = num\n        if num < 0 {\n  \
    \          num = -num\n        }\n        while num > 0 {\n            sum +=\
    \ num % 10\n            num /= 10\n        }\n        if sum > 0 {\n         \
    \   count += 1\n        }\n    }\n    return count", '    return arr.filter {
    $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter({ $0.digits.reduce(0, combine: +) > 0
    }).count', "    var count = 0\n    for i in arr {\n        if i < 0 {\n      \
    \      count += sum_digits(i * -1)\n        } else {\n            count += sum_digits(i)\n\
    \        }\n    }\n    return count", "    var count = 0\n    for num in arr {\n\
    \        var sum = 0\n        var temp = num\n        if temp < 0 {\n        \
    \    temp = temp * -1\n        }\n        while temp > 0 {\n            sum +=\
    \ temp % 10\n            temp /= 10\n        }\n        if sum > 0 {\n       \
    \     count += 1\n        }\n    }\n    return count", '    return arr.filter
    { $0.sumOfDigits() > 0 }.count', '    return arr.filter { $0.sum_digits() > 0
    }.count', '    return arr.filter({ $0.digits.reduce(0, combine: +) > 0 }).count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  "    return arr.filter {\n        $0.digits.reduce(0, combine: +) > 0\n    }.count",
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.filter { $0.sum_digits > 0 }.count', '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter({$0.digits.reduce(0, combine: +) > 0}).count',
  '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    var count = 0\n\
    \    for num in arr {\n        if num < 0 {\n            count += 1\n        }\n\
    \    }\n    return count", '    return arr.filter { $0.digits.reduce(0, +) > 0
    }.count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count', "    var\
    \ count = 0\n    for num in arr {\n        var sum = 0\n        var n = num\n\
    \        if n < 0 {\n            n = -n\n        }\n        while n > 0 {\n  \
    \          sum += n % 10\n            n /= 10\n        }\n        if sum > 0 {\n\
    \            count += 1\n        }\n    }\n    return count", '    return arr.filter
    { $0.digits.reduce(0, +) > 0 }.count', '    return arr.filter({ $0.digits.reduce(0,
    combine: +) > 0 }).count', '    return arr.filter({$0.digits.reduce(0, combine:
    +) > 0}).count', '    return arr.filter { $0.digits.reduce(0, +) > 0 }.count',
  '    return arr.reduce(0) { $0 + ($1.digits.reduce(0, +) > 0 ? 1 : 0) }', "    var\
    \ count = 0\n    for num in arr {\n        if num < 0 {\n            count +=\
    \ 1\n        }\n    }\n    return count", '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter { $0.sum_of_digits > 0 }.count', "   \
    \ var count = 0\n    for num in arr {\n        if sum_digits(num: num) > 0 {\n\
    \            count += 1\n        }\n    }\n    return count", '    return arr.filter
    { $0.sum_digits > 0 }.count', '    return arr.filter { $0.digits.reduce(0, +)
    > 0 }.count', "    var count = 0\n    for num in arr {\n        if num < 0 {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for i in arr {\n        if i < 0 {\n            i = -i\n        }\n \
    \       var sum = 0\n        var j = i\n        while j > 0 {\n            sum\
    \ += j % 10\n            j /= 10\n        }\n        if sum > 0 {\n          \
    \  count += 1\n        }\n    }\n    return count", '    return arr.filter { $0.digits.reduce(0,
    +) > 0 }.count', '    return arr.filter({ $0.digits.reduce(0, combine: +) > 0
    }).count', "    return arr.reduce(0) {\n        $0 + ($1.digits.reduce(0, combine:\
    \ +) > 0 ? 1 : 0)\n    }", '    return arr.filter { $0.digits.reduce(0, +) > 0
    }.count']
stop_tokens:
- "\n}"

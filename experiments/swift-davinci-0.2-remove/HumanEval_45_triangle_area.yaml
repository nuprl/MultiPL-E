name: HumanEval_45_triangle_area
language: swift
prompt: "\n/// Given length of a side and high return area for a triangle.\nfunc triangle_area(a:\
  \ Int, h: Int) -> Double {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
  \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
completions: ['    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return (Double(a) * Double(h)) / 2', '    return Double(a * h) / 2',
  '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a
    * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return 0.5 * Double(a)
    * Double(h)', '    return Double(a * h) / 2', '    return Double(a * h) / 2',
  '    return Double(a * h) / 2', '    return Double(a) * Double(h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a) * Double(h) / 2',
  '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a
    * h) / 2', '    return Double(a * h) / 2', '    return Double(a) * Double(h) /
    2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return 0.5 * Double(a) * Double(h)', '    return Double(a * h) / 2',
  '    return Double(a * h) / 2', '    return Double(a) * Double(h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a) * Double(h) / 2', '    return Double(a * h) / 2', '    return Double(a
    * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a) * Double(h) / 2', '    return Double(a)
    * Double(h) / 2', '    return Double(a) * Double(h) / 2', '    return Double(a
    * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a) * Double(h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return (Double(a) * Double(h)) / 2', '    return Double(a * h) / 2',
  '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a
    * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a) * Double(h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a) * Double(h) / 2', '    return Double(a * h) / 2',
  '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a)
    * Double(h) / 2', '    return Double(a * h) / 2', '    return Double(a * h) /
    2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', "    let\
    \ area = (Double(a) * Double(h)) / 2\n    return area", '    return Double(a *
    h) / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', "    let area = Double(a * h) / 2\n    return area", '    return Double(a
    * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a) * Double(h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2.0', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2', '    return Double(a * h)
    / 2', '    return Double(a * h) / 2', '    return Double(a * h) / 2', '    return
    Double(a * h) / 2', '    return Double(a * h) / 2']
stop_tokens:
- "\n}"

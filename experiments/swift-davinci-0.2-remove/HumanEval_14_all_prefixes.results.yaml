language: swift
name: HumanEval_14_all_prefixes
results:
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 1...string.count {\n        prefixes.append(String(string.prefix(i)))\n\
    \    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002b4c064b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4c061ac561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b4c061ac286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b4c061ac13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b4c061abbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmplvst5l0b                        0x00005615cf96ccda <unavailable> + 7386

    6    tmplvst5l0b                        0x00005615cf96c745 <unavailable> + 5957

    7    libc.so.6                          0x00002b4c066a1460 __libc_start_main +
    245

    8    tmplvst5l0b                        0x00005615cf96c449 <unavailable> + 5193

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0...string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpm284fssq/tmpm284fssq.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd611c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd60eb8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd60eb8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd60eb77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm284fssq                        0x000055ffcf9aa86e <unavailable> + 6254

    5    libc.so.6                          0x00002abd613ad460 __libc_start_main +
    245

    6    tmpm284fssq                        0x000055ffcf9aa4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmp0l5ruzwy/tmp0l5ruzwy.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b799ae25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b799ab1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b799ab1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b799ab1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0l5ruzwy                        0x0000564881f6db48 <unavailable> + 6984

    5    libc.so.6                          0x00002b799b011460 __libc_start_main +
    245

    6    tmp0l5ruzwy                        0x0000564881f6d5a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpz90rn18q/tmpz90rn18q.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06d7e35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06d7b2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06d7b2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06d7b2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz90rn18q                        0x000055629ea62b98 <unavailable> + 7064

    5    libc.so.6                          0x00002b06d8021460 __libc_start_main +
    245

    6    tmpz90rn18q                        0x000055629ea625f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmp0l5ruzwy/tmp0l5ruzwy.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b799ae25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b799ab1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b799ab1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b799ab1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0l5ruzwy                        0x0000564881f6db48 <unavailable> + 6984

    5    libc.so.6                          0x00002b799b011460 __libc_start_main +
    245

    6    tmp0l5ruzwy                        0x0000564881f6d5a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.characters.count {\n        prefixes.append(string.substring(to:\
    \ string.index(string.startIndex, offsetBy: i)))\n    }\n    return prefixes\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(all_prefixes(string: \"\") == [] as [String])\n\
    assert(all_prefixes(string: \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\",\
    \ \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string: \"WWW\") == [\"W\", \"\
    WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmpw0mmyyjq.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpw0mmyyjq.swift:6:32: error: value of type 'String' has no member\
    \ 'substring'\n        prefixes.append(string.substring(to: string.index(string.startIndex,\
    \ offsetBy: i)))\n                        ~~~~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmp0l5ruzwy/tmp0l5ruzwy.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b799ae25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b799ab1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b799ab1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b799ab1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0l5ruzwy                        0x0000564881f6db48 <unavailable> + 6984

    5    libc.so.6                          0x00002b799b011460 __libc_start_main +
    245

    6    tmp0l5ruzwy                        0x0000564881f6d5a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.characters.count {\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmp9ztkwz45.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp9ztkwz45.swift:6:32: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                        ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmp9ztkwz45.swift:6:67:\
    \ error: value of type 'String.Index' has no member 'advancedBy'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                                                ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpz90rn18q/tmpz90rn18q.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06d7e35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06d7b2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06d7b2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06d7b2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz90rn18q                        0x000055629ea62b98 <unavailable> + 7064

    5    libc.so.6                          0x00002b06d8021460 __libc_start_main +
    245

    6    tmpz90rn18q                        0x000055629ea625f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0...string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmp_2t7he69/tmp_2t7he69.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d2badbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d2b7d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d2b7d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d2b7d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_2t7he69                        0x000055c402b6c81e <unavailable> + 6174

    5    libc.so.6                          0x00002b1d2bcc7460 __libc_start_main +
    245

    6    tmp_2t7he69                        0x000055c402b6c469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.characters.count {\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmp9p82nhee.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp9p82nhee.swift:6:32: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                        ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmp9p82nhee.swift:6:67:\
    \ error: value of type 'String.Index' has no member 'advancedBy'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                                                ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.characters.count {\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmp9ztkwz45.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp9ztkwz45.swift:6:32: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                        ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmp9ztkwz45.swift:6:67:\
    \ error: value of type 'String.Index' has no member 'advancedBy'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                                                ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.characters.count {\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i+1)))\n\
    \    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmp520ktd6p.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp520ktd6p.swift:6:32: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i+1)))\n\
    \                        ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmp520ktd6p.swift:6:67:\
    \ error: value of type 'String.Index' has no member 'advancedBy'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i+1)))\n\
    \                                                ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpz90rn18q/tmpz90rn18q.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06d7e35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06d7b2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06d7b2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06d7b2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz90rn18q                        0x000055629ea62b98 <unavailable> + 7064

    5    libc.so.6                          0x00002b06d8021460 __libc_start_main +
    245

    6    tmpz90rn18q                        0x000055629ea625f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpz90rn18q/tmpz90rn18q.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06d7e35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06d7b2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06d7b2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06d7b2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz90rn18q                        0x000055629ea62b98 <unavailable> + 7064

    5    libc.so.6                          0x00002b06d8021460 __libc_start_main +
    245

    6    tmpz90rn18q                        0x000055629ea625f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpz90rn18q/tmpz90rn18q.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06d7e35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06d7b2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06d7b2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06d7b2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz90rn18q                        0x000055629ea62b98 <unavailable> + 7064

    5    libc.so.6                          0x00002b06d8021460 __libc_start_main +
    245

    6    tmpz90rn18q                        0x000055629ea625f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmp0l5ruzwy/tmp0l5ruzwy.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b799ae25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b799ab1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b799ab1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b799ab1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0l5ruzwy                        0x0000564881f6db48 <unavailable> + 6984

    5    libc.so.6                          0x00002b799b011460 __libc_start_main +
    245

    6    tmp0l5ruzwy                        0x0000564881f6d5a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.characters.count {\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i+1)))\n\
    \    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmp520ktd6p.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp520ktd6p.swift:6:32: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i+1)))\n\
    \                        ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmp520ktd6p.swift:6:67:\
    \ error: value of type 'String.Index' has no member 'advancedBy'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i+1)))\n\
    \                                                ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        let index = string.index(string.startIndex,\
    \ offsetBy: i)\n        result.append(String(string[..<index]))\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmp_yp5etr6/tmp_yp5etr6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f14051c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f13d48b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f13d48988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f13d477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_yp5etr6                        0x000055b8510ddb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b1f1423d460 __libc_start_main +
    245

    6    tmp_yp5etr6                        0x000055b8510dd5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmp0l5ruzwy/tmp0l5ruzwy.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b799ae25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b799ab1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b799ab1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b799ab1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0l5ruzwy                        0x0000564881f6db48 <unavailable> + 6984

    5    libc.so.6                          0x00002b799b011460 __libc_start_main +
    245

    6    tmp0l5ruzwy                        0x0000564881f6d5a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0...string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpd4y01efa/tmpd4y01efa.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac93c980c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac93c677b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac93c677988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac93c6767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd4y01efa                        0x0000558a6995286e <unavailable> + 6254

    5    libc.so.6                          0x00002ac93cb6c460 __libc_start_main +
    245

    6    tmpd4y01efa                        0x0000558a699524b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.characters.count {\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i+1)))\n\
    \    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmp520ktd6p.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp520ktd6p.swift:6:32: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i+1)))\n\
    \                        ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmp520ktd6p.swift:6:67:\
    \ error: value of type 'String.Index' has no member 'advancedBy'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i+1)))\n\
    \                                                ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.characters.count {\n        result.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmpidkf7cr6.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpidkf7cr6.swift:6:30: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        result.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                      ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmpidkf7cr6.swift:6:65: error:\
    \ value of type 'String.Index' has no member 'advancedBy'\n        result.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                                              ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0...string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpfdt3wrgt/tmpfdt3wrgt.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ad36cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ad33c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ad33c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ad33c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfdt3wrgt                        0x00005638963f995e <unavailable> + 6494

    5    libc.so.6                          0x00002b3ad38b7460 __libc_start_main +
    245

    6    tmpfdt3wrgt                        0x00005638963f95a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0...string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpfdt3wrgt/tmpfdt3wrgt.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ad36cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ad33c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ad33c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ad33c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfdt3wrgt                        0x00005638963f995e <unavailable> + 6494

    5    libc.so.6                          0x00002b3ad38b7460 __libc_start_main +
    245

    6    tmpfdt3wrgt                        0x00005638963f95a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.characters.count {\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmp9p82nhee.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp9p82nhee.swift:6:32: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                        ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmp9p82nhee.swift:6:67:\
    \ error: value of type 'String.Index' has no member 'advancedBy'\n        prefixes.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                                                ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmp0l5ruzwy/tmp0l5ruzwy.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b799ae25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b799ab1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b799ab1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b799ab1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0l5ruzwy                        0x0000564881f6db48 <unavailable> + 6984

    5    libc.so.6                          0x00002b799b011460 __libc_start_main +
    245

    6    tmp0l5ruzwy                        0x0000564881f6d5a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpxv1m4_mo/tmpxv1m4_mo.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a3bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a38c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a38c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a38c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxv1m4_mo                        0x0000560f10362a58 <unavailable> + 6744

    5    libc.so.6                          0x00002b04a3db6460 __libc_start_main +
    245

    6    tmpxv1m4_mo                        0x0000560f103624b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.characters.count {\n        result.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmpazgb7jhw.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpazgb7jhw.swift:6:30: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        result.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                      ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmpazgb7jhw.swift:6:65: error:\
    \ value of type 'String.Index' has no member 'advancedBy'\n        result.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                                              ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpzs6k6su5/tmpzs6k6su5.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18fd10dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18fce04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18fce04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18fce037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs6k6su5                        0x000055b2433cba58 <unavailable> + 6744

    5    libc.so.6                          0x00002b18fd2f9460 __libc_start_main +
    245

    6    tmpzs6k6su5                        0x000055b2433cb4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpkxdjphga/tmpkxdjphga.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6652d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6652a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6652a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6652a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxdjphga                        0x0000564593f3aa08 <unavailable> + 6664

    5    libc.so.6                          0x00002b6652f00460 __libc_start_main +
    245

    6    tmpkxdjphga                        0x0000564593f3a469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmph9xlnkix/tmph9xlnkix.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b505c769c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b505c460b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b505c460988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b505c45f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph9xlnkix                        0x000055a573a05b48 <unavailable> + 6984

    5    libc.so.6                          0x00002b505c955460 __libc_start_main +
    245

    6    tmph9xlnkix                        0x000055a573a055a9 <unavailable> + 5545

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 1...string.count {\n        result.append(String(string.prefix(i)))\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002aabe9480c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aabe9177561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aabe9177286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aabe917713c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aabe9176bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp98lyrvb5                        0x0000556995f36cda <unavailable> + 7386

    6    tmp98lyrvb5                        0x0000556995f36745 <unavailable> + 5957

    7    libc.so.6                          0x00002aabe966c460 __libc_start_main +
    245

    8    tmp98lyrvb5                        0x0000556995f36449 <unavailable> + 5193

    '
  stdout: ''
  timestamp: 1660014104
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpz90rn18q/tmpz90rn18q.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06d7e35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06d7b2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06d7b2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06d7b2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz90rn18q                        0x000055629ea62b98 <unavailable> + 7064

    5    libc.so.6                          0x00002b06d8021460 __libc_start_main +
    245

    6    tmpz90rn18q                        0x000055629ea625f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpp84914v7/tmpp84914v7.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace0da47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace0d73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace0d73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace0d73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp84914v7                        0x000055d280415a08 <unavailable> + 6664

    5    libc.so.6                          0x00002ace0dc33460 __libc_start_main +
    245

    6    tmpp84914v7                        0x000055d280415469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmpl6hri4f9/tmpl6hri4f9.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e589cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e586c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e586c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e586c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl6hri4f9                        0x00005635bf25eb98 <unavailable> + 7064

    5    libc.so.6                          0x00002b5e58bba460 __libc_start_main +
    245

    6    tmpl6hri4f9                        0x00005635bf25e5f9 <unavailable> + 5625

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes =\
    \ [String]()\n    for i in 0..<string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014103
- exit_code: -4
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var prefixes: [String]\
    \ = []\n    for i in 0...string.count {\n        prefixes.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i)]))\n    }\n    return prefixes\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: Exception
  stderr: 'tmp_2t7he69/tmp_2t7he69.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d2badbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d2b7d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d2b7d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d2b7d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_2t7he69                        0x000055c402b6c81e <unavailable> + 6174

    5    libc.so.6                          0x00002b1d2bcc7460 __libc_start_main +
    245

    6    tmp_2t7he69                        0x000055c402b6c469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014103
- exit_code: 0
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result: [String]\
    \ = []\n    for i in 0..<string.count {\n        result.append(String(string[string.startIndex..<string.index(string.startIndex,\
    \ offsetBy: i+1)]))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(all_prefixes(string: \"\") == [] as [String])\nassert(all_prefixes(string:\
    \ \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\n\
    assert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014104
- exit_code: 1
  program: "\n/// Return list of all prefixes from shortest to longest of the input\
    \ string\nfunc all_prefixes(string: String) -> [String] {\n    var result = [String]()\n\
    \    for i in 0..<string.characters.count {\n        result.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(all_prefixes(string:\
    \ \"\") == [] as [String])\nassert(all_prefixes(string: \"asdfgh\") == [\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])\nassert(all_prefixes(string:\
    \ \"WWW\") == [\"W\", \"WW\", \"WWW\"])"
  status: SyntaxError
  stderr: "/tmp/tmpazgb7jhw.swift:5:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in 0..<string.characters.count {\n          \
    \              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpazgb7jhw.swift:6:30: error: value of type 'String' has no member\
    \ 'substringToIndex'\n        result.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                      ~~~~~~ ^~~~~~~~~~~~~~~~\n/tmp/tmpazgb7jhw.swift:6:65: error:\
    \ value of type 'String.Index' has no member 'advancedBy'\n        result.append(string.substringToIndex(string.startIndex.advancedBy(i)))\n\
    \                                              ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014103

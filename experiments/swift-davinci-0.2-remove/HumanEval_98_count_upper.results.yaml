language: swift
name: HumanEval_98_count_upper
results:
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        return acc + (x.offset % 2 == 0 && x.element.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp5brlaxs6/tmp5brlaxs6.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b11370a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1136d98b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1136d98988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1136d977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5brlaxs6                        0x0000559c18e1f544 <unavailable> + 5444

    5    libc.so.6                          0x00002b113728d460 __libc_start_main +
    245

    6    tmp5brlaxs6                        0x0000559c18e1f1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpqc1oa1na/tmpqc1oa1na.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7bbcaadc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7bbc7a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7bbc7a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7bbc7a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqc1oa1na                        0x000055e8e26545e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b7bbcc99460 __libc_start_main +
    245

    6    tmpqc1oa1na                        0x000055e8e2654269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        if x.offset % 2 == 0 && \"AEIOU\".contains(x.element)\
    \ {\n            return acc + 1\n        }\n        return acc\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, pair) in\n        let (index, char) = pair\n        return acc + (index\
    \ % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpnrfbn8v9/tmpnrfbn8v9.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1b3b14ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1b3ae41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1b3ae41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1b3ae407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnrfbn8v9                        0x000055bc77e2a544 <unavailable> + 5444

    5    libc.so.6                          0x00002b1b3b336460 __libc_start_main +
    245

    6    tmpnrfbn8v9                        0x000055bc77e2a1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            return acc + 1\n        }\n        return acc\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp0lahf4zh/tmp0lahf4zh.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02c55ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02c52e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02c52e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02c52e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0lahf4zh                        0x00005619ba725544 <unavailable> + 5444

    5    libc.so.6                          0x00002b02c57d7460 __libc_start_main +
    245

    6    tmp0lahf4zh                        0x00005619ba7251c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && is_upper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpnj6b7kpa.swift:6:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpnj6b7kpa.swift:7:26: error: cannot find 'is_upper' in scope\n   \
    \     if i % 2 == 0 && is_upper(c) {\n                         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 : 0) }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter({\
    \ $0.offset % 2 == 0 && $0.element.isUppercase }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmppe3c426c/tmppe3c426c.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc9e31ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc9e015b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc9e015988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc9e0147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppe3c426c                        0x0000564ae3bec544 <unavailable> + 5444

    5    libc.so.6                          0x00002acc9e50a460 __libc_start_main +
    245

    6    tmppe3c426c                        0x0000564ae3bec1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpqc1oa1na/tmpqc1oa1na.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7bbcaadc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7bbc7a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7bbc7a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7bbc7a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqc1oa1na                        0x000055e8e26545e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b7bbcc99460 __libc_start_main +
    245

    6    tmpqc1oa1na                        0x000055e8e2654269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, pair) in\n        let (index, char) = pair\n        return acc + (index\
    \ % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpnrfbn8v9/tmpnrfbn8v9.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1b3b14ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1b3ae41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1b3ae41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1b3ae407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnrfbn8v9                        0x000055bc77e2a544 <unavailable> + 5444

    5    libc.so.6                          0x00002b1b3b336460 __libc_start_main +
    245

    6    tmpnrfbn8v9                        0x000055bc77e2a1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && is_upper_vowel(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpc91ynhct.swift:7:26: error: cannot find 'is_upper_vowel' in scope\n\
    \        if i % 2 == 0 && is_upper_vowel(c) {\n                         ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (count, pair) in\n        let (index, char) = pair\n        return index %\
    \ 2 == 0 && char.isUppercase ? count + 1 : count\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpfvpwwsn7/tmpfvpwwsn7.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab07f130c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab07ee27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab07ee27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab07ee267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfvpwwsn7                        0x00005565d4e94544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab07f31c460 __libc_start_main +
    245

    6    tmpfvpwwsn7                        0x00005565d4e941c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && \"AEIOU\".contains($0.element) }.count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, tuple) in\n        let (index, char) = tuple\n        return result\
    \ + (index % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpsyo35nxc/tmpsyo35nxc.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b50d7e3fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b50d7b36b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b50d7b36988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b50d7b357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsyo35nxc                        0x0000561d3bfff544 <unavailable> + 5444

    5    libc.so.6                          0x00002b50d802b460 __libc_start_main +
    245

    6    tmpsyo35nxc                        0x0000561d3bfff1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, tuple) in\n        let (index, char) = tuple\n        if index %\
    \ 2 == 0 && char.isUppercase {\n            return result + 1\n        }\n   \
    \     return result\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpxcnyuk7k/tmpxcnyuk7k.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5c3e77cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5c3e473b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5c3e473988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5c3e4727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxcnyuk7k                        0x000055a6ddf3e544 <unavailable> + 5444

    5    libc.so.6                          0x00002b5c3e968460 __libc_start_main +
    245

    6    tmpxcnyuk7k                        0x000055a6ddf3e1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && is_upper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpnj6b7kpa.swift:6:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpnj6b7kpa.swift:7:26: error: cannot find 'is_upper' in scope\n   \
    \     if i % 2 == 0 && is_upper(c) {\n                         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (count, pair) in\n        let (index, char) = pair\n        return index %\
    \ 2 == 0 && char.isUppercase ? count + 1 : count\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpfvpwwsn7/tmpfvpwwsn7.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab07f130c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab07ee27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab07ee27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab07ee267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfvpwwsn7                        0x00005565d4e94544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab07f31c460 __libc_start_main +
    245

    6    tmpfvpwwsn7                        0x00005565d4e941c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        return acc + (x.offset % 2 == 0 && \"AEIOU\".contains(x.element)\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, pair) in\n        let (index, char) = pair\n        return result\
    \ + (index % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpezroajqo/tmpezroajqo.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6697d3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6697a34b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6697a34988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6697a337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpezroajqo                        0x000055c345934544 <unavailable> + 5444

    5    libc.so.6                          0x00002b6697f29460 __libc_start_main +
    245

    6    tmpezroajqo                        0x000055c3459341c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (count, tuple) in\n        let (index, char) = tuple\n        return count\
    \ + (index % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmposvfbf0a/tmposvfbf0a.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add958dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add955d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add955d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add955d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmposvfbf0a                        0x000055d4edfb4544 <unavailable> + 5444

    5    libc.so.6                          0x00002add95ac7460 __libc_start_main +
    245

    6    tmposvfbf0a                        0x000055d4edfb41c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && \"AEIOU\".contains($0.element) }.count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        if x.offset % 2 == 0 && is_upper_vowel(c: x.element)\
    \ {\n            return acc + 1\n        }\n        return acc\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpci4jfxft.swift:6:33: error: cannot find 'is_upper_vowel' in scope\n\
    \        if x.offset % 2 == 0 && is_upper_vowel(c: x.element) {\n            \
    \                    ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, pair) in\n        let (index, char) = pair\n        if index % 2 ==\
    \ 0 && char.isUppercase {\n            return acc + 1\n        }\n        return\
    \ acc\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpbeo02ikb/tmpbeo02ikb.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3355e71c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3355b68b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3355b68988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3355b677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbeo02ikb                        0x0000561345420544 <unavailable> + 5444

    5    libc.so.6                          0x00002b335605d460 __libc_start_main +
    245

    6    tmpbeo02ikb                        0x00005613454201c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, c) in\n        return acc + (c.offset % 2 == 0 && c.element.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpci_1x5ju/tmpci_1x5ju.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a59451c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a59148b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a59148988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a591477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpci_1x5ju                        0x000055c4d1f8b544 <unavailable> + 5444

    5    libc.so.6                          0x00002b5a5963d460 __libc_start_main +
    245

    6    tmpci_1x5ju                        0x000055c4d1f8b1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, next) in\n        return result + (next.offset % 2 == 0 && next.element.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp4xlj93ij/tmp4xlj93ij.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9f160f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9f15defb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9f15def988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9f15dee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4xlj93ij                        0x0000555ec3815544 <unavailable> + 5444

    5    libc.so.6                          0x00002b9f162e4460 __libc_start_main +
    245

    6    tmp4xlj93ij                        0x0000555ec38151c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpf3wi4sdn.swift:6:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && \"AEIOU\".contains($0.element) }.count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, tuple) in\n        let (index, char) = tuple\n        return result\
    \ + (index % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpsyo35nxc/tmpsyo35nxc.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b50d7e3fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b50d7b36b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b50d7b36988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b50d7b357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsyo35nxc                        0x0000561d3bfff544 <unavailable> + 5444

    5    libc.so.6                          0x00002b50d802b460 __libc_start_main +
    245

    6    tmpsyo35nxc                        0x0000561d3bfff1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        if x.offset % 2 == 0 && x.element.isUppercase {\n   \
    \         return acc + 1\n        }\n        return acc\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpkowhruuv/tmpkowhruuv.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7a78c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a776fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a776f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a776e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkowhruuv                        0x0000562d9679a544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab0a7c64460 __libc_start_main +
    245

    6    tmpkowhruuv                        0x0000562d9679a1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, pair) in\n        let (i, c) = pair\n        return acc + (i % 2 ==\
    \ 0 && c.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp9dimgooo/tmp9dimgooo.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac813932c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac813629b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac813629988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac8136287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9dimgooo                        0x000055bbbdd9f544 <unavailable> + 5444

    5    libc.so.6                          0x00002ac813b1e460 __libc_start_main +
    245

    6    tmp9dimgooo                        0x000055bbbdd9f1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (count, tuple) in\n        let (index, char) = tuple\n        if index % 2\
    \ == 0 && char.isUppercase {\n            return count + 1\n        }\n      \
    \  return count\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpap56oyum/tmpap56oyum.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b526ef53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b526ec4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b526ec4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b526ec497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpap56oyum                        0x00005635b79cd544 <unavailable> + 5444

    5    libc.so.6                          0x00002b526f13f460 __libc_start_main +
    245

    6    tmpap56oyum                        0x00005635b79cd1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        if x.offset % 2 == 0 && x.element.isUppercase {\n   \
    \         return acc + 1\n        }\n        return acc\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpkowhruuv/tmpkowhruuv.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7a78c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a776fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a776f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a776e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkowhruuv                        0x0000562d9679a544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab0a7c64460 __libc_start_main +
    245

    6    tmpkowhruuv                        0x0000562d9679a1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && \"AEIOU\".contains($0.element) }.count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && \"AEIOU\".contains($0.element) }.count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, pair) in\n        let (index, char) = pair\n        if index % 2 ==\
    \ 0 && char.isUppercase {\n            return acc + 1\n        }\n        return\
    \ acc\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpbeo02ikb/tmpbeo02ikb.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3355e71c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3355b68b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3355b68988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3355b677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbeo02ikb                        0x0000561345420544 <unavailable> + 5444

    5    libc.so.6                          0x00002b335605d460 __libc_start_main +
    245

    6    tmpbeo02ikb                        0x00005613454201c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpqc1oa1na/tmpqc1oa1na.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7bbcaadc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7bbc7a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7bbc7a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7bbc7a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqc1oa1na                        0x000055e8e26545e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b7bbcc99460 __libc_start_main +
    245

    6    tmpqc1oa1na                        0x000055e8e2654269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, tuple) in\n        let (index, char) = tuple\n        return result\
    \ + (index % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpsyo35nxc/tmpsyo35nxc.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b50d7e3fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b50d7b36b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b50d7b36988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b50d7b357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsyo35nxc                        0x0000561d3bfff544 <unavailable> + 5444

    5    libc.so.6                          0x00002b50d802b460 __libc_start_main +
    245

    6    tmpsyo35nxc                        0x0000561d3bfff1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && is_upper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpnj6b7kpa.swift:6:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpnj6b7kpa.swift:7:26: error: cannot find 'is_upper' in scope\n   \
    \     if i % 2 == 0 && is_upper(c) {\n                         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        return x.offset % 2 == 0 && \"AEIOU\".contains(x.element)\
    \ ? acc + 1 : acc\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter({\
    \ $0.offset % 2 == 0 && \"AEIOU\".contains($0.element) }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && \"AEIOU\".contains($0.element) }.count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, next) in\n        return next.offset % 2 == 0 && next.element.isUppercase\
    \ ? result + 1 : result\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp9lugi3bq/tmp9lugi3bq.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295ac63c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295a95ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295a95a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295a9597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9lugi3bq                        0x000055b9a9f31544 <unavailable> + 5444

    5    libc.so.6                          0x00002b295ae4f460 __libc_start_main +
    245

    6    tmp9lugi3bq                        0x000055b9a9f311c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && \"AEIOU\".contains($0.element) }.count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpqc1oa1na/tmpqc1oa1na.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7bbcaadc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7bbc7a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7bbc7a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7bbc7a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqc1oa1na                        0x000055e8e26545e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b7bbcc99460 __libc_start_main +
    245

    6    tmpqc1oa1na                        0x000055e8e2654269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        if x.offset % 2 == 0 && \"AEIOU\".contains(x.element)\
    \ {\n            return acc + 1\n        }\n        return acc\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            return acc + 1\n        }\n        return acc\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp0lahf4zh/tmp0lahf4zh.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02c55ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02c52e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02c52e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02c52e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0lahf4zh                        0x00005619ba725544 <unavailable> + 5444

    5    libc.so.6                          0x00002b02c57d7460 __libc_start_main +
    245

    6    tmp0lahf4zh                        0x00005619ba7251c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        return acc + (x.offset % 2 == 0 && \"AEIOU\".contains(x.element)\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, arg1) -> Int in\n        let (index, char) = arg1\n        return\
    \ result + (index % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpoam1g7j5/tmpoam1g7j5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b591b85dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b591b554b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b591b554988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b591b5537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoam1g7j5                        0x000056450432f544 <unavailable> + 5444

    5    libc.so.6                          0x00002b591ba49460 __libc_start_main +
    245

    6    tmpoam1g7j5                        0x000056450432f1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        return acc + (x.offset % 2 == 0 && x.element.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp5brlaxs6/tmp5brlaxs6.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b11370a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1136d98b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1136d98988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1136d977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5brlaxs6                        0x0000559c18e1f544 <unavailable> + 5444

    5    libc.so.6                          0x00002b113728d460 __libc_start_main +
    245

    6    tmp5brlaxs6                        0x0000559c18e1f1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && is_upper_vowel(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpc91ynhct.swift:7:26: error: cannot find 'is_upper_vowel' in scope\n\
    \        if i % 2 == 0 && is_upper_vowel(c) {\n                         ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && \"AEIOU\"\
    .characters.contains(c) {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpv2pt8s7m.swift:6:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpv2pt8s7m.swift:7:34: error: 'characters' is unavailable: Please use\
    \ String directly\n        if i % 2 == 0 && \"AEIOU\".characters.contains(c) {\n\
    \                                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return 0\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpjvbmud76/tmpjvbmud76.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2f432bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae2f4022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae2f4022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2f40217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjvbmud76                        0x000056037bc0c264 <unavailable> + 4708

    5    libc.so.6                          0x00002ae2f4517460 __libc_start_main +
    245

    6    tmpjvbmud76                        0x000056037bc0bee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpf3wi4sdn.swift:6:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && \"AEIOU\".contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        return x.offset % 2 == 0 && \"AEIOU\".contains(x.element)\
    \ ? acc + 1 : acc\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && is_upper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpnj6b7kpa.swift:6:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpnj6b7kpa.swift:7:26: error: cannot find 'is_upper' in scope\n   \
    \     if i % 2 == 0 && is_upper(c) {\n                         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (count, next) in\n        return count + (next.offset % 2 == 0 && \"AEIOU\"\
    .contains(next.element) ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        return $1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? $0\
    \ + 1 : $0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, pair) in\n        let (index, char) = pair\n        return acc + (index\
    \ % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpnrfbn8v9/tmpnrfbn8v9.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1b3b14ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1b3ae41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1b3ae41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1b3ae407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnrfbn8v9                        0x000055bc77e2a544 <unavailable> + 5444

    5    libc.so.6                          0x00002b1b3b336460 __libc_start_main +
    245

    6    tmpnrfbn8v9                        0x000055bc77e2a1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && is_upper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpnj6b7kpa.swift:6:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpnj6b7kpa.swift:7:26: error: cannot find 'is_upper' in scope\n   \
    \     if i % 2 == 0 && is_upper(c) {\n                         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, pair) in\n        let (index, char) = pair\n        if index % 2 ==\
    \ 0 && char.isUppercase {\n            return acc + 1\n        }\n        return\
    \ acc\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpbeo02ikb/tmpbeo02ikb.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3355e71c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3355b68b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3355b68988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3355b677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbeo02ikb                        0x0000561345420544 <unavailable> + 5444

    5    libc.so.6                          0x00002b335605d460 __libc_start_main +
    245

    6    tmpbeo02ikb                        0x00005613454201c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        if x.offset % 2 == 0 && is_upper_vowel(c: x.element)\
    \ {\n            return acc + 1\n        }\n        return acc\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpci4jfxft.swift:6:33: error: cannot find 'is_upper_vowel' in scope\n\
    \        if x.offset % 2 == 0 && is_upper_vowel(c: x.element) {\n            \
    \                    ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        if x.offset % 2 == 0 && x.element.isUppercase {\n   \
    \         return acc + 1\n        }\n        return acc\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpkowhruuv/tmpkowhruuv.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7a78c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a776fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a776f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a776e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkowhruuv                        0x0000562d9679a544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab0a7c64460 __libc_start_main +
    245

    6    tmpkowhruuv                        0x0000562d9679a1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, c) in\n        return acc + (c.offset % 2 == 0 && c.element.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpci_1x5ju/tmpci_1x5ju.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a59451c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a59148b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a59148988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a591477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpci_1x5ju                        0x000055c4d1f8b544 <unavailable> + 5444

    5    libc.so.6                          0x00002b5a5963d460 __libc_start_main +
    245

    6    tmpci_1x5ju                        0x000055c4d1f8b1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, pair) in\n        let (index, char) = pair\n        return acc + (index\
    \ % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpnrfbn8v9/tmpnrfbn8v9.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1b3b14ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1b3ae41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1b3ae41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1b3ae407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnrfbn8v9                        0x000055bc77e2a544 <unavailable> + 5444

    5    libc.so.6                          0x00002b1b3b336460 __libc_start_main +
    245

    6    tmpnrfbn8v9                        0x000055bc77e2a1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, element) in\n        let (index, char) = element\n        return\
    \ result + (index % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpx_in46el/tmpx_in46el.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b123b48cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b123b183b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b123b183988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b123b1827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx_in46el                        0x0000564d16ea6544 <unavailable> + 5444

    5    libc.so.6                          0x00002b123b678460 __libc_start_main +
    245

    6    tmpx_in46el                        0x0000564d16ea61c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return 0\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpjvbmud76/tmpjvbmud76.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2f432bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae2f4022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae2f4022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2f40217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjvbmud76                        0x000056037bc0c264 <unavailable> + 4708

    5    libc.so.6                          0x00002ae2f4517460 __libc_start_main +
    245

    6    tmpjvbmud76                        0x000056037bc0bee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n   \
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") ==\
    \ 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp401yl0pg/tmp401yl0pg.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b009065bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0090352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0090352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00903517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp401yl0pg                        0x0000562c55ba5544 <unavailable> + 5444

    5    libc.so.6                          0x00002b0090847460 __libc_start_main +
    245

    6    tmp401yl0pg                        0x0000562c55ba51c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        if x.offset % 2 == 0 && is_upper_vowel(c: x.element)\
    \ {\n            return acc + 1\n        }\n        return acc\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpci4jfxft.swift:6:33: error: cannot find 'is_upper_vowel' in scope\n\
    \        if x.offset % 2 == 0 && is_upper_vowel(c: x.element) {\n            \
    \                    ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().filter\
    \ { $0.offset % 2 == 0 && $0.element.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpmne0qtlo/tmpmne0qtlo.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90d619c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90d310b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90d310988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90d30f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmne0qtlo                        0x00005590f5916544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab90d805460 __libc_start_main +
    245

    6    tmpmne0qtlo                        0x00005590f59161c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && is_upper_vowel(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpc91ynhct.swift:7:26: error: cannot find 'is_upper_vowel' in scope\n\
    \        if i % 2 == 0 && is_upper_vowel(c) {\n                         ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978570
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (result, tuple) in\n        let (index, char) = tuple\n        return result\
    \ + (index % 2 == 0 && char.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpsyo35nxc/tmpsyo35nxc.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b50d7e3fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b50d7b36b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b50d7b36988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b50d7b357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsyo35nxc                        0x0000561d3bfff544 <unavailable> + 5444

    5    libc.so.6                          0x00002b50d802b460 __libc_start_main +
    245

    6    tmpsyo35nxc                        0x0000561d3bfff1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (count, pair) in\n        return pair.offset % 2 == 0 && pair.element.isUppercase\
    \ ? count + 1 : count\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpo9oekc1x/tmpo9oekc1x.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aed6d091c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aed6cd88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aed6cd88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aed6cd877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo9oekc1x                        0x000055589f944544 <unavailable> + 5444

    5    libc.so.6                          0x00002aed6d27d460 __libc_start_main +
    245

    6    tmpo9oekc1x                        0x000055589f9441c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        let (i, c) = x\n        return acc + (i % 2 == 0 && c.isUppercase\
    \ ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp8mz3uovd/tmp8mz3uovd.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f5c3d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f5c0cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f5c0cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f5c0ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mz3uovd                        0x000055d86d726544 <unavailable> + 5444

    5    libc.so.6                          0x00002b4f5c5c0460 __libc_start_main +
    245

    6    tmp8mz3uovd                        0x000055d86d7261c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978571
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\nfunc count_upper(s: String) -> Int {\n    var count = 0\n  \
    \  for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6y0msgpv/tmp6y0msgpv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31f1d4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31f1a44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31f1a44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31f1a437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y0msgpv                        0x000055dbd0a955e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b31f1f39460 __libc_start_main +
    245

    6    tmp6y0msgpv                        0x000055dbd0a95269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978571

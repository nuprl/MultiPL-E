language: swift
name: HumanEval_39_prime_fib
results:
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 1]\n\
    \    var i = 2\n    while i <= n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpqlh65fav/tmpqlh65fav.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add03523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add0321ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add0321a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add032197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqlh65fav                        0x000055ca2504d368 <unavailable> + 4968

    5    libc.so.6                          0x00002add0370f460 __libc_start_main +
    245

    6    tmpqlh65fav                        0x000055ca2504d019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 2]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmp4zsi9pyu/tmp4zsi9pyu.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abad9f2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abad9c22b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abad9c22988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abad9c217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zsi9pyu                        0x0000563653994368 <unavailable> + 4968

    5    libc.so.6                          0x00002abada117460 __libc_start_main +
    245

    6    tmp4zsi9pyu                        0x0000563653994019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0, b = 1, c = 0\n\
    \    var i = 0\n    while i < n {\n        c = a + b\n        a = b\n        b\
    \ = c\n        if is_prime(c) {\n            i += 1\n        }\n    }\n    return\
    \ c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
    \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwxvrdazy.swift:10:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(k) {\n            count +=\
    \ 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqmocbn18.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci(n)\n \
    \   while !is_prime(fib) {\n        fib = fibonacci(n)\n        n += 1\n    }\n\
    \    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpdsmfw5g7.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpdsmfw5g7.swift:5:12:\
    \ error: cannot find 'is_prime' in scope\n    while !is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpdsmfw5g7.swift:6:15: error: cannot find 'fibonacci' in\
    \ scope\n        fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpdsmfw5g7.swift:7:11:\
    \ error: left side of mutating operator isn't mutable: 'n' is a 'let' constant\n\
    \        n += 1\n        ~ ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [1, 2]\n  \
    \  var i = 2\n    while fib_nums.count < n {\n        fib_nums.append(fib_nums[i-1]\
    \ + fib_nums[i-2])\n        i += 1\n    }\n    return fib_nums[n-1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpizz2tv0w/tmpizz2tv0w.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adb5b598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adb5b28fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adb5b28f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adb5b28e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpizz2tv0w                        0x000055fd167493c8 <unavailable> + 5064

    5    libc.so.6                          0x00002adb5b784460 __libc_start_main +
    245

    6    tmpizz2tv0w                        0x000055fd16749079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [Int]()\n    var\
    \ i = 0\n    var fib = 0\n    while fibs.count < n {\n        fib = fibonacci(i)\n\
    \        if is_prime(fib) {\n            fibs.append(fib)\n        }\n       \
    \ i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmputnz3if4.swift:8:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmputnz3if4.swift:9:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    var\
    \ i = 0\n    while fib.count < n {\n        fib.append(fibonacci(i))\n       \
    \ i += 1\n    }\n    return fib.filter(is_prime).last!\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpdphjpyqf.swift:7:20: error: cannot find 'fibonacci' in scope\n\
    \        fib.append(fibonacci(i))\n                   ^~~~~~~~~\n/tmp/tmpdphjpyqf.swift:10:23:\
    \ error: cannot find 'is_prime' in scope\n    return fib.filter(is_prime).last!\n\
    \                      ^~~~~~~~\n/tmp/tmpdphjpyqf.swift:10:23: error: converting\
    \ non-escaping value to '(Int) throws -> Bool' may allow it to escape\n    return\
    \ fib.filter(is_prime).last!\n                      ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i++\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj6et_lom.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmpj6et_lom.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpj6et_lom.swift:9:14: error: cannot find operator '++' in\
    \ scope; did you mean '+= 1'?\n            i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n\
    \    var k = 1\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        if is_prime(k) {\n            count++\n        }\n        i = j\n   \
    \     j = k\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpi5ds222l.swift:10:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n/tmp/tmpi5ds222l.swift:11:18:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  count++\n                 ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpskzq65mk/tmpskzq65mk.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac16bdf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac16baefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac16baef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac16baee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpskzq65mk                        0x00005565c891c368 <unavailable> + 4968

    5    libc.so.6                          0x00002ac16bfe4460 __libc_start_main +
    245

    6    tmpskzq65mk                        0x00005565c891c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [1, 1]\n  \
    \  var i = 2\n    while fib_nums.count < n {\n        fib_nums.append(fib_nums[i-1]\
    \ + fib_nums[i-2])\n        i += 1\n    }\n    return fib_nums[n-1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmp1qzm5xnj/tmp1qzm5xnj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3007e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3004d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3004d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3004d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1qzm5xnj                        0x00005571a18cd3c8 <unavailable> + 5064

    5    libc.so.6                          0x00002ab3009cd460 __libc_start_main +
    245

    6    tmp1qzm5xnj                        0x00005571a18cd079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i <= n {\n        fib.append(fib[i-1] + fib[i-2])\n       \
    \ i += 1\n    }\n    return fib[n]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpvs64ofyo/tmpvs64ofyo.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8120337c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b812002eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b812002e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b812002d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvs64ofyo                        0x0000564a74b54368 <unavailable> + 4968

    5    libc.so.6                          0x00002b8120523460 __libc_start_main +
    245

    6    tmpvs64ofyo                        0x0000564a74b54019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwkjrt4ur.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmwnlt3pe/tmpmwnlt3pe.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b607ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b5d75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b5d75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b5d747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwnlt3pe                        0x000055b82f9e8368 <unavailable> + 4968

    5    libc.so.6                          0x00002ba0b626a460 __libc_start_main +
    245

    6    tmpmwnlt3pe                        0x000055b82f9e8019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 1\n    while fib.count < n {\n        fib.append(fib[i] + fib[i-1])\n  \
    \      i += 1\n    }\n    return fib.filter { is_prime($0) }[n-1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpukgadetq.swift:10:25: error: cannot find 'is_prime' in scope\n\
    \    return fib.filter { is_prime($0) }[n-1]\n                        ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmwnlt3pe/tmpmwnlt3pe.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b607ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b5d75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b5d75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b5d747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwnlt3pe                        0x000055b82f9e8368 <unavailable> + 4968

    5    libc.so.6                          0x00002ba0b626a460 __libc_start_main +
    245

    6    tmpmwnlt3pe                        0x000055b82f9e8019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 1]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpmdvnjq0e/tmpmdvnjq0e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c07e48c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c07b3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c07b3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c07b3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdvnjq0e                        0x000056486d7d4368 <unavailable> + 4968

    5    libc.so.6                          0x00002b0c08034460 __libc_start_main +
    245

    6    tmpmdvnjq0e                        0x000056486d7d4019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpskzq65mk/tmpskzq65mk.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac16bdf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac16baefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac16baef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac16baee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpskzq65mk                        0x00005565c891c368 <unavailable> + 4968

    5    libc.so.6                          0x00002ac16bfe4460 __libc_start_main +
    245

    6    tmpskzq65mk                        0x00005565c891c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    var fib_prev = 0\n    var fib_prev_prev = 0\n    while i < n {\n        if\
    \ i == 0 {\n            fib = 1\n        } else if i == 1 {\n            fib =\
    \ 2\n        } else {\n            fib = fib_prev + fib_prev_prev\n        }\n\
    \        if is_prime(fib) {\n            i += 1\n        }\n        fib_prev_prev\
    \ = fib_prev\n        fib_prev = fib\n    }\n    return fib\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpp_iwd88e.swift:16:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp0gjgl4_r.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    var fib_prime = 0\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        if is_prime(fib[i]) {\n            fib_prime = fib[i]\n\
    \        }\n        i += 1\n    }\n    return fib_prime\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmptylyj9ae.swift:9:12: error: cannot find 'is_prime' in scope\n \
    \       if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs: [Int] = [1, 1]\n\
    \    var i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n\
    \        i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpravssy9k/tmpravssy9k.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5d2fc38c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5d2f92fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5d2f92f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5d2f92e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpravssy9k                        0x0000555924455368 <unavailable> + 4968

    5    libc.so.6                          0x00002b5d2fe24460 __libc_start_main +
    245

    6    tmpravssy9k                        0x0000555924455019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var f = 0\n\
    \    var f1 = 1\n    var f2 = 1\n    while i < n {\n        f = f1 + f2\n    \
    \    f1 = f2\n        f2 = f\n        if is_prime(f) {\n            i++\n    \
    \    }\n    }\n    return f\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp87suvi6u.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(f) {\n           ^~~~~~~~\n/tmp/tmp87suvi6u.swift:13:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 1]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpmdvnjq0e/tmpmdvnjq0e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c07e48c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c07b3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c07b3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c07b3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdvnjq0e                        0x000056486d7d4368 <unavailable> + 4968

    5    libc.so.6                          0x00002b0c08034460 __libc_start_main +
    245

    6    tmpmdvnjq0e                        0x000056486d7d4019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci()\n  \
    \  var prime = prime_gen()\n    var i = 0\n    var f = 0\n    var p = 0\n    while\
    \ i < n {\n        f = fib.next()!\n        p = prime.next()!\n        if f ==\
    \ p {\n            i++\n        }\n    }\n    return f\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp0y9upf13.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci()\n              ^~~~~~~~~\n/tmp/tmp0y9upf13.swift:5:17:\
    \ error: cannot find 'prime_gen' in scope\n    var prime = prime_gen()\n     \
    \           ^~~~~~~~~\n/tmp/tmp0y9upf13.swift:13:14: error: cannot find operator\
    \ '++' in scope; did you mean '+= 1'?\n            i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while fib.count < n {\n        fib.append(fib[i-1] + fib[i-2])\n\
    \        i += 1\n    }\n    return fib.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpyygpqq24.swift:10:23: error: cannot find 'is_prime' in scope\n\
    \    return fib.filter(is_prime).last!\n                      ^~~~~~~~\n/tmp/tmpyygpqq24.swift:10:23:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fib.filter(is_prime).last!\n                      ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci(n)\n \
    \   var i = 0\n    while !is_prime(fib) {\n        fib = fibonacci(n + i)\n  \
    \      i++\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjdusvwbc.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpjdusvwbc.swift:6:12:\
    \ error: cannot find 'is_prime' in scope\n    while !is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpjdusvwbc.swift:7:15: error: cannot find 'fibonacci' in\
    \ scope\n        fib = fibonacci(n + i)\n              ^~~~~~~~~\n/tmp/tmpjdusvwbc.swift:8:10:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n        i++\n\
    \         ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 1\n    var b = 1\n\
    \    var c = 0\n    var i = 1\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpg3dg3fnm.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(1)\n\
    \    fib.append(1)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    var j = 0\n    while !is_prime(fib[j])\
    \ {\n        j += 1\n    }\n    return fib[j]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1v0zcitd.swift:13:12: error: cannot find 'is_prime' in scope\n\
    \    while !is_prime(fib[j]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0, b = 1, c = 1\n\
    \    var i = 1\n    while i < n {\n        c = a + b\n        a = b\n        b\
    \ = c\n        if is_prime(c) {\n            i += 1\n        }\n    }\n    return\
    \ c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
    \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp3gm6_dhy.swift:10:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while fib.count < n {\n        fib.append(fib[i-1] + fib[i-2])\n\
    \        i += 1\n    }\n    return fib.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpyygpqq24.swift:10:23: error: cannot find 'is_prime' in scope\n\
    \    return fib.filter(is_prime).last!\n                      ^~~~~~~~\n/tmp/tmpyygpqq24.swift:10:23:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fib.filter(is_prime).last!\n                      ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 2]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmp4zsi9pyu/tmp4zsi9pyu.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abad9f2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abad9c22b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abad9c22988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abad9c217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zsi9pyu                        0x0000563653994368 <unavailable> + 4968

    5    libc.so.6                          0x00002abada117460 __libc_start_main +
    245

    6    tmp4zsi9pyu                        0x0000563653994019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp8s012cf8.swift:10:24: error: cannot find 'is_prime' in scope\n\
    \    return fibs.filter(is_prime).last!\n                       ^~~~~~~~\n/tmp/tmp8s012cf8.swift:10:24:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fibs.filter(is_prime).last!\n                       ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var f = 0\n\
    \    var f1 = 1\n    var f2 = 1\n    while i < n {\n        f = f1 + f2\n    \
    \    f1 = f2\n        f2 = f\n        if is_prime(f) {\n            i += 1\n \
    \       }\n    }\n    return f\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp30j7dyeu.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(f) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpskzq65mk/tmpskzq65mk.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac16bdf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac16baefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac16baef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac16baee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpskzq65mk                        0x00005565c891c368 <unavailable> + 4968

    5    libc.so.6                          0x00002ac16bfe4460 __libc_start_main +
    245

    6    tmpskzq65mk                        0x00005565c891c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [1, 1]\n  \
    \  var i = 2\n    var fib_num = 0\n    while i < n {\n        fib_num = fib_nums[i\
    \ - 1] + fib_nums[i - 2]\n        fib_nums.append(fib_num)\n        i += 1\n \
    \   }\n    return fib_num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwqk_s_41/tmpwqk_s_41.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adad546bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adad5162b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adad5162988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adad51617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwqk_s_41                        0x0000556368357368 <unavailable> + 4968

    5    libc.so.6                          0x00002adad5657460 __libc_start_main +
    245

    6    tmpwqk_s_41                        0x0000556368357019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i++\n        }\n \
    \   }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpaglalwzx.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n/tmp/tmpaglalwzx.swift:13:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while fib.count < n {\n        fib.append(fib[i-1] + fib[i-2])\n\
    \        i += 1\n    }\n    return fib.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1qy9qt39.swift:10:23: error: cannot find 'is_prime' in scope\n\
    \    return fib.filter(is_prime).last!\n                      ^~~~~~~~\n/tmp/tmp1qy9qt39.swift:10:23:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fib.filter(is_prime).last!\n                      ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i++\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj6et_lom.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmpj6et_lom.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpj6et_lom.swift:9:14: error: cannot find operator '++' in\
    \ scope; did you mean '+= 1'?\n            i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwkjrt4ur.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmwnlt3pe/tmpmwnlt3pe.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b607ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b5d75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b5d75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b5d747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwnlt3pe                        0x000055b82f9e8368 <unavailable> + 4968

    5    libc.so.6                          0x00002ba0b626a460 __libc_start_main +
    245

    6    tmpmwnlt3pe                        0x000055b82f9e8019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmwnlt3pe/tmpmwnlt3pe.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b607ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b5d75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b5d75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b5d747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwnlt3pe                        0x000055b82f9e8368 <unavailable> + 4968

    5    libc.so.6                          0x00002ba0b626a460 __libc_start_main +
    245

    6    tmpmwnlt3pe                        0x000055b82f9e8019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpskzq65mk/tmpskzq65mk.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac16bdf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac16baefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac16baef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac16baee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpskzq65mk                        0x00005565c891c368 <unavailable> + 4968

    5    libc.so.6                          0x00002ac16bfe4460 __libc_start_main +
    245

    6    tmpskzq65mk                        0x00005565c891c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i++\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj6et_lom.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmpj6et_lom.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpj6et_lom.swift:9:14: error: cannot find operator '++' in\
    \ scope; did you mean '+= 1'?\n            i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(k) {\n            count +=\
    \ 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqmocbn18.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpskzq65mk/tmpskzq65mk.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac16bdf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac16baefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac16baef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac16baee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpskzq65mk                        0x00005565c891c368 <unavailable> + 4968

    5    libc.so.6                          0x00002ac16bfe4460 __libc_start_main +
    245

    6    tmpskzq65mk                        0x00005565c891c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs: [Int] = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n\
    \        i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmppd9v9w5q/tmppd9v9w5q.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13d78d5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13d75ccb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13d75cc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13d75cb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd9v9w5q                        0x0000559d882134d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b13d7ac1460 __libc_start_main +
    245

    6    tmppd9v9w5q                        0x0000559d88213019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 1\n    var b = 1\n\
    \    var c = 0\n    var i = 1\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpg3dg3fnm.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmwnlt3pe/tmpmwnlt3pe.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b607ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b5d75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b5d75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b5d747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwnlt3pe                        0x000055b82f9e8368 <unavailable> + 4968

    5    libc.so.6                          0x00002ba0b626a460 __libc_start_main +
    245

    6    tmpmwnlt3pe                        0x000055b82f9e8019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [Int]()\n \
    \   var i = 0\n    while fib_nums.count < n {\n        if is_prime(i) {\n    \
    \        fib_nums.append(i)\n        }\n        i += 1\n    }\n    return fib_nums[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmputrv9tkj.swift:7:12: error: cannot find 'is_prime' in scope\n \
    \       if is_prime(i) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var x = 0\n    var y = 1\n\
    \    var z = 0\n    var i = 0\n    while i < n {\n        z = x + y\n        x\
    \ = y\n        y = z\n        if is_prime(z) {\n            i += 1\n        }\n\
    \    }\n    return z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwlehsyu9.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(z) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 2]\n    var\
    \ i = 2\n    while fibs.count < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n\
    \        i += 1\n    }\n    return fibs.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpv3k947f1.swift:10:24: error: cannot find 'is_prime' in scope\n\
    \    return fibs.filter(is_prime).last!\n                       ^~~~~~~~\n/tmp/tmpv3k947f1.swift:10:24:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fibs.filter(is_prime).last!\n                       ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpskzq65mk/tmpskzq65mk.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac16bdf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac16baefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac16baef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac16baee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpskzq65mk                        0x00005565c891c368 <unavailable> + 4968

    5    libc.so.6                          0x00002ac16bfe4460 __libc_start_main +
    245

    6    tmpskzq65mk                        0x00005565c891c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = Fibonacci()\n  \
    \  var prime = Prime()\n    var i = 0\n    var result = 0\n    while i < n {\n\
    \        let f = fib.next()\n        if prime.isPrime(f) {\n            result\
    \ = f\n            i += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp93keo4sy.swift:4:15: error: cannot find 'Fibonacci' in scope\n\
    \    var fib = Fibonacci()\n              ^~~~~~~~~\n/tmp/tmp93keo4sy.swift:5:17:\
    \ error: cannot find 'Prime' in scope\n    var prime = Prime()\n             \
    \   ^~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [Int]()\n    fibs.append(1)\n\
    \    fibs.append(1)\n    var i = 2\n    while i < n {\n        fibs.append(fibs[i-1]\
    \ + fibs[i-2])\n        i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpec2jdppx/tmpec2jdppx.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0fab4d5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0fab1ccb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0fab1cc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0fab1cb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpec2jdppx                        0x000055fe2520e2b8 <unavailable> + 4792

    5    libc.so.6                          0x00002b0fab6c1460 __libc_start_main +
    245

    6    tmpec2jdppx                        0x000055fe2520df69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwkjrt4ur.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [0, 1]\n  \
    \  var i = 2\n    while i <= n {\n        fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n\
    \        i += 1\n    }\n    return fib_nums[n]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp2n718m9g/tmp2n718m9g.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab4ce8aec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab4ce5a5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab4ce5a5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab4ce5a47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2n718m9g                        0x0000556c09dd1368 <unavailable> + 4968

    5    libc.so.6                          0x00002ab4cea9a460 __libc_start_main +
    245

    6    tmp2n718m9g                        0x0000556c09dd1019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpskzq65mk/tmpskzq65mk.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac16bdf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac16baefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac16baef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac16baee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpskzq65mk                        0x00005565c891c368 <unavailable> + 4968

    5    libc.so.6                          0x00002ac16bfe4460 __libc_start_main +
    245

    6    tmpskzq65mk                        0x00005565c891c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        if is_prime(k) {\n            count += 1\n        }\n        i = j\n\
    \        j = k\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpest57isr.swift:10:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 1]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpmdvnjq0e/tmpmdvnjq0e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c07e48c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c07b3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c07b3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c07b3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdvnjq0e                        0x000056486d7d4368 <unavailable> + 4968

    5    libc.so.6                          0x00002b0c08034460 __libc_start_main +
    245

    6    tmpmdvnjq0e                        0x000056486d7d4019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while fib.count < n {\n        fib.append(fib[i-1] + fib[i-2])\n\
    \        i += 1\n    }\n    return fib.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1qy9qt39.swift:10:23: error: cannot find 'is_prime' in scope\n\
    \    return fib.filter(is_prime).last!\n                      ^~~~~~~~\n/tmp/tmp1qy9qt39.swift:10:23:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fib.filter(is_prime).last!\n                      ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [0, 1]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmp72ebe8bx/tmp72ebe8bx.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0868d2cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0868a23b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0868a23988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0868a227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp72ebe8bx                        0x0000562bac87b368 <unavailable> + 4968

    5    libc.so.6                          0x00002b0868f18460 __libc_start_main +
    245

    6    tmp72ebe8bx                        0x0000562bac87b019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    var fib_prime = 0\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        if is_prime(fib[i]) {\n            fib_prime = fib[i]\n\
    \        }\n        i += 1\n    }\n    return fib_prime\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmptylyj9ae.swift:9:12: error: cannot find 'is_prime' in scope\n \
    \       if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpjvsulc5m/tmpjvsulc5m.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a6317fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a62e76b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a62e76988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a62e757b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjvsulc5m                        0x000055e3ed988368 <unavailable> + 4968

    5    libc.so.6                          0x00002b9a6336b460 __libc_start_main +
    245

    6    tmpjvsulc5m                        0x000055e3ed988019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci(n)\n \
    \   var i = 0\n    while !is_prime(fib) {\n        fib = fibonacci(n + i)\n  \
    \      i++\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjdusvwbc.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpjdusvwbc.swift:6:12:\
    \ error: cannot find 'is_prime' in scope\n    while !is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpjdusvwbc.swift:7:15: error: cannot find 'fibonacci' in\
    \ scope\n        fib = fibonacci(n + i)\n              ^~~~~~~~~\n/tmp/tmpjdusvwbc.swift:8:10:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n        i++\n\
    \         ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = fibonacci()\n\
    \    while i < n {\n        let num = fib.next()!\n        if is_prime(num) {\n\
    \            i++\n        }\n    }\n    return fib.next()!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpukai37mh.swift:5:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci()\n              ^~~~~~~~~\n/tmp/tmpukai37mh.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(num) {\n       \
    \    ^~~~~~~~\n/tmp/tmpukai37mh.swift:9:14: error: cannot find operator '++' in\
    \ scope; did you mean '+= 1'?\n            i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwkjrt4ur.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci(n)\n \
    \   var i = 0\n    while !is_prime(fib) {\n        fib = fibonacci(n + i)\n  \
    \      i++\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjdusvwbc.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpjdusvwbc.swift:6:12:\
    \ error: cannot find 'is_prime' in scope\n    while !is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpjdusvwbc.swift:7:15: error: cannot find 'fibonacci' in\
    \ scope\n        fib = fibonacci(n + i)\n              ^~~~~~~~~\n/tmp/tmpjdusvwbc.swift:8:10:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n        i++\n\
    \         ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [1, 1]\n  \
    \  var i = 2\n    while i < n {\n        fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n\
    \        i += 1\n    }\n    return fib_nums[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp54ggnxmh/tmp54ggnxmh.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5eaa268c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ea9f5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ea9f5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ea9f5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp54ggnxmh                        0x000055959211b368 <unavailable> + 4968

    5    libc.so.6                          0x00002b5eaa454460 __libc_start_main +
    245

    6    tmp54ggnxmh                        0x000055959211b019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 2]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmp4zsi9pyu/tmp4zsi9pyu.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abad9f2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abad9c22b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abad9c22988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abad9c217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zsi9pyu                        0x0000563653994368 <unavailable> + 4968

    5    libc.so.6                          0x00002abada117460 __libc_start_main +
    245

    6    tmp4zsi9pyu                        0x0000563653994019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmwnlt3pe/tmpmwnlt3pe.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b607ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b5d75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b5d75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b5d747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwnlt3pe                        0x000055b82f9e8368 <unavailable> + 4968

    5    libc.so.6                          0x00002ba0b626a460 __libc_start_main +
    245

    6    tmpmwnlt3pe                        0x000055b82f9e8019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [0, 1]\n    var\
    \ i = 2\n    while fibs.count < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n\
    \        i += 1\n    }\n    return fibs.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpei2q736f.swift:10:24: error: cannot find 'is_prime' in scope\n\
    \    return fibs.filter(is_prime).last!\n                       ^~~~~~~~\n/tmp/tmpei2q736f.swift:10:24:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fibs.filter(is_prime).last!\n                       ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 1\n    var i = 1\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmprjnhr3_h.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 1]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpmdvnjq0e/tmpmdvnjq0e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c07e48c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c07b3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c07b3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c07b3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdvnjq0e                        0x000056486d7d4368 <unavailable> + 4968

    5    libc.so.6                          0x00002b0c08034460 __libc_start_main +
    245

    6    tmpmdvnjq0e                        0x000056486d7d4019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 1]\n\
    \    var i = 2\n    var fib_number = 0\n    while i <= n {\n        fib_number\
    \ = fib_numbers[i - 1] + fib_numbers[i - 2]\n        fib_numbers.append(fib_number)\n\
    \        i += 1\n    }\n    return fib_number\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpjmwgb2qr/tmpjmwgb2qr.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4e60f3fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4e60c36b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4e60c36988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4e60c357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmwgb2qr                        0x000055818afe4368 <unavailable> + 4968

    5    libc.so.6                          0x00002b4e6112b460 __libc_start_main +
    245

    6    tmpjmwgb2qr                        0x000055818afe4019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(k) {\n            count +=\
    \ 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqmocbn18.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [0, 1]\n    var\
    \ i = 2\n    while fibs.count < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n\
    \        i += 1\n    }\n    return fibs.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpei2q736f.swift:10:24: error: cannot find 'is_prime' in scope\n\
    \    return fibs.filter(is_prime).last!\n                       ^~~~~~~~\n/tmp/tmpei2q736f.swift:10:24:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fibs.filter(is_prime).last!\n                       ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var n1 = 0\n    var n2 = 1\n\
    \    var n3 = 0\n    var i = 0\n    while i < n {\n        n3 = n1 + n2\n    \
    \    n1 = n2\n        n2 = n3\n        if is_prime(n3) {\n            i += 1\n\
    \        }\n    }\n    return n3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpxzftsud6.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n3) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwkjrt4ur.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var f1 = 1\n    var f2 = 1\n\
    \    var f3 = 1\n    var i = 2\n    while i < n {\n        f3 = f1 + f2\n    \
    \    f1 = f2\n        f2 = f3\n        i += 1\n    }\n    return f3\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpfqxah_oj/tmpfqxah_oj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b95eecfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b95ee9f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b95ee9f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b95ee9f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfqxah_oj                        0x000055844f8ab1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b95eeee8460 __libc_start_main +
    245

    6    tmpfqxah_oj                        0x000055844f8aae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpskzq65mk/tmpskzq65mk.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac16bdf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac16baefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac16baef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac16baee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpskzq65mk                        0x00005565c891c368 <unavailable> + 4968

    5    libc.so.6                          0x00002ac16bfe4460 __libc_start_main +
    245

    6    tmpskzq65mk                        0x00005565c891c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci(n)\n \
    \   var i = 0\n    while !is_prime(fib) {\n        fib = fibonacci(n + i)\n  \
    \      i++\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjdusvwbc.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpjdusvwbc.swift:6:12:\
    \ error: cannot find 'is_prime' in scope\n    while !is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpjdusvwbc.swift:7:15: error: cannot find 'fibonacci' in\
    \ scope\n        fib = fibonacci(n + i)\n              ^~~~~~~~~\n/tmp/tmpjdusvwbc.swift:8:10:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n        i++\n\
    \         ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [Int]()\n\
    \    var i = 0\n    var j = 1\n    var k = 0\n    while k < n {\n        let fib\
    \ = i + j\n        if is_prime(fib) {\n            fib_numbers.append(fib)\n \
    \           k += 1\n        }\n        i = j\n        j = fib\n    }\n    return\
    \ fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpp3e_fw3t.swift:10:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [0, 1]\n  \
    \  var i = 2\n    var fib_num = 0\n    while i <= n {\n        fib_num = fib_nums[i\
    \ - 1] + fib_nums[i - 2]\n        if is_prime(num: fib_num) {\n            fib_nums.append(fib_num)\n\
    \            i += 1\n        }\n    }\n    return fib_num\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpnoa93alh.swift:9:12: error: cannot find 'is_prime' in scope\n \
    \       if is_prime(num: fib_num) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [0, 1]\n\
    \    var i = 2\n    while i <= n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n]\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmp6wbjnxcd/tmp6wbjnxcd.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f4dbc3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f4d8bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f4d8ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f4d8b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6wbjnxcd                        0x0000560c94f5a368 <unavailable> + 4968

    5    libc.so.6                          0x00002b4f4ddaf460 __libc_start_main +
    245

    6    tmp6wbjnxcd                        0x0000560c94f5a019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmwnlt3pe/tmpmwnlt3pe.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b607ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b5d75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b5d75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b5d747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwnlt3pe                        0x000055b82f9e8368 <unavailable> + 4968

    5    libc.so.6                          0x00002ba0b626a460 __libc_start_main +
    245

    6    tmpmwnlt3pe                        0x000055b82f9e8019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while true {\n        let fib = fibs[i - 1] + fibs[i - 2]\n     \
    \   if is_prime(fib) {\n            fibs.append(fib)\n            i += 1\n   \
    \     }\n        if i == n {\n            return fib\n        }\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqw7_tyij.swift:8:12: error: cannot find 'is_prime' in scope\n \
    \       if is_prime(fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 1\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(k) {\n            count +=\
    \ 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpoajor_z7.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    var fib_prev = 0\n    while i < n {\n        if is_prime(fib) {\n       \
    \     i += 1\n        }\n        fib_prev = fib\n        fib = fib + fib_prev\n\
    \    }\n    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpvlxmeprd.swift:8:12: error: cannot find 'is_prime' in scope\n \
    \       if is_prime(fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmwnlt3pe/tmpmwnlt3pe.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b607ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b5d75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b5d75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b5d747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwnlt3pe                        0x000055b82f9e8368 <unavailable> + 4968

    5    libc.so.6                          0x00002ba0b626a460 __libc_start_main +
    245

    6    tmpmwnlt3pe                        0x000055b82f9e8019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 1]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpmdvnjq0e/tmpmdvnjq0e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c07e48c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c07b3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c07b3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c07b3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdvnjq0e                        0x000056486d7d4368 <unavailable> + 4968

    5    libc.so.6                          0x00002b0c08034460 __libc_start_main +
    245

    6    tmpmdvnjq0e                        0x000056486d7d4019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(k) {\n            count +=\
    \ 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqmocbn18.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(k) {\n            count +=\
    \ 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqmocbn18.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp0gjgl4_r.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var f = 0\n\
    \    var f1 = 1\n    var f2 = 1\n    while i < n {\n        if is_prime(f) {\n\
    \            i += 1\n        }\n        f = f1 + f2\n        f1 = f2\n       \
    \ f2 = f\n    }\n    return f\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpfhemyaln.swift:9:12: error: cannot find 'is_prime' in scope\n \
    \       if is_prime(f) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci(n)\n \
    \   while !is_prime(fib) {\n        fib = fibonacci(n)\n        n += 1\n    }\n\
    \    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpdsmfw5g7.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpdsmfw5g7.swift:5:12:\
    \ error: cannot find 'is_prime' in scope\n    while !is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpdsmfw5g7.swift:6:15: error: cannot find 'fibonacci' in\
    \ scope\n        fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpdsmfw5g7.swift:7:11:\
    \ error: left side of mutating operator isn't mutable: 'n' is a 'let' constant\n\
    \        n += 1\n        ~ ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp8s012cf8.swift:10:24: error: cannot find 'is_prime' in scope\n\
    \    return fibs.filter(is_prime).last!\n                       ^~~~~~~~\n/tmp/tmp8s012cf8.swift:10:24:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fibs.filter(is_prime).last!\n                       ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [1, 2]\n\
    \    var i = 2\n    while fib_numbers.count < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpipi059my/tmpipi059my.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba5638bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba5635b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba5635b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba5635b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpipi059my                        0x00005584b1ca83c8 <unavailable> + 5064

    5    libc.so.6                          0x00002ba563aaa460 __libc_start_main +
    245

    6    tmpipi059my                        0x00005584b1ca8079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013637
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpskzq65mk/tmpskzq65mk.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac16bdf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac16baefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac16baef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac16baee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpskzq65mk                        0x00005565c891c368 <unavailable> + 4968

    5    libc.so.6                          0x00002ac16bfe4460 __libc_start_main +
    245

    6    tmpskzq65mk                        0x00005565c891c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 0\n    while fib.count < n {\n        fib.append(fib[i] + fib[i+1])\n  \
    \      i += 1\n    }\n    return fib.filter(is_prime).last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpebculvsc.swift:10:23: error: cannot find 'is_prime' in scope\n\
    \    return fib.filter(is_prime).last!\n                      ^~~~~~~~\n/tmp/tmpebculvsc.swift:10:23:\
    \ error: converting non-escaping value to '(Int) throws -> Bool' may allow it\
    \ to escape\n    return fib.filter(is_prime).last!\n                      ^\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwkjrt4ur.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwkjrt4ur.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib: [Int] = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n \
    \       i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprjr6o9tn/tmprjr6o9tn.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af971fb7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af971caeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af971cae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af971cad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprjr6o9tn                        0x000056204c50b4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002af9721a3460 __libc_start_main +
    245

    6    tmprjr6o9tn                        0x000056204c50b019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [0, 1]\n\
    \    var i = 2\n    while i <= n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n]\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmp6wbjnxcd/tmp6wbjnxcd.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f4dbc3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f4d8bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f4d8ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f4d8b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6wbjnxcd                        0x0000560c94f5a368 <unavailable> + 4968

    5    libc.so.6                          0x00002b4f4ddaf460 __libc_start_main +
    245

    6    tmp6wbjnxcd                        0x0000560c94f5a019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(k) {\n            count +=\
    \ 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqmocbn18.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var prime_fibs = [2, 3, 5,\
    \ 13, 89, 233, 1597, 28657, 514229, 433494437, 2971215073, 99194853094755497]\n\
    \    return prime_fibs[n]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprulapsa5/tmprulapsa5.swift:21: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a38114c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a37e0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a37e0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a37e0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprulapsa5                        0x000055d06628b318 <unavailable> + 4888

    5    libc.so.6                          0x00002b7a38300460 __libc_start_main +
    245

    6    tmprulapsa5                        0x000055d06628afc9 <unavailable> + 4041

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp38dvgs_n/tmp38dvgs_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1420517c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b142020eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b142020e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b142020d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38dvgs_n                        0x00005609eb987368 <unavailable> + 4968

    5    libc.so.6                          0x00002b1420703460 __libc_start_main +
    245

    6    tmp38dvgs_n                        0x00005609eb987019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci()\n  \
    \  var i = 0\n    while i < n {\n        let f = fib.next()!\n        if is_prime(f)\
    \ {\n            i++\n        }\n    }\n    return fib.next()!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp2ijva_vt.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci()\n              ^~~~~~~~~\n/tmp/tmp2ijva_vt.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(f) {\n         \
    \  ^~~~~~~~\n/tmp/tmp2ijva_vt.swift:9:14: error: cannot find operator '++' in\
    \ scope; did you mean '+= 1'?\n            i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n \
    \           i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zhi830l.swift:7:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp_zhi830l.swift:8:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpe7c3iyov/tmpe7c3iyov.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad016818c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01650fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01650f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01650e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7c3iyov                        0x0000561861333368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad016a04460 __libc_start_main +
    245

    6    tmpe7c3iyov                        0x0000561861333019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = [0, 1]\n    var\
    \ i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmwnlt3pe/tmpmwnlt3pe.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b607ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b5d75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b5d75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b5d747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwnlt3pe                        0x000055b82f9e8368 <unavailable> + 4968

    5    libc.so.6                          0x00002ba0b626a460 __libc_start_main +
    245

    6    tmpmwnlt3pe                        0x000055b82f9e8019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(k) {\n            count +=\
    \ 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqmocbn18.swift:12:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fibs: [Int] = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n\
    \        i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmppd9v9w5q/tmppd9v9w5q.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13d78d5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13d75ccb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13d75cc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13d75cb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd9v9w5q                        0x0000559d882134d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b13d7ac1460 __libc_start_main +
    245

    6    tmppd9v9w5q                        0x0000559d88213019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci()\n  \
    \  var prime = prime_numbers()\n    var i = 0\n    while i < n {\n        if fib.next()\
    \ == prime.next() {\n            i++\n        }\n    }\n    return fib.next()!\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpul2kp_j0.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci()\n              ^~~~~~~~~\n/tmp/tmpul2kp_j0.swift:5:17:\
    \ error: cannot find 'prime_numbers' in scope\n    var prime = prime_numbers()\n\
    \                ^~~~~~~~~~~~~\n/tmp/tmpul2kp_j0.swift:9:14: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            i++\n            \
    \ ^~\n"
  stdout: ''
  timestamp: 1660013636
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci(n)\n \
    \   while !is_prime(fib) {\n        fib = fibonacci(n)\n        n += 1\n    }\n\
    \    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpdsmfw5g7.swift:4:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpdsmfw5g7.swift:5:12:\
    \ error: cannot find 'is_prime' in scope\n    while !is_prime(fib) {\n       \
    \    ^~~~~~~~\n/tmp/tmpdsmfw5g7.swift:6:15: error: cannot find 'fibonacci' in\
    \ scope\n        fib = fibonacci(n)\n              ^~~~~~~~~\n/tmp/tmpdsmfw5g7.swift:7:11:\
    \ error: left side of mutating operator isn't mutable: 'n' is a 'let' constant\n\
    \        n += 1\n        ~ ^\n"
  stdout: ''
  timestamp: 1660013636

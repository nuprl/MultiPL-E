name: HumanEval_136_largest_smallest_integers
language: swift
prompt: "\n/// Create a function that returns a tuple (a, b), where 'a' is\n/// the\
  \ largest of negative integers, and 'b' is the smallest\n/// of positive integers\
  \ in a list.\n/// If there is no negative or positive integers, return them as None.\n\
  /// Examples:\nfunc largest_smallest_integers(lst: [Int]) -> (Int?, Int?) {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(largest_smallest_integers(lst: [2, 4, 1,\
  \ 3, 5, 7]) == (nil, 1))\nassert(largest_smallest_integers(lst: [2, 4, 1, 3, 5,\
  \ 7, 0]) == (nil, 1))\nassert(largest_smallest_integers(lst: [1, 3, 2, 4, 5, 6,\
  \ -2]) == (-2, 1))\nassert(largest_smallest_integers(lst: [4, 5, 3, 6, 2, 7, -7])\
  \ == (-7, 2))\nassert(largest_smallest_integers(lst: [7, 3, 8, 4, 9, 2, 5, -9])\
  \ == (-9, 2))\nassert(largest_smallest_integers(lst: [] as [Int]) == (nil, nil))\n\
  assert(largest_smallest_integers(lst: [0]) == (nil, nil))\nassert(largest_smallest_integers(lst:\
  \ [-1, -3, -5, -6]) == (-1, nil))\nassert(largest_smallest_integers(lst: [-1, -3,\
  \ -5, -6, 0]) == (-1, nil))\nassert(largest_smallest_integers(lst: [-6, -4, -4,\
  \ -3, 1]) == (-3, 1))\nassert(largest_smallest_integers(lst: [-6, -4, -4, -3, -100,\
  \ 1]) == (-3, 1))"
completions: ["    var largest: Int? = nil\n    var smallest: Int? = nil\n    for\
    \ i in lst {\n        if i < 0 {\n            if largest == nil {\n          \
    \      largest = i\n            } else if i > largest! {\n                largest\
    \ = i\n            }\n        } else if i > 0 {\n            if smallest == nil\
    \ {\n                smallest = i\n            } else if i < smallest! {\n   \
    \             smallest = i\n            }\n        }\n    }\n    return (largest,\
    \ smallest)", '    return (nil, nil)', "    var largest: Int? = nil\n    var smallest:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largest ==\
    \ nil {\n                largest = i\n            } else if i > largest! {\n \
    \               largest = i\n            }\n        } else if i > 0 {\n      \
    \      if smallest == nil {\n                smallest = i\n            } else\
    \ if i < smallest! {\n                smallest = i\n            }\n        }\n\
    \    }\n    return (largest, smallest)", "    let negative = lst.filter { $0 <\
    \ 0 }\n    let positive = lst.filter { $0 > 0 }\n    return (negative.max(), positive.min())",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var smallest: Int? = nil\n    var largest: Int? = nil\n    for i in lst {\n\
    \        if i < 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i > smallest! {\n                smallest = i\n \
    \           }\n        } else if i > 0 {\n            if largest == nil {\n  \
    \              largest = i\n            } else if i < largest! {\n           \
    \     largest = i\n            }\n        }\n    }\n    return (smallest, largest)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for num in lst {\n        if num < 0 {\n            if largestNegative == nil\
    \ {\n                largestNegative = num\n            } else if num > largestNegative!\
    \ {\n                largestNegative = num\n            }\n        } else if num\
    \ > 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = num\n            } else if num < smallestPositive! {\n                smallestPositive\
    \ = num\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    let negatives = lst.filter { $0 < 0 }\n    let positives = lst.filter { $0\
    \ > 0 }\n    return (negatives.max(), positives.min())", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n     \
    \   if i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largest: Int? = nil\n\
    \    var smallest: Int? = nil\n    for i in lst {\n        if i < 0 {\n      \
    \      if largest == nil {\n                largest = i\n            } else if\
    \ i > largest! {\n                largest = i\n            }\n        } else if\
    \ i > 0 {\n            if smallest == nil {\n                smallest = i\n  \
    \          } else if i < smallest! {\n                smallest = i\n         \
    \   }\n        }\n    }\n    return (largest, smallest)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n     \
    \   if i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var maxNegative: Int? =\
    \ nil\n    var minPositive: Int? = nil\n    for i in lst {\n        if i < 0 {\n\
    \            if maxNegative == nil {\n                maxNegative = i\n      \
    \      } else if i > maxNegative! {\n                maxNegative = i\n       \
    \     }\n        } else if i > 0 {\n            if minPositive == nil {\n    \
    \            minPositive = i\n            } else if i < minPositive! {\n     \
    \           minPositive = i\n            }\n        }\n    }\n    return (maxNegative,\
    \ minPositive)", "    var largest_negative: Int? = nil\n    var smallest_positive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largest_negative\
    \ == nil {\n                largest_negative = i\n            } else if i > largest_negative!\
    \ {\n                largest_negative = i\n            }\n        } else if i\
    \ > 0 {\n            if smallest_positive == nil {\n                smallest_positive\
    \ = i\n            } else if i < smallest_positive! {\n                smallest_positive\
    \ = i\n            }\n        }\n    }\n    return (largest_negative, smallest_positive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for num in lst {\n        if num < 0 {\n            if largestNegative == nil\
    \ {\n                largestNegative = num\n            } else if num > largestNegative!\
    \ {\n                largestNegative = num\n            }\n        } else if num\
    \ > 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = num\n            } else if num < smallestPositive! {\n                smallestPositive\
    \ = num\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for num in lst {\n        if num < 0 {\n            if largestNegative == nil\
    \ {\n                largestNegative = num\n            } else if num > largestNegative!\
    \ {\n                largestNegative = num\n            }\n        } else if num\
    \ > 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = num\n            } else if num < smallestPositive! {\n                smallestPositive\
    \ = num\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largest_negative: Int? = nil\n    var smallest_positive: Int? = nil\n \
    \   for i in lst {\n        if i < 0 {\n            if largest_negative == nil\
    \ {\n                largest_negative = i\n            } else if i > largest_negative!\
    \ {\n                largest_negative = i\n            }\n        } else if i\
    \ > 0 {\n            if smallest_positive == nil {\n                smallest_positive\
    \ = i\n            } else if i < smallest_positive! {\n                smallest_positive\
    \ = i\n            }\n        }\n    }\n    return (largest_negative, smallest_positive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for number in lst {\n        if number < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = number\n            } else if number\
    \ > largestNegative! {\n                largestNegative = number\n           \
    \ }\n        } else if number > 0 {\n            if smallestPositive == nil {\n\
    \                smallestPositive = number\n            } else if number < smallestPositive!\
    \ {\n                smallestPositive = number\n            }\n        }\n   \
    \ }\n    return (largestNegative, smallestPositive)", '    return (nil, nil)',
  "    var largest_negative: Int? = nil\n    var smallest_positive: Int? = nil\n \
    \   for i in lst {\n        if i < 0 {\n            if largest_negative == nil\
    \ {\n                largest_negative = i\n            } else if i > largest_negative!\
    \ {\n                largest_negative = i\n            }\n        } else if i\
    \ > 0 {\n            if smallest_positive == nil {\n                smallest_positive\
    \ = i\n            } else if i < smallest_positive! {\n                smallest_positive\
    \ = i\n            }\n        }\n    }\n    return (largest_negative, smallest_positive)",
  "    var neg: Int? = nil\n    var pos: Int? = nil\n    for i in lst {\n        if\
    \ i < 0 {\n            if neg == nil {\n                neg = i\n            }\
    \ else if i > neg! {\n                neg = i\n            }\n        } else if\
    \ i > 0 {\n            if pos == nil {\n                pos = i\n            }\
    \ else if i < pos! {\n                pos = i\n            }\n        }\n    }\n\
    \    return (neg, pos)", "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n\
    \        if i < 0 {\n            if largest == nil {\n                largest\
    \ = i\n            } else if i > largest! {\n                largest = i\n   \
    \         }\n        } else if i > 0 {\n            if smallest == nil {\n   \
    \             smallest = i\n            } else if i < smallest! {\n          \
    \      smallest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  '    return (nil, nil)', "    let negatives = lst.filter { $0 < 0 }\n    let positives\
    \ = lst.filter { $0 > 0 }\n    let largestNegative = negatives.max()\n    let\
    \ smallestPositive = positives.min()\n    return (largestNegative, smallestPositive)",
  "    var largest_negative: Int? = nil\n    var smallest_positive: Int? = nil\n \
    \   for i in lst {\n        if i < 0 {\n            if largest_negative == nil\
    \ {\n                largest_negative = i\n            } else if i > largest_negative!\
    \ {\n                largest_negative = i\n            }\n        } else if i\
    \ > 0 {\n            if smallest_positive == nil {\n                smallest_positive\
    \ = i\n            } else if i < smallest_positive! {\n                smallest_positive\
    \ = i\n            }\n        }\n    }\n    return (largest_negative, smallest_positive)",
  '    return (nil, nil)', "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  '    return (nil, nil)', "    var largest_negative: Int? = nil\n    var smallest_positive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largest_negative\
    \ == nil {\n                largest_negative = i\n            } else if i > largest_negative!\
    \ {\n                largest_negative = i\n            }\n        } else if i\
    \ > 0 {\n            if smallest_positive == nil {\n                smallest_positive\
    \ = i\n            } else if i < smallest_positive! {\n                smallest_positive\
    \ = i\n            }\n        }\n    }\n    return (largest_negative, smallest_positive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for num in lst {\n        if num < 0 {\n            if largestNegative == nil\
    \ {\n                largestNegative = num\n            } else if num > largestNegative!\
    \ {\n                largestNegative = num\n            }\n        } else if num\
    \ > 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = num\n            } else if num < smallestPositive! {\n                smallestPositive\
    \ = num\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    let negatives = lst.filter { $0 < 0 }\n    let positives = lst.filter { $0\
    \ > 0 }\n    let largestNegative = negatives.max()\n    let smallestPositive =\
    \ positives.min()\n    return (largestNegative, smallestPositive)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n     \
    \   if i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", '    return (nil, nil)', '    return
    (nil, nil)', "    var largestNegative: Int? = nil\n    var smallestPositive: Int?\
    \ = nil\n    for i in lst {\n        if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for num in lst {\n\
    \        if num < 0 {\n            if largest == nil {\n                largest\
    \ = num\n            } else if num > largest! {\n                largest = num\n\
    \            }\n        } else if num > 0 {\n            if smallest == nil {\n\
    \                smallest = num\n            } else if num < smallest! {\n   \
    \             smallest = num\n            }\n        }\n    }\n    return (largest,\
    \ smallest)", '    return (nil, nil)', "    var largestNegative: Int? = nil\n\
    \    var smallestPositive: Int? = nil\n    for i in lst {\n        if i > 0 {\n\
    \            if smallestPositive == nil {\n                smallestPositive =\
    \ i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        } else if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        }\n    }\n  \
    \  return (largestNegative, smallestPositive)", '    return (nil, nil)', "   \
    \ var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n\
    \        if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        } else if i < 0 {\n            if largest == nil {\n  \
    \              largest = i\n            } else if i > largest! {\n           \
    \     largest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n\
    \        if i < 0 {\n            if largest == nil {\n                largest\
    \ = i\n            } else if i > largest! {\n                largest = i\n   \
    \         }\n        } else if i > 0 {\n            if smallest == nil {\n   \
    \             smallest = i\n            } else if i < smallest! {\n          \
    \      smallest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n\
    \        if i < 0 {\n            if largest == nil {\n                largest\
    \ = i\n            } else if i > largest! {\n                largest = i\n   \
    \         }\n        } else if i > 0 {\n            if smallest == nil {\n   \
    \             smallest = i\n            } else if i < smallest! {\n          \
    \      smallest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  '    return (nil, nil)', "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for num in lst {\n        if num < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = num\n            } else if num >\
    \ largestNegative! {\n                largestNegative = num\n            }\n \
    \       } else if num > 0 {\n            if smallestPositive == nil {\n      \
    \          smallestPositive = num\n            } else if num < smallestPositive!\
    \ {\n                smallestPositive = num\n            }\n        }\n    }\n\
    \    return (largestNegative, smallestPositive)", "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n        if\
    \ i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var smallest: Int? = nil\n\
    \    var largest: Int? = nil\n    for i in lst {\n        if i < 0 {\n       \
    \     if smallest == nil {\n                smallest = i\n            } else if\
    \ i > smallest! {\n                smallest = i\n            }\n        } else\
    \ if i > 0 {\n            if largest == nil {\n                largest = i\n \
    \           } else if i < largest! {\n                largest = i\n          \
    \  }\n        }\n    }\n    return (smallest, largest)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n     \
    \   if i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", '    return (nil, nil)', "  \
    \  var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for n in lst {\n        if n < 0 {\n            if largestNegative == nil ||\
    \ n > largestNegative! {\n                largestNegative = n\n            }\n\
    \        } else {\n            if smallestPositive == nil || n < smallestPositive!\
    \ {\n                smallestPositive = n\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n        if\
    \ i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n        if\
    \ i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largest: Int? = nil\n\
    \    var smallest: Int? = nil\n    for i in lst {\n        if i < 0 {\n      \
    \      if largest == nil {\n                largest = i\n            } else if\
    \ i > largest! {\n                largest = i\n            }\n        } else if\
    \ i > 0 {\n            if smallest == nil {\n                smallest = i\n  \
    \          } else if i < smallest! {\n                smallest = i\n         \
    \   }\n        }\n    }\n    return (largest, smallest)", '    return (lst.filter({
    $0 < 0 }).max(), lst.filter({ $0 > 0 }).min())', "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n        if\
    \ i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", '    return (nil, nil)', "  \
    \  var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    let negatives = lst.filter { $0 < 0 }\n    let positives = lst.filter { $0\
    \ > 0 }\n    return (negatives.max(), positives.min())", "    var min = Int.max\n\
    \    var max = Int.min\n    for i in lst {\n        if i < 0 {\n            if\
    \ i > max {\n                max = i\n            }\n        } else {\n      \
    \      if i < min {\n                min = i\n            }\n        }\n    }\n\
    \    if min == Int.max {\n        min = nil\n    }\n    if max == Int.min {\n\
    \        max = nil\n    }\n    return (max, min)", "    let negative = lst.filter\
    \ { $0 < 0 }\n    let positive = lst.filter { $0 > 0 }\n    return (negative.max(),\
    \ positive.min())", "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  '    return (nil, nil)', "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  '    return (nil, nil)', "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largest_negative: Int? = nil\n    var smallest_positive: Int? = nil\n \
    \   for i in lst {\n        if i < 0 {\n            if largest_negative == nil\
    \ {\n                largest_negative = i\n            } else if i > largest_negative!\
    \ {\n                largest_negative = i\n            }\n        } else if i\
    \ > 0 {\n            if smallest_positive == nil {\n                smallest_positive\
    \ = i\n            } else if i < smallest_positive! {\n                smallest_positive\
    \ = i\n            }\n        }\n    }\n    return (largest_negative, smallest_positive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n\
    \        if i < 0 {\n            if largest == nil {\n                largest\
    \ = i\n            } else if i > largest! {\n                largest = i\n   \
    \         }\n        } else if i > 0 {\n            if smallest == nil {\n   \
    \             smallest = i\n            } else if i < smallest! {\n          \
    \      smallest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  "    let negatives = lst.filter({ $0 < 0 })\n    let positives = lst.filter({ $0\
    \ > 0 })\n    return (negatives.max(), positives.min())", "    var min_pos: Int?\
    \ = nil\n    var max_neg: Int? = nil\n    for i in lst {\n        if i > 0 {\n\
    \            if min_pos == nil {\n                min_pos = i\n            } else\
    \ if i < min_pos! {\n                min_pos = i\n            }\n        } else\
    \ if i < 0 {\n            if max_neg == nil {\n                max_neg = i\n \
    \           } else if i > max_neg! {\n                max_neg = i\n          \
    \  }\n        }\n    }\n    return (max_neg, min_pos)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n     \
    \   if i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", '    return (nil, nil)', "  \
    \  if lst.isEmpty {\n        return (nil, nil)\n    }\n    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n     \
    \   if i < 0 {\n            if let largestNegative = largestNegative {\n     \
    \           if i > largestNegative {\n                    largestNegative = i\n\
    \                }\n            } else {\n                largestNegative = i\n\
    \            }\n        } else {\n            if let smallestPositive = smallestPositive\
    \ {\n                if i < smallestPositive {\n                    smallestPositive\
    \ = i\n                }\n            } else {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  '    return (nil, nil)', "    var smallest: Int? = nil\n    var largest: Int? =\
    \ nil\n    for i in lst {\n        if i > 0 {\n            if smallest == nil\
    \ {\n                smallest = i\n            } else if i < smallest! {\n   \
    \             smallest = i\n            }\n        } else if i < 0 {\n       \
    \     if largest == nil {\n                largest = i\n            } else if\
    \ i > largest! {\n                largest = i\n            }\n        }\n    }\n\
    \    return (largest, smallest)", "    var largestNegative: Int? = nil\n    var\
    \ smallestPositive: Int? = nil\n    for num in lst {\n        if num < 0 {\n \
    \           if largestNegative == nil {\n                largestNegative = num\n\
    \            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", '    return
    (nil, nil)', "    var largestNegative: Int? = nil\n    var smallestPositive: Int?\
    \ = nil\n    for num in lst {\n        if num < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = num\n            } else if num >\
    \ largestNegative! {\n                largestNegative = num\n            }\n \
    \       } else if num > 0 {\n            if smallestPositive == nil {\n      \
    \          smallestPositive = num\n            } else if num < smallestPositive!\
    \ {\n                smallestPositive = num\n            }\n        }\n    }\n\
    \    return (largestNegative, smallestPositive)", '    return (nil, nil)', '    return
    (nil, nil)', "    var smallest: Int? = nil\n    var largest: Int? = nil\n    for\
    \ num in lst {\n        if num > 0 {\n            if smallest == nil {\n     \
    \           smallest = num\n            } else if num < smallest! {\n        \
    \        smallest = num\n            }\n        } else if num < 0 {\n        \
    \    if largest == nil {\n                largest = num\n            } else if\
    \ num > largest! {\n                largest = num\n            }\n        }\n\
    \    }\n    return (largest, smallest)", "    var largestNegative: Int? = nil\n\
    \    var smallestPositive: Int? = nil\n    for num in lst {\n        if num <\
    \ 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", '    return
    (nil, nil)', "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for\
    \ num in lst {\n        if num < 0 {\n            if largest == nil {\n      \
    \          largest = num\n            } else if num > largest! {\n           \
    \     largest = num\n            }\n        } else if num > 0 {\n            if\
    \ smallest == nil {\n                smallest = num\n            } else if num\
    \ < smallest! {\n                smallest = num\n            }\n        }\n  \
    \  }\n    return (largest, smallest)", '    return (0, 0)', "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n   \
    \     if num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    let negatives\
    \ = lst.filter { $0 < 0 }\n    let positives = lst.filter { $0 > 0 }\n    return\
    \ (negatives.max(), positives.min())", '    return (nil, nil)', "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n     \
    \   if i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", '    return (nil, nil)', "  \
    \  let negatives = lst.filter { $0 < 0 }\n    let positives = lst.filter { $0\
    \ > 0 }\n    return (negatives.max(), positives.min())", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n   \
    \     if num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n   \
    \     if num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", '    return
    (nil, nil)', "    var largestNegative: Int? = nil\n    var smallestPositive: Int?\
    \ = nil\n    for num in lst {\n        if num < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = num\n            } else if num >\
    \ largestNegative! {\n                largestNegative = num\n            }\n \
    \       } else if num > 0 {\n            if smallestPositive == nil {\n      \
    \          smallestPositive = num\n            } else if num < smallestPositive!\
    \ {\n                smallestPositive = num\n            }\n        }\n    }\n\
    \    return (largestNegative, smallestPositive)", "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n        if\
    \ num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    var largest:\
    \ Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n        if i <\
    \ 0 {\n            if largest == nil {\n                largest = i\n        \
    \    } else if i > largest! {\n                largest = i\n            }\n  \
    \      } else if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        }\n    }\n    return (largest, smallest)", "    let negatives\
    \ = lst.filter { $0 < 0 }\n    let positives = lst.filter { $0 > 0 }\n    return\
    \ (negatives.max(), positives.min())", "    var neg_max: Int? = nil\n    var pos_min:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if neg_max ==\
    \ nil {\n                neg_max = i\n            } else if i > neg_max! {\n \
    \               neg_max = i\n            }\n        } else if i > 0 {\n      \
    \      if pos_min == nil {\n                pos_min = i\n            } else if\
    \ i < pos_min! {\n                pos_min = i\n            }\n        }\n    }\n\
    \    return (neg_max, pos_min)", "    var largestNegative: Int? = nil\n    var\
    \ smallestPositive: Int? = nil\n    for i in lst {\n        if i < 0 {\n     \
    \       if largestNegative == nil {\n                largestNegative = i\n   \
    \         } else if i > largestNegative! {\n                largestNegative =\
    \ i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largest: Int? = nil\n\
    \    var smallest: Int? = nil\n    for i in lst {\n        if i > 0 {\n      \
    \      if smallest == nil {\n                smallest = i\n            } else\
    \ if i < smallest! {\n                smallest = i\n            }\n        } else\
    \ if i < 0 {\n            if largest == nil {\n                largest = i\n \
    \           } else if i > largest! {\n                largest = i\n          \
    \  }\n        }\n    }\n    return (largest, smallest)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n     \
    \   if i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n        if\
    \ num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n   \
    \     if num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    let negatives\
    \ = lst.filter { $0 < 0 }\n    let positives = lst.filter { $0 > 0 }\n    return\
    \ (negatives.max(), positives.min())", "    let negatives = lst.filter({ $0 <\
    \ 0 })\n    let positives = lst.filter({ $0 > 0 })\n    return (negatives.max(),\
    \ positives.min())", "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for num in lst {\n        if num < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = num\n            } else if num >\
    \ largestNegative! {\n                largestNegative = num\n            }\n \
    \       } else if num > 0 {\n            if smallestPositive == nil {\n      \
    \          smallestPositive = num\n            } else if num < smallestPositive!\
    \ {\n                smallestPositive = num\n            }\n        }\n    }\n\
    \    return (largestNegative, smallestPositive)", '    return (nil, nil)', " \
    \   var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n\
    \        if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        } else if i < 0 {\n            if largest == nil {\n  \
    \              largest = i\n            } else if i > largest! {\n           \
    \     largest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n\
    \        if i < 0 {\n            if largest == nil {\n                largest\
    \ = i\n            } else if i > largest! {\n                largest = i\n   \
    \         }\n        } else if i > 0 {\n            if smallest == nil {\n   \
    \             smallest = i\n            } else if i < smallest! {\n          \
    \      smallest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var smallest: Int? = nil\n    var largest: Int? = nil\n    for i in lst {\n\
    \        if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        } else if i < 0 {\n            if largest == nil {\n  \
    \              largest = i\n            } else if i > largest! {\n           \
    \     largest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  '    return (nil, nil)', '    return (nil, nil)', "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n        if\
    \ num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", '    return
    (nil, nil)', '    return (nil, nil)', '    return (nil, nil)', '    return (nil,
    nil)', '    return (nil, nil)', "    var largest: Int? = nil\n    var smallest:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largest ==\
    \ nil {\n                largest = i\n            } else if i > largest! {\n \
    \               largest = i\n            }\n        } else if i > 0 {\n      \
    \      if smallest == nil {\n                smallest = i\n            } else\
    \ if i < smallest! {\n                smallest = i\n            }\n        }\n\
    \    }\n    return (largest, smallest)", "    var largestNegative: Int? = nil\n\
    \    var smallestPositive: Int? = nil\n    for num in lst {\n        if num <\
    \ 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", '    return
    (nil, nil)', '    return (nil, nil)', '    return (nil, nil)', "    var largest:\
    \ Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n        if i <\
    \ 0 {\n            if largest == nil {\n                largest = i\n        \
    \    } else if i > largest! {\n                largest = i\n            }\n  \
    \      } else if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        }\n    }\n    return (largest, smallest)", '    return
    (nil, nil)', '    return (nil, nil)', "    var largestNegative: Int? = nil\n \
    \   var smallestPositive: Int? = nil\n    for num in lst {\n        if num < 0\
    \ {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n   \
    \     if num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    var smallest:\
    \ Int? = nil\n    var largest: Int? = nil\n    for i in lst {\n        if i >\
    \ 0 {\n            if smallest == nil {\n                smallest = i\n      \
    \      } else if i < smallest! {\n                smallest = i\n            }\n\
    \        } else if i < 0 {\n            if largest == nil {\n                largest\
    \ = i\n            } else if i > largest! {\n                largest = i\n   \
    \         }\n        }\n    }\n    return (largest, smallest)", "    var largest:\
    \ Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n        if i <\
    \ 0 {\n            if largest == nil {\n                largest = i\n        \
    \    } else if i > largest! {\n                largest = i\n            }\n  \
    \      } else if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        }\n    }\n    return (largest, smallest)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n   \
    \     if num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    let positives\
    \ = lst.filter { $0 > 0 }\n    let negatives = lst.filter { $0 < 0 }\n    return\
    \ (negatives.max(), positives.min())", "    var largest: Int? = nil\n    var smallest:\
    \ Int? = nil\n    for i in lst {\n        if i > 0 {\n            if smallest\
    \ == nil {\n                smallest = i\n            } else if i < smallest!\
    \ {\n                smallest = i\n            }\n        } else if i < 0 {\n\
    \            if largest == nil {\n                largest = i\n            } else\
    \ if i > largest! {\n                largest = i\n            }\n        }\n \
    \   }\n    return (largest, smallest)", '    return (nil, nil)', "    var largest:\
    \ Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n        if i <\
    \ 0 {\n            if largest == nil {\n                largest = i\n        \
    \    } else if i > largest! {\n                largest = i\n            }\n  \
    \      } else if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        }\n    }\n    return (largest, smallest)", "    var largest:\
    \ Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n        if i <\
    \ 0 {\n            if largest == nil {\n                largest = i\n        \
    \    } else if i > largest! {\n                largest = i\n            }\n  \
    \      } else if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        }\n    }\n    return (largest, smallest)", '    return
    (nil, nil)', '    return (nil, nil)', "    var largestNegative: Int? = nil\n \
    \   var smallestPositive: Int? = nil\n    for i in lst {\n        if i < 0 {\n\
    \            if largestNegative == nil {\n                largestNegative = i\n\
    \            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n        if\
    \ num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n     \
    \   if i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n        if\
    \ i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largestNegative: Int?\
    \ = nil\n    var smallestPositive: Int? = nil\n    for i in lst {\n        if\
    \ i < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = i\n            } else if i > largestNegative! {\n                largestNegative\
    \ = i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", "    var largest: Int? = nil\n\
    \    var smallest: Int? = nil\n    for i in lst {\n        if i < 0 {\n      \
    \      if largest == nil {\n                largest = i\n            } else if\
    \ i > largest! {\n                largest = i\n            }\n        } else if\
    \ i > 0 {\n            if smallest == nil {\n                smallest = i\n  \
    \          } else if i < smallest! {\n                smallest = i\n         \
    \   }\n        }\n    }\n    return (largest, smallest)", '    return (nil, nil)',
  '    return (nil, nil)', "    var largest: Int? = nil\n    var smallest: Int? =\
    \ nil\n    for i in lst {\n        if i > 0 {\n            if smallest == nil\
    \ {\n                smallest = i\n            } else if i < smallest! {\n   \
    \             smallest = i\n            }\n        } else if i < 0 {\n       \
    \     if largest == nil {\n                largest = i\n            } else if\
    \ i > largest! {\n                largest = i\n            }\n        }\n    }\n\
    \    return (largest, smallest)", "    var negative_max: Int? = nil\n    var positive_min:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if negative_max\
    \ == nil {\n                negative_max = i\n            } else if i > negative_max!\
    \ {\n                negative_max = i\n            }\n        } else if i > 0\
    \ {\n            if positive_min == nil {\n                positive_min = i\n\
    \            } else if i < positive_min! {\n                positive_min = i\n\
    \            }\n        }\n    }\n    return (negative_max, positive_min)", '    return
    (nil, nil)', '    return (nil, nil)', "    var smallest: Int? = nil\n    var largest:\
    \ Int? = nil\n    for i in lst {\n        if i > 0 {\n            if smallest\
    \ == nil {\n                smallest = i\n            } else if i < smallest!\
    \ {\n                smallest = i\n            }\n        } else if i < 0 {\n\
    \            if largest == nil {\n                largest = i\n            } else\
    \ if i > largest! {\n                largest = i\n            }\n        }\n \
    \   }\n    return (largest, smallest)", '    return (nil, nil)', "    let negatives\
    \ = lst.filter { $0 < 0 }\n    let positives = lst.filter { $0 > 0 }\n    return\
    \ (negatives.max(), positives.min())", '    return (nil, nil)', "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n   \
    \     if num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for num in lst {\n   \
    \     if num < 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    let negatives\
    \ = lst.filter { $0 < 0 }\n    let positives = lst.filter { $0 > 0 }\n    return\
    \ (negatives.max(), positives.min())", "    var largest: Int? = nil\n    var smallest:\
    \ Int? = nil\n    for i in lst {\n        if i > 0 {\n            if smallest\
    \ == nil {\n                smallest = i\n            } else if i < smallest!\
    \ {\n                smallest = i\n            }\n        } else if i < 0 {\n\
    \            if largest == nil {\n                largest = i\n            } else\
    \ if i > largest! {\n                largest = i\n            }\n        }\n \
    \   }\n    return (largest, smallest)", "    var largestNegative: Int? = nil\n\
    \    var smallestPositive: Int? = nil\n    for num in lst {\n        if num <\
    \ 0 {\n            if largestNegative == nil {\n                largestNegative\
    \ = num\n            } else if num > largestNegative! {\n                largestNegative\
    \ = num\n            }\n        } else if num > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = num\n            } else if num\
    \ < smallestPositive! {\n                smallestPositive = num\n            }\n\
    \        }\n    }\n    return (largestNegative, smallestPositive)", "    var smallest:\
    \ Int? = nil\n    var largest: Int? = nil\n    for i in lst {\n        if i >\
    \ 0 {\n            if smallest == nil {\n                smallest = i\n      \
    \      } else if i < smallest! {\n                smallest = i\n            }\n\
    \        } else if i < 0 {\n            if largest == nil {\n                largest\
    \ = i\n            } else if i > largest! {\n                largest = i\n   \
    \         }\n        }\n    }\n    return (largest, smallest)", '    return (nil,
    nil)', '    return (nil, nil)', "    var largestNegative: Int? = nil\n    var\
    \ smallestPositive: Int? = nil\n    for i in lst {\n        if i < 0 {\n     \
    \       if largestNegative == nil {\n                largestNegative = i\n   \
    \         } else if i > largestNegative! {\n                largestNegative =\
    \ i\n            }\n        } else if i > 0 {\n            if smallestPositive\
    \ == nil {\n                smallestPositive = i\n            } else if i < smallestPositive!\
    \ {\n                smallestPositive = i\n            }\n        }\n    }\n \
    \   return (largestNegative, smallestPositive)", '    return (lst.filter{$0 <
    0}.max(), lst.filter{$0 > 0}.min())', '    return (nil, nil)', '    return (nil,
    nil)', "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in\
    \ lst {\n        if i > 0 {\n            if smallest == nil {\n              \
    \  smallest = i\n            } else if i < smallest! {\n                smallest\
    \ = i\n            }\n        } else if i < 0 {\n            if largest == nil\
    \ {\n                largest = i\n            } else if i > largest! {\n     \
    \           largest = i\n            }\n        }\n    }\n    return (largest,\
    \ smallest)", '    return (nil, nil)', "    var largest: Int? = nil\n    var smallest:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largest ==\
    \ nil {\n                largest = i\n            } else if i > largest! {\n \
    \               largest = i\n            }\n        } else if i > 0 {\n      \
    \      if smallest == nil {\n                smallest = i\n            } else\
    \ if i < smallest! {\n                smallest = i\n            }\n        }\n\
    \    }\n    return (largest, smallest)", '    return (nil, nil)', "    var largest:\
    \ Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n        if i <\
    \ 0 {\n            if largest == nil {\n                largest = i\n        \
    \    } else if i > largest! {\n                largest = i\n            }\n  \
    \      } else if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        }\n    }\n    return (largest, smallest)", "    var largestNegative:\
    \ Int? = nil\n    var smallestPositive: Int? = nil\n    for number in lst {\n\
    \        if number < 0 {\n            if largestNegative == nil {\n          \
    \      largestNegative = number\n            } else if number > largestNegative!\
    \ {\n                largestNegative = number\n            }\n        } else if\
    \ number > 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = number\n            } else if number < smallestPositive! {\n             \
    \   smallestPositive = number\n            }\n        }\n    }\n    return (largestNegative,\
    \ smallestPositive)", "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  '    return (nil, nil)', "    var largest = Int.min\n    var smallest = Int.max\n\
    \    for i in lst {\n        if i < 0 {\n            if i > largest {\n      \
    \          largest = i\n            }\n        } else {\n            if i < smallest\
    \ {\n                smallest = i\n            }\n        }\n    }\n    if largest\
    \ == Int.min {\n        largest = nil\n    }\n    if smallest == Int.max {\n \
    \       smallest = nil\n    }\n    return (largest, smallest)", '    return (nil,
    nil)', '    return (lst.filter({$0 < 0}).max(), lst.filter({$0 > 0}).min())',
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for num in lst {\n        if num < 0 {\n            if largestNegative == nil\
    \ {\n                largestNegative = num\n            } else if num > largestNegative!\
    \ {\n                largestNegative = num\n            }\n        } else if num\
    \ > 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = num\n            } else if num < smallestPositive! {\n                smallestPositive\
    \ = num\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n\
    \        if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        } else if i < 0 {\n            if largest == nil {\n  \
    \              largest = i\n            } else if i > largest! {\n           \
    \     largest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  '    return (nil, nil)', "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for num in lst {\n        if num < 0 {\n            if largestNegative == nil\
    \ {\n                largestNegative = num\n            } else if num > largestNegative!\
    \ {\n                largestNegative = num\n            }\n        } else if num\
    \ > 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = num\n            } else if num < smallestPositive! {\n                smallestPositive\
    \ = num\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var smallest: Int? = nil\n    var largest: Int? = nil\n    for i in lst {\n\
    \        if i > 0 {\n            if smallest == nil {\n                smallest\
    \ = i\n            } else if i < smallest! {\n                smallest = i\n \
    \           }\n        } else if i < 0 {\n            if largest == nil {\n  \
    \              largest = i\n            } else if i > largest! {\n           \
    \     largest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  '    return (lst.filter({$0 < 0}).max(), lst.filter({$0 > 0}).min())', "    var\
    \ largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n    for i\
    \ in lst {\n        if i < 0 {\n            if largestNegative == nil {\n    \
    \            largestNegative = i\n            } else if i > largestNegative! {\n\
    \                largestNegative = i\n            }\n        } else if i > 0 {\n\
    \            if smallestPositive == nil {\n                smallestPositive =\
    \ i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  '    return (nil, nil)', "    var largestNegative: Int? = nil\n    var smallestPositive:\
    \ Int? = nil\n    for i in lst {\n        if i < 0 {\n            if largestNegative\
    \ == nil {\n                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for i in lst {\n\
    \        if i < 0 {\n            if largest == nil {\n                largest\
    \ = i\n            } else if i > largest! {\n                largest = i\n   \
    \         }\n        } else if i > 0 {\n            if smallest == nil {\n   \
    \             smallest = i\n            } else if i < smallest! {\n          \
    \      smallest = i\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n   \
    \ for i in lst {\n        if i < 0 {\n            if largestNegative == nil {\n\
    \                largestNegative = i\n            } else if i > largestNegative!\
    \ {\n                largestNegative = i\n            }\n        } else if i >\
    \ 0 {\n            if smallestPositive == nil {\n                smallestPositive\
    \ = i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)",
  '    return (lst.filter({$0 < 0}).max(), lst.filter({$0 > 0}).min())', "    var\
    \ largestNegative: Int? = nil\n    var smallestPositive: Int? = nil\n    for i\
    \ in lst {\n        if i < 0 {\n            if largestNegative == nil {\n    \
    \            largestNegative = i\n            } else if i > largestNegative! {\n\
    \                largestNegative = i\n            }\n        } else if i > 0 {\n\
    \            if smallestPositive == nil {\n                smallestPositive =\
    \ i\n            } else if i < smallestPositive! {\n                smallestPositive\
    \ = i\n            }\n        }\n    }\n    return (largestNegative, smallestPositive)"]
stop_tokens:
- "\n}"

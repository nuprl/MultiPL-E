language: swift
name: HumanEval_131_digits
results:
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var number = n\n    while number > 0 {\n   \
    \     let digit = number % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        number /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp28y0r02w/tmp28y0r02w.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa69c4fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa69946b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa69946988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa699457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp28y0r02w                        0x0000559c8a9f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002afa69e3b460 __libc_start_main +
    245

    6    tmp28y0r02w                        0x0000559c8a9efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    for digit in String(n) {\n        if let digit\
    \ = Int(String(digit)) {\n            if digit % 2 != 0 {\n                result\
    \ *= digit\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpz1yv_8j6/tmpz1yv_8j6.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada708b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada705acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada705ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada705ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz1yv_8j6                        0x0000556d7aadc7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ada70aa1460 __libc_start_main +
    245

    6    tmpz1yv_8j6                        0x0000556d7aadc179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    for digit in String(n) {\n        if let number\
    \ = Int(String(digit)) {\n            if number % 2 != 0 {\n                result\
    \ *= number\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmppm0857_g/tmppm0857_g.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc0deedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc0dbe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc0dbe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc0dbe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppm0857_g                        0x0000557e3ac567b9 <unavailable> + 6073

    5    libc.so.6                          0x00002afc0e0d9460 __libc_start_main +
    245

    6    tmppm0857_g                        0x0000557e3ac56179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    for digit in String(n) {\n        if let number\
    \ = Int(String(digit)) {\n            if number % 2 != 0 {\n                product\
    \ *= number\n            }\n        }\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpuc1ychb1/tmpuc1ychb1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2543260c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2542f57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2542f57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2542f567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuc1ychb1                        0x000055ff521c07b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b254344c460 __libc_start_main +
    245

    6    tmpuc1ychb1                        0x000055ff521c0179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5bhvbd1e/tmp5bhvbd1e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e17e94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e17b8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e17b8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e17b8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bhvbd1e                        0x000055b390c07539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0e18080460 __libc_start_main +
    245

    6    tmp5bhvbd1e                        0x000055b390c06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5bhvbd1e/tmp5bhvbd1e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e17e94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e17b8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e17b8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e17b8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bhvbd1e                        0x000055b390c07539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0e18080460 __libc_start_main +
    245

    6    tmp5bhvbd1e                        0x000055b390c06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var sum = 0\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            sum += digit\n        }\n\
    \        n /= 10\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpcz5oe5jm/tmpcz5oe5jm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e740c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e73db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e73db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e73db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcz5oe5jm                        0x000055664b2753b9 <unavailable> + 5049

    5    libc.so.6                          0x00002b3e742ae460 __libc_start_main +
    245

    6    tmpcz5oe5jm                        0x000055664b274ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5bhvbd1e/tmp5bhvbd1e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e17e94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e17b8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e17b8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e17b8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bhvbd1e                        0x000055b390c07539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0e18080460 __libc_start_main +
    245

    6    tmp5bhvbd1e                        0x000055b390c06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5bhvbd1e/tmp5bhvbd1e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e17e94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e17b8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e17b8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e17b8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bhvbd1e                        0x000055b390c07539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0e18080460 __libc_start_main +
    245

    6    tmp5bhvbd1e                        0x000055b390c06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    for digit in String(n) {\n        if let digit\
    \ = Int(String(digit)) {\n            if digit % 2 != 0 {\n                product\
    \ *= digit\n            }\n        }\n    }\n    return product\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpitfo18we/tmpitfo18we.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b42740f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4273defb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4273def988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4273dee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitfo18we                        0x000056194b89a7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b42742e4460 __libc_start_main +
    245

    6    tmpitfo18we                        0x000056194b89a179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var number = n\n    while number > 0 {\n   \
    \     let digit = number % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        number /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp28y0r02w/tmp28y0r02w.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa69c4fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa69946b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa69946988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa699457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp28y0r02w                        0x0000559c8a9f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002afa69e3b460 __libc_start_main +
    245

    6    tmp28y0r02w                        0x0000559c8a9efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    for digit in String(n) {\n        if let digit\
    \ = Int(String(digit)) {\n            if digit % 2 != 0 {\n                result\
    \ *= digit\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpz1yv_8j6/tmpz1yv_8j6.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada708b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada705acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada705ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada705ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz1yv_8j6                        0x0000556d7aadc7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ada70aa1460 __libc_start_main +
    245

    6    tmpz1yv_8j6                        0x0000556d7aadc179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    for digit in String(n) {\n        if let digit\
    \ = Int(String(digit)) {\n            if digit % 2 != 0 {\n                result\
    \ *= digit\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpz1yv_8j6/tmpz1yv_8j6.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada708b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada705acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada705ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada705ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz1yv_8j6                        0x0000556d7aadc7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ada70aa1460 __libc_start_main +
    245

    6    tmpz1yv_8j6                        0x0000556d7aadc179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5bhvbd1e/tmp5bhvbd1e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e17e94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e17b8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e17b8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e17b8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bhvbd1e                        0x000055b390c07539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0e18080460 __libc_start_main +
    245

    6    tmp5bhvbd1e                        0x000055b390c06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5bhvbd1e/tmp5bhvbd1e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e17e94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e17b8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e17b8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e17b8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bhvbd1e                        0x000055b390c07539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0e18080460 __libc_start_main +
    245

    6    tmp5bhvbd1e                        0x000055b390c06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp1g8s9bab/tmp1g8s9bab.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ddfe46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ddfb3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ddfb3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ddfb3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1g8s9bab                        0x000055e450b1a539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7de0032460 __libc_start_main +
    245

    6    tmp1g8s9bab                        0x000055e450b19ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var m = n\n    while m > 0 {\n        let digit\
    \ = m % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        m /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpvmkz4qc9/tmpvmkz4qc9.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaefcdbec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaefcab5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaefcab5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaefcab47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvmkz4qc9                        0x0000559d2c70e539 <unavailable> + 5433

    5    libc.so.6                          0x00002aaefcfaa460 __libc_start_main +
    245

    6    tmpvmkz4qc9                        0x0000559d2c70def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var number = n\n    while number > 0 {\n   \
    \     let digit = number % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        number /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp28y0r02w/tmp28y0r02w.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa69c4fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa69946b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa69946988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa699457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp28y0r02w                        0x0000559c8a9f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002afa69e3b460 __libc_start_main +
    245

    6    tmp28y0r02w                        0x0000559c8a9efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp1g8s9bab/tmp1g8s9bab.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ddfe46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ddfb3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ddfb3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ddfb3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1g8s9bab                        0x000055e450b1a539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7de0032460 __libc_start_main +
    245

    6    tmp1g8s9bab                        0x000055e450b19ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5bhvbd1e/tmp5bhvbd1e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e17e94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e17b8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e17b8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e17b8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bhvbd1e                        0x000055b390c07539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0e18080460 __libc_start_main +
    245

    6    tmp5bhvbd1e                        0x000055b390c06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    for char in String(n) {\n        if let number\
    \ = Int(String(char)) {\n            if number % 2 != 0 {\n                result\
    \ *= number\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpnut8o3r0/tmpnut8o3r0.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ab2c38c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ab292fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ab292f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ab292e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnut8o3r0                        0x00005651ce48e7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5ab2e24460 __libc_start_main +
    245

    6    tmpnut8o3r0                        0x00005651ce48e179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5bhvbd1e/tmp5bhvbd1e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e17e94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e17b8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e17b8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e17b8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bhvbd1e                        0x000055b390c07539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0e18080460 __libc_start_main +
    245

    6    tmp5bhvbd1e                        0x000055b390c06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp1g8s9bab/tmp1g8s9bab.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ddfe46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ddfb3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ddfb3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ddfb3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1g8s9bab                        0x000055e450b1a539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7de0032460 __libc_start_main +
    245

    6    tmp1g8s9bab                        0x000055e450b19ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp1g8s9bab/tmp1g8s9bab.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ddfe46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ddfb3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ddfb3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ddfb3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1g8s9bab                        0x000055e450b1a539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7de0032460 __libc_start_main +
    245

    6    tmp1g8s9bab                        0x000055e450b19ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5bhvbd1e/tmp5bhvbd1e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e17e94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e17b8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e17b8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e17b8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bhvbd1e                        0x000055b390c07539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0e18080460 __libc_start_main +
    245

    6    tmp5bhvbd1e                        0x000055b390c06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var number = n\n    while number > 0 {\n   \
    \     let digit = number % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        number /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp28y0r02w/tmp28y0r02w.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa69c4fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa69946b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa69946988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa699457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp28y0r02w                        0x0000559c8a9f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002afa69e3b460 __libc_start_main +
    245

    6    tmp28y0r02w                        0x0000559c8a9efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp1g8s9bab/tmp1g8s9bab.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ddfe46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ddfb3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ddfb3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ddfb3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1g8s9bab                        0x000055e450b1a539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7de0032460 __libc_start_main +
    245

    6    tmp1g8s9bab                        0x000055e450b19ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp1g8s9bab/tmp1g8s9bab.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ddfe46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ddfb3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ddfb3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ddfb3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1g8s9bab                        0x000055e450b1a539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7de0032460 __libc_start_main +
    245

    6    tmp1g8s9bab                        0x000055e450b19ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var number = n\n    while number > 0 {\n   \
    \     let digit = number % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        number /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp28y0r02w/tmp28y0r02w.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa69c4fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa69946b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa69946988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa699457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp28y0r02w                        0x0000559c8a9f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002afa69e3b460 __libc_start_main +
    245

    6    tmp28y0r02w                        0x0000559c8a9efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var sum = 0\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            sum += digit\n        }\n\
    \        n /= 10\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpcz5oe5jm/tmpcz5oe5jm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e740c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e73db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e73db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e73db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcz5oe5jm                        0x000055664b2753b9 <unavailable> + 5049

    5    libc.so.6                          0x00002b3e742ae460 __libc_start_main +
    245

    6    tmpcz5oe5jm                        0x000055664b274ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var number = n\n    while number > 0 {\n   \
    \     let digit = number % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        number /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp28y0r02w/tmp28y0r02w.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa69c4fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa69946b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa69946988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa699457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp28y0r02w                        0x0000559c8a9f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002afa69e3b460 __libc_start_main +
    245

    6    tmp28y0r02w                        0x0000559c8a9efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var number = n\n    var result = 1\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjjcp_ez2/tmpjjcp_ez2.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0520905c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05205fcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05205fc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05205fb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjjcp_ez2                        0x000055b11c4a6539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0520af1460 __libc_start_main +
    245

    6    tmpjjcp_ez2                        0x000055b11c4a5ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var number = n\n    while number > 0 {\n   \
    \     let digit = number % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        number /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp28y0r02w/tmp28y0r02w.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa69c4fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa69946b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa69946988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa699457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp28y0r02w                        0x0000559c8a9f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002afa69e3b460 __libc_start_main +
    245

    6    tmp28y0r02w                        0x0000559c8a9efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var number = n\n    while number > 0 {\n    \
    \    let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4ku7rdx7/tmp4ku7rdx7.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a81a7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a81774b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a81774988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a817737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ku7rdx7                        0x000055b7b5585539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4a81c69460 __libc_start_main +
    245

    6    tmp4ku7rdx7                        0x000055b7b5584ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp45lnz4rq/tmp45lnz4rq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b1f897c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b1f58eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b1f58e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b1f58d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45lnz4rq                        0x000055cb36c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8b1fa83460 __libc_start_main +
    245

    6    tmp45lnz4rq                        0x000055cb36c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 0\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= 10\n          \
    \  result += digit\n        }\n        n /= 10\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptuahllg7/tmptuahllg7.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6614cbec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b66149b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b66149b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66149b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptuahllg7                        0x00005563107ee3b9 <unavailable> + 5049

    5    libc.so.6                          0x00002b6614eaa460 __libc_start_main +
    245

    6    tmptuahllg7                        0x00005563107edef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\nfunc digits(n: Int) ->\
    \ Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n        let digit\
    \ = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n       \
    \ }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjyupidxj/tmpjyupidxj.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f67aa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f6779db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f6779d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f6779c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjyupidxj                        0x000056216f8fe539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f67c92460 __libc_start_main +
    245

    6    tmpjyupidxj                        0x000056216f8fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028576

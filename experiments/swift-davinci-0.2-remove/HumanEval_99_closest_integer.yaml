name: HumanEval_99_closest_integer
language: swift
prompt: "\n/// Create a function that takes a value (string) representing a number\n\
  /// and returns the closest integer to it. If the number is equidistant\n/// from\
  \ two integers, round it away from zero.\n/// Examples\n/// Note:\n/// Rounding\
  \ away from zero means that if the given number is equidistant\n/// from two integers,\
  \ the one you should return is the one that is the\n/// farthest from zero. For\
  \ example closest_integer(\"14.5\") should\n/// return 15 and closest_integer(\"\
  -14.5\") should return -15.\nfunc closest_integer(value: String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(closest_integer(value: \"10\") == 10)\n\
  assert(closest_integer(value: \"14.5\") == 15)\nassert(closest_integer(value: \"\
  -15.5\") == -16)\nassert(closest_integer(value: \"15.3\") == 15)\nassert(closest_integer(value:\
  \ \"0\") == 0)"
completions: ["    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    }\n    return ceil", "    let number =\
    \ Double(value)!\n    let rounded = number.rounded()\n    let integer = Int(rounded)\n\
    \    if number - Double(integer) == 0.5 {\n        return integer + 1\n    }\n\
    \    return integer", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let floor = number.rounded(.down)\n    let ceil = number.rounded(.up)\n \
    \   if rounded - floor == ceil - rounded {\n        return Int(number > 0 ? ceil\
    \ : floor)\n    }\n    return Int(rounded)", "    let number = Double(value)!\n\
    \    let rounded = number.rounded()\n    let rounded_up = rounded.rounded(.up)\n\
    \    let rounded_down = rounded.rounded(.down)\n    if number - rounded_down <\
    \ rounded_up - number {\n        return Int(rounded_down)\n    } else {\n    \
    \    return Int(rounded_up)\n    }", "    let number = Double(value)!\n    let\
    \ rounded = round(number)\n    let ceiled = ceil(number)\n    let floored = floor(number)\n\
    \    if number - floored < ceiled - number {\n        return Int(floored)\n  \
    \  } else {\n        return Int(ceiled)\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - Double(floor) == 0.5\
    \ {\n        return ceil\n    } else if number - Double(floor) == -0.5 {\n   \
    \     return floor\n    } else {\n        return rounded\n    }", "    let doubleValue\
    \ = Double(value)\n    let floorValue = floor(doubleValue!)\n    let ceilValue\
    \ = ceil(doubleValue!)\n    let diffFloor = abs(doubleValue! - floorValue)\n \
    \   let diffCeil = abs(doubleValue! - ceilValue)\n    if diffFloor < diffCeil\
    \ {\n        return Int(floorValue)\n    } else {\n        return Int(ceilValue)\n\
    \    }", "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue >=\
    \ 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = number.rounded()\n    let floor = number.rounded(.down)\n    let ceil = number.rounded(.up)\n\
    \    let diff1 = abs(number - rounded)\n    let diff2 = abs(number - floor)\n\
    \    let diff3 = abs(number - ceil)\n    if diff1 < diff2 && diff1 < diff3 {\n\
    \        return Int(rounded)\n    } else if diff2 < diff1 && diff2 < diff3 {\n\
    \        return Int(floor)\n    } else {\n        return Int(ceil)\n    }", " \
    \   var result = 0\n    let number = Double(value)\n    if number != nil {\n \
    \       let numberInt = Int(number!)\n        let numberDouble = Double(numberInt)\n\
    \        if number! - numberDouble > 0.5 {\n            result = numberInt + 1\n\
    \        } else if number! - numberDouble < 0.5 {\n            result = numberInt\n\
    \        } else {\n            if number! > 0 {\n                result = numberInt\
    \ + 1\n            } else {\n                result = numberInt - 1\n        \
    \    }\n        }\n    }\n    return result", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let number = Double(value)!\n    let rounded = round(number)\n    if number\
    \ - rounded > 0.5 {\n        return Int(rounded + 1)\n    } else if number - rounded\
    \ < -0.5 {\n        return Int(rounded - 1)\n    } else {\n        return Int(rounded)\n\
    \    }", "    let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue!\
    \ - floorValue)\n    let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff\
    \ == ceilDiff {\n        if floorValue > 0 {\n            return Int(ceilValue)\n\
    \        } else {\n            return Int(floorValue)\n        }\n    } else if\
    \ floorDiff < ceilDiff {\n        return Int(floorValue)\n    } else {\n     \
    \   return Int(ceilValue)\n    }", "    let value = Double(value)!\n    let intValue\
    \ = Int(value)\n    let decimal = value - Double(intValue)\n    if decimal < 0.5\
    \ {\n        return intValue\n    } else {\n        return intValue + 1\n    }",
  "    let number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil\
    \ = Int(ceil(number))\n    let diff1 = abs(number - Double(floor))\n    let diff2\
    \ = abs(number - Double(ceil))\n    if diff1 < diff2 {\n        return floor\n\
    \    } else {\n        return ceil\n    }", "    let number = Double(value)!\n\
    \    let integer = Int(number)\n    let decimal = number - Double(integer)\n \
    \   if decimal >= 0.5 {\n        return integer + 1\n    } else {\n        return\
    \ integer\n    }", "    let number = Double(value)!\n    let int = Int(number)\n\
    \    if number - Double(int) < 0.5 {\n        return int\n    } else {\n     \
    \   return int + 1\n    }", "    let number = Double(value)!\n    let floor =\
    \ Int(floor(number))\n    let ceil = Int(ceil(number))\n    if number - Double(floor)\
    \ < Double(ceil) - number {\n        return floor\n    }\n    return ceil", " \
    \   let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue!\
    \ - floorValue)\n    let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff\
    \ == ceilDiff {\n        if doubleValue! > 0 {\n            return Int(ceilValue)\n\
    \        } else {\n            return Int(floorValue)\n        }\n    } else if\
    \ floorDiff < ceilDiff {\n        return Int(floorValue)\n    } else {\n     \
    \   return Int(ceilValue)\n    }", "    let number = Double(value)!\n    let rounded\
    \ = Int(number.rounded())\n    if number - Double(rounded) == 0.5 {\n        return\
    \ rounded + (rounded > 0 ? 1 : -1)\n    }\n    return rounded", "    let doubleValue\
    \ = Double(value)\n    let intValue = Int(doubleValue!)\n    let decimalValue\
    \ = doubleValue! - Double(intValue)\n    if decimalValue >= 0.5 {\n        return\
    \ intValue + 1\n    } else {\n        return intValue\n    }", "    let number\
    \ = Double(value)!\n    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n\
    \    return number - Double(floor) < Double(ceil) - number ? floor : ceil", " \
    \   let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n  \
    \  if doubleValue! - Double(intValue) >= 0.5 {\n        return intValue + 1\n\
    \    } else {\n        return intValue\n    }", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if abs(number - rounded) == 0.5\
    \ {\n        if number > 0 {\n            return ceil\n        } else {\n    \
    \        return floor\n        }\n    } else {\n        return Int(rounded)\n\
    \    }", "    let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue!\
    \ - floorValue)\n    let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff\
    \ == ceilDiff {\n        return Int(ceilValue)\n    }\n    return floorDiff <\
    \ ceilDiff ? Int(floorValue) : Int(ceilValue)", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let floor = Int(floor(number))\n    let\
    \ ceil = Int(ceil(number))\n    if rounded - Double(floor) == 0.5 {\n        return\
    \ ceil\n    } else if rounded - Double(floor) == -0.5 {\n        return floor\n\
    \    } else {\n        return Int(rounded)\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilDiff = abs(number - Double(ceil))\n    if floorDiff == ceilDiff {\n\
    \        return number < 0 ? floor : ceil\n    }\n    return floorDiff < ceilDiff\
    \ ? floor : ceil", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let integer = Int(rounded)\n    return integer", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let ceiled = ceil(number)\n    let floored\
    \ = floor(number)\n    if number - floored < ceiled - number {\n        return\
    \ Int(floored)\n    } else {\n        return Int(ceiled)\n    }", "    let number\
    \ = Double(value)!\n    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n\
    \    let diff_floor = abs(number - Double(floor))\n    let diff_ceil = abs(number\
    \ - Double(ceil))\n    if diff_floor < diff_ceil {\n        return floor\n   \
    \ } else {\n        return ceil\n    }", "    let doubleValue = Double(value)!\n\
    \    let roundedValue = round(doubleValue)\n    let intValue = Int(roundedValue)\n\
    \    return intValue", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    let ceiled = ceil(number)\n    let floored = floor(number)\n\
    \    if number - floored < ceiled - number {\n        return Int(floored)\n  \
    \  } else {\n        return Int(ceiled)\n    }", "    let number = Double(value)!\n\
    \    let intNumber = Int(number)\n    let decimal = number - Double(intNumber)\n\
    \    if decimal >= 0.5 {\n        return intNumber + 1\n    } else {\n       \
    \ return intNumber\n    }", "    let num = Double(value)!\n    let int = Int(num)\n\
    \    let diff = num - Double(int)\n    if diff < 0.5 {\n        return int\n \
    \   } else {\n        return int + 1\n    }", "    let num = Double(value)!\n\
    \    let int = Int(num)\n    let decimal = num - Double(int)\n    if decimal >=\
    \ 0.5 {\n        return int + 1\n    } else {\n        return int\n    }", " \
    \   let doubleValue = Double(value)!\n    let intValue = Int(doubleValue)\n  \
    \  let decimal = doubleValue - Double(intValue)\n    if decimal >= 0.5 {\n   \
    \     return intValue + 1\n    } else {\n        return intValue\n    }", "  \
    \  let number = Double(value)!\n    let rounded = round(number)\n    let diff\
    \ = number - rounded\n    if diff > 0 {\n        return Int(rounded + 1)\n   \
    \ } else if diff < 0 {\n        return Int(rounded - 1)\n    } else {\n      \
    \  return Int(rounded)\n    }", "    let doubleValue = Double(value)!\n    let\
    \ intValue = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let floor = number.rounded(.down)\n    let ceil = number.rounded(.up)\n \
    \   if number - floor < ceil - number {\n        return Int(floor)\n    } else\
    \ {\n        return Int(ceil)\n    }", "    let doubleValue = Double(value)!\n\
    \    let roundedValue = round(doubleValue)\n    let intValue = Int(roundedValue)\n\
    \    return intValue", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let floor\
    \ = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if number - Double(floor)\
    \ == 0.5 {\n        return number > 0 ? ceil : floor\n    }\n    return number\
    \ - Double(floor) > 0.5 ? ceil : floor", "    let value = Double(value)!\n   \
    \ let intValue = Int(value)\n    let decimal = value - Double(intValue)\n    if\
    \ decimal < 0.5 {\n        return intValue\n    } else {\n        return intValue\
    \ + 1\n    }", "    let doubleValue = Double(value)!\n    let intValue = Int(doubleValue)\n\
    \    let decimalValue = doubleValue - Double(intValue)\n    if decimalValue >=\
    \ 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let number = Double(value)!\n    let rounded = round(number)\n \
    \   let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if rounded - Double(floor) == 0.5 {\n        return floor\n    } else if\
    \ rounded - Double(ceil) == -0.5 {\n        return ceil\n    } else {\n      \
    \  return Int(rounded)\n    }", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    let floor = Int(number.rounded(.down))\n    let ceil =\
    \ Int(number.rounded(.up))\n    if number - floor < ceil - number {\n        return\
    \ floor\n    } else {\n        return ceil\n    }", "    let number = Double(value)!\n\
    \    let intNumber = Int(number)\n    let decimal = number - Double(intNumber)\n\
    \    if decimal >= 0.5 {\n        return intNumber + 1\n    } else {\n       \
    \ return intNumber\n    }", "    let number = Double(value)!\n    let floor =\
    \ Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n    if\
    \ number - Double(floor) == 0.5 {\n        return ceil\n    } else if number -\
    \ Double(floor) == -0.5 {\n        return floor\n    } else {\n        return\
    \ Int(number.rounded(.toNearestOrEven))\n    }", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    let\
    \ diff1 = abs(number - Double(floor))\n    let diff2 = abs(number - Double(ceil))\n\
    \    if diff1 == diff2 {\n        return number > 0 ? ceil : floor\n    }\n  \
    \  return diff1 < diff2 ? floor : ceil", "    let doubleValue = Double(value)!\n\
    \    let intValue = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    return Int(rounded)", "    let number = Double(value)!\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let diff1 = abs(number - Double(floor))\n    let diff2 = abs(number - Double(ceil))\n\
    \    if diff1 == diff2 {\n        return number > 0 ? ceil : floor\n    }\n  \
    \  return diff1 < diff2 ? floor : ceil", "    let doubleValue = Double(value)!\n\
    \    let roundedValue = round(doubleValue)\n    if roundedValue > doubleValue\
    \ {\n        return Int(roundedValue - 1)\n    }\n    return Int(roundedValue)",
  "    let doubleValue = Double(value)!\n    let intValue = Int(doubleValue)\n   \
    \ let decimal = doubleValue - Double(intValue)\n    if decimal >= 0.5 {\n    \
    \    return intValue + 1\n    } else {\n        return intValue\n    }", "   \
    \ let number = Double(value)!\n    let int = Int(number)\n    if number - Double(int)\
    \ < 0.5 {\n        return int\n    } else {\n        return int + 1\n    }", " \
    \   let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n  \
    \  let doubleIntValue = Double(intValue)\n    if doubleValue! - doubleIntValue\
    \ > 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    let diffFloor = abs(doubleValue!\
    \ - floorValue)\n    let diffCeil = abs(doubleValue! - ceilValue)\n    if diffFloor\
    \ == diffCeil {\n        return Int(doubleValue! > 0 ? ceilValue : floorValue)\n\
    \    }\n    return Int(diffFloor < diffCeil ? floorValue : ceilValue)", "    let\
    \ doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n    let\
    \ ceilValue = ceil(doubleValue!)\n    if doubleValue! - floorValue < ceilValue\
    \ - doubleValue! {\n        return Int(floorValue)\n    } else {\n        return\
    \ Int(ceilValue)\n    }", "    let doubleValue = Double(value)\n    let intValue\
    \ = Int(doubleValue!)\n    let decimal = doubleValue! - Double(intValue)\n   \
    \ if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if (number - rounded) == 0 {\n        return Int(rounded)\n    } else if\
    \ (number - rounded) < 0 {\n        return floor\n    } else {\n        return\
    \ ceil\n    }", "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue >=\
    \ 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let ceiled = Int(number.rounded(.up))\n    let floored = Int(number.rounded(.down))\n\
    \    let diffRounded = abs(number - Double(rounded))\n    let diffCeiled = abs(number\
    \ - Double(ceiled))\n    let diffFloored = abs(number - Double(floored))\n   \
    \ if diffRounded <= diffCeiled && diffRounded <= diffFloored {\n        return\
    \ rounded\n    } else if diffCeiled <= diffRounded && diffCeiled <= diffFloored\
    \ {\n        return ceiled\n    } else {\n        return floored\n    }", "  \
    \  let number = Double(value)!\n    let rounded = Int(number.rounded())\n    let\
    \ floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if number - Double(floor) == 0.5 {\n        return number > 0 ? ceil : floor\n\
    \    }\n    return rounded", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let value = Double(value)!\n\
    \    let integer = Int(value)\n    let decimal = value - Double(integer)\n   \
    \ if decimal >= 0.5 {\n        return integer + 1\n    } else {\n        return\
    \ integer\n    }", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let doubleValue =\
    \ Double(value)\n    let intValue = Int(doubleValue!)\n    let doubleValue2 =\
    \ Double(intValue)\n    let doubleValue3 = doubleValue! - doubleValue2\n    if\
    \ doubleValue3 >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    let diff_floor = abs(number - Double(floor))\n\
    \    let diff_ceil = abs(number - Double(ceil))\n    if diff_floor < diff_ceil\
    \ {\n        return floor\n    } else {\n        return ceil\n    }", "    let\
    \ number = Double(value)!\n    let rounded = round(number)\n    let roundedInt\
    \ = Int(rounded)\n    let decimal = number - rounded\n    if decimal < 0.5 {\n\
    \        return roundedInt\n    } else {\n        return roundedInt + 1\n    }",
  "    let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue!\
    \ - floorValue)\n    let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff\
    \ == ceilDiff {\n        return Int(ceilValue)\n    }\n    if floorDiff < ceilDiff\
    \ {\n        return Int(floorValue)\n    }\n    return Int(ceilValue)", "    let\
    \ num = Double(value)!\n    let int = Int(num)\n    let decimal = num - Double(int)\n\
    \    if decimal >= 0.5 {\n        return int + 1\n    } else {\n        return\
    \ int\n    }", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    }\n    return ceil", "    let number =\
    \ Double(value)!\n    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n\
    \    if number - Double(floor) < Double(ceil) - number {\n        return floor\n\
    \    }\n    return ceil", "    let number = Double(value)!\n    let int = Int(number)\n\
    \    if number - Double(int) < 0.5 {\n        return int\n    } else {\n     \
    \   return int + 1\n    }", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n\
    \    if rounded > number {\n        return floor\n    } else if rounded < number\
    \ {\n        return ceil\n    } else {\n        return Int(rounded)\n    }", " \
    \   let number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil\
    \ = Int(ceil(number))\n    if number - Double(floor) < Double(ceil) - number {\n\
    \        return floor\n    }\n    return ceil", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - Double(floor) == 0.5\
    \ {\n        return floor\n    } else if number - Double(ceil) == -0.5 {\n   \
    \     return ceil\n    } else {\n        return Int(rounded)\n    }", "    let\
    \ number = Double(value)!\n    let rounded = round(number)\n    return Int(rounded)",
  "    let number = Double(value)!\n    let rounded = Int(round(number))\n    let\
    \ floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if rounded\
    \ == floor {\n        return ceil\n    } else if rounded == ceil {\n        return\
    \ floor\n    } else {\n        return rounded\n    }", "    let doubleValue =\
    \ Double(value)\n    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)",
  "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n   \
    \ let doubleValue2 = Double(intValue)\n    let doubleValue3 = doubleValue! - doubleValue2\n\
    \    if doubleValue3 >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let rounded\
    \ = number.rounded()\n    let ceiled = number.rounded(.up)\n    let floored =\
    \ number.rounded(.down)\n    let diffRounded = abs(number - rounded)\n    let\
    \ diffCeiled = abs(number - ceiled)\n    let diffFloored = abs(number - floored)\n\
    \    if diffRounded == diffCeiled && diffRounded == diffFloored {\n        return\
    \ Int(rounded)\n    } else if diffRounded < diffCeiled && diffRounded < diffFloored\
    \ {\n        return Int(rounded)\n    } else if diffCeiled < diffRounded && diffCeiled\
    \ < diffFloored {\n        return Int(ceiled)\n    } else {\n        return Int(floored)\n\
    \    }", "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimal = doubleValue! - Double(intValue)\n    if decimal >= 0.5 {\n\
    \        return intValue + 1\n    } else {\n        return intValue\n    }", " \
    \   let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue!\
    \ - floorValue)\n    let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff\
    \ < ceilDiff {\n        return Int(floorValue)\n    } else {\n        return Int(ceilValue)\n\
    \    }", "    let number = Double(value)!\n    let rounded = round(number)\n \
    \   if number - rounded > 0.5 {\n        return Int(rounded + 1)\n    } else if\
    \ number - rounded < -0.5 {\n        return Int(rounded - 1)\n    } else {\n \
    \       return Int(rounded)\n    }", "    let value = Double(value)!\n    let\
    \ intValue = Int(value)\n    let decimal = value - Double(intValue)\n    if decimal\
    \ == 0.5 {\n        return intValue + 1\n    } else if decimal == -0.5 {\n   \
    \     return intValue - 1\n    } else {\n        return intValue\n    }", "  \
    \  let number = Double(value)!\n    let rounded = round(number)\n    let intRounded\
    \ = Int(rounded)\n    if rounded - Double(intRounded) >= 0.5 {\n        return\
    \ intRounded + 1\n    } else {\n        return intRounded\n    }", "    let double\
    \ = Double(value)!\n    let int = Int(double)\n    let decimal = double - Double(int)\n\
    \    if decimal >= 0.5 {\n        return int + 1\n    } else {\n        return\
    \ int\n    }", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    let diff1 = abs(number - Double(floor))\n\
    \    let diff2 = abs(number - Double(ceil))\n    if diff1 < diff2 {\n        return\
    \ floor\n    } else {\n        return ceil\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = doubleValue!.rounded()\n    return Int(roundedValue)",
  "    let number = Double(value)!\n    let floor = Int(number.rounded(.down))\n \
    \   let ceil = Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilDiff = abs(number - Double(ceil))\n    return floorDiff > ceilDiff\
    \ ? ceil : floor", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    }\n    return ceil", "    let number =\
    \ Double(value)!\n    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n\
    \    if number - Double(floor) < Double(ceil) - number {\n        return floor\n\
    \    }\n    return ceil", "    let num = Double(value)!\n    let floor = Int(floor(num))\n\
    \    let ceil = Int(ceil(num))\n    if num - Double(floor) < Double(ceil) - num\
    \ {\n        return floor\n    }\n    return ceil", "    let number = Double(value)!\n\
    \    let rounded = number.rounded()\n    let int = Int(rounded)\n    if number\
    \ - Double(int) == 0.5 {\n        return int + 1\n    }\n    return int", "  \
    \  let number = Double(value)!\n    let integer = Int(number)\n    let decimal\
    \ = number - Double(integer)\n    if decimal < 0.5 {\n        return integer\n\
    \    } else {\n        return integer + 1\n    }", "    let number = Double(value)!\n\
    \    let integer = Int(number)\n    let decimal = number - Double(integer)\n \
    \   if decimal < 0.5 {\n        return integer\n    } else {\n        return integer\
    \ + 1\n    }", "    let doubleValue = Double(value)\n    let floor = Int(floor(doubleValue!))\n\
    \    let ceil = Int(ceil(doubleValue!))\n    let floorDiff = abs(doubleValue!\
    \ - Double(floor))\n    let ceilDiff = abs(doubleValue! - Double(ceil))\n    if\
    \ floorDiff < ceilDiff {\n        return floor\n    } else {\n        return ceil\n\
    \    }", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    if number - Double(floor) == 0.5 {\n  \
    \      return number > 0 ? ceil : floor\n    }\n    return number - Double(floor)\
    \ > 0.5 ? ceil : floor", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    let diffFloor = abs(number - Double(floor))\n\
    \    let diffCeil = abs(number - Double(ceil))\n    if diffFloor < diffCeil {\n\
    \        return floor\n    } else {\n        return ceil\n    }", "    let doubleValue\
    \ = Double(value)\n    let floorValue = floor(doubleValue!)\n    let ceilValue\
    \ = ceil(doubleValue!)\n    if doubleValue! - floorValue < ceilValue - doubleValue!\
    \ {\n        return Int(floorValue)\n    } else {\n        return Int(ceilValue)\n\
    \    }", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    let intValue = Int(roundedValue)\n    return intValue", "    let number =\
    \ Double(value)!\n    let integer = Int(number)\n    let decimal = number - Double(integer)\n\
    \    if decimal >= 0.5 {\n        return integer + 1\n    } else {\n        return\
    \ integer\n    }", "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue >=\
    \ 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue!\
    \ - floorValue)\n    let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff\
    \ == ceilDiff {\n        return Int(ceilValue)\n    }\n    return Int(floorDiff\
    \ < ceilDiff ? floorValue : ceilValue)", "    let num = Double(value)!\n    let\
    \ floor = Int(floor(num))\n    let ceil = Int(ceil(num))\n    if num - Double(floor)\
    \ < Double(ceil) - num {\n        return floor\n    }\n    return ceil", "   \
    \ let number = Double(value)!\n    let integer = Int(number)\n    let decimal\
    \ = number - Double(integer)\n    if decimal < 0.5 {\n        return integer\n\
    \    } else {\n        return integer + 1\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    let diff_floor = abs(number - Double(floor))\n\
    \    let diff_ceil = abs(number - Double(ceil))\n    if diff_floor > diff_ceil\
    \ {\n        return ceil\n    } else if diff_floor < diff_ceil {\n        return\
    \ floor\n    } else {\n        return rounded\n    }", "    let doubleValue =\
    \ Double(value)\n    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)",
  "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n   \
    \ let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue >= 0.5\
    \ {\n        return intValue + 1\n    } else {\n        return intValue\n    }",
  "    let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue!\
    \ - floorValue)\n    let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff\
    \ == ceilDiff {\n        return Int(doubleValue! > 0 ? ceilValue : floorValue)\n\
    \    }\n    return Int(floorDiff < ceilDiff ? floorValue : ceilValue)", "    let\
    \ number = Double(value)!\n    let int = Int(number)\n    let decimal = number\
    \ - Double(int)\n    if decimal > 0.5 {\n        return int + 1\n    } else if\
    \ decimal < -0.5 {\n        return int - 1\n    } else {\n        return int\n\
    \    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let floorDiff = abs(number - Double(floor))\n    let ceilDiff = abs(number\
    \ - Double(ceil))\n    if floorDiff == ceilDiff {\n        return number < 0 ?\
    \ floor : ceil\n    }\n    return floorDiff < ceilDiff ? floor : ceil", '    return
    Int(value)!', "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimal = doubleValue! - Double(intValue)\n    if decimal >= 0.5 {\n\
    \        return intValue + 1\n    } else {\n        return intValue\n    }", " \
    \   let number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil\
    \ = Int(ceil(number))\n    let diff1 = abs(number - Double(floor))\n    let diff2\
    \ = abs(number - Double(ceil))\n    if diff1 < diff2 {\n        return floor\n\
    \    } else {\n        return ceil\n    }", "    let doubleValue = Double(value)\n\
    \    let floorValue = floor(doubleValue!)\n    let ceilValue = ceil(doubleValue!)\n\
    \    if doubleValue! - floorValue < ceilValue - doubleValue! {\n        return\
    \ Int(floorValue)\n    } else {\n        return Int(ceilValue)\n    }", "    let\
    \ number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil =\
    \ Int(ceil(number))\n    let diff_floor = abs(number - Double(floor))\n    let\
    \ diff_ceil = abs(number - Double(ceil))\n    if diff_floor < diff_ceil {\n  \
    \      return floor\n    } else {\n        return ceil\n    }", "    let doubleValue\
    \ = Double(value)\n    let intValue = Int(doubleValue!)\n    let decimalValue\
    \ = doubleValue! - Double(intValue)\n    if decimalValue >= 0.5 {\n        return\
    \ intValue + 1\n    } else {\n        return intValue\n    }", "    let doubleValue\
    \ = Double(value)\n    let intValue = Int(doubleValue!)\n    let doubleValue2\
    \ = Double(intValue)\n    if doubleValue2 == doubleValue {\n        return intValue\n\
    \    } else if doubleValue2 > doubleValue {\n        return intValue - 1\n   \
    \ } else {\n        return intValue + 1\n    }", "    let number = Double(value)!\n\
    \    let integer = Int(number)\n    let decimal = number - Double(integer)\n \
    \   if decimal < 0.5 {\n        return integer\n    } else {\n        return integer\
    \ + 1\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if rounded - Double(floor) == 0.5 {\n        return ceil\n    } else if rounded\
    \ - Double(floor) == -0.5 {\n        return floor\n    } else {\n        return\
    \ Int(rounded)\n    }", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let doubleValue =\
    \ Double(value)\n    let floor = Int(floor(doubleValue!))\n    let ceil = Int(ceil(doubleValue!))\n\
    \    let floorDiff = abs(doubleValue! - Double(floor))\n    let ceilDiff = abs(doubleValue!\
    \ - Double(ceil))\n    if floorDiff == ceilDiff {\n        return doubleValue!\
    \ > 0 ? ceil : floor\n    }\n    return floorDiff < ceilDiff ? floor : ceil",
  "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    let\
    \ roundedValue = round(doubleValue!)\n    return Int(roundedValue)", "    let\
    \ number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil =\
    \ Int(ceil(number))\n    if number - Double(floor) < Double(ceil) - number {\n\
    \        return floor\n    }\n    return ceil", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let number = Double(value)!\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - Double(floor) == 0.5\
    \ {\n        return number > 0 ? ceil : floor\n    }\n    return number - Double(floor)\
    \ < 0.5 ? floor : ceil", "    let number = Double(value)!\n    let int = Int(number)\n\
    \    let decimal = number - Double(int)\n    if decimal >= 0.5 {\n        return\
    \ int + 1\n    } else {\n        return int\n    }", "    let number = Double(value)!\n\
    \    let rounded = number.rounded()\n    let roundedInt = Int(rounded)\n    if\
    \ rounded - Double(roundedInt) == 0.5 {\n        return roundedInt + 1\n    }\n\
    \    return roundedInt", "    let doubleValue = Double(value)\n    let floorValue\
    \ = floor(doubleValue!)\n    let ceilValue = ceil(doubleValue!)\n    if (doubleValue!\
    \ - floorValue) < (ceilValue - doubleValue!) {\n        return Int(floorValue)\n\
    \    } else {\n        return Int(ceilValue)\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilDiff = abs(number - Double(ceil))\n    if floorDiff == ceilDiff {\n\
    \        return ceil\n    }\n    return floorDiff < ceilDiff ? floor : ceil",
  "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n   \
    \ let decimal = doubleValue! - Double(intValue)\n    if decimal < 0.5 {\n    \
    \    return intValue\n    } else {\n        return intValue + 1\n    }", "   \
    \ let num = Double(value)!\n    let int = Int(num)\n    let diff = num - Double(int)\n\
    \    if diff == 0.5 {\n        return int + 1\n    } else if diff == -0.5 {\n\
    \        return int - 1\n    } else {\n        return int\n    }", "    let doubleValue\
    \ = Double(value)\n    let intValue = Int(doubleValue!)\n    let decimal = doubleValue!\
    \ - Double(intValue)\n    if decimal >= 0.5 {\n        return intValue + 1\n \
    \   } else {\n        return intValue\n    }", "    let num = Double(value)!\n\
    \    let floor = Int(floor(num))\n    let ceil = Int(ceil(num))\n    let diff\
    \ = num - Double(floor)\n    if diff < 0.5 {\n        return floor\n    } else\
    \ {\n        return ceil\n    }", "    let doubleValue = Double(value)\n    let\
    \ ceilValue = ceil(doubleValue!)\n    let floorValue = floor(doubleValue!)\n \
    \   let ceilDiff = ceilValue - doubleValue!\n    let floorDiff = doubleValue!\
    \ - floorValue\n    if ceilDiff == floorDiff {\n        if ceilValue > 0 {\n \
    \           return Int(ceilValue)\n        } else {\n            return Int(floorValue)\n\
    \        }\n    } else if ceilDiff < floorDiff {\n        return Int(ceilValue)\n\
    \    } else {\n        return Int(floorValue)\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceiling = Int(number.rounded(.up))\n    let floorDiff = abs(floor - number)\n\
    \    let ceilingDiff = abs(ceiling - number)\n    if floorDiff == ceilingDiff\
    \ {\n        return rounded < 0 ? floor : ceiling\n    }\n    return floorDiff\
    \ < ceilingDiff ? floor : ceiling", "    let doubleValue = Double(value)\n   \
    \ let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", "   \
    \ let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue!\
    \ - floorValue)\n    let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff\
    \ < ceilDiff {\n        return Int(floorValue)\n    } else {\n        return Int(ceilValue)\n\
    \    }", "    let number = Double(value)!\n    let rounded = round(number)\n \
    \   let floor = floor(number)\n    let ceil = ceil(number)\n    if number - floor\
    \ < ceil - number {\n        return Int(floor)\n    } else {\n        return Int(ceil)\n\
    \    }", "    let num = Double(value)!\n    let int = Int(num)\n    let decimal\
    \ = num - Double(int)\n    if decimal >= 0.5 {\n        return int + 1\n    }\
    \ else {\n        return int\n    }", "    let number = Double(value)!\n    let\
    \ floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    let floorDiff\
    \ = abs(number - Double(floor))\n    let ceilDiff = abs(number - Double(ceil))\n\
    \    if floorDiff == ceilDiff {\n        return number < 0 ? floor : ceil\n  \
    \  }\n    return floorDiff < ceilDiff ? floor : ceil", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceiling = Int(number.rounded(.up))\n    let floorDiff = abs(number -\
    \ Double(floor))\n    let ceilingDiff = abs(number - Double(ceiling))\n    if\
    \ floorDiff == ceilingDiff {\n        return rounded\n    } else if floorDiff\
    \ < ceilingDiff {\n        return floor\n    } else {\n        return ceiling\n\
    \    }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let roundedInt = Int(rounded)\n    let diff = number - rounded\n    if diff\
    \ == 0 {\n        return roundedInt\n    } else if diff > 0 {\n        return\
    \ roundedInt + 1\n    } else {\n        return roundedInt - 1\n    }", "    let\
    \ doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n    let\
    \ ceilValue = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue! - floorValue)\n\
    \    let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff == ceilDiff\
    \ {\n        return Int(ceilValue)\n    }\n    return floorDiff < ceilDiff ? Int(floorValue)\
    \ : Int(ceilValue)", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let floor = number.rounded(.down)\n    let ceil = number.rounded(.up)\n \
    \   if number - floor < ceil - number {\n        return Int(floor)\n    } else\
    \ {\n        return Int(ceil)\n    }", "    let doubleValue = Double(value)\n\
    \    let intValue = Int(doubleValue!)\n    let decimal = doubleValue! - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let floor = Int(number.rounded(.down))\n    let ceiling = Int(number.rounded(.up))\n\
    \    if number - Double(floor) < 0.5 {\n        return floor\n    } else if Double(ceiling)\
    \ - number < 0.5 {\n        return ceiling\n    } else {\n        return Int(rounded)\n\
    \    }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let rounded_int = Int(rounded)\n    let rounded_double = Double(rounded_int)\n\
    \    if number > rounded_double {\n        return rounded_int + 1\n    } else\
    \ if number < rounded_double {\n        return rounded_int - 1\n    } else {\n\
    \        return rounded_int\n    }", "    let number = Double(value)!\n    let\
    \ rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if abs(number - Double(rounded))\
    \ == 0.5 {\n        if number > 0 {\n            return ceil\n        } else {\n\
    \            return floor\n        }\n    }\n    return rounded", "    let doubleValue\
    \ = Double(value)\n    let floorValue = floor(doubleValue!)\n    let ceilValue\
    \ = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue! - floorValue)\n \
    \   let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff > ceilDiff\
    \ {\n        return Int(ceilValue)\n    } else {\n        return Int(floorValue)\n\
    \    }", "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue >=\
    \ 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let num = Double(value)!\n    let int = Int(num)\n\
    \    let decimal = num - Double(int)\n    if decimal < 0.5 {\n        return int\n\
    \    } else {\n        return int + 1\n    }", "    let doubleValue = Double(value)\n\
    \    let floorValue = floor(doubleValue!)\n    let ceilValue = ceil(doubleValue!)\n\
    \    let floorDiff = abs(doubleValue! - floorValue)\n    let ceilDiff = abs(doubleValue!\
    \ - ceilValue)\n    if floorDiff == ceilDiff {\n        return Int(ceilValue)\n\
    \    }\n    return floorDiff < ceilDiff ? Int(floorValue) : Int(ceilValue)", " \
    \   let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    if doubleValue! - floorValue == ceilValue\
    \ - doubleValue! {\n        return Int(floorValue)\n    }\n    return Int(doubleValue!\
    \ - floorValue > ceilValue - doubleValue! ? ceilValue : floorValue)", "    let\
    \ number = Double(value)!\n    let rounded = round(number)\n    let diff = abs(number\
    \ - rounded)\n    if diff == 0.5 {\n        if number > 0 {\n            return\
    \ Int(rounded + 1)\n        } else {\n            return Int(rounded - 1)\n  \
    \      }\n    }\n    return Int(rounded)", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let ceiled = Int(number.rounded(.up))\n\
    \    let floored = Int(number.rounded(.down))\n    let rounded_diff = abs(rounded\
    \ - number)\n    let ceiled_diff = abs(ceiled - number)\n    let floored_diff\
    \ = abs(floored - number)\n    if rounded_diff == ceiled_diff {\n        return\
    \ ceiled\n    } else if rounded_diff == floored_diff {\n        return floored\n\
    \    } else if rounded_diff < ceiled_diff && rounded_diff < floored_diff {\n \
    \       return rounded\n    } else if ceiled_diff < rounded_diff && ceiled_diff\
    \ < floored_diff {\n        return ceiled\n    } else {\n        return floored\n\
    \    }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    if number - rounded > 0.5 {\n        return Int(rounded) + 1\n    } else\
    \ if number - rounded < -0.5 {\n        return Int(rounded) - 1\n    } else {\n\
    \        return Int(rounded)\n    }", "    let number = Double(value)!\n    let\
    \ rounded = Int(round(number))\n    let floor = Int(floor(number))\n    let ceil\
    \ = Int(ceil(number))\n    if abs(number - Double(rounded)) < abs(number - Double(floor))\
    \ {\n        return rounded\n    } else if abs(number - Double(rounded)) < abs(number\
    \ - Double(ceil)) {\n        return rounded\n    } else if abs(number - Double(floor))\
    \ < abs(number - Double(ceil)) {\n        return floor\n    } else {\n       \
    \ return ceil\n    }", "    let doubleValue = Double(value)\n    let floorValue\
    \ = floor(doubleValue!)\n    let ceilValue = ceil(doubleValue!)\n    let floorDiff\
    \ = abs(doubleValue! - floorValue)\n    let ceilDiff = abs(doubleValue! - ceilValue)\n\
    \    if floorDiff == ceilDiff {\n        return Int(doubleValue! > 0 ? ceilValue\
    \ : floorValue)\n    }\n    return Int(floorDiff < ceilDiff ? floorValue : ceilValue)",
  "    let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    if (doubleValue! - floorValue) <\
    \ (ceilValue - doubleValue!) {\n        return Int(floorValue)\n    } else {\n\
    \        return Int(ceilValue)\n    }", "    let number = Double(value)!\n   \
    \ if number > 0 {\n        return Int(number.rounded(.up))\n    } else {\n   \
    \     return Int(number.rounded(.down))\n    }", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if\
    \ number - Double(floor) < Double(ceil) - number {\n        return floor\n   \
    \ }\n    return ceil", "    let number = Double(value)!\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    }\n    return ceil", "    let doubleValue\
    \ = Double(value)\n    let floorValue = floor(doubleValue!)\n    let ceilValue\
    \ = ceil(doubleValue!)\n    let floorDiff = abs(doubleValue! - floorValue)\n \
    \   let ceilDiff = abs(doubleValue! - ceilValue)\n    if floorDiff == ceilDiff\
    \ {\n        return Int(ceilValue)\n    }\n    return Int(floorDiff < ceilDiff\
    \ ? floorValue : ceilValue)", "    let number = Double(value)!\n    let floor\
    \ = Int(floor(number))\n    let ceil = Int(ceil(number))\n    let diff = number\
    \ - Double(floor)\n    if diff == 0.5 {\n        return floor < 0 ? floor - 1\
    \ : ceil\n    }\n    return diff < 0.5 ? floor : ceil", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let ceiled = ceil(number)\n    let floored\
    \ = floor(number)\n    if rounded - number == 0.5 {\n        return Int(ceiled)\n\
    \    } else if number - rounded == 0.5 {\n        return Int(floored)\n    } else\
    \ {\n        return Int(rounded)\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let number = Double(value)!\n    let rounded = round(number)\n    let floor\
    \ = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if rounded - Double(floor)\
    \ == 0.5 {\n        return floor\n    } else if rounded - Double(ceil) == 0.5\
    \ {\n        return ceil\n    } else {\n        return Int(rounded)\n    }", " \
    \   let doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n\
    \    let ceilValue = ceil(doubleValue!)\n    if (doubleValue! - floorValue) <\
    \ (ceilValue - doubleValue!) {\n        return Int(floorValue)\n    } else {\n\
    \        return Int(ceilValue)\n    }", "    let number = Double(value)!\n   \
    \ let rounded = number.rounded()\n    let ceiled = number.rounded(.up)\n    let\
    \ floored = number.rounded(.down)\n    let diffRounded = abs(number - rounded)\n\
    \    let diffCeiled = abs(number - ceiled)\n    let diffFloored = abs(number -\
    \ floored)\n    if diffRounded < diffCeiled && diffRounded < diffFloored {\n \
    \       return Int(rounded)\n    } else if diffCeiled < diffFloored {\n      \
    \  return Int(ceiled)\n    } else {\n        return Int(floored)\n    }", "  \
    \  let num = Double(value)!\n    let floor = Int(floor(num))\n    let ceil = Int(ceil(num))\n\
    \    if num - Double(floor) < Double(ceil) - num {\n        return floor\n   \
    \ }\n    return ceil", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let ceiled = ceil(number)\n    let floored = floor(number)\n    if number\
    \ - floored > ceiled - number {\n        return Int(ceiled)\n    } else if number\
    \ - floored < ceiled - number {\n        return Int(floored)\n    } else {\n \
    \       return Int(number < 0 ? floored : ceiled)\n    }", "    let doubleValue\
    \ = Double(value)\n    let intValue = Int(doubleValue!)\n    let decimal = doubleValue!\
    \ - Double(intValue)\n    if decimal >= 0.5 {\n        return intValue + 1\n \
    \   } else {\n        return intValue\n    }", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    return Int(rounded)", '    return Int(Double(value)!.rounded(.awayFromZero))',
  "    let number = Double(value)!\n    let rounded = round(number)\n    let floor\
    \ = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n    if\
    \ abs(number - rounded) == 0.5 {\n        if number > 0 {\n            return\
    \ ceil\n        } else {\n            return floor\n        }\n    } else {\n\
    \        return Int(rounded)\n    }", "    let number = Double(value)!\n    let\
    \ floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if number\
    \ - Double(floor) < Double(ceil) - number {\n        return floor\n    }\n   \
    \ return ceil", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    let\
    \ floorValue = floor(doubleValue!)\n    let ceilValue = ceil(doubleValue!)\n \
    \   if (doubleValue! - floorValue) < (ceilValue - doubleValue!) {\n        return\
    \ Int(floorValue)\n    } else {\n        return Int(ceilValue)\n    }", "    let\
    \ number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil =\
    \ Int(ceil(number))\n    if number - Double(floor) < Double(ceil) - number {\n\
    \        return floor\n    }\n    return ceil", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if\
    \ number - Double(floor) < Double(ceil) - number {\n        return floor\n   \
    \ }\n    return ceil", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let ceiled = number.rounded(.up)\n    let floored = number.rounded(.down)\n\
    \    let diffRounded = abs(number - rounded)\n    let diffCeiled = abs(number\
    \ - ceiled)\n    let diffFloored = abs(number - floored)\n    if diffRounded <=\
    \ diffCeiled && diffRounded <= diffFloored {\n        return Int(rounded)\n  \
    \  } else if diffCeiled <= diffRounded && diffCeiled <= diffFloored {\n      \
    \  return Int(ceiled)\n    } else {\n        return Int(floored)\n    }", "  \
    \  let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n   \
    \ let decimal = doubleValue! - Double(intValue)\n    if decimal >= 0.5 {\n   \
    \     return intValue + 1\n    } else {\n        return intValue\n    }", "  \
    \  let number = Double(value)!\n    let integer = Int(number)\n    let decimal\
    \ = number - Double(integer)\n    if decimal < 0.5 {\n        return integer\n\
    \    } else {\n        return integer + 1\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let number = Double(value)!\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilDiff = abs(number - Double(ceil))\n    return floorDiff < ceilDiff\
    \ ? floor : ceil", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceiling = Int(number.rounded(.up))\n\
    \    if (number - Double(floor)) > (Double(ceiling) - number) {\n        return\
    \ ceiling\n    } else {\n        return floor\n    }", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if\
    \ number - Double(floor) < Double(ceil) - number {\n        return floor\n   \
    \ }\n    return ceil", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let doubleValue =\
    \ Double(value)\n    let intValue = Int(doubleValue!)\n    let decimalValue =\
    \ doubleValue! - Double(intValue)\n    if decimalValue >= 0.5 {\n        return\
    \ intValue + 1\n    } else {\n        return intValue\n    }", "    let number\
    \ = Double(value)!\n    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n\
    \    if number - Double(floor) < Double(ceil) - number {\n        return floor\n\
    \    }\n    return ceil", '    return Int(Double(value)!.rounded(.awayFromZero))',
  "    let number = Double(value)!\n    let rounded = round(number)\n    let floor\
    \ = floor(number)\n    let ceil = ceil(number)\n    if rounded - floor == 0.5\
    \ {\n        return Int(ceil)\n    } else if rounded - ceil == 0.5 {\n       \
    \ return Int(floor)\n    } else {\n        return Int(rounded)\n    }", "    let\
    \ doubleValue = Double(value)\n    let floorValue = floor(doubleValue!)\n    let\
    \ ceilValue = ceil(doubleValue!)\n    if (doubleValue! - floorValue) < (ceilValue\
    \ - doubleValue!) {\n        return Int(floorValue)\n    } else {\n        return\
    \ Int(ceilValue)\n    }"]
stop_tokens:
- "\n}"

language: swift
name: HumanEval_15_string_sequence
results:
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmptjb42_nf/tmptjb42_nf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3303a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b330376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b330376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b330376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptjb42_nf                        0x00005620b6bc65d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b3303c61460 __libc_start_main +
    245

    6    tmptjb42_nf                        0x00005620b6bc6239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    let numbers\
    \ = Array(0...n)\n    return numbers.map { String($0) }.joined(separator: \" \"\
    )\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmptjb42_nf/tmptjb42_nf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3303a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b330376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b330376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b330376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptjb42_nf                        0x00005620b6bc65d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b3303c61460 __libc_start_main +
    245

    6    tmptjb42_nf                        0x00005620b6bc6239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    let numbers\
    \ = Array(0...n)\n    return numbers.map { String($0) }.joined(separator: \" \"\
    )\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmptjb42_nf/tmptjb42_nf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3303a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b330376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b330376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b330376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptjb42_nf                        0x00005620b6bc65d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b3303c61460 __libc_start_main +
    245

    6    tmptjb42_nf                        0x00005620b6bc6239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    let numbers\
    \ = (0...n).map { String($0) }\n    return numbers.joinWithSeparator(\" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp4bsbsyg7.swift:5:20: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return numbers.joinWithSeparator(\" \")\n         \
    \  ~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map(String.init).joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    let a = Array(0...n)\n\
    \    return a.map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return Array(0...n).map(String.init).joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmptjb42_nf/tmptjb42_nf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3303a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b330376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b330376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b330376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptjb42_nf                        0x00005620b6bc65d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b3303c61460 __libc_start_main +
    245

    6    tmptjb42_nf                        0x00005620b6bc6239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmptjb42_nf/tmptjb42_nf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3303a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b330376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b330376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b330376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptjb42_nf                        0x00005620b6bc65d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b3303c61460 __libc_start_main +
    245

    6    tmptjb42_nf                        0x00005620b6bc6239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return join(\"\
    \ \", Array(0...n).map { String($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1\
    \ 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp88ztur75.swift:4:12: error: cannot find 'join' in scope\n    return\
    \ join(\" \", Array(0...n).map { String($0) })\n           ^~~~\n"
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmptjb42_nf/tmptjb42_nf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3303a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b330376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b330376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b330376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptjb42_nf                        0x00005620b6bc65d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b3303c61460 __libc_start_main +
    245

    6    tmptjb42_nf                        0x00005620b6bc6239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmptjb42_nf/tmptjb42_nf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3303a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b330376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b330376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b330376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptjb42_nf                        0x00005620b6bc65d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b3303c61460 __libc_start_main +
    245

    6    tmptjb42_nf                        0x00005620b6bc6239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map(String.init).joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmptjb42_nf/tmptjb42_nf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3303a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b330376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b330376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b330376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptjb42_nf                        0x00005620b6bc65d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b3303c61460 __libc_start_main +
    245

    6    tmptjb42_nf                        0x00005620b6bc6239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpj5e9ju05/tmpj5e9ju05.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5040bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af503db5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af503db5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af503db47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5e9ju05                        0x0000561ed4f1b722 <unavailable> + 5922

    5    libc.so.6                          0x00002af5042aa460 __libc_start_main +
    245

    6    tmpj5e9ju05                        0x0000561ed4f1b389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp8txj0b4x/tmp8txj0b4x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58ace5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58acb55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58acb55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58acb547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8txj0b4x                        0x000055e401f11722 <unavailable> + 5922

    5    libc.so.6                          0x00002b58ad04a460 __libc_start_main +
    245

    6    tmp8txj0b4x                        0x000055e401f11389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    var s = \"\
    \"\n    for i in 0...n {\n        s += String(i) + \" \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpghsealo5/tmpghsealo5.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4674f0dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4674c04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4674c04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4674c037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghsealo5                        0x000055d16569b5d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b46750f9460 __libc_start_main +
    245

    6    tmpghsealo5                        0x000055d16569b239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978831
- exit_code: 1
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joinWithSeparator(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: SyntaxError
  stderr: "/tmp/tmp2yv5kj0g.swift:4:39: error: value of type '[String]' has no member\
    \ 'joinWithSeparator'\n    return (0...n).map { String($0) }.joinWithSeparator(\"\
    \ \")\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978830
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978831

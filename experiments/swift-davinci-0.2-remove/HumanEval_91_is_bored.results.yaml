language: swift
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplv3zcig0.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var count = 0\n    let words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpxsdkzx3k/tmpxsdkzx3k.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0073356c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b007304db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b007304d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b007304c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxsdkzx3k                        0x000055c49265eaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002b0073542460 __libc_start_main +
    245

    6    tmpxsdkzx3k                        0x000055c49265e3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.split(separator:\
    \ \".\")\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\"\
    ) {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpx386z4wo/tmpx386z4wo.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b01c7d2dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b01c7a24b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b01c7a24988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b01c7a237b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx386z4wo                        0x000055a2cec327cb <unavailable> + 6091

    5    libc.so.6                          0x00002b01c7f19460 __libc_start_main +
    245

    6    tmpx386z4wo                        0x000055a2cec323a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplv3zcig0.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let s = S.lowercased()\n    let arr = s.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for i in arr {\n        if i == \"i\" {\n   \
    \         count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxzt1asi1.swift:8:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = s.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var bored = 0\n    let sentences = S.split(separator:\
    \ \".\")\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            bored\
    \ += 1\n        }\n    }\n    return bored\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.lowercased() == \"i\" {\n \
    \           boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp_pysv5zu/tmp_pysv5zu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b03f8108c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b03f7dffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b03f7dff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b03f7dfe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_pysv5zu                        0x000055f2cad96a48 <unavailable> + 6728

    5    libc.so.6                          0x00002b03f82f4460 __libc_start_main +
    245

    6    tmp_pysv5zu                        0x000055f2cad96349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let str = S.lowercased()\n    let words =\
    \ str.components(separatedBy: \" \")\n    var boredoms = 0\n    for word in words\
    \ {\n        if word == \"i\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqs8qm8x2.swift:8:21: error: value of type 'String' has no member\
    \ 'components'\n    let words = str.components(separatedBy: \" \")\n         \
    \       ~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for i in 0..<words.count {\n        if words[i] == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp_r2gu8zu/tmp_r2gu8zu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afd4e720c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afd4e417b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afd4e417988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afd4e4167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_r2gu8zu                        0x000055844b4b9b18 <unavailable> + 6936

    5    libc.so.6                          0x00002afd4e90c460 __libc_start_main +
    245

    6    tmp_r2gu8zu                        0x000055844b4b9419 <unavailable> + 5145

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    var count = 0\n    for sentence in sentences {\n\
    \        if sentence.hasPrefix(\"I\") {\n            count += 1\n        }\n \
    \   }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7cniycm7.swift:7:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    return S.components(separatedBy: \"I\").count\
    \ - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello world\"\
    ) == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"\
    I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S: \"\
    I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptibiym79.swift:7:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let boredoms = S.components(separatedBy: \"\
    I\")\n    return boredoms.count - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpkliwx65x.swift:7:22: error: value of type 'String' has no member\
    \ 'components'\n    let boredoms = S.components(separatedBy: \"I\")\n        \
    \           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\").map\
    \ { String($0) }\n    let boredoms = sentences.filter { $0.hasPrefix(\"I\") }\n\
    \    return boredoms.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmpfa4kj6by/tmpfa4kj6by.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab110ce8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab1109dfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab1109df988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab1109de7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfa4kj6by                        0x00005571506f57bb <unavailable> + 6075

    5    libc.so.6                          0x00002ab110ed4460 __libc_start_main +
    245

    6    tmpfa4kj6by                        0x00005571506f5399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplv3zcig0.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \".!?\"\
    )\n    var count = 0\n    for i in arr {\n        if i.hasPrefix(\"I\") {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp3hd00hgn.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \".!?\")\n           \
    \   ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8iiouzvs.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplv3zcig0.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in words {\n        if word == \"I\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpd1s9jqhd.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var sentences = S.components(separatedBy:\
    \ \".\")\n    sentences.append(contentsOf: S.components(separatedBy: \"?\"))\n\
    \    sentences.append(contentsOf: S.components(separatedBy: \"!\"))\n    for sentence\
    \ in sentences {\n        let words = sentence.components(separatedBy: \" \")\n\
    \        if words.count > 0 && words[0] == \"I\" {\n            boredoms += 1\n\
    \        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpeaw3id94.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n/tmp/tmpeaw3id94.swift:9:36: error: value of type\
    \ 'String' has no member 'components'\n    sentences.append(contentsOf: S.components(separatedBy:\
    \ \"?\"))\n                                 ~ ^~~~~~~~~~\n/tmp/tmpeaw3id94.swift:10:36:\
    \ error: value of type 'String' has no member 'components'\n    sentences.append(contentsOf:\
    \ S.components(separatedBy: \"!\"))\n                                 ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word.hasPrefix(\"I\") {\n      \
    \      boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdei7q3p8.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for word in words {\n        if word.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpuj2ryo79.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n                ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.split(separator: \" \")\n    var\
    \ count = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"I\" {\n    \
    \        count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpbwkmd48n/tmpbwkmd48n.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af149d9bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af149a92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af149a92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af149a917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbwkmd48n                        0x0000560e765c2ac8 <unavailable> + 6856

    5    libc.so.6                          0x00002af149f87460 __libc_start_main +
    245

    6    tmpbwkmd48n                        0x0000560e765c23c9 <unavailable> + 5065

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 {\n            if words[0] == \"I\" {\n \
    \               boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    var boredoms = 0\n    for sentence in sentences\
    \ {\n        if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpa228lt6_.swift:7:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var count = 0\n    for word in words {\n        if word == \"I\" {\n      \
    \      count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp2hk493hz/tmp2hk493hz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf131e6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf12eddb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf12edd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf12edc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2hk493hz                        0x000055fa92028aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002acf133d2460 __libc_start_main +
    245

    6    tmp2hk493hz                        0x000055fa920283a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.first == \"I\" {\n        \
    \    boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpim54ejuq/tmpim54ejuq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba75d465c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75d15cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75d15c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba75d15b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpim54ejuq                        0x00005633de5e17eb <unavailable> + 6123

    5    libc.so.6                          0x00002ba75d651460 __libc_start_main +
    245

    6    tmpim54ejuq                        0x00005633de5e13c9 <unavailable> + 5065

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp1e1a70a9.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpet33bayb/tmpet33bayb.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae603af7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6037eeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6037ee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6037ed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpet33bayb                        0x0000564301d677cb <unavailable> + 6091

    5    libc.so.6                          0x00002ae603ce3460 __libc_start_main +
    245

    6    tmpet33bayb                        0x0000564301d673a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.lowercased() == \"i\" {\n \
    \           boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp_pysv5zu/tmp_pysv5zu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b03f8108c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b03f7dffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b03f7dff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b03f7dfe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_pysv5zu                        0x000055f2cad96a48 <unavailable> + 6728

    5    libc.so.6                          0x00002b03f82f4460 __libc_start_main +
    245

    6    tmp_pysv5zu                        0x000055f2cad96349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.components(separatedBy:\
    \ \".?!\")\n    var boredoms = 0\n    for sentence in sentences {\n        if\
    \ sentence.hasPrefix(\"I\") {\n            boredoms += 1\n        }\n    }\n \
    \   return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpfxz8uxfr.swift:7:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".?!\")\n     \
    \               ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let s = S.split(separator: \" \")\n    var\
    \ count = 0\n    for i in s {\n        if i == \"I\" {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmp90x3333x/tmp90x3333x.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa98f7fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa98c76b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa98c76988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa98c757b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp90x3333x                        0x000055b194cd9aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afa9916b460 __libc_start_main +
    245

    6    tmp90x3333x                        0x000055b194cd93a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.split(separator: \" \")\n    var\
    \ count = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"I\" {\n    \
    \        count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpbwkmd48n/tmpbwkmd48n.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af149d9bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af149a92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af149a92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af149a917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbwkmd48n                        0x0000560e765c2ac8 <unavailable> + 6856

    5    libc.so.6                          0x00002af149f87460 __libc_start_main +
    245

    6    tmpbwkmd48n                        0x0000560e765c23c9 <unavailable> + 5065

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptgtxaqur.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.split(separator:\
    \ \".\")\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in words {\n        if word == \"I\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpd1s9jqhd.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let s = S.lowercased()\n    let arr = s.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for i in arr {\n        if i == \"i\" {\n   \
    \         count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxzt1asi1.swift:8:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = s.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8iiouzvs.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.split(separator:\
    \ \".\")\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 {\n            if words[0] == \"I\" {\n \
    \               boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n\
    \    for char in S {\n        if char == \".\" || char == \"?\" || char == \"\
    !\" {\n            if sentence.hasPrefix(\"I\") {\n                boredoms +=\
    \ 1\n            }\n            sentence = \"\"\n        } else {\n          \
    \  sentence += String(char)\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpfb4agv4t/tmpfb4agv4t.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5781c08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b57818ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b57818ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b57818fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfb4agv4t                        0x0000556f79e2d5bb <unavailable> + 5563

    5    libc.so.6                          0x00002b5781df4460 __libc_start_main +
    245

    6    tmpfb4agv4t                        0x0000556f79e2d199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n\
    \    for c in S {\n        if c == \".\" || c == \"?\" || c == \"!\" {\n     \
    \       if sentence.hasPrefix(\"I\") {\n                boredoms += 1\n      \
    \      }\n            sentence = \"\"\n        } else {\n            sentence.append(c)\n\
    \        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmpwzujg7l5/tmpwzujg7l5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b063f5c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b063f2bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b063f2bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b063f2ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwzujg7l5                        0x000055c3fef7056b <unavailable> + 5483

    5    libc.so.6                          0x00002b063f7b0460 __libc_start_main +
    245

    6    tmpwzujg7l5                        0x000055c3fef70149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \".\"\
    )\n    var count = 0\n    for i in arr {\n        if i.hasPrefix(\"I\") {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpd8h7eyc8.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \".\")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: [\"\
    .\", \"?\", \"!\"])\n    var boredoms = 0\n    for word in words {\n        if\
    \ word.hasPrefix(\"I\") {\n            boredoms += 1\n        }\n    }\n    return\
    \ boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmppf1eyk0r.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n                ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.lowercased() == \"i\" {\n \
    \           boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp_pysv5zu/tmp_pysv5zu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b03f8108c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b03f7dffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b03f7dff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b03f7dfe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_pysv5zu                        0x000055f2cad96a48 <unavailable> + 6728

    5    libc.so.6                          0x00002b03f82f4460 __libc_start_main +
    245

    6    tmp_pysv5zu                        0x000055f2cad96349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var count = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8f9yrh3p.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 {\n            if words[0] == \"I\" {\n \
    \               boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let S = S.lowercased()\n    let words = S.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for word in words {\n        if word == \"i\"\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpz33uadqk.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpan8wfph3.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    var boredoms = 0\n    for sentence in sentences\
    \ {\n        if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpa228lt6_.swift:7:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptgtxaqur.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in arr {\n        if word == \"I\" {\n    \
    \        count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp4nqxf5rh.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n\
    \    for char in S {\n        if char == \".\" || char == \"?\" || char == \"\
    !\" {\n            if sentence.hasPrefix(\"I\") {\n                boredoms +=\
    \ 1\n            }\n            sentence = \"\"\n        } else {\n          \
    \  sentence += String(char)\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpfb4agv4t/tmpfb4agv4t.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5781c08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b57818ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b57818ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b57818fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfb4agv4t                        0x0000556f79e2d5bb <unavailable> + 5563

    5    libc.so.6                          0x00002b5781df4460 __libc_start_main +
    245

    6    tmpfb4agv4t                        0x0000556f79e2d199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ \".\")\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpjxrj11qd.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplv3zcig0.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8iiouzvs.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ \".\")\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\"\
    ) {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpun_r_y7m.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let s = S.lowercased()\n    let arr = s.components(separatedBy:\
    \ \".\")\n    var count = 0\n    for i in arr {\n        if i.hasPrefix(\"i\"\
    ) {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpuex21idm.swift:8:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = s.components(separatedBy: \".\")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978458
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.lowercased() == \"i\" {\n \
    \           boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp_pysv5zu/tmp_pysv5zu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b03f8108c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b03f7dffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b03f7dff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b03f7dfe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_pysv5zu                        0x000055f2cad96a48 <unavailable> + 6728

    5    libc.so.6                          0x00002b03f82f4460 __libc_start_main +
    245

    6    tmp_pysv5zu                        0x000055f2cad96349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let S = S.lowercased()\n    let sentences\
    \ = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var boredoms = 0\n \
    \   for sentence in sentences {\n        if sentence.hasPrefix(\"i\") {\n    \
    \        boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmppg9a12u8.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8iiouzvs.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let boredoms = S.components(separatedBy: \"\
    I\")\n    return boredoms.count - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpkliwx65x.swift:7:22: error: value of type 'String' has no member\
    \ 'components'\n    let boredoms = S.components(separatedBy: \"I\")\n        \
    \           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var count = 0\n    var isBored = false\n \
    \   for char in S {\n        if char == \"I\" {\n            isBored = true\n\
    \        } else if isBored && (char == \".\" || char == \"?\" || char == \"!\"\
    ) {\n            count += 1\n            isBored = false\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmp0eic2eun/tmp0eic2eun.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a5baeac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a5b7e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a5b7e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a5b7e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0eic2eun                        0x000055c7dfb1e4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b1a5bcd6460 __libc_start_main +
    245

    6    tmp0eic2eun                        0x000055c7dfb1e099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let S = S.lowercased()\n    var boredoms =\
    \ 0\n    var start = S.startIndex\n    var end = S.endIndex\n    var range = start..<end\n\
    \    while range.lowerBound < range.upperBound {\n        let r = S.rangeOfCharacter(from:\
    \ CharacterSet.punctuationCharacters, options: [], range: range)\n        if let\
    \ r = r {\n            end = r.lowerBound\n            range = start..<end\n \
    \       } else {\n            end = S.endIndex\n            range = start..<end\n\
    \        }\n        let substr = S[range]\n        if substr.hasPrefix(\"i\")\
    \ {\n            boredoms += 1\n        }\n        if let r = r {\n          \
    \  start = r.upperBound\n            range = start..<end\n        } else {\n \
    \           break\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqmoknkd2.swift:13:42: error: cannot find 'CharacterSet' in scope\n\
    \        let r = S.rangeOfCharacter(from: CharacterSet.punctuationCharacters,\
    \ options: [], range: range)\n                                         ^~~~~~~~~~~~\n\
    /tmp/tmpqmoknkd2.swift:13:19: error: value of type 'String' has no member 'rangeOfCharacter'\n\
    \        let r = S.rangeOfCharacter(from: CharacterSet.punctuationCharacters,\
    \ options: [], range: range)\n                ~ ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpet33bayb/tmpet33bayb.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae603af7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6037eeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6037ee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6037ed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpet33bayb                        0x0000564301d677cb <unavailable> + 6091

    5    libc.so.6                          0x00002ae603ce3460 __libc_start_main +
    245

    6    tmpet33bayb                        0x0000564301d673a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptgtxaqur.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    let boredoms = sentences.filter { $0.hasPrefix(\"I\") }\n    return boredoms.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpce3324g2/tmpce3324g2.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b544431fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5444016b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5444016988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b54440157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpce3324g2                        0x000055c74bbfd72b <unavailable> + 5931

    5    libc.so.6                          0x00002b544450b460 __libc_start_main +
    245

    6    tmpce3324g2                        0x000055c74bbfd309 <unavailable> + 4873

    '
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word.lowercased() == \"i\" {\n \
    \           boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_cwewdft.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978458
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n\
    \    for char in S {\n        if char == \".\" || char == \"?\" || char == \"\
    !\" {\n            if sentence.hasPrefix(\"I\") {\n                boredoms +=\
    \ 1\n            }\n            sentence = \"\"\n        } else {\n          \
    \  sentence += String(char)\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpfb4agv4t/tmpfb4agv4t.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5781c08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b57818ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b57818ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b57818fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfb4agv4t                        0x0000556f79e2d5bb <unavailable> + 5563

    5    libc.so.6                          0x00002b5781df4460 __libc_start_main +
    245

    6    tmpfb4agv4t                        0x0000556f79e2d199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for word in words {\n        if word.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpuj2ryo79.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n                ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptgtxaqur.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpet33bayb/tmpet33bayb.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae603af7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6037eeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6037ee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6037ed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpet33bayb                        0x0000564301d677cb <unavailable> + 6091

    5    libc.so.6                          0x00002ae603ce3460 __libc_start_main +
    245

    6    tmpet33bayb                        0x0000564301d673a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in words {\n        if word == \"I\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpd1s9jqhd.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.first == \"I\" {\n        \
    \    boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpim54ejuq/tmpim54ejuq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba75d465c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75d15cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75d15c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba75d15b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpim54ejuq                        0x00005633de5e17eb <unavailable> + 6123

    5    libc.so.6                          0x00002ba75d651460 __libc_start_main +
    245

    6    tmpim54ejuq                        0x00005633de5e13c9 <unavailable> + 5065

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptgtxaqur.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in words {\n        if word == \"I\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpd1s9jqhd.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.lowercased() == \"i\" {\n \
    \           boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp_pysv5zu/tmp_pysv5zu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b03f8108c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b03f7dffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b03f7dff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b03f7dfe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_pysv5zu                        0x000055f2cad96a48 <unavailable> + 6728

    5    libc.so.6                          0x00002b03f82f4460 __libc_start_main +
    245

    6    tmp_pysv5zu                        0x000055f2cad96349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    return S.components(separatedBy: \"I\").count\
    \ - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello world\"\
    ) == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"\
    I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S: \"\
    I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptibiym79.swift:7:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    return S.components(separatedBy: \"I\").count\
    \ - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello world\"\
    ) == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"\
    I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S: \"\
    I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptibiym79.swift:7:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.components(separatedBy:\
    \ \".\")\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdlymogxe.swift:7:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in words {\n        if word == \"I\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpd1s9jqhd.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var count = 0\n    for word in words {\n        if word == \"I\" {\n      \
    \      count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp2hk493hz/tmp2hk493hz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf131e6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf12eddb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf12edd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf12edc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2hk493hz                        0x000055fa92028aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002acf133d2460 __libc_start_main +
    245

    6    tmp2hk493hz                        0x000055fa920283a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in words {\n        if word == \"I\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpd1s9jqhd.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word.hasPrefix(\"I\") {\n      \
    \      boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdei7q3p8.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\").map\
    \ { String($0) }\n    let boredoms = sentences.filter { $0.starts(with: \"I\"\
    ) }\n    return boredoms.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmphd3_0vpi/tmphd3_0vpi.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba6de4c8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba6de1bfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba6de1bf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba6de1be7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphd3_0vpi                        0x0000557fef86282b <unavailable> + 6187

    5    libc.so.6                          0x00002ba6de6b4460 __libc_start_main +
    245

    6    tmphd3_0vpi                        0x0000557fef862409 <unavailable> + 5129

    '
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    return S.components(separatedBy: \"I\").count\
    \ - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello world\"\
    ) == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"\
    I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S: \"\
    I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptibiym79.swift:7:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let s = S.lowercased()\n    var boredoms =\
    \ 0\n    var i = 0\n    while i < s.count {\n        let index = s.index(s.startIndex,\
    \ offsetBy: i)\n        let c = s[index]\n        if c == \"i\" {\n          \
    \  let index2 = s.index(s.startIndex, offsetBy: i + 1)\n            let c2 = s[index2]\n\
    \            if c2 == \" \" {\n                boredoms += 1\n            }\n\
    \        }\n        i += 1\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp_ymjdwti/tmp_ymjdwti.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b719bd62c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b719ba59b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b719ba59988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b719ba587b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_ymjdwti                        0x000055c6fdc08898 <unavailable> + 6296

    5    libc.so.6                          0x00002b719bf4e460 __libc_start_main +
    245

    6    tmp_ymjdwti                        0x000055c6fdc08199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659978458
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    return S.components(separatedBy: \"I\").count\
    \ - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello world\"\
    ) == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"\
    I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S: \"\
    I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptibiym79.swift:7:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let s = S.lowercased()\n    let arr = s.split(separator:\
    \ \" \")\n    var count = 0\n    for i in arr {\n        if i == \"i\" {\n   \
    \         count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp0lyxjsrg/tmp0lyxjsrg.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3390819c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3390510b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3390510988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b339050f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0lyxjsrg                        0x000055a889004af8 <unavailable> + 6904

    5    libc.so.6                          0x00002b3390a05460 __libc_start_main +
    245

    6    tmp0lyxjsrg                        0x000055a8890043f9 <unavailable> + 5113

    '
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp1e1a70a9.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp1e1a70a9.swift:8:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for i in 0..<words.count {\n        if words[i] == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp_r2gu8zu/tmp_r2gu8zu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afd4e720c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afd4e417b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afd4e417988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afd4e4167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_r2gu8zu                        0x000055844b4b9b18 <unavailable> + 6936

    5    libc.so.6                          0x00002afd4e90c460 __libc_start_main +
    245

    6    tmp_r2gu8zu                        0x000055844b4b9419 <unavailable> + 5145

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    return S.components(separatedBy: \"I\").count\
    \ - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello world\"\
    ) == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"\
    I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S: \"\
    I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptibiym79.swift:7:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.hasPrefix(\"I\") {\n      \
    \      boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmppz214wyh/tmppz214wyh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae79bcefc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae79b9e6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae79b9e6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae79b9e57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppz214wyh                        0x000055c5a630f7cb <unavailable> + 6091

    5    libc.so.6                          0x00002ae79bedb460 __libc_start_main +
    245

    6    tmppz214wyh                        0x000055c5a630f3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var count = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpit1s_9cd.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in words {\n        if word == \"I\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpd1s9jqhd.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8iiouzvs.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    var boredoms = 0\n    for sentence in sentences\
    \ {\n        if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpa228lt6_.swift:7:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.components(separatedBy:\
    \ \".!?\")\n    var boredoms = 0\n    for sentence in sentences {\n        let\
    \ words = sentence.components(separatedBy: \" \")\n        if words.count > 0\
    \ && words[0] == \"I\" {\n            boredoms += 1\n        }\n    }\n    return\
    \ boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbywj9276.swift:7:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".!?\")\n     \
    \               ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978458
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    var boredoms = 0\n    for sentence in sentences\
    \ {\n        if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpa228lt6_.swift:7:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word.hasPrefix(\"I\") {\n      \
    \      boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdei7q3p8.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    return S.components(separatedBy: \"I\").count\
    \ - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello world\"\
    ) == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"\
    I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S: \"\
    I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptibiym79.swift:7:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let arr = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in arr {\n        if word == \"I\" {\n    \
    \        count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp4nqxf5rh.swift:7:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = S.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp97ahx6x_/tmp97ahx6x_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad83c79dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad83c494b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad83c494988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad83c4937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97ahx6x_                        0x000055568ef49aa8 <unavailable> + 6824

    5    libc.so.6                          0x00002ad83c989460 __libc_start_main +
    245

    6    tmp97ahx6x_                        0x000055568ef493a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n\
    \    for char in S {\n        if char == \".\" || char == \"?\" || char == \"\
    !\" {\n            if sentence.hasPrefix(\"I\") {\n                boredoms +=\
    \ 1\n            }\n            sentence = \"\"\n        } else {\n          \
    \  sentence += String(char)\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpfb4agv4t/tmpfb4agv4t.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5781c08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b57818ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b57818ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b57818fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfb4agv4t                        0x0000556f79e2d5bb <unavailable> + 5563

    5    libc.so.6                          0x00002b5781df4460 __libc_start_main +
    245

    6    tmpfb4agv4t                        0x0000556f79e2d199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpijfv4t0g.swift:8:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    var count = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.first == \"I\" {\n        \
    \    count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpltqqoyjm/tmpltqqoyjm.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9248f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9245ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9245eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9245ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpltqqoyjm                        0x000055c894cf67eb <unavailable> + 6123

    5    libc.so.6                          0x00002ba924ae0460 __libc_start_main +
    245

    6    tmpltqqoyjm                        0x000055c894cf63c9 <unavailable> + 5065

    '
  stdout: ''
  timestamp: 1659978458
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    return S.components(separatedBy: \"I\").count\
    \ - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello world\"\
    ) == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"\
    I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S: \"\
    I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptibiym79.swift:7:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp857axst4.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.components(separatedBy: \" \"\
    )\n    var count = 0\n    for word in words {\n        if word == \"I\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpd1s9jqhd.swift:7:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978457
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let words = S.split(separator: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp51jkttv3/tmp51jkttv3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afda4d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afda4a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afda4a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afda4a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51jkttv3                        0x00005560356ecaa8 <unavailable> + 6824

    5    libc.so.6                          0x00002afda4f4b460 __libc_start_main +
    245

    6    tmp51jkttv3                        0x00005560356ec3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659978457
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\nfunc\
    \ is_bored(S: String) -> Int {\n    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978457

name: HumanEval_161_solve
language: swift
prompt: "\n/// You are given a string s.\n/// if s[i] is a letter, reverse its case\
  \ from lower to upper or vise versa, \n/// otherwise keep it as it is.\n/// If the\
  \ string contains no letters, reverse the string.\n/// The function should return\
  \ the resulted string.\n/// Examples\nfunc solve(s: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(solve(s: \"AsDf\") == \"aSdF\")\nassert(solve(s:\
  \ \"1234\") == \"4321\")\nassert(solve(s: \"ab\") == \"AB\")\nassert(solve(s: \"\
  #a@C\") == \"#A@c\")\nassert(solve(s: \"#AsdfW^45\") == \"#aSDFw^45\")\nassert(solve(s:\
  \ \"#6@2\") == \"2@6#\")\nassert(solve(s: \"#$a^D\") == \"#$A^d\")\nassert(solve(s:\
  \ \"#ccc\") == \"#CCC\")"
completions: ["    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? String(s.reversed()) : result", "    var result\
    \ = \"\"\n    for char in s {\n        if char.isLetter {\n            if char.isUppercase\
    \ {\n                result.append(char.lowercased())\n            } else {\n\
    \                result.append(char.uppercased())\n            }\n        } else\
    \ {\n            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? String(s.reversed()) : result", "    var result = \"\"\n    for char in s\
    \ {\n        if char.isLetter {\n            result += char.isUppercase ? char.lowercased()\
    \ : char.uppercased()\n        } else {\n            result += String(char)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += char.isUppercase ? char.lowercased() : char.uppercased()\n  \
    \      } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    if s.rangeOfCharacter(from: CharacterSet.letters)\
    \ == nil {\n        result = String(s.reversed())\n    } else {\n        for char\
    \ in s {\n            if char.isLetter {\n                result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n            } else {\n           \
    \     result += String(char)\n            }\n        }\n    }\n    return result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    let letters = s.filter { $0.isLetter }\n    if letters.isEmpty\
    \ {\n        return String(s.reversed())\n    }\n    return String(s.map { $0.isLetter\
    \ ? $0.isUppercase ? Character($0.lowercased()) : Character($0.uppercased()) :\
    \ $0 })", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result", "    var result = \"\"\n    for char in s {\n       \
    \ if char.isLetter {\n            result += String(char.isUppercase ? char.lowercased()\
    \ : char.uppercased())\n        } else {\n            result += String(char)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    if s.isEmpty {\n        return s\n    }\n    var result = \"\
    \"\n    for char in s {\n        if char.isLetter {\n            result.append(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for char in\
    \ s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? s : result", '    return s.isEmpty ? "" : String(s.map
    { $0.isLetter ? $0.isUppercase ? $0.lowercased() : $0.uppercased() : $0 })', " \
    \   var result = \"\"\n    for char in s {\n        if char.isLetter {\n     \
    \       result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    if s.isEmpty {\n     \
    \   return \"\"\n    }\n    var result = \"\"\n    for char in s {\n        if\
    \ char.isLetter {\n            result.append(char.isUppercase ? char.lowercased()\
    \ : char.uppercased())\n        } else {\n            result.append(char)\n  \
    \      }\n    }\n    return result", "    var result = \"\"\n    for c in s {\n\
    \        if c.isLetter {\n            result.append(c.isUppercase ? c.lowercased()\
    \ : c.uppercased())\n        } else {\n            result.append(c)\n        }\n\
    \    }\n    return result.isEmpty ? s.reversed() : result", "    var result =\
    \ \"\"\n    for char in s {\n        if char.isLetter {\n            result +=\
    \ String(char.isUppercase ? char.lowercased() : char.uppercased())\n        }\
    \ else {\n            result += String(char)\n        }\n    }\n    return result.isEmpty\
    \ ? String(s.reversed()) : result", "    let letters = s.filter { $0.isLetter\
    \ }\n    if letters.isEmpty {\n        return String(s.reversed())\n    }\n  \
    \  return String(s.map { $0.isLetter ? $0.isUppercase ? Character($0.lowercased())\
    \ : Character($0.uppercased()) : $0 })", "    var result = \"\"\n    for char\
    \ in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += char.isUppercase ? char.lowercased() : char.uppercased()\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", '    return s.isEmpty ? s :
    String(s.map { $0.isLetter ? $0.isUppercase ? Character($0.lowercased()) : Character($0.uppercased())
    : $0 })', "    let letters = s.filter { $0.isLetter }\n    if letters.isEmpty\
    \ {\n        return String(s.reversed())\n    }\n    return String(s.map { $0.isLetter\
    \ ? $0.isUppercase ? Character($0.lowercased()) : Character($0.uppercased()) :\
    \ $0 })", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? s : result", "    var result = \"\"\n    for\
    \ char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? s : result", "    var result = \"\"\n    for\
    \ char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? String(s.reversed()) : result", "    var result\
    \ = \"\"\n    for char in s {\n        if char.isLetter {\n            result\
    \ += String(char.isUppercase ? char.lowercased() : char.uppercased())\n      \
    \  } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    let letters = s.filter { $0.isLetter }\n    if letters.isEmpty\
    \ {\n        return String(s.reversed())\n    }\n    return s.map { $0.isLetter\
    \ ? $0.isUppercase ? Character($0.lowercased()) : Character($0.uppercased()) :\
    \ $0 }", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", '    return s.isEmpty ? "" : String(s.map { $0.isLetter ? $0.isUppercase
    ? $0.lowercased() : $0.uppercased() : $0 })', "    let letters = s.filter { $0.isLetter\
    \ }\n    if letters.isEmpty {\n        return String(s.reversed())\n    }\n  \
    \  return s.map { $0.isLetter ? $0.isUppercase ? Character($0.lowercased()) :\
    \ Character($0.uppercased()) : $0 }", "    var result = \"\"\n    for char in\
    \ s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? String(s.reversed()) : result", "    var result\
    \ = \"\"\n    for char in s {\n        if char.isLetter {\n            if char.isUppercase\
    \ {\n                result.append(char.lowercased())\n            } else {\n\
    \                result.append(char.uppercased())\n            }\n        } else\
    \ {\n            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? s : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += char.isUppercase ? char.lowercased() : char.uppercased()\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += char.isUppercase\
    \ ? char.lowercased() : char.uppercased()\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    if s.isEmpty {\n     \
    \   return \"\"\n    }\n    var result = \"\"\n    for c in s {\n        if c.isLetter\
    \ {\n            result.append(c.isUppercase ? c.lowercased() : c.uppercased())\n\
    \        } else {\n            result.append(c)\n        }\n    }\n    return\
    \ result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += char.isUppercase ? char.lowercased() : char.uppercased()\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += char.isUppercase\
    \ ? char.lowercased() : char.uppercased()\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    let letters = s.filter { $0.isLetter }\n    if letters.isEmpty\
    \ {\n        return String(s.reversed())\n    }\n    return s.map { $0.isLetter\
    \ ? $0.isUppercase ? Character($0.lowercased()) : Character($0.uppercased()) :\
    \ $0 }", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? s.reversed() : result", "    var result = \"\"\n    for char\
    \ in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result", "    var result = \"\"\n    for char in s {\n       \
    \ if char.isLetter {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? String(s.reversed()) : result", "    var result\
    \ = \"\"\n    for char in s {\n        if char.isLetter {\n            result\
    \ += String(char.isUppercase ? char.lowercased() : char.uppercased())\n      \
    \  } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", '    return s.isEmpty ? s :
    s.map { $0.isLetter ? $0.isUppercase ? Character($0.lowercased()) : Character($0.uppercased())
    : $0 }.reduce("", +)', "    var result = \"\"\n    for c in s {\n        if c.isLetter\
    \ {\n            result.append(c.isUppercase ? c.lowercased() : c.uppercased())\n\
    \        } else {\n            result.append(c)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for c in s {\n        if c.isLetter {\n\
    \            result.append(c.isUppercase ? c.lowercased() : c.uppercased())\n\
    \        } else {\n            result.append(c)\n        }\n    }\n    return\
    \ result.isEmpty ? s.reversed() : result", "    var result = \"\"\n    for char\
    \ in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result", "    if s.isEmpty {\n        return s\n    }\n    var\
    \ result = \"\"\n    for char in s {\n        if char.isLetter {\n           \
    \ result.append(char.isUppercase ? char.lowercased() : char.uppercased())\n  \
    \      } else {\n            result.append(char)\n        }\n    }\n    return\
    \ result", "    if s.isEmpty {\n        return s\n    }\n    var result = \"\"\
    \n    for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for char in\
    \ s {\n        if char.isLetter {\n            if char.isUppercase {\n       \
    \         result.append(char.lowercased())\n            } else {\n           \
    \     result.append(char.uppercased())\n            }\n        } else {\n    \
    \        result.append(char)\n        }\n    }\n    return result", "    var str\
    \ = \"\"\n    for c in s {\n        if c.isLetter {\n            str.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            str.append(c)\n\
    \        }\n    }\n    return str.isEmpty ? String(s.reversed()) : str", "   \
    \ var result = \"\"\n    for char in s {\n        if char.isLetter {\n       \
    \     if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? String(s.reversed()) : result", "    var result\
    \ = \"\"\n    for char in s {\n        if char.isLetter {\n            result\
    \ += String(char.isUppercase ? char.lowercased() : char.uppercased())\n      \
    \  } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? s.reversed() : result", "    var\
    \ result = \"\"\n    for char in s {\n        if char.isLetter {\n           \
    \ result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? s : result", "    var result = \"\"\n    for\
    \ char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += char.isUppercase\
    \ ? char.lowercased() : char.uppercased()\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for c in s {\n        if c.isLetter {\n\
    \            result.append(c.isUppercase ? c.lowercased() : c.uppercased())\n\
    \        } else {\n            result.append(c)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            if char.isUppercase\
    \ {\n                result.append(char.lowercased())\n            } else {\n\
    \                result.append(char.uppercased())\n            }\n        } else\
    \ {\n            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? String(s.reversed()) : result", "    var result = \"\"\n    for char in s\
    \ {\n        if char.isLetter {\n            if char.isUppercase {\n         \
    \       result.append(char.lowercased())\n            } else {\n             \
    \   result.append(char.uppercased())\n            }\n        } else {\n      \
    \      result.append(char)\n        }\n    }\n    return result.isEmpty ? s :\
    \ result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? s : result", "    var result = \"\"\n    for\
    \ char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? s : result", "    var result = \"\"\n    for\
    \ char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? s.reversed()\
    \ : result", "    var result = \"\"\n    for c in s {\n        if c.isLetter {\n\
    \            result.append(c.isUppercase ? c.lowercased() : c.uppercased())\n\
    \        } else {\n            result.append(c)\n        }\n    }\n    return\
    \ result.isEmpty ? s.reversed() : result", "    var result = \"\"\n    for char\
    \ in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            if char.isUppercase\
    \ {\n                result.append(char.lowercased())\n            } else {\n\
    \                result.append(char.uppercased())\n            }\n        } else\
    \ {\n            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? s : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? s.reversed() : result", "    var\
    \ result = \"\"\n    for char in s {\n        if char.isLetter {\n           \
    \ result += char.isUppercase ? char.lowercased() : char.uppercased()\n       \
    \ } else {\n            result += String(char)\n        }\n    }\n    return result.isEmpty\
    \ ? String(s.reversed()) : result", "    let letters = s.filter { $0.isLetter\
    \ }\n    if letters.isEmpty {\n        return String(s.reversed())\n    }\n  \
    \  return s.map { $0.isLetter ? $0.isUppercase ? Character($0.lowercased()) :\
    \ Character($0.uppercased()) : $0 }", "    var result = \"\"\n    for char in\
    \ s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for c in s {\n        if c.isLetter {\n\
    \            result.append(c.isUppercase ? c.lowercased() : c.uppercased())\n\
    \        } else {\n            result.append(c)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            if char.isUppercase\
    \ {\n                result.append(char.lowercased())\n            } else {\n\
    \                result.append(char.uppercased())\n            }\n        } else\
    \ {\n            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? String(s.reversed()) : result", "    var result = \"\"\n    for char in s\
    \ {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    if s.isEmpty {\n        return s\n    }\n    var result = \"\
    \"\n    for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for char in\
    \ s {\n        if char.isLetter {\n            if char.isUppercase {\n       \
    \         result.append(char.lowercased())\n            } else {\n           \
    \     result.append(char.uppercased())\n            }\n        } else {\n    \
    \        result.append(char)\n        }\n    }\n    return result.isEmpty ? s\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? s : result", "    if s.isEmpty {\n        return\
    \ \"\"\n    }\n    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result.append(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result.append(char)\n        }\n    }\n    return\
    \ result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += char.isUppercase\
    \ ? char.lowercased() : char.uppercased()\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? s : result", "    var result = \"\"\n    for\
    \ char in s {\n        if char.isLetter {\n            if char.isUppercase {\n\
    \                result.append(char.lowercased())\n            } else {\n    \
    \            result.append(char.uppercased())\n            }\n        } else {\n\
    \            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? String(s.reversed()) : result", "    var result = \"\"\n    for char in s\
    \ {\n        if char.isLetter {\n            result += char.isUppercase ? char.lowercased()\
    \ : char.uppercased()\n        } else {\n            result += String(char)\n\
    \        }\n    }\n    return result.isEmpty ? s.reversed() : result", "    var\
    \ result = \"\"\n    for char in s {\n        if char.isLetter {\n           \
    \ result += char.isUppercase ? char.lowercased() : char.uppercased()\n       \
    \ } else {\n            result += String(char)\n        }\n    }\n    return result.isEmpty\
    \ ? String(s.reversed()) : result", "    let letters = s.filter { $0.isLetter\
    \ }\n    if letters.isEmpty {\n        return String(s.reversed())\n    }\n  \
    \  return s.map { $0.isLetter ? $0.isUppercase ? Character($0.lowercased()) :\
    \ Character($0.uppercased()) : $0 }", "    var result = \"\"\n    for char in\
    \ s {\n        if char.isLetter {\n            if char.isUppercase {\n       \
    \         result.append(char.lowercased())\n            } else {\n           \
    \     result.append(char.uppercased())\n            }\n        } else {\n    \
    \        result.append(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for c in s {\n        if c.isLetter {\n\
    \            result.append(c.isUppercase ? c.lowercased() : c.uppercased())\n\
    \        } else {\n            result.append(c)\n        }\n    }\n    return\
    \ result.isEmpty ? s.reversed() : result", "    var result = \"\"\n    for c in\
    \ s {\n        if c.isLetter {\n            result.append(c.isUppercase ? c.lowercased()\
    \ : c.uppercased())\n        } else {\n            result.append(c)\n        }\n\
    \    }\n    return result.isEmpty ? String(s.reversed()) : result", "    var result\
    \ = \"\"\n    for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? s.reversed() : result", "    let\
    \ str = s.map { $0.isLetter ? $0.isUppercase ? $0.lowercased() : $0.uppercased()\
    \ : $0 }\n    return str.contains(where: { $0.isLetter }) ? String(str) : String(str.reversed())",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    let letters = s.filter\
    \ { $0.isLetter }\n    if letters.isEmpty {\n        return String(s.reversed())\n\
    \    }\n    return s.map { $0.isLetter ? $0.isUppercase ? Character($0.lowercased())\
    \ : Character($0.uppercased()) : $0 }", "    var result = \"\"\n    for c in s\
    \ {\n        if c.isLetter {\n            result.append(c.isUppercase ? c.lowercased()\
    \ : c.uppercased())\n        } else {\n            result.append(c)\n        }\n\
    \    }\n    return result.isEmpty ? s.reversed() : result", "    var result =\
    \ \"\"\n    for char in s {\n        if char.isLetter {\n            if char.isUppercase\
    \ {\n                result.append(char.lowercased())\n            } else {\n\
    \                result.append(char.uppercased())\n            }\n        } else\
    \ {\n            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? s : result", "    if s.isEmpty {\n        return s\n    }\n    var result\
    \ = \"\"\n    for char in s {\n        if char.isLetter {\n            result.append(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for char in\
    \ s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? s.reversed() : result", "    var\
    \ result = \"\"\n    for char in s {\n        if char.isLetter {\n           \
    \ if char.isUppercase {\n                result.append(char.lowercased())\n  \
    \          } else {\n                result.append(char.uppercased())\n      \
    \      }\n        } else {\n            result.append(char)\n        }\n    }\n\
    \    return result.isEmpty ? String(s.reversed()) : result", "    var result =\
    \ \"\"\n    for char in s {\n        if char.isLetter {\n            result +=\
    \ String(char.uppercased())\n        } else {\n            result += String(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for c in s\
    \ {\n        if c.isLetter {\n            result.append(c.isUppercase ? c.lowercased()\
    \ : c.uppercased())\n        } else {\n            result.append(c)\n        }\n\
    \    }\n    return result.isEmpty ? s.reversed() : result", "    var result =\
    \ \"\"\n    for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? s : result", "    var result = \"\"\n    for\
    \ char in s {\n        if char.isLetter {\n            if char.isUppercase {\n\
    \                result.append(char.lowercased())\n            } else {\n    \
    \            result.append(char.uppercased())\n            }\n        } else {\n\
    \            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? String(s.reversed()) : result", "    var result = \"\"\n    for char in s\
    \ {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += char.isUppercase ? char.lowercased() : char.uppercased()\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    let letters = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var result = \"\"\n    for c in s {\n        if letters.contains(c) {\n\
    \            if c.isUppercase {\n                result.append(c.lowercased())\n\
    \            } else {\n                result.append(c.uppercased())\n       \
    \     }\n        } else {\n            result.append(c)\n        }\n    }\n  \
    \  return result.isEmpty ? String(s.reversed()) : result", "    var result = \"\
    \"\n    for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  '    return s.isEmpty ? "" : String(s.map { $0.isLetter ? $0.isUppercase ? $0.lowercased()
    : $0.uppercased() : $0 })', "    if s.isEmpty {\n        return s\n    }\n   \
    \ var result = \"\"\n    for char in s {\n        if char.isLetter {\n       \
    \     result.append(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result.append(char)\n        }\n    }\n    return\
    \ result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    let letters = s.filter\
    \ { $0.isLetter }\n    if letters.isEmpty {\n        return String(s.reversed())\n\
    \    }\n    return s.map { $0.isLetter ? $0.isUppercase ? Character($0.lowercased())\
    \ : Character($0.uppercased()) : $0 }", "    if s.isEmpty {\n        return s\n\
    \    }\n    var result = \"\"\n    for c in s {\n        if c.isLetter {\n   \
    \         result.append(c.isUppercase ? c.lowercased() : c.uppercased())\n   \
    \     } else {\n            result.append(c)\n        }\n    }\n    return result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            if char.isUppercase\
    \ {\n                result.append(char.lowercased())\n            } else {\n\
    \                result.append(char.uppercased())\n            }\n        } else\
    \ {\n            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? s : result", "    if s.isEmpty {\n        return s\n    }\n    var result\
    \ = \"\"\n    for char in s {\n        if char.isLetter {\n            result.append(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for char in\
    \ s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? String(s.reversed()) : result", "    var result\
    \ = \"\"\n    for char in s {\n        if char.isLetter {\n            result\
    \ += String(char.isUppercase ? char.lowercased() : char.uppercased())\n      \
    \  } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += char.isUppercase\
    \ ? char.lowercased() : char.uppercased()\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for c in s {\n        if c.isLetter {\n\
    \            result.append(c.isUppercase ? c.lowercased() : c.uppercased())\n\
    \        } else {\n            result.append(c)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  "    let letters = s.filter { $0.isLetter }\n    if letters.isEmpty {\n        return\
    \ String(s.reversed())\n    }\n    let lettersReversed = letters.map { $0.isUppercase\
    \ ? $0.lowercased() : $0.uppercased() }\n    var result = \"\"\n    var j = 0\n\
    \    for i in 0..<s.count {\n        if s[i].isLetter {\n            result.append(lettersReversed[j])\n\
    \            j += 1\n        } else {\n            result.append(s[i])\n     \
    \   }\n    }\n    return result", "    var result = \"\"\n    for c in s {\n \
    \       if c.isLetter {\n            result.append(c.isUppercase ? c.lowercased()\
    \ : c.uppercased())\n        } else {\n            result.append(c)\n        }\n\
    \    }\n    return result.isEmpty ? String(s.reversed()) : result", "    var result\
    \ = \"\"\n    for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? String(s.reversed()) : result",
  "    var result = \"\"\n    for char in s {\n        if char.isLetter {\n      \
    \      result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", '    return s.isEmpty ? "" : s.map { $0.isLetter ? $0.isUppercase
    ? Character($0.lowercased()) : Character($0.uppercased()) : $0 }.joined()', " \
    \   let letters = \"abcdefghijklmnopqrstuvwxyz\"\n    var result = \"\"\n    for\
    \ char in s {\n        if letters.contains(char) {\n            if char.isUppercase\
    \ {\n                result.append(char.lowercased())\n            } else {\n\
    \                result.append(char.uppercased())\n            }\n        } else\
    \ {\n            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? String(s.reversed()) : result", "    var result = \"\"\n    for char in s\
    \ {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", '    return String(s.map {
    $0.isLetter ? $0.isUppercase ? $0.lowercased() : $0.uppercased() : $0 })', " \
    \   var result = \"\"\n    for char in s {\n        if char.isLetter {\n     \
    \       if char.isUppercase {\n                result.append(char.lowercased())\n\
    \            } else {\n                result.append(char.uppercased())\n    \
    \        }\n        } else {\n            result.append(char)\n        }\n   \
    \ }\n    return result.isEmpty ? String(s.reversed()) : result", "    guard s.contains(\"\
    [a-zA-Z]\") else { return String(s.reversed()) }\n    return s.map { $0.isLetter\
    \ ? $0.isUppercase ? Character($0.lowercased()) : Character($0.uppercased()) :\
    \ $0 }", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    let letters = Set(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n    var result = \"\"\n    for c in s {\n        if letters.contains(c) {\n\
    \            if c.isUppercase {\n                result.append(c.lowercased())\n\
    \            } else {\n                result.append(c.uppercased())\n       \
    \     }\n        } else {\n            result.append(c)\n        }\n    }\n  \
    \  return result.isEmpty ? String(s.reversed()) : result", "    var result = \"\
    \"\n    for char in s {\n        if char.isLetter {\n            if char.isUppercase\
    \ {\n                result.append(char.lowercased())\n            } else {\n\
    \                result.append(char.uppercased())\n            }\n        } else\
    \ {\n            result.append(char)\n        }\n    }\n    return result.isEmpty\
    \ ? s : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += char.isUppercase ? char.lowercased() : char.uppercased()\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += char.isUppercase\
    \ ? char.lowercased() : char.uppercased()\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    if s.isEmpty {\n        return s\n    }\n    var result = \"\
    \"\n    for char in s {\n        if char.isLetter {\n            result.append(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for c in s\
    \ {\n        if c.isLetter {\n            result.append(c.isUppercase ? c.lowercased()\
    \ : c.uppercased())\n        } else {\n            result.append(c)\n        }\n\
    \    }\n    return result.isEmpty ? String(s.reversed()) : result", "    let letters\
    \ = s.filter { $0.isLetter }\n    if letters.isEmpty {\n        return String(s.reversed())\n\
    \    }\n    let result = s.map { $0.isLetter ? $0.isUppercase ? Character($0.lowercased())\
    \ : Character($0.uppercased()) : $0 }\n    return String(result)", "    var result\
    \ = \"\"\n    for char in s {\n        if char.isLetter {\n            result\
    \ += String(char.isUppercase ? char.lowercased() : char.uppercased())\n      \
    \  } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for c in s {\n        if c.isLetter {\n            result.append(c.isUppercase\
    \ ? c.lowercased() : c.uppercased())\n        } else {\n            result.append(c)\n\
    \        }\n    }\n    return result.isEmpty ? s.reversed() : result", "    var\
    \ result = \"\"\n    for char in s {\n        if char.isLetter {\n           \
    \ result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result", "    var result = \"\"\n  \
    \  for char in s {\n        if char.isLetter {\n            result += String(char.isUppercase\
    \ ? char.lowercased() : char.uppercased())\n        } else {\n            result\
    \ += String(char)\n        }\n    }\n    return result.isEmpty ? String(s.reversed())\
    \ : result", "    var result = \"\"\n    for char in s {\n        if char.isLetter\
    \ {\n            result += String(char.isUppercase ? char.lowercased() : char.uppercased())\n\
    \        } else {\n            result += String(char)\n        }\n    }\n    return\
    \ result.isEmpty ? String(s.reversed()) : result"]
stop_tokens:
- "\n}"

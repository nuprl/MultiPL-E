language: swift
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let aNum =\
    \ numeral_to_number(numeral: a)\n        let bNum = numeral_to_number(numeral:\
    \ b)\n        return aNum < bNum\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpwtsb9ym3.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpwtsb9ym3.swift:8:20: error: cannot find\
    \ 'numeral_to_number' in scope\n        let aNum = numeral_to_number(numeral:\
    \ a)\n                   ^~~~~~~~~~~~~~~~~\n/tmp/tmpwtsb9ym3.swift:9:20: error:\
    \ cannot find 'numeral_to_number' in scope\n        let bNum = numeral_to_number(numeral:\
    \ b)\n                   ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted\
    \ { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of: String($1))!\
    \ }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return nums.index(of:\
    \ a)! < nums.index(of: b)!\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnf3dp7bi.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let numsInt = nums.map { Int(number_to_int($0))! }\n    let sorted\
    \ = numsInt.sorted()\n    let sortedStr = sorted.map { int_to_number($0) }\n \
    \   return sortedStr.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpw09vdo88.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpw09vdo88.swift:7:34: error: cannot find\
    \ 'number_to_int' in scope\n    let numsInt = nums.map { Int(number_to_int($0))!\
    \ }\n                                 ^~~~~~~~~~~~~\n/tmp/tmpw09vdo88.swift:9:34:\
    \ error: cannot find 'int_to_number' in scope\n    let sortedStr = sorted.map\
    \ { int_to_number($0) }\n                                 ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let numsInt = nums.map { numberToInt($0) }\n    let sorted = numsInt.sorted()\n\
    \    let sortedStr = sorted.map { intToNumber($0) }\n    return sortedStr.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpfz1uuc6z.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpfz1uuc6z.swift:7:30: error: cannot find\
    \ 'numberToInt' in scope\n    let numsInt = nums.map { numberToInt($0) }\n   \
    \                          ^~~~~~~~~~~\n/tmp/tmpfz1uuc6z.swift:9:34: error: cannot\
    \ find 'intToNumber' in scope\n    let sortedStr = sorted.map { intToNumber($0)\
    \ }\n                                 ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        let num1 = number_to_int($0)\n\
    \        let num2 = number_to_int($1)\n        return num1 < num2\n    }\n   \
    \ return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers: \"three\"\
    ) == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") == \"three\
    \ five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers: \"six\
    \ five four three two one zero\") == \"zero one two three four five six\")"
  status: SyntaxError
  stderr: "/tmp/tmp4imsqqem.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp4imsqqem.swift:8:20: error: cannot find\
    \ 'number_to_int' in scope\n        let num1 = number_to_int($0)\n           \
    \        ^~~~~~~~~~~~~\n/tmp/tmp4imsqqem.swift:9:20: error: cannot find 'number_to_int'\
    \ in scope\n        let num2 = number_to_int($1)\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return convert_to_number(numeral:\
    \ a) < convert_to_number(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpkmgm0rpo.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpkmgm0rpo.swift:8:16: error: cannot find\
    \ 'convert_to_number' in scope\n        return convert_to_number(numeral: a) <\
    \ convert_to_number(numeral: b)\n               ^~~~~~~~~~~~~~~~~\n/tmp/tmpkmgm0rpo.swift:8:48:\
    \ error: cannot find 'convert_to_number' in scope\n        return convert_to_number(numeral:\
    \ a) < convert_to_number(numeral: b)\n                                       \
    \        ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let numsInt = nums.map { numeralToInt($0) }\n    let sorted = numsInt.sorted()\n\
    \    let sortedStr = sorted.map { intToNumeral($0) }\n    return sortedStr.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpdepd713c.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpdepd713c.swift:7:30: error: cannot find\
    \ 'numeralToInt' in scope\n    let numsInt = nums.map { numeralToInt($0) }\n \
    \                            ^~~~~~~~~~~~\n/tmp/tmpdepd713c.swift:9:34: error:\
    \ cannot find 'intToNumeral' in scope\n    let sortedStr = sorted.map { intToNumeral($0)\
    \ }\n                                 ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let sorted_numbers\
    \ = numbers.split(separator: \" \").map { String($0) }.sorted { number_map[$0]!\
    \ < number_map[$1]! }\n    return sorted_numbers.joined(separator: \" \")\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeralDict:\
    \ [String: Int] = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\"\
    : 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let\
    \ nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (num1, num2) -> Bool in\n        return numeralDict[num1]! < numeralDict[num2]!\n\
    \    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp9cow2vs8.swift:7:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numbers\
    \ = numbers.split(separator: \" \")\n    let sortedNumbers = numbers.sorted {\n\
    \        let number1 = numberToInt($0)\n        let number2 = numberToInt($1)\n\
    \        return number1 < number2\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpfw4_l5cr.swift:8:23: error: cannot find 'numberToInt' in scope\n\
    \        let number1 = numberToInt($0)\n                      ^~~~~~~~~~~\n/tmp/tmpfw4_l5cr.swift:9:23:\
    \ error: cannot find 'numberToInt' in scope\n        let number2 = numberToInt($1)\n\
    \                      ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        let num1 = Int(number_to_numeral($0))\n\
    \        let num2 = Int(number_to_numeral($1))\n        return num1! < num2!\n\
    \    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmppt_yncl_.swift:8:24: error: cannot find 'number_to_numeral' in\
    \ scope\n        let num1 = Int(number_to_numeral($0))\n                     \
    \  ^~~~~~~~~~~~~~~~~\n/tmp/tmppt_yncl_.swift:9:24: error: cannot find 'number_to_numeral'\
    \ in scope\n        let num2 = Int(number_to_numeral($1))\n                  \
    \     ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let number_map:\
    \ [String: Int] = [\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    ]\n    let number_array = numbers.components(separatedBy: \" \")\n  \
    \  let sorted_array = number_array.sorted(by: { (a, b) -> Bool in\n        return\
    \ number_map[a]! < number_map[b]!\n    })\n    return sorted_array.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpy_ujiuev.swift:18:32: error: value of type 'String' has no member\
    \ 'components'\n    let number_array = numbers.components(separatedBy: \" \")\n\
    \                       ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let nums_sorted = nums.sorted {\n        let num_map = [\"zero\"\
    : 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\":\
    \ 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n        return num_map[String($0)]!\
    \ < num_map[String($1)]!\n    }\n    return nums_sorted.joined(separator: \" \"\
    )\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp1w973dgq.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNums = nums.sorted { (a, b) -> Bool in\n        return\
    \ Int(a)! < Int(b)!\n    }\n    return sortedNums.joined(separator: \" \")\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmprih1bpn7.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted(by: {\n        let num1 = number_to_int(number:\
    \ String($0))\n        let num2 = number_to_int(number: String($1))\n        return\
    \ num1 < num2\n    })\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpmx5c1w63.swift:8:20: error: cannot find 'number_to_int' in scope\n\
    \        let num1 = number_to_int(number: String($0))\n                   ^~~~~~~~~~~~~\n\
    /tmp/tmpmx5c1w63.swift:9:20: error: cannot find 'number_to_int' in scope\n   \
    \     let num2 = number_to_int(number: String($1))\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch ($0, $1) {\n        case\
    \ (\"zero\", \"zero\"): return false\n        case (\"zero\", _): return true\n\
    \        case (_, \"zero\"): return false\n        case (\"one\", \"one\"): return\
    \ false\n        case (\"one\", _): return true\n        case (_, \"one\"): return\
    \ false\n        case (\"two\", \"two\"): return false\n        case (\"two\"\
    , _): return true\n        case (_, \"two\"): return false\n        case (\"three\"\
    , \"three\"): return false\n        case (\"three\", _): return true\n       \
    \ case (_, \"three\"): return false\n        case (\"four\", \"four\"): return\
    \ false\n        case (\"four\", _): return true\n        case (_, \"four\"):\
    \ return false\n        case (\"five\", \"five\"): return false\n        case\
    \ (\"five\", _): return true\n        case (_, \"five\"): return false\n     \
    \   case (\"six\", \"six\"): return false\n        case (\"six\", _): return true\n\
    \        case (_, \"six\"): return false\n        case (\"seven\", \"seven\"):\
    \ return false\n        case (\"seven\", _): return true\n        case (_, \"\
    seven\"): return false\n        case (\"eight\", \"eight\"): return false\n  \
    \      case (\"eight\", _): return true\n        case (_, \"eight\"): return false\n\
    \        case (\"nine\", \"nine\"): return false\n        case (\"nine\", _):\
    \ return true\n        case (_, \"nine\"): return false\n        default: return\
    \ false\n        }\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpuib5tw62.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpuib5tw62.swift:8:16: error: cannot find\
    \ 'numeral_to_int' in scope\n        return numeral_to_int(numeral: a) < numeral_to_int(numeral:\
    \ b)\n               ^~~~~~~~~~~~~~\n/tmp/tmpuib5tw62.swift:8:45: error: cannot\
    \ find 'numeral_to_int' in scope\n        return numeral_to_int(numeral: a) <\
    \ numeral_to_int(numeral: b)\n                                            ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        let nums = [\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ]\n        return nums.index(of: $0)! < nums.index(of: $1)!\n    }\n    return\
    \ sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp1bf_nkq0.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numToInt(num:\
    \ a) < numToInt(num: b)\n    }\n    return sorted.joined(separator: \" \")\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmplja7r0v1.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmplja7r0v1.swift:8:16: error: cannot find\
    \ 'numToInt' in scope\n        return numToInt(num: a) < numToInt(num: b)\n  \
    \             ^~~~~~~~\n/tmp/tmplja7r0v1.swift:8:35: error: cannot find 'numToInt'\
    \ in scope\n        return numToInt(num: a) < numToInt(num: b)\n             \
    \                     ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numbers\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = numbers.sorted {\
    \ (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpl49i3ogl.swift:6:27: error: value of type 'String' has no member\
    \ 'components'\n    let numbers = numbers.components(separatedBy: \" \")\n   \
    \               ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpl49i3ogl.swift:8:16: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpl49i3ogl.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch $0 {\n        case \"\
    zero\":\n            return true\n        case \"one\":\n            return $1\
    \ != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" && $1\
    \ != \"one\"\n        case \"three\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpg2s6_ych.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        let num1 = number_to_int($0)\n\
    \        let num2 = number_to_int($1)\n        return num1 < num2\n    }\n   \
    \ return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers: \"three\"\
    ) == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") == \"three\
    \ five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers: \"six\
    \ five four three two one zero\") == \"zero one two three four five six\")"
  status: SyntaxError
  stderr: "/tmp/tmp4imsqqem.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp4imsqqem.swift:8:20: error: cannot find\
    \ 'number_to_int' in scope\n        let num1 = number_to_int($0)\n           \
    \        ^~~~~~~~~~~~~\n/tmp/tmp4imsqqem.swift:9:20: error: cannot find 'number_to_int'\
    \ in scope\n        let num2 = number_to_int($1)\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (number1, number2) -> Bool in\n        return number_map[number1]! < number_map[number2]!\n\
    \    }\n    return sorted_numbers.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpow5fbszu.swift:7:33: error: value of type 'String' has no member\
    \ 'components'\n    let numbers_array = numbers.components(separatedBy: \" \"\
    )\n                        ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n    }\n\
    \    return sorted_numbers.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmprnldqffs.swift:7:33: error: value of type 'String' has no member\
    \ 'components'\n    let numbers_array = numbers.components(separatedBy: \" \"\
    )\n                        ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numbers\
    \ = numbers.split(separator: \" \")\n    let sorted = numbers.sorted { (a, b)\
    \ -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp3ygf9tz4.swift:8:16: error: cannot find 'number_to_int' in scope\n\
    \        return number_to_int(number: String(a)) < number_to_int(number: String(b))\n\
    \               ^~~~~~~~~~~~~\n/tmp/tmp3ygf9tz4.swift:8:51: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: String(a)) <\
    \ number_to_int(number: String(b))\n                                         \
    \         ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numToInt(num:\
    \ a) < numToInt(num: b)\n    }\n    return sorted.joined(separator: \" \")\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmplja7r0v1.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmplja7r0v1.swift:8:16: error: cannot find\
    \ 'numToInt' in scope\n        return numToInt(num: a) < numToInt(num: b)\n  \
    \             ^~~~~~~~\n/tmp/tmplja7r0v1.swift:8:35: error: cannot find 'numToInt'\
    \ in scope\n        return numToInt(num: a) < numToInt(num: b)\n             \
    \                     ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.components(separatedBy: \" \"\
    ).sorted { numberals.index(of: $0)! < numberals.index(of: $1)! }\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphs42_my_.swift:7:26: error: value of type 'String' has no member\
    \ 'components'\n    let sorted = numbers.components(separatedBy: \" \").sorted\
    \ { numberals.index(of: $0)! < numberals.index(of: $1)! }\n                 ~~~~~~~\
    \ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        let num1 = convert_to_number(numeral:\
    \ $0)\n        let num2 = convert_to_number(numeral: $1)\n        return num1\
    \ < num2\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpmnjr82v7.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpmnjr82v7.swift:8:20: error: cannot find\
    \ 'convert_to_number' in scope\n        let num1 = convert_to_number(numeral:\
    \ $0)\n                   ^~~~~~~~~~~~~~~~~\n/tmp/tmpmnjr82v7.swift:9:20: error:\
    \ cannot find 'convert_to_number' in scope\n        let num2 = convert_to_number(numeral:\
    \ $1)\n                   ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let sorted_numbers\
    \ = numbers.components(separatedBy: \" \").map { number_map[$0]! }.sorted()\n\
    \    return sorted_numbers.map { number_map.first(where: { $0.value == $1 })!.key\
    \ }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpbsl157w2.swift:7:34: error: value of type 'String' has no member\
    \ 'components'\n    let sorted_numbers = numbers.components(separatedBy: \" \"\
    ).map { number_map[$0]! }.sorted()\n                         ~~~~~~~ ^~~~~~~~~~\n\
    /tmp/tmpbsl157w2.swift:8:62: error: value of type 'String' has no member 'value'\n\
    \    return sorted_numbers.map { number_map.first(where: { $0.value == $1 })!.key\
    \ }.joined(separator: \" \")\n                                               \
    \           ~~ ^~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeralDict\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numeralArray\
    \ = numbers.components(separatedBy: \" \")\n    let sortedArray = numeralArray.sorted\
    \ { numeralDict[$0]! < numeralDict[$1]! }\n    return sortedArray.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmponnsgmrz.swift:7:32: error: value of type 'String' has no member\
    \ 'components'\n    let numeralArray = numbers.components(separatedBy: \" \")\n\
    \                       ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return nums.index(of:\
    \ a)! < nums.index(of: b)!\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnf3dp7bi.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpuib5tw62.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpuib5tw62.swift:8:16: error: cannot find\
    \ 'numeral_to_int' in scope\n        return numeral_to_int(numeral: a) < numeral_to_int(numeral:\
    \ b)\n               ^~~~~~~~~~~~~~\n/tmp/tmpuib5tw62.swift:8:45: error: cannot\
    \ find 'numeral_to_int' in scope\n        return numeral_to_int(numeral: a) <\
    \ numeral_to_int(numeral: b)\n                                            ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let numsInt = nums.map { numeralToInt($0) }\n    let sortedNums\
    \ = numsInt.sorted()\n    let sortedNumsStr = sortedNums.map { intToNumeral($0)\
    \ }\n    return sortedNumsStr.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpqd35kzfr.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpqd35kzfr.swift:7:30: error: cannot find\
    \ 'numeralToInt' in scope\n    let numsInt = nums.map { numeralToInt($0) }\n \
    \                            ^~~~~~~~~~~~\n/tmp/tmpqd35kzfr.swift:9:42: error:\
    \ cannot find 'intToNumeral' in scope\n    let sortedNumsStr = sortedNums.map\
    \ { intToNumeral($0) }\n                                         ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeral_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { numeral_map[$0]! < numeral_map[$1]! }\n    return sorted_numbers.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpyjfegj79.swift:7:33: error: value of type 'String' has no member\
    \ 'components'\n    let numbers_array = numbers.components(separatedBy: \" \"\
    )\n                        ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.components(separatedBy: \" \"\
    ).sorted { (a, b) -> Bool in\n        return numberals.index(of: a)! < numberals.index(of:\
    \ b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp0zt5bufv.swift:7:26: error: value of type 'String' has no member\
    \ 'components'\n    let sorted = numbers.components(separatedBy: \" \").sorted\
    \ { (a, b) -> Bool in\n                 ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        let num1 = convert_to_number(numeral:\
    \ String($0))\n        let num2 = convert_to_number(numeral: String($1))\n   \
    \     return num1 < num2\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp3dlbc4bl.swift:8:20: error: cannot find 'convert_to_number' in\
    \ scope\n        let num1 = convert_to_number(numeral: String($0))\n         \
    \          ^~~~~~~~~~~~~~~~~\n/tmp/tmp3dlbc4bl.swift:9:20: error: cannot find\
    \ 'convert_to_number' in scope\n        let num2 = convert_to_number(numeral:\
    \ String($1))\n                   ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numbers\
    \ = numbers.components(separatedBy: \" \")\n    let sortedNumbers = numbers.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp2mdernfz.swift:6:27: error: value of type 'String' has no member\
    \ 'components'\n    let numbers = numbers.components(separatedBy: \" \")\n   \
    \               ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let nums =\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n        return nums.index(of: a)! < nums.index(of: b)!\n\
    \    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpseowb_ns.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1.to_number()\
    \ < s2.to_number()\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp8yy9cq38.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.count\
    \ < b.count\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpujjftjob.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNums = nums.sorted { (s1, s2) -> Bool in\n        return\
    \ s1 < s2\n    }\n    return sortedNums.joined(separator: \" \")\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp1pqywxxv.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.count\
    \ < b.count\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpujjftjob.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let number_map:\
    \ [String: Int] = [\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    ]\n    let number_map_reverse = number_map.reduce(into: [Int: String]())\
    \ { $0[$1.value] = $1.key }\n    let numbers_array = numbers.split(separator:\
    \ \" \").map { String($0) }\n    let sorted_numbers = numbers_array.map { number_map[$0]!\
    \ }.sorted()\n    return sorted_numbers.map { number_map_reverse[$0]! }.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013377
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberMap\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let sortedNumbers\
    \ = numbers.split(separator: \" \").map { String($0) }.sorted { numberMap[$0]!\
    \ < numberMap[$1]! }\n    return sortedNumbers.joined(separator: \" \")\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.components(separatedBy: \" \"\
    ).sorted { numberals.index(of: $0)! < numberals.index(of: $1)! }\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphs42_my_.swift:7:26: error: value of type 'String' has no member\
    \ 'components'\n    let sorted = numbers.components(separatedBy: \" \").sorted\
    \ { numberals.index(of: $0)! < numberals.index(of: $1)! }\n                 ~~~~~~~\
    \ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numbers\
    \ = numbers.split(separator: \" \")\n    let sortedNumbers = numbers.sorted {\n\
    \        let number1 = number_to_int($0)\n        let number2 = number_to_int($1)\n\
    \        return number1 < number2\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpsiyt0rnm.swift:8:23: error: cannot find 'number_to_int' in scope\n\
    \        let number1 = number_to_int($0)\n                      ^~~~~~~~~~~~~\n\
    /tmp/tmpsiyt0rnm.swift:9:23: error: cannot find 'number_to_int' in scope\n   \
    \     let number2 = number_to_int($1)\n                      ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeralDict\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let sortedNums\
    \ = numbers.components(separatedBy: \" \").map { numeralDict[$0]! }.sorted()\n\
    \    return sortedNums.map { numeralDict.first(where: { $0.value == $1 })!.key\
    \ }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpe2449zj4.swift:7:30: error: value of type 'String' has no member\
    \ 'components'\n    let sortedNums = numbers.components(separatedBy: \" \").map\
    \ { numeralDict[$0]! }.sorted()\n                     ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpe2449zj4.swift:8:59:\
    \ error: value of type 'String' has no member 'value'\n    return sortedNums.map\
    \ { numeralDict.first(where: { $0.value == $1 })!.key }.joined(separator: \" \"\
    )\n                                                       ~~ ^~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: -4
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let aInt =\
    \ Int(a) ?? 0\n        let bInt = Int(b) ?? 0\n        return aInt < bInt\n  \
    \  }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: Exception
  stderr: 'tmpa8qvcc8a/tmpa8qvcc8a.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9158e98c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9158b8fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9158b8f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9158b8e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa8qvcc8a                        0x000055c99ce20a2f <unavailable> + 6703

    5    libc.so.6                          0x00002b9159084460 __libc_start_main +
    245

    6    tmpa8qvcc8a                        0x000055c99ce20349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeralDict\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numeralArray\
    \ = numbers.components(separatedBy: \" \")\n    var numeralIntArray = [Int]()\n\
    \    for numeral in numeralArray {\n        numeralIntArray.append(numeralDict[numeral]!)\n\
    \    }\n    numeralIntArray.sort()\n    var sortedNumeralArray = [String]()\n\
    \    for numeral in numeralIntArray {\n        for (key, value) in numeralDict\
    \ {\n            if value == numeral {\n                sortedNumeralArray.append(key)\n\
    \            }\n        }\n    }\n    return sortedNumeralArray.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpjpkb1p45.swift:7:32: error: value of type 'String' has no member\
    \ 'components'\n    let numeralArray = numbers.components(separatedBy: \" \")\n\
    \                       ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpxewjvhbr.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return nums.index(of:\
    \ a)! < nums.index(of: b)!\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnf3dp7bi.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNums = nums.sorted { (a, b) -> Bool in\n        return\
    \ numeralToInt(numeral: a) < numeralToInt(numeral: b)\n    }\n    return sortedNums.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp_q92gfun.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp_q92gfun.swift:8:16: error: cannot find\
    \ 'numeralToInt' in scope\n        return numeralToInt(numeral: a) < numeralToInt(numeral:\
    \ b)\n               ^~~~~~~~~~~~\n/tmp/tmp_q92gfun.swift:8:43: error: cannot\
    \ find 'numeralToInt' in scope\n        return numeralToInt(numeral: a) < numeralToInt(numeral:\
    \ b)\n                                          ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        let num1 = convert_to_number(numeral:\
    \ $0)\n        let num2 = convert_to_number(numeral: $1)\n        return num1\
    \ < num2\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpmnjr82v7.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpmnjr82v7.swift:8:20: error: cannot find\
    \ 'convert_to_number' in scope\n        let num1 = convert_to_number(numeral:\
    \ $0)\n                   ^~~~~~~~~~~~~~~~~\n/tmp/tmpmnjr82v7.swift:9:20: error:\
    \ cannot find 'convert_to_number' in scope\n        let num2 = convert_to_number(numeral:\
    \ $1)\n                   ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.components(separatedBy: \" \"\
    ).sorted { numberals.index(of: $0)! < numberals.index(of: $1)! }\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphs42_my_.swift:7:26: error: value of type 'String' has no member\
    \ 'components'\n    let sorted = numbers.components(separatedBy: \" \").sorted\
    \ { numberals.index(of: $0)! < numberals.index(of: $1)! }\n                 ~~~~~~~\
    \ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.toInt()\
    \ < b.toInt()\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpl5kvzsd0.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp1w973dgq.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numToInt(a)\
    \ < numToInt(b)\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpwhy255v6.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpwhy255v6.swift:8:16: error: cannot find\
    \ 'numToInt' in scope\n        return numToInt(a) < numToInt(b)\n            \
    \   ^~~~~~~~\n/tmp/tmpwhy255v6.swift:8:30: error: cannot find 'numToInt' in scope\n\
    \        return numToInt(a) < numToInt(b)\n                             ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers = numbers.split(separator:\
    \ \" \").map { String($0) }\n    let sorted_numbers = numbers.sorted { number_map[$0]!\
    \ < number_map[$1]! }\n    return sorted_numbers.joined(separator: \" \")\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013378
- exit_code: -4
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: Exception
  stderr: 'tmpv6hgmyrq/tmpv6hgmyrq.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b1178b11c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1178808561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b1178808286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b117880813c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1178807bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpv6hgmyrq                        0x000055e0b3eec03c <unavailable> + 8252

    6    libswiftCore.so                    0x00002b1178929c90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    7    libswiftCore.so                    0x00002b117892a110 MutableCollection<>._insertionSort(within:by:)
    + 356

    8    libswiftCore.so                    0x00002b1178928d30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    9    libswiftCore.so                    0x00002b1178928d15 <unavailable> + 2616597

    10   libswiftCore.so                    0x00002b1178a4e65a <unavailable> + 3819098

    11   libswiftCore.so                    0x00002b117883d720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    12   libswiftCore.so                    0x00002b117883d70f <unavailable> + 1652495

    13   libswiftCore.so                    0x00002b1178928460 MutableCollection<>.sort(by:)
    + 771

    14   libswiftCore.so                    0x00002b1178928370 Sequence.sorted(by:)
    + 193

    15   tmpv6hgmyrq                        0x000055e0b3eebd6e <unavailable> + 7534

    16   tmpv6hgmyrq                        0x000055e0b3eeb8c1 <unavailable> + 6337

    17   libc.so.6                          0x00002b1178cfd460 __libc_start_main +
    245

    18   tmpv6hgmyrq                        0x000055e0b3eeb3e9 <unavailable> + 5097

    '
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeralDict\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numeralArray\
    \ = numbers.components(separatedBy: \" \")\n    let sortedArray = numeralArray.sorted\
    \ { (numeral1, numeral2) -> Bool in\n        return numeralDict[numeral1]! < numeralDict[numeral2]!\n\
    \    }\n    return sortedArray.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmplafc6t88.swift:7:32: error: value of type 'String' has no member\
    \ 'components'\n    let numeralArray = numbers.components(separatedBy: \" \")\n\
    \                       ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp1w973dgq.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp1w973dgq.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return nums.index(of:\
    \ a)! < nums.index(of: b)!\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnf3dp7bi.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpxewjvhbr.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpxewjvhbr.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return nums_to_int(num:\
    \ a) < nums_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp3kpf8uh7.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp3kpf8uh7.swift:8:16: error: cannot find\
    \ 'nums_to_int' in scope\n        return nums_to_int(num: a) < nums_to_int(num:\
    \ b)\n               ^~~~~~~~~~~\n/tmp/tmp3kpf8uh7.swift:8:38: error: cannot find\
    \ 'nums_to_int' in scope\n        return nums_to_int(num: a) < nums_to_int(num:\
    \ b)\n                                     ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let sorted_numbers\
    \ = numbers.components(separatedBy: \" \").sorted { (a, b) -> Bool in\n      \
    \  return number_map[a]! < number_map[b]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpihgtceoy.swift:7:34: error: value of type 'String' has no member\
    \ 'components'\n    let sorted_numbers = numbers.components(separatedBy: \" \"\
    ).sorted { (a, b) -> Bool in\n                         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let nums_sorted = nums.sorted { (a, b) -> Bool in\n        let num_a\
    \ = convert_number(number: String(a))\n        let num_b = convert_number(number:\
    \ String(b))\n        return num_a < num_b\n    }\n    return nums_sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp78x9y36l.swift:8:21: error: cannot find 'convert_number' in scope\n\
    \        let num_a = convert_number(number: String(a))\n                    ^~~~~~~~~~~~~~\n\
    /tmp/tmp78x9y36l.swift:9:21: error: cannot find 'convert_number' in scope\n  \
    \      let num_b = convert_number(number: String(b))\n                    ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.count\
    \ < b.count\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpujjftjob.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let numA =\
    \ numeral_to_int(numeral: a)\n        let numB = numeral_to_int(numeral: b)\n\
    \        return numA < numB\n    }\n    return sorted.joined(separator: \" \"\
    )\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpjz_bww_h.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpjz_bww_h.swift:8:20: error: cannot find\
    \ 'numeral_to_int' in scope\n        let numA = numeral_to_int(numeral: a)\n \
    \                  ^~~~~~~~~~~~~~\n/tmp/tmpjz_bww_h.swift:9:20: error: cannot\
    \ find 'numeral_to_int' in scope\n        let numB = numeral_to_int(numeral: b)\n\
    \                   ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNums = nums.sorted { (a, b) -> Bool in\n        return\
    \ Int(a)! < Int(b)!\n    }\n    return sortedNums.joined(separator: \" \")\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmprih1bpn7.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: -4
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.count\
    \ < b.count\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: Exception
  stderr: 'tmp92zf7o57/tmp92zf7o57.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebea4bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebea1b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebea1b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebea1b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp92zf7o57                        0x0000555ac1a708e2 <unavailable> + 6370

    5    libc.so.6                          0x00002aebea6aa460 __libc_start_main +
    245

    6    tmp92zf7o57                        0x0000555ac1a70319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let numA =\
    \ number_to_int(number: a)\n        let numB = number_to_int(number: b)\n    \
    \    return numA < numB\n    }\n    return sorted.joined(separator: \" \")\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpogetmobj.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpogetmobj.swift:8:20: error: cannot find\
    \ 'number_to_int' in scope\n        let numA = number_to_int(number: a)\n    \
    \               ^~~~~~~~~~~~~\n/tmp/tmpogetmobj.swift:9:20: error: cannot find\
    \ 'number_to_int' in scope\n        let numB = number_to_int(number: b)\n    \
    \               ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.count\
    \ < b.count\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpujjftjob.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch $0 {\n        case \"\
    zero\":\n            return true\n        case \"one\":\n            return $1\
    \ != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" && $1\
    \ != \"one\"\n        case \"three\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpg2s6_ych.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        let num1 = number_to_int($0)\n\
    \        let num2 = number_to_int($1)\n        return num1 < num2\n    }\n   \
    \ return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers: \"three\"\
    ) == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") == \"three\
    \ five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers: \"six\
    \ five four three two one zero\") == \"zero one two three four five six\")"
  status: SyntaxError
  stderr: "/tmp/tmp4imsqqem.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp4imsqqem.swift:8:20: error: cannot find\
    \ 'number_to_int' in scope\n        let num1 = number_to_int($0)\n           \
    \        ^~~~~~~~~~~~~\n/tmp/tmp4imsqqem.swift:9:20: error: cannot find 'number_to_int'\
    \ in scope\n        let num2 = number_to_int($1)\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let numA =\
    \ Int(a)!\n        let numB = Int(b)!\n        return numA < numB\n    }\n   \
    \ return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers: \"three\"\
    ) == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") == \"three\
    \ five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers: \"six\
    \ five four three two one zero\") == \"zero one two three four five six\")"
  status: SyntaxError
  stderr: "/tmp/tmpcpj47kzi.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp1w973dgq.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sortedNumbers = numbers.components(separatedBy:\
    \ \" \").sorted { numberals.index(of: $0)! < numberals.index(of: $1)! }\n    return\
    \ sortedNumbers.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers: \"three\"\
    ) == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") == \"three\
    \ five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers: \"six\
    \ five four three two one zero\") == \"zero one two three four five six\")"
  status: SyntaxError
  stderr: "/tmp/tmp62qp44ld.swift:7:33: error: value of type 'String' has no member\
    \ 'components'\n    let sortedNumbers = numbers.components(separatedBy: \" \"\
    ).sorted { numberals.index(of: $0)! < numberals.index(of: $1)! }\n           \
    \             ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let numA =\
    \ number_to_int(number: a)\n        let numB = number_to_int(number: b)\n    \
    \    return numA < numB\n    }\n    return sorted.joined(separator: \" \")\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpogetmobj.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpogetmobj.swift:8:20: error: cannot find\
    \ 'number_to_int' in scope\n        let numA = number_to_int(number: a)\n    \
    \               ^~~~~~~~~~~~~\n/tmp/tmpogetmobj.swift:9:20: error: cannot find\
    \ 'number_to_int' in scope\n        let numB = number_to_int(number: b)\n    \
    \               ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    var nums_int: [Int] = []\n    for num in nums {\n        switch\
    \ num {\n        case \"zero\":\n            nums_int.append(0)\n        case\
    \ \"one\":\n            nums_int.append(1)\n        case \"two\":\n          \
    \  nums_int.append(2)\n        case \"three\":\n            nums_int.append(3)\n\
    \        case \"four\":\n            nums_int.append(4)\n        case \"five\"\
    :\n            nums_int.append(5)\n        case \"six\":\n            nums_int.append(6)\n\
    \        case \"seven\":\n            nums_int.append(7)\n        case \"eight\"\
    :\n            nums_int.append(8)\n        case \"nine\":\n            nums_int.append(9)\n\
    \        default:\n            print(\"Invalid input\")\n        }\n    }\n  \
    \  nums_int.sort()\n    var result: String = \"\"\n    for num in nums_int {\n\
    \        switch num {\n        case 0:\n            result += \"zero \"\n    \
    \    case 1:\n            result += \"one \"\n        case 2:\n            result\
    \ += \"two \"\n        case 3:\n            result += \"three \"\n        case\
    \ 4:\n            result += \"four \"\n        case 5:\n            result +=\
    \ \"five \"\n        case 6:\n            result += \"six \"\n        case 7:\n\
    \            result += \"seven \"\n        case 8:\n            result += \"eight\
    \ \"\n        case 9:\n            result += \"nine \"\n        default:\n   \
    \         print(\"Invalid input\")\n        }\n    }\n    return result.trimmingCharacters(in:\
    \ .whitespaces)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpulf80a3z.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpulf80a3z.swift:62:19: error: value of type\
    \ 'String' has no member 'trimmingCharacters'\n    return result.trimmingCharacters(in:\
    \ .whitespaces)\n           ~~~~~~ ^~~~~~~~~~~~~~~~~~\n/tmp/tmpulf80a3z.swift:62:43:\
    \ error: cannot infer contextual base in reference to member 'whitespaces'\n \
    \   return result.trimmingCharacters(in: .whitespaces)\n                     \
    \                    ~^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp1w973dgq.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let nums =\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n        return nums.index(of: a)! < nums.index(of: b)!\n\
    \    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpseowb_ns.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        return nums_to_int[$0]! < nums_to_int[$1]!\n\
    \    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpwfez_3vv.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpwfez_3vv.swift:8:16: error: cannot find\
    \ 'nums_to_int' in scope\n        return nums_to_int[$0]! < nums_to_int[$1]!\n\
    \               ^~~~~~~~~~~\n/tmp/tmpwfez_3vv.swift:8:35: error: cannot find 'nums_to_int'\
    \ in scope\n        return nums_to_int[$0]! < nums_to_int[$1]!\n             \
    \                     ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNums = nums.sorted { (a, b) -> Bool in\n        return\
    \ numeralToInt(numeral: a) < numeralToInt(numeral: b)\n    }\n    return sortedNums.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp_q92gfun.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp_q92gfun.swift:8:16: error: cannot find\
    \ 'numeralToInt' in scope\n        return numeralToInt(numeral: a) < numeralToInt(numeral:\
    \ b)\n               ^~~~~~~~~~~~\n/tmp/tmp_q92gfun.swift:8:43: error: cannot\
    \ find 'numeralToInt' in scope\n        return numeralToInt(numeral: a) < numeralToInt(numeral:\
    \ b)\n                                          ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeralDict\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sortedNums = nums.sorted { (num1, num2) -> Bool in\n       \
    \ return numeralDict[String(num1)]! < numeralDict[String(num2)]!\n    }\n    return\
    \ sortedNums.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers: \"three\"\
    ) == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") == \"three\
    \ five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers: \"six\
    \ five four three two one zero\") == \"zero one two three four five six\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let numA =\
    \ numeral_to_number(numeral: a)\n        let numB = numeral_to_number(numeral:\
    \ b)\n        return numA < numB\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpy09luakh.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpy09luakh.swift:8:20: error: cannot find\
    \ 'numeral_to_number' in scope\n        let numA = numeral_to_number(numeral:\
    \ a)\n                   ^~~~~~~~~~~~~~~~~\n/tmp/tmpy09luakh.swift:9:20: error:\
    \ cannot find 'numeral_to_number' in scope\n        let numB = numeral_to_number(numeral:\
    \ b)\n                   ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return convert(a)\
    \ < convert(b)\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp0gqllnzn.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp0gqllnzn.swift:8:16: error: cannot find\
    \ 'convert' in scope\n        return convert(a) < convert(b)\n               ^~~~~~~\n\
    /tmp/tmp0gqllnzn.swift:8:29: error: cannot find 'convert' in scope\n        return\
    \ convert(a) < convert(b)\n                            ^~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numbers\
    \ = numbers.components(separatedBy: \" \")\n    let sortedNumbers = numbers.sorted\
    \ { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpsx4scomf.swift:6:27: error: value of type 'String' has no member\
    \ 'components'\n    let numbers = numbers.components(separatedBy: \" \")\n   \
    \               ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: -4
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: Exception
  stderr: 'tmpkp99pu2q/tmpkp99pu2q.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b002d68bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b002d382b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b002d382988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b002d3817b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkp99pu2q                        0x0000564e085e48b2 <unavailable> + 6322

    5    libc.so.6                          0x00002b002d877460 __libc_start_main +
    245

    6    tmpkp99pu2q                        0x0000564e085e42e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numsToInt[a]!\
    \ < numsToInt[b]!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp8v38k8j6.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp8v38k8j6.swift:8:16: error: cannot find\
    \ 'numsToInt' in scope\n        return numsToInt[a]! < numsToInt[b]!\n       \
    \        ^~~~~~~~~\n/tmp/tmp8v38k8j6.swift:8:32: error: cannot find 'numsToInt'\
    \ in scope\n        return numsToInt[a]! < numsToInt[b]!\n                   \
    \            ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: -4
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted(by: {\n        let a = Int(String($0))!\n\
    \        let b = Int(String($1))!\n        return a < b\n    })\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: Exception
  stderr: 'tmpjaly4q3r/tmpjaly4q3r.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b2a55a79c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2a55770561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2a55770286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2a5577013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2a5576fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpjaly4q3r                        0x0000561eb4d29036 <unavailable> + 8246

    6    libswiftCore.so                    0x00002b2a55891c90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    7    libswiftCore.so                    0x00002b2a55892110 MutableCollection<>._insertionSort(within:by:)
    + 356

    8    libswiftCore.so                    0x00002b2a55890d30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    9    libswiftCore.so                    0x00002b2a55890d15 <unavailable> + 2616597

    10   libswiftCore.so                    0x00002b2a559b665a <unavailable> + 3819098

    11   libswiftCore.so                    0x00002b2a557a5720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    12   libswiftCore.so                    0x00002b2a557a570f <unavailable> + 1652495

    13   libswiftCore.so                    0x00002b2a55890460 MutableCollection<>.sort(by:)
    + 771

    14   libswiftCore.so                    0x00002b2a55890370 Sequence.sorted(by:)
    + 193

    15   tmpjaly4q3r                        0x0000561eb4d28dae <unavailable> + 7598

    16   tmpjaly4q3r                        0x0000561eb4d28901 <unavailable> + 6401

    17   libc.so.6                          0x00002b2a55c65460 __libc_start_main +
    245

    18   tmpjaly4q3r                        0x0000561eb4d28429 <unavailable> + 5161

    '
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        let num1 = number_to_int($0)\n\
    \        let num2 = number_to_int($1)\n        return num1 < num2\n    }\n   \
    \ return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers: \"three\"\
    ) == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") == \"three\
    \ five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers: \"six\
    \ five four three two one zero\") == \"zero one two three four five six\")"
  status: SyntaxError
  stderr: "/tmp/tmp4nlvqu67.swift:8:20: error: cannot find 'number_to_int' in scope\n\
    \        let num1 = number_to_int($0)\n                   ^~~~~~~~~~~~~\n/tmp/tmp4nlvqu67.swift:9:20:\
    \ error: cannot find 'number_to_int' in scope\n        let num2 = number_to_int($1)\n\
    \                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return nums.index(of:\
    \ a)! < nums.index(of: b)!\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnf3dp7bi.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return Int(s1)!\
    \ < Int(s2)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpn3qroq1f.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: -4
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.count\
    \ < b.count\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: Exception
  stderr: 'tmp92zf7o57/tmp92zf7o57.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebea4bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebea1b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebea1b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebea1b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp92zf7o57                        0x0000555ac1a708e2 <unavailable> + 6370

    5    libc.so.6                          0x00002aebea6aa460 __libc_start_main +
    245

    6    tmp92zf7o57                        0x0000555ac1a70319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1660013377
- exit_code: -4
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        let numA =\
    \ Int(a)!\n        let numB = Int(b)!\n        return numA < numB\n    }\n   \
    \ return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers: \"three\"\
    ) == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") == \"three\
    \ five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers: \"six\
    \ five four three two one zero\") == \"zero one two three four five six\")"
  status: Exception
  stderr: 'tmp3iop9his/tmp3iop9his.swift:8: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002af341f98c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af341c8f561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002af341c8f286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002af341c8f13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002af341c8ebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp3iop9his                        0x000055a59eddc05f <unavailable> + 8287

    6    libswiftCore.so                    0x00002af341db0c90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    7    libswiftCore.so                    0x00002af341db1110 MutableCollection<>._insertionSort(within:by:)
    + 356

    8    libswiftCore.so                    0x00002af341dafd30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    9    libswiftCore.so                    0x00002af341dafd15 <unavailable> + 2616597

    10   libswiftCore.so                    0x00002af341ed565a <unavailable> + 3819098

    11   libswiftCore.so                    0x00002af341cc4720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    12   libswiftCore.so                    0x00002af341cc470f <unavailable> + 1652495

    13   libswiftCore.so                    0x00002af341daf460 MutableCollection<>.sort(by:)
    + 771

    14   libswiftCore.so                    0x00002af341daf370 Sequence.sorted(by:)
    + 193

    15   tmp3iop9his                        0x000055a59eddbd6e <unavailable> + 7534

    16   tmp3iop9his                        0x000055a59eddb8c1 <unavailable> + 6337

    17   libc.so.6                          0x00002af342184460 __libc_start_main +
    245

    18   tmp3iop9his                        0x000055a59eddb3e9 <unavailable> + 5097

    '
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNums = nums.sorted(by: { $0.toInt() < $1.toInt() })\n\
    \    return sortedNums.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpuq883h5t.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpchhpu7at.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:16: error: cannot find\
    \ 'num_to_int' in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \               ^~~~~~~~~~\n/tmp/tmpchhpu7at.swift:8:37: error: cannot find 'num_to_int'\
    \ in scope\n        return num_to_int(num: a) < num_to_int(num: b)\n         \
    \                           ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let numsInt = nums.map { numberToInt($0) }\n    let sorted = numsInt.sorted()\n\
    \    let sortedStr = sorted.map { intToNumber($0) }\n    return sortedStr.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpfz1uuc6z.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpfz1uuc6z.swift:7:30: error: cannot find\
    \ 'numberToInt' in scope\n    let numsInt = nums.map { numberToInt($0) }\n   \
    \                          ^~~~~~~~~~~\n/tmp/tmpfz1uuc6z.swift:9:34: error: cannot\
    \ find 'intToNumber' in scope\n    let sortedStr = sorted.map { intToNumber($0)\
    \ }\n                                 ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeralMap\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let nums = numbers.split(separator:\
    \ \" \").map { String($0) }\n    let sorted = nums.sorted { numeralMap[$0]! <\
    \ numeralMap[$1]! }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.components(separatedBy: \" \"\
    ).sorted { numberals.index(of: $0)! < numberals.index(of: $1)! }\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphs42_my_.swift:7:26: error: value of type 'String' has no member\
    \ 'components'\n    let sorted = numbers.components(separatedBy: \" \").sorted\
    \ { numberals.index(of: $0)! < numberals.index(of: $1)! }\n                 ~~~~~~~\
    \ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return nums_to_int(a)\
    \ < nums_to_int(b)\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp62umahan.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp62umahan.swift:8:16: error: cannot find\
    \ 'nums_to_int' in scope\n        return nums_to_int(a) < nums_to_int(b)\n   \
    \            ^~~~~~~~~~~\n/tmp/tmp62umahan.swift:8:33: error: cannot find 'nums_to_int'\
    \ in scope\n        return nums_to_int(a) < nums_to_int(b)\n                 \
    \               ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted\
    \ { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of: String($1))!\
    \ }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let numsInt = nums.map { (num) -> Int in\n        switch num {\n\
    \        case \"zero\":\n            return 0\n        case \"one\":\n       \
    \     return 1\n        case \"two\":\n            return 2\n        case \"three\"\
    :\n            return 3\n        case \"four\":\n            return 4\n      \
    \  case \"five\":\n            return 5\n        case \"six\":\n            return\
    \ 6\n        case \"seven\":\n            return 7\n        case \"eight\":\n\
    \            return 8\n        case \"nine\":\n            return 9\n        default:\n\
    \            return 0\n        }\n    }\n    let sorted = numsInt.sorted()\n \
    \   let sortedString = sorted.map { (num) -> String in\n        switch num {\n\
    \        case 0:\n            return \"zero\"\n        case 1:\n            return\
    \ \"one\"\n        case 2:\n            return \"two\"\n        case 3:\n    \
    \        return \"three\"\n        case 4:\n            return \"four\"\n    \
    \    case 5:\n            return \"five\"\n        case 6:\n            return\
    \ \"six\"\n        case 7:\n            return \"seven\"\n        case 8:\n  \
    \          return \"eight\"\n        case 9:\n            return \"nine\"\n  \
    \      default:\n            return \"zero\"\n        }\n    }\n    return sortedString.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphls9a43f.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    var nums_int = [Int]()\n    for num in nums {\n        switch num\
    \ {\n        case \"zero\":\n            nums_int.append(0)\n        case \"one\"\
    :\n            nums_int.append(1)\n        case \"two\":\n            nums_int.append(2)\n\
    \        case \"three\":\n            nums_int.append(3)\n        case \"four\"\
    :\n            nums_int.append(4)\n        case \"five\":\n            nums_int.append(5)\n\
    \        case \"six\":\n            nums_int.append(6)\n        case \"seven\"\
    :\n            nums_int.append(7)\n        case \"eight\":\n            nums_int.append(8)\n\
    \        case \"nine\":\n            nums_int.append(9)\n        default:\n  \
    \          nums_int.append(0)\n        }\n    }\n    nums_int.sort()\n    var\
    \ nums_str = [String]()\n    for num in nums_int {\n        switch num {\n   \
    \     case 0:\n            nums_str.append(\"zero\")\n        case 1:\n      \
    \      nums_str.append(\"one\")\n        case 2:\n            nums_str.append(\"\
    two\")\n        case 3:\n            nums_str.append(\"three\")\n        case\
    \ 4:\n            nums_str.append(\"four\")\n        case 5:\n            nums_str.append(\"\
    five\")\n        case 6:\n            nums_str.append(\"six\")\n        case 7:\n\
    \            nums_str.append(\"seven\")\n        case 8:\n            nums_str.append(\"\
    eight\")\n        case 9:\n            nums_str.append(\"nine\")\n        default:\n\
    \            nums_str.append(\"zero\")\n        }\n    }\n    return nums_str.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp7j0daisy.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeralDict\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNums = nums.sorted { (num1, num2) -> Bool in\n       \
    \ return numeralDict[num1]! < numeralDict[num2]!\n    }\n    return sortedNums.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpdnf6n6tn.swift:7:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 0
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let number_map:\
    \ [String: Int] = [\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    ]\n    let number_array = numbers.split(separator: \" \")\n    let sorted_numbers\
    \ = number_array.sorted { (number1, number2) -> Bool in\n        return number_map[String(number1)]!\
    \ < number_map[String(number2)]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.components(separatedBy: \" \"\
    ).sorted { numberals.index(of: $0)! < numberals.index(of: $1)! }\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphs42_my_.swift:7:26: error: value of type 'String' has no member\
    \ 'components'\n    let sorted = numbers.components(separatedBy: \" \").sorted\
    \ { numberals.index(of: $0)! < numberals.index(of: $1)! }\n                 ~~~~~~~\
    \ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNums = nums.sorted { (a, b) -> Bool in\n        return\
    \ Int(a)! < Int(b)!\n    }\n    return sortedNums.joined(separator: \" \")\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmprih1bpn7.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numsToInt[a]!\
    \ < numsToInt[b]!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmp8v38k8j6.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmp8v38k8j6.swift:8:16: error: cannot find\
    \ 'numsToInt' in scope\n        return numsToInt[a]! < numsToInt[b]!\n       \
    \        ^~~~~~~~~\n/tmp/tmp8v38k8j6.swift:8:32: error: cannot find 'numsToInt'\
    \ in scope\n        return numsToInt[a]! < numsToInt[b]!\n                   \
    \            ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let numeralDict\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNums = nums.sorted { (num1, num2) -> Bool in\n       \
    \ return numeralDict[num1]! < numeralDict[num2]!\n    }\n    return sortedNums.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpdnf6n6tn.swift:7:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let numsInt = nums.map { numeralToInt($0) }\n    let sorted = numsInt.sorted()\n\
    \    let sortedNums = sorted.map { intToNumeral($0) }\n    return sortedNums.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpij2_51cz.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpij2_51cz.swift:7:30: error: cannot find\
    \ 'numeralToInt' in scope\n    let numsInt = nums.map { numeralToInt($0) }\n \
    \                            ^~~~~~~~~~~~\n/tmp/tmpij2_51cz.swift:9:35: error:\
    \ cannot find 'intToNumeral' in scope\n    let sortedNums = sorted.map { intToNumeral($0)\
    \ }\n                                  ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (n1, n2) -> Bool in\n        return numeral_to_int(numeral:\
    \ n1) < numeral_to_int(numeral: n2)\n    }\n    return sorted.joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers:\
    \ \"\") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmppzepj2f5.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmppzepj2f5.swift:8:16: error: cannot find\
    \ 'numeral_to_int' in scope\n        return numeral_to_int(numeral: n1) < numeral_to_int(numeral:\
    \ n2)\n               ^~~~~~~~~~~~~~\n/tmp/tmppzepj2f5.swift:8:46: error: cannot\
    \ find 'numeral_to_int' in scope\n        return numeral_to_int(numeral: n1) <\
    \ numeral_to_int(numeral: n2)\n                                             ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013378
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(sort_numbers(numbers: \"\
    \") == \"\")\nassert(sort_numbers(numbers: \"three\") == \"three\")\nassert(sort_numbers(numbers:\
    \ \"three five nine\") == \"three five nine\")\nassert(sort_numbers(numbers: \"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmpnhhkwnpp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:16: error: cannot find\
    \ 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n               ^~~~~~~~~~~~~\n/tmp/tmpnhhkwnpp.swift:8:43: error: cannot\
    \ find 'number_to_int' in scope\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n                                          ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377
- exit_code: 1
  program: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers: String) -> String {\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
    \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\")\
    \ == \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
    \ \"six five four three two one zero\") == \"zero one two three four five six\"\
    )"
  status: SyntaxError
  stderr: "/tmp/tmphw1zkayp.swift:6:24: error: value of type 'String' has no member\
    \ 'components'\n    let nums = numbers.components(separatedBy: \" \")\n      \
    \         ~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013377

name: HumanEval_88_sort_array
language: swift
prompt: "\n/// Given an array of non-negative integers, return a copy of the given\
  \ array after sorting,\n/// you will sort the given array in ascending order if\
  \ the sum( first index value, last index value) is odd,\n/// or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n/// Note:\n///\
  \ * don't change the given array.\n/// Examples:\nfunc sort_array(array: [Int])\
  \ -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(sort_array(array: [] as [Int]) == [] as\
  \ [Int])\nassert(sort_array(array: [5]) == [5])\nassert(sort_array(array: [2, 4,\
  \ 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5])\nassert(sort_array(array: [2, 4, 3, 0, 1,\
  \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0])\nassert(sort_array(array: [2, 1]) == [1, 2])\n\
  assert(sort_array(array: [15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87])\n\
  assert(sort_array(array: [21, 14, 23, 11]) == [23, 21, 14, 11])"
completions: ["    var oddArray = [Int]()\n    var evenArray = [Int]()\n    var result\
    \ = [Int]()\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n\
    \            evenArray.append(array[i])\n        } else {\n            oddArray.append(array[i])\n\
    \        }\n    }\n    oddArray.sort()\n    evenArray.sort()\n    if (array[0]\
    \ + array[array.count - 1]) % 2 == 0 {\n        evenArray.reverse()\n    }\n \
    \   for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var sortedArray = array\n    let sum = array[0]\
    \ + array[array.count - 1]\n    if sum % 2 == 0 {\n        sortedArray.sort(by:\
    \ >)\n    } else {\n        sortedArray.sort(by: <)\n    }\n    return sortedArray",
  "    var result = array\n    var left = 0\n    var right = array.count - 1\n   \
    \ while left < right {\n        if array[left] % 2 == 0 {\n            while array[right]\
    \ % 2 == 0 && left < right {\n                right -= 1\n            }\n    \
    \        result.swapAt(left, right)\n        }\n        left += 1\n    }\n   \
    \ for i in 0..<result.count {\n        if result[i] % 2 == 0 {\n            result[i...].sort()\n\
    \            break\n        }\n    }\n    for i in (0..<result.count).reversed()\
    \ {\n        if result[i] % 2 == 1 {\n            result[0...i].sort(by: >)\n\
    \            break\n        }\n    }\n    return result", "    var odd = [Int]()\n\
    \    var even = [Int]()\n    var result = [Int]()\n    for i in array {\n    \
    \    if i % 2 == 0 {\n            even.append(i)\n        } else {\n         \
    \   odd.append(i)\n        }\n    }\n    odd.sort()\n    even.sort()\n    even\
    \ = even.reversed()\n    for i in 0..<array.count {\n        if array[i] % 2 ==\
    \ 0 {\n            result.append(even[0])\n            even.remove(at: 0)\n  \
    \      } else {\n            result.append(odd[0])\n            odd.remove(at:\
    \ 0)\n        }\n    }\n    return result", "    var odd = [Int]()\n    var even\
    \ = [Int]()\n    var result = [Int]()\n    for i in array {\n        if i % 2\
    \ == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ result = array\n    var odd = [Int]()\n    var even = [Int]()\n    for i in\
    \ 0..<array.count {\n        if array[i] % 2 == 0 {\n            even.append(array[i])\n\
    \        } else {\n            odd.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    if (array[0] + array[array.count - 1]) % 2 == 0 {\n    \
    \    even = even.reversed()\n    }\n    var j = 0\n    var k = 0\n    for i in\
    \ 0..<array.count {\n        if array[i] % 2 == 0 {\n            result[i] = even[j]\n\
    \            j += 1\n        } else {\n            result[i] = odd[k]\n      \
    \      k += 1\n        }\n    }\n    return result", "    var result = array\n\
    \    var odd = [Int]()\n    var even = [Int]()\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            even.append(array[i])\n        }\
    \ else {\n            odd.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    if (array[0] + array[array.count - 1]) % 2 == 0 {\n    \
    \    even = even.reversed()\n    }\n    var index = 0\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result[i] = even[index]\n   \
    \         index += 1\n        } else {\n            result[i] = odd[index]\n \
    \           index += 1\n        }\n    }\n    return result", "    var oddArray\
    \ = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.first! + array.last! %\
    \ 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    var i = 0\n    var\
    \ j = array.count - 1\n    while i < j {\n        if (array[i] + array[j]) % 2\
    \ == 0 {\n            result[i] = array[j]\n            result[j] = array[i]\n\
    \            i += 1\n            j -= 1\n        } else {\n            i += 1\n\
    \        }\n    }\n    return result", "    var result = array\n    var odd =\
    \ [Int]()\n    var even = [Int]()\n    for i in 0..<array.count {\n        if\
    \ array[i] % 2 == 0 {\n            even.append(array[i])\n        } else {\n \
    \           odd.append(array[i])\n        }\n    }\n    odd.sort()\n    even.sort()\n\
    \    if (array[0] + array[array.count - 1]) % 2 == 0 {\n        even = even.reversed()\n\
    \    }\n    var index = 0\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            result[i] = even[index]\n            index += 1\n  \
    \      } else {\n            result[i] = odd[index]\n            index += 1\n\
    \        }\n    }\n    return result", "    var array = array\n    var i = 0\n\
    \    var j = array.count - 1\n    var temp = 0\n    while i < j {\n        if\
    \ array[i] % 2 == 0 {\n            if array[j] % 2 != 0 {\n                temp\
    \ = array[i]\n                array[i] = array[j]\n                array[j] =\
    \ temp\n                i += 1\n                j -= 1\n            } else {\n\
    \                j -= 1\n            }\n        } else {\n            i += 1\n\
    \        }\n    }\n    if array.count % 2 == 0 {\n        i = 0\n        j = array.count\
    \ - 1\n        while i < j {\n            temp = array[i]\n            array[i]\
    \ = array[j]\n            array[j] = temp\n            i += 1\n            j -=\
    \ 1\n        }\n    }\n    return array", "    var oddArray = [Int]()\n    var\
    \ evenArray = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.first! + array.last! %\
    \ 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var array = array\n    var i = 0\n    var\
    \ j = array.count - 1\n    while i < j {\n        if array[i] % 2 == 0 {\n   \
    \         if array[j] % 2 == 1 {\n                array.swapAt(i, j)\n       \
    \         i += 1\n                j -= 1\n            } else {\n             \
    \   j -= 1\n            }\n        } else {\n            i += 1\n        }\n \
    \   }\n    if (array[0] + array[array.count - 1]) % 2 == 0 {\n        array.sort(by:\
    \ >)\n    } else {\n        array.sort(by: <)\n    }\n    return array", "   \
    \ var result = array\n    var first = 0\n    var last = array.count - 1\n    while\
    \ first < last {\n        if result[first] % 2 == 0 && result[last] % 2 == 1 {\n\
    \            result.swapAt(first, last)\n            first += 1\n            last\
    \ -= 1\n        } else if result[first] % 2 == 1 && result[last] % 2 == 0 {\n\
    \            first += 1\n            last -= 1\n        } else if result[first]\
    \ % 2 == 0 && result[last] % 2 == 0 {\n            last -= 1\n        } else {\n\
    \            first += 1\n        }\n    }\n    if result.count % 2 == 0 {\n  \
    \      for i in 0..<result.count / 2 {\n            if result[i] > result[result.count\
    \ - 1 - i] {\n                result.swapAt(i, result.count - 1 - i)\n       \
    \     }\n        }\n    } else {\n        for i in 0..<result.count / 2 {\n  \
    \          if result[i] < result[result.count - 1 - i] {\n                result.swapAt(i,\
    \ result.count - 1 - i)\n            }\n        }\n    }\n    return result",
  "    var newArray = array\n    var left = 0\n    var right = array.count - 1\n \
    \   while left < right {\n        if (array[left] + array[right]) % 2 == 0 {\n\
    \            newArray[left] = array[right]\n            newArray[right] = array[left]\n\
    \            left += 1\n            right -= 1\n        } else {\n           \
    \ left += 1\n        }\n    }\n    return newArray", "    var result = array\n\
    \    var i = 0\n    var j = result.count - 1\n    while i < j {\n        if (result[i]\
    \ + result[j]) % 2 == 0 {\n            let temp = result[i]\n            result[i]\
    \ = result[j]\n            result[j] = temp\n            i += 1\n            j\
    \ -= 1\n        } else {\n            i += 1\n        }\n    }\n    return result",
  "    var result = array\n    var odd = [Int]()\n    var even = [Int]()\n    for\
    \ i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            even.append(array[i])\n\
    \        } else {\n            odd.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    if (array[0] + array[array.count - 1]) % 2 == 0 {\n    \
    \    even = even.reversed()\n    }\n    var j = 0\n    var k = 0\n    for i in\
    \ 0..<array.count {\n        if array[i] % 2 == 0 {\n            result[i] = even[j]\n\
    \            j += 1\n        } else {\n            result[i] = odd[k]\n      \
    \      k += 1\n        }\n    }\n    return result", "    var oddArray = [Int]()\n\
    \    var evenArray = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if (oddArray.count + evenArray.count)\
    \ % 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    var odd = [Int]()\n\
    \    var even = [Int]()\n    for i in 0..<array.count {\n        if array[i] %\
    \ 2 == 0 {\n            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    if array.count % 2 ==\
    \ 0 {\n        for i in 0..<odd.count {\n            result[i * 2] = odd[i]\n\
    \        }\n        for i in 0..<even.count {\n            result[i * 2 + 1] =\
    \ even[i]\n        }\n    } else {\n        for i in 0..<odd.count {\n       \
    \     result[i * 2] = odd[i]\n        }\n        for i in 0..<even.count {\n \
    \           result[i * 2 + 1] = even[i]\n        }\n    }\n    return result",
  "    var result = array\n    var i = 0\n    var j = array.count - 1\n    var temp\
    \ = 0\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n      \
    \      temp = result[i]\n            result[i] = result[j]\n            result[j]\
    \ = temp\n            i += 1\n            j -= 1\n        } else {\n         \
    \   i += 1\n        }\n    }\n    return result", "    var result = array\n  \
    \  var i = 0\n    var j = array.count - 1\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            result[i] = array[j]\n            result[j]\
    \ = array[i]\n            i += 1\n            j -= 1\n        } else {\n     \
    \       i += 1\n        }\n    }\n    return result", "    var odd = [Int]()\n\
    \    var even = [Int]()\n    var result = [Int]()\n    for i in array {\n    \
    \    if i % 2 == 0 {\n            even.append(i)\n        } else {\n         \
    \   odd.append(i)\n        }\n    }\n    odd.sort()\n    even.sort()\n    even\
    \ = even.reversed()\n    for i in 0..<array.count {\n        if array[i] % 2 ==\
    \ 0 {\n            result.append(even[0])\n            even.remove(at: 0)\n  \
    \      } else {\n            result.append(odd[0])\n            odd.remove(at:\
    \ 0)\n        }\n    }\n    return result", "    var odd = [Int]()\n    var even\
    \ = [Int]()\n    var result = [Int]()\n    for i in array {\n        if i % 2\
    \ == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ oddArray = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.first! + array.last! %\
    \ 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var array = array\n    var odd = [Int]()\n\
    \    var even = [Int]()\n    for i in 0..<array.count {\n        if array[i] %\
    \ 2 == 0 {\n            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    if array.first! + array.last!\
    \ % 2 == 0 {\n        even = even.reversed()\n    }\n    var result = [Int]()\n\
    \    var oddIndex = 0\n    var evenIndex = 0\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(even[evenIndex])\n\
    \            evenIndex += 1\n        } else {\n            result.append(odd[oddIndex])\n\
    \            oddIndex += 1\n        }\n    }\n    return result", "    var oddArray\
    \ = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.first! + array.last! %\
    \ 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    var i = 0\n    var\
    \ j = array.count - 1\n    var isOdd = false\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 1 {\n        isOdd = true\n    }\n    while i < j {\n        if\
    \ isOdd {\n            if array[i] % 2 == 0 {\n                while array[j]\
    \ % 2 == 0 {\n                    j -= 1\n                }\n                result[i]\
    \ = array[j]\n                result[j] = array[i]\n                j -= 1\n \
    \           }\n        } else {\n            if array[i] % 2 == 1 {\n        \
    \        while array[j] % 2 == 1 {\n                    j -= 1\n             \
    \   }\n                result[i] = array[j]\n                result[j] = array[i]\n\
    \                j -= 1\n            }\n        }\n        i += 1\n    }\n   \
    \ return result", "    var result = array\n    var start = 0\n    var end = array.count\
    \ - 1\n    while start < end {\n        if (array[start] + array[end]) % 2 ==\
    \ 0 {\n            result[start] = array[end]\n            start += 1\n      \
    \  } else {\n            result[end] = array[start]\n            end -= 1\n  \
    \      }\n    }\n    return result", "    var array = array\n    var odd = [Int]()\n\
    \    var even = [Int]()\n    for i in 0..<array.count {\n        if array[i] %\
    \ 2 == 0 {\n            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort(by: >)\n    even.sort(by: <)\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            array[i] = even.removeFirst()\n\
    \        } else {\n            array[i] = odd.removeFirst()\n        }\n    }\n\
    \    return array", "    var result = array\n    var start = 0\n    var end =\
    \ array.count - 1\n    while start < end {\n        if (array[start] + array[end])\
    \ % 2 == 0 {\n            result[start] = array[end]\n            start += 1\n\
    \        } else {\n            result[end] = array[start]\n            end -=\
    \ 1\n        }\n    }\n    return result", "    var oddArray = [Int]()\n    var\
    \ evenArray = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.count % 2 == 0 {\n   \
    \     evenArray.reverse()\n    } else {\n        oddArray.reverse()\n    }\n \
    \   for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    var i = 0\n    var\
    \ j = array.count - 1\n    while i < j {\n        if (array[i] + array[j]) % 2\
    \ == 0 {\n            result[i] = array[j]\n            result[j] = array[i]\n\
    \            i += 1\n            j -= 1\n        } else {\n            i += 1\n\
    \        }\n    }\n    return result", "    var result = array\n    var start\
    \ = 0\n    var end = array.count - 1\n    var isAscending = true\n    if (array[start]\
    \ + array[end]) % 2 == 0 {\n        isAscending = false\n    }\n    while start\
    \ < end {\n        if isAscending {\n            if array[start] > array[end]\
    \ {\n                result[start] = array[end]\n                result[end] =\
    \ array[start]\n            }\n        } else {\n            if array[start] <\
    \ array[end] {\n                result[start] = array[end]\n                result[end]\
    \ = array[start]\n            }\n        }\n        start += 1\n        end -=\
    \ 1\n    }\n    return result", "    var odd = [Int]()\n    var even = [Int]()\n\
    \    var result = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n   \
    \         even.append(i)\n        } else {\n            odd.append(i)\n      \
    \  }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n   \
    \ for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ oddArray = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    for i in 0..<array.count {\n  \
    \      if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    var start = 0\n \
    \   var end = array.count - 1\n    while start < end {\n        if (array[start]\
    \ + array[end]) % 2 == 0 {\n            result[start] = array[end]\n         \
    \   start += 1\n        } else {\n            result[end] = array[start]\n   \
    \         end -= 1\n        }\n    }\n    return result", "    var oddArray =\
    \ [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n    for i in\
    \ 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    evenArray.reverse()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var sortedArray = array\n    var oddArray\
    \ = [Int]()\n    var evenArray = [Int]()\n    for i in 0..<array.count {\n   \
    \     if i % 2 == 0 {\n            oddArray.append(array[i])\n        } else {\n\
    \            evenArray.append(array[i])\n        }\n    }\n    oddArray.sort()\n\
    \    evenArray.sort()\n    evenArray.reverse()\n    for i in 0..<array.count {\n\
    \        if i % 2 == 0 {\n            sortedArray[i] = oddArray[i/2]\n       \
    \ } else {\n            sortedArray[i] = evenArray[i/2]\n        }\n    }\n  \
    \  return sortedArray", "    var odd = [Int]()\n    var even = [Int]()\n    var\
    \ result = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    odd.sort()\n    even.sort()\n    if array.first! + array.last! % 2 ==\
    \ 0 {\n        even = even.reversed()\n    }\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(even.removeFirst())\n\
    \        } else {\n            result.append(odd.removeFirst())\n        }\n \
    \   }\n    return result", "    var array = array\n    var odd = [Int]()\n   \
    \ var even = [Int]()\n    for i in 0..<array.count {\n        if array[i] % 2\
    \ == 0 {\n            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    if array.count % 2 ==\
    \ 0 {\n        even = even.reversed()\n    } else {\n        odd = odd.reversed()\n\
    \    }\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n     \
    \       array[i] = even.removeFirst()\n        } else {\n            array[i]\
    \ = odd.removeFirst()\n        }\n    }\n    return array", "    var result =\
    \ array\n    var odd = [Int]()\n    var even = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            even.append(array[i])\n     \
    \   } else {\n            odd.append(array[i])\n        }\n    }\n    odd.sort(by:\
    \ >)\n    even.sort(by: <)\n    var index = 0\n    for i in 0..<odd.count {\n\
    \        result[index] = odd[i]\n        index += 1\n    }\n    for i in 0..<even.count\
    \ {\n        result[index] = even[i]\n        index += 1\n    }\n    return result",
  "    var sortedArray = array\n    var oddArray = [Int]()\n    var evenArray = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    for i in 0..<array.count {\n  \
    \      if array[i] % 2 == 0 {\n            sortedArray[i] = evenArray.removeFirst()\n\
    \        } else {\n            sortedArray[i] = oddArray.removeFirst()\n     \
    \   }\n    }\n    return sortedArray", "    var odd = [Int]()\n    var even =\
    \ [Int]()\n    var result = [Int]()\n    for i in array {\n        if i % 2 ==\
    \ 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ oddArray = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    evenArray.reverse()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var odd = [Int]()\n    var even = [Int]()\n\
    \    var result = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n   \
    \         even.append(i)\n        } else {\n            odd.append(i)\n      \
    \  }\n    }\n    odd.sort(by: >)\n    even.sort(by: <)\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result.append(even.removeFirst())\n\
    \        } else {\n            result.append(odd.removeFirst())\n        }\n \
    \   }\n    return result", "    var result = array\n    var start = 0\n    var\
    \ end = array.count - 1\n    while start < end {\n        if array[start] % 2\
    \ == 0 && array[end] % 2 == 1 {\n            result[start] = array[end]\n    \
    \        result[end] = array[start]\n            start += 1\n            end -=\
    \ 1\n        } else if array[start] % 2 == 1 && array[end] % 2 == 0 {\n      \
    \      start += 1\n            end -= 1\n        } else if array[start] % 2 ==\
    \ 0 && array[end] % 2 == 0 {\n            end -= 1\n        } else {\n       \
    \     start += 1\n        }\n    }\n    return result", "    var sortedArray =\
    \ array\n    var isEven = false\n    if (array[0] + array[array.count - 1]) %\
    \ 2 == 0 {\n        isEven = true\n    }\n    sortedArray.sort()\n    if isEven\
    \ {\n        sortedArray.reverse()\n    }\n    return sortedArray", "    var oddArray\
    \ = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var array = array\n    var odd = [Int]()\n\
    \    var even = [Int]()\n    for i in 0..<array.count {\n        if array[i] %\
    \ 2 == 0 {\n            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    if array.count % 2 ==\
    \ 0 {\n        even = even.reversed()\n    } else {\n        odd = odd.reversed()\n\
    \    }\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n     \
    \       array[i] = even.removeFirst()\n        } else {\n            array[i]\
    \ = odd.removeFirst()\n        }\n    }\n    return array", "    var oddArray\
    \ = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n    for num\
    \ in array {\n        if num % 2 == 0 {\n            evenArray.append(num)\n \
    \       } else {\n            oddArray.append(num)\n        }\n    }\n    oddArray.sort()\n\
    \    evenArray.sort()\n    if array.first! + array.last! % 2 == 0 {\n        evenArray.reverse()\n\
    \    }\n    for num in array {\n        if num % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var odd = [Int]()\n    var even = [Int]()\n\
    \    var result = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n   \
    \         even.append(i)\n        } else {\n            odd.append(i)\n      \
    \  }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n   \
    \ for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ result = array\n    var i = 0\n    var j = result.count - 1\n    while i < j\
    \ {\n        if (result[i] + result[j]) % 2 == 0 {\n            result.swapAt(i,\
    \ j)\n            i += 1\n            j -= 1\n        } else {\n            i\
    \ += 1\n        }\n    }\n    return result", "    var odd = [Int]()\n    var\
    \ even = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    even = even.reversed()\n    var result = [Int]()\n    for\
    \ i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ newArray = array\n    var firstIndex = 0\n    var lastIndex = array.count -\
    \ 1\n    while firstIndex < lastIndex {\n        if (array[firstIndex] + array[lastIndex])\
    \ % 2 == 0 {\n            newArray[firstIndex] = array[lastIndex]\n          \
    \  newArray[lastIndex] = array[firstIndex]\n            firstIndex += 1\n    \
    \        lastIndex -= 1\n        } else {\n            firstIndex += 1\n     \
    \   }\n    }\n    return newArray", "    var array = array\n    var odd = [Int]()\n\
    \    var even = [Int]()\n    for i in 0..<array.count {\n        if array[i] %\
    \ 2 == 0 {\n            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            array[i] = even.removeFirst()\n\
    \        } else {\n            array[i] = odd.removeFirst()\n        }\n    }\n\
    \    return array", "    var array = array\n    var odd = [Int]()\n    var even\
    \ = [Int]()\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n\
    \            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        even.reverse()\n    }\n    var result = [Int]()\n\
    \    var oddIndex = 0\n    var evenIndex = 0\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(even[evenIndex])\n\
    \            evenIndex += 1\n        } else {\n            result.append(odd[oddIndex])\n\
    \            oddIndex += 1\n        }\n    }\n    return result", "    var sortedArray\
    \ = array\n    var i = 0\n    var j = array.count - 1\n    var isOdd = false\n\
    \    if (array[0] + array[array.count - 1]) % 2 == 1 {\n        isOdd = true\n\
    \    }\n    while i < j {\n        if isOdd {\n            if sortedArray[i] %\
    \ 2 == 0 {\n                i += 1\n            } else if sortedArray[j] % 2 ==\
    \ 1 {\n                j -= 1\n            } else {\n                let temp\
    \ = sortedArray[i]\n                sortedArray[i] = sortedArray[j]\n        \
    \        sortedArray[j] = temp\n                i += 1\n                j -= 1\n\
    \            }\n        } else {\n            if sortedArray[i] % 2 == 1 {\n \
    \               i += 1\n            } else if sortedArray[j] % 2 == 0 {\n    \
    \            j -= 1\n            } else {\n                let temp = sortedArray[i]\n\
    \                sortedArray[i] = sortedArray[j]\n                sortedArray[j]\
    \ = temp\n                i += 1\n                j -= 1\n            }\n    \
    \    }\n    }\n    return sortedArray", "    var odd = [Int]()\n    var even =\
    \ [Int]()\n    var result = [Int]()\n    for i in array {\n        if i % 2 ==\
    \ 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ oddArray = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.count % 2 == 0 {\n   \
    \     evenArray.reverse()\n    } else {\n        oddArray.reverse()\n    }\n \
    \   for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var odd = [Int]()\n    var even = [Int]()\n\
    \    for i in array {\n        if i % 2 == 0 {\n            even.append(i)\n \
    \       } else {\n            odd.append(i)\n        }\n    }\n    odd.sort(by:\
    \ >)\n    even.sort(by: <)\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result.append(even.removeFirst())\n\
    \        } else {\n            result.append(odd.removeFirst())\n        }\n \
    \   }\n    return result", "    var array = array\n    var i = 0\n    var j =\
    \ array.count - 1\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swapAt(i, j)\n            i += 1\n           \
    \ j -= 1\n        } else if array[i] % 2 == 1 {\n            i += 1\n        }\
    \ else if array[j] % 2 == 0 {\n            j -= 1\n        }\n    }\n    if array.count\
    \ % 2 == 0 {\n        for i in 0..<array.count / 2 {\n            if array[i]\
    \ > array[array.count - 1 - i] {\n                array.swapAt(i, array.count\
    \ - 1 - i)\n            }\n        }\n    } else {\n        for i in 0..<array.count\
    \ / 2 {\n            if array[i] < array[array.count - 1 - i] {\n            \
    \    array.swapAt(i, array.count - 1 - i)\n            }\n        }\n    }\n \
    \   return array", "    var odd = [Int]()\n    var even = [Int]()\n    var result\
    \ = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    even = even.reversed()\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(even[0])\n        \
    \    even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ result = array\n    var i = 0\n    while i < result.count {\n        if i ==\
    \ result.count - 1 {\n            break\n        }\n        if (result[i] + result[result.count\
    \ - 1]) % 2 == 0 {\n            let temp = result[i]\n            result[i] =\
    \ result[result.count - 1]\n            result[result.count - 1] = temp\n    \
    \    }\n        i += 1\n    }\n    return result", "    var result = array\n \
    \   var odd = [Int]()\n    var even = [Int]()\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            even.append(array[i])\n        }\
    \ else {\n            odd.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    even = even.reversed()\n    var index = 0\n    for i in\
    \ 0..<array.count {\n        if array[i] % 2 == 0 {\n            result[i] = even[index]\n\
    \            index += 1\n        } else {\n            result[i] = odd[index]\n\
    \            index += 1\n        }\n    }\n    return result", "    var oddArray\
    \ = [Int]()\n    var evenArray = [Int]()\n    for i in 0..<array.count {\n   \
    \     if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n       \
    \ } else {\n            oddArray.append(array[i])\n        }\n    }\n    oddArray.sort()\n\
    \    evenArray.sort()\n    evenArray.reverse()\n    var result = [Int]()\n   \
    \ for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray[0])\n\
    \            evenArray.removeFirst()\n        } else {\n            result.append(oddArray[0])\n\
    \            oddArray.removeFirst()\n        }\n    }\n    return result", " \
    \   var odd = [Int]()\n    var even = [Int]()\n    var result = [Int]()\n    for\
    \ i in array {\n        if i % 2 == 0 {\n            even.append(i)\n        }\
    \ else {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n    even.sort()\n\
    \    even = even.reversed()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            result.append(even[0])\n            even.remove(at:\
    \ 0)\n        } else {\n            result.append(odd[0])\n            odd.remove(at:\
    \ 0)\n        }\n    }\n    return result", "    var oddArray = [Int]()\n    var\
    \ evenArray = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.count % 2 == 0 {\n   \
    \     evenArray.reverse()\n    } else {\n        oddArray.reverse()\n    }\n \
    \   for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var odd = [Int]()\n    var even = [Int]()\n\
    \    var result = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n   \
    \         even.append(i)\n        } else {\n            odd.append(i)\n      \
    \  }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n   \
    \ for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ result = array\n    var odd = [Int]()\n    var even = [Int]()\n    for i in\
    \ 0..<array.count {\n        if array[i] % 2 == 0 {\n            even.append(array[i])\n\
    \        } else {\n            odd.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    var index = 0\n    for i in 0..<odd.count {\n        result[index]\
    \ = odd[i]\n        index += 1\n    }\n    for i in 0..<even.count {\n       \
    \ result[index] = even[i]\n        index += 1\n    }\n    if array.count % 2 ==\
    \ 0 {\n        return result.reversed()\n    }\n    return result", "    var result\
    \ = array\n    var start = 0\n    var end = array.count - 1\n    var isAscending\
    \ = (array[0] + array[array.count - 1]) % 2 == 1\n    while start < end {\n  \
    \      if isAscending {\n            if result[start] > result[end] {\n      \
    \          let temp = result[start]\n                result[start] = result[end]\n\
    \                result[end] = temp\n            }\n        } else {\n       \
    \     if result[start] < result[end] {\n                let temp = result[start]\n\
    \                result[start] = result[end]\n                result[end] = temp\n\
    \            }\n        }\n        start += 1\n        end -= 1\n    }\n    return\
    \ result", "    var odd = [Int]()\n    var even = [Int]()\n    var result = [Int]()\n\
    \    for i in array {\n        if i % 2 == 0 {\n            even.append(i)\n \
    \       } else {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    even = even.reversed()\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(even[0])\n        \
    \    even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ oddArray = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    for i in 0..<result.count\
    \ {\n        for j in 0..<result.count {\n            if (i + j) % 2 == 0 {\n\
    \                if result[i] > result[j] {\n                    let temp = result[i]\n\
    \                    result[i] = result[j]\n                    result[j] = temp\n\
    \                }\n            } else {\n                if result[i] < result[j]\
    \ {\n                    let temp = result[i]\n                    result[i] =\
    \ result[j]\n                    result[j] = temp\n                }\n       \
    \     }\n        }\n    }\n    return result", "    var oddArray = [Int]()\n \
    \   var evenArray = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    evenArray.reverse()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var oddArray = [Int]()\n    var evenArray\
    \ = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count {\n      \
    \  if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n        } else\
    \ {\n            oddArray.append(array[i])\n        }\n    }\n    oddArray.sort()\n\
    \    evenArray.sort()\n    if (array[0] + array[array.count - 1]) % 2 == 0 {\n\
    \        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n        if\
    \ array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n  \
    \      } else {\n            result.append(oddArray.removeFirst())\n        }\n\
    \    }\n    return result", "    var oddArray = [Int]()\n    var evenArray = [Int]()\n\
    \    var result = [Int]()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            evenArray.append(array[i])\n        } else {\n     \
    \       oddArray.append(array[i])\n        }\n    }\n    oddArray.sort()\n   \
    \ evenArray.sort()\n    if array.first! + array.last! % 2 == 0 {\n        evenArray.reverse()\n\
    \    }\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n     \
    \       result.append(evenArray.removeFirst())\n        } else {\n           \
    \ result.append(oddArray.removeFirst())\n        }\n    }\n    return result",
  "    var newArray = array\n    var index = 0\n    var index2 = newArray.count -\
    \ 1\n    var temp = 0\n    var sum = 0\n    var odd = false\n    while index <\
    \ index2 {\n        sum = newArray[index] + newArray[index2]\n        if sum %\
    \ 2 == 0 {\n            temp = newArray[index]\n            newArray[index] =\
    \ newArray[index2]\n            newArray[index2] = temp\n            index +=\
    \ 1\n            index2 -= 1\n        } else {\n            odd = true\n     \
    \       break\n        }\n    }\n    if odd {\n        newArray.sort(by: >)\n\
    \    } else {\n        newArray.sort(by: <)\n    }\n    return newArray", "  \
    \  var result = array\n    var start = 0\n    var end = array.count - 1\n    let\
    \ sum = array[start] + array[end]\n    while start < end {\n        if sum % 2\
    \ == 0 {\n            if result[start] < result[end] {\n                result.swapAt(start,\
    \ end)\n            }\n        } else {\n            if result[start] > result[end]\
    \ {\n                result.swapAt(start, end)\n            }\n        }\n   \
    \     start += 1\n        end -= 1\n    }\n    return result", "    var oddArray\
    \ = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var array = array\n    var odd = [Int]()\n\
    \    var even = [Int]()\n    for i in 0..<array.count {\n        if array[i] %\
    \ 2 == 0 {\n            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    if array[0] + array[array.count\
    \ - 1] % 2 == 0 {\n        even = even.reversed()\n    }\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            array[i] = even.removeFirst()\n\
    \        } else {\n            array[i] = odd.removeFirst()\n        }\n    }\n\
    \    return array", "    var odd = [Int]()\n    var even = [Int]()\n    var result\
    \ = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    even = even.reversed()\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(even[0])\n        \
    \    even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ newArray = array\n    var oddArray = [Int]()\n    var evenArray = [Int]()\n\
    \    var resultArray = [Int]()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            evenArray.append(array[i])\n        } else {\n     \
    \       oddArray.append(array[i])\n        }\n    }\n    oddArray.sort()\n   \
    \ evenArray.sort()\n    evenArray.reverse()\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            resultArray.append(evenArray[0])\n\
    \            evenArray.removeFirst()\n        } else {\n            resultArray.append(oddArray[0])\n\
    \            oddArray.removeFirst()\n        }\n    }\n    return resultArray",
  "    var result = array\n    var i = 0\n    var j = array.count - 1\n    while i\
    \ < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            result[i] =\
    \ array[j]\n            result[j] = array[i]\n            i += 1\n           \
    \ j -= 1\n        } else {\n            i += 1\n        }\n    }\n    return result",
  "    var result = array\n    var odd = [Int]()\n    var even = [Int]()\n    for\
    \ i in 0..<array.count {\n        if i % 2 == 0 {\n            odd.append(array[i])\n\
    \        } else {\n            even.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort(by: >)\n    for i in 0..<array.count {\n        if i % 2 == 0 {\n\
    \            result[i] = odd[i / 2]\n        } else {\n            result[i] =\
    \ even[i / 2]\n        }\n    }\n    return result", "    let sum = array.first!\
    \ + array.last!\n    let sorted = array.sorted()\n    return sum % 2 == 0 ? sorted.reversed()\
    \ : sorted", "    var oddArray = [Int]()\n    var evenArray = [Int]()\n    var\
    \ result = [Int]()\n    for i in 0..<array.count {\n        if array[i] % 2 ==\
    \ 0 {\n            evenArray.append(array[i])\n        } else {\n            oddArray.append(array[i])\n\
    \        }\n    }\n    oddArray.sort()\n    evenArray.sort()\n    if (array[0]\
    \ + array[array.count - 1]) % 2 == 0 {\n        evenArray.reverse()\n    }\n \
    \   for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var sortedArray = array\n    let firstIndex\
    \ = array[0]\n    let lastIndex = array[array.count - 1]\n    let sum = firstIndex\
    \ + lastIndex\n    if sum % 2 == 0 {\n        sortedArray.sort(by: >)\n    } else\
    \ {\n        sortedArray.sort(by: <)\n    }\n    return sortedArray", "    var\
    \ result = array\n    for i in 0..<result.count {\n        for j in i+1..<result.count\
    \ {\n            if (i + j) % 2 == 0 {\n                if result[i] < result[j]\
    \ {\n                    let temp = result[i]\n                    result[i] =\
    \ result[j]\n                    result[j] = temp\n                }\n       \
    \     } else {\n                if result[i] > result[j] {\n                 \
    \   let temp = result[i]\n                    result[i] = result[j]\n        \
    \            result[j] = temp\n                }\n            }\n        }\n \
    \   }\n    return result", "    var result = array\n    var i = 0\n    var j =\
    \ array.count - 1\n    while i < j {\n        if (array[i] + array[j]) % 2 ==\
    \ 0 {\n            result[i] = array[j]\n            result[j] = array[i]\n  \
    \          i += 1\n            j -= 1\n        } else {\n            i += 1\n\
    \        }\n    }\n    return result", "    var array = array\n    var i = 0\n\
    \    var j = array.count - 1\n    while i < j {\n        if array[i] % 2 == 0\
    \ {\n            if array[j] % 2 == 1 {\n                let temp = array[i]\n\
    \                array[i] = array[j]\n                array[j] = temp\n      \
    \          i += 1\n                j -= 1\n            } else {\n            \
    \    j -= 1\n            }\n        } else {\n            i += 1\n        }\n\
    \    }\n    if (i + j) % 2 == 0 {\n        array[i...].sort(by: >)\n    } else\
    \ {\n        array[i...].sort(by: <)\n    }\n    return array", "    var result\
    \ = array\n    var i = 0\n    var j = array.count - 1\n    var isAscending = false\n\
    \    if (array[0] + array[array.count - 1]) % 2 == 0 {\n        isAscending =\
    \ true\n    }\n    while i < j {\n        if isAscending {\n            if result[i]\
    \ % 2 == 0 {\n                i += 1\n            } else if result[j] % 2 == 1\
    \ {\n                j -= 1\n            } else {\n                result.swapAt(i,\
    \ j)\n                i += 1\n                j -= 1\n            }\n        }\
    \ else {\n            if result[i] % 2 == 1 {\n                i += 1\n      \
    \      } else if result[j] % 2 == 0 {\n                j -= 1\n            } else\
    \ {\n                result.swapAt(i, j)\n                i += 1\n           \
    \     j -= 1\n            }\n        }\n    }\n    return result", "    var result\
    \ = array\n    var i = 0\n    var j = array.count - 1\n    let isEven = (array[0]\
    \ + array[array.count - 1]) % 2 == 0\n    while i < j {\n        if isEven {\n\
    \            if result[i] % 2 == 0 {\n                i += 1\n            } else\
    \ if result[j] % 2 == 1 {\n                j -= 1\n            } else {\n    \
    \            let temp = result[i]\n                result[i] = result[j]\n   \
    \             result[j] = temp\n                i += 1\n                j -= 1\n\
    \            }\n        } else {\n            if result[i] % 2 == 1 {\n      \
    \          i += 1\n            } else if result[j] % 2 == 0 {\n              \
    \  j -= 1\n            } else {\n                let temp = result[i]\n      \
    \          result[i] = result[j]\n                result[j] = temp\n         \
    \       i += 1\n                j -= 1\n            }\n        }\n    }\n    return\
    \ result", "    var result = array\n    var i = 0\n    var j = array.count - 1\n\
    \    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            result[i]\
    \ = array[j]\n            result[j] = array[i]\n            i += 1\n         \
    \   j -= 1\n        } else {\n            i += 1\n        }\n    }\n    return\
    \ result", "    var oddArray = [Int]()\n    var evenArray = [Int]()\n    var result\
    \ = [Int]()\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n\
    \            evenArray.append(array[i])\n        } else {\n            oddArray.append(array[i])\n\
    \        }\n    }\n    oddArray.sort()\n    evenArray.sort()\n    if array.first!\
    \ + array.last! % 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    var i = 0\n    var\
    \ j = array.count - 1\n    var isOdd = false\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 1 {\n        isOdd = true\n    }\n    while i < j {\n        if\
    \ isOdd {\n            if result[i] % 2 == 0 {\n                i += 1\n     \
    \       }\n            if result[j] % 2 == 1 {\n                j -= 1\n     \
    \       }\n            if result[i] % 2 == 1 && result[j] % 2 == 0 {\n       \
    \         let temp = result[i]\n                result[i] = result[j]\n      \
    \          result[j] = temp\n                i += 1\n                j -= 1\n\
    \            }\n        } else {\n            if result[i] % 2 == 1 {\n      \
    \          i += 1\n            }\n            if result[j] % 2 == 0 {\n      \
    \          j -= 1\n            }\n            if result[i] % 2 == 0 && result[j]\
    \ % 2 == 1 {\n                let temp = result[i]\n                result[i]\
    \ = result[j]\n                result[j] = temp\n                i += 1\n    \
    \            j -= 1\n            }\n        }\n    }\n    return result", "  \
    \  var array = array\n    var odd = [Int]()\n    var even = [Int]()\n    for i\
    \ in 0..<array.count {\n        if i % 2 == 0 {\n            odd.append(array[i])\n\
    \        } else {\n            even.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort(by: >)\n    for i in 0..<array.count {\n        if i % 2 == 0 {\n\
    \            array[i] = odd[i / 2]\n        } else {\n            array[i] = even[i\
    \ / 2]\n        }\n    }\n    return array", "    var result = array\n    var\
    \ i = 0\n    var j = array.count - 1\n    var temp = 0\n    while i < j {\n  \
    \      if array[i] + array[j] % 2 == 0 {\n            temp = array[i]\n      \
    \      array[i] = array[j]\n            array[j] = temp\n        }\n        i\
    \ += 1\n        j -= 1\n    }\n    return result", "    var result = array\n \
    \   var odd = [Int]()\n    var even = [Int]()\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            even.append(array[i])\n        }\
    \ else {\n            odd.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    if array.count % 2 == 0 {\n        for i in 0..<array.count\
    \ {\n            if i % 2 == 0 {\n                result[i] = even[i / 2]\n  \
    \          } else {\n                result[i] = odd[i / 2]\n            }\n \
    \       }\n    } else {\n        for i in 0..<array.count {\n            if i\
    \ % 2 == 0 {\n                result[i] = odd[i / 2]\n            } else {\n \
    \               result[i] = even[i / 2]\n            }\n        }\n    }\n   \
    \ return result", "    var result = array\n    var i = 0\n    var j = array.count\
    \ - 1\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n      \
    \      result[i] = array[j]\n            result[j] = array[i]\n            i +=\
    \ 1\n            j -= 1\n        } else {\n            i += 1\n        }\n   \
    \ }\n    return result", "    var result = array\n    let sum = array[0] + array[array.count\
    \ - 1]\n    if sum % 2 == 0 {\n        result.sort(by: >)\n    } else {\n    \
    \    result.sort(by: <)\n    }\n    return result", "    var odd = [Int]()\n \
    \   var even = [Int]()\n    var result = [Int]()\n    for i in array {\n     \
    \   if i % 2 == 0 {\n            even.append(i)\n        } else {\n          \
    \  odd.append(i)\n        }\n    }\n    odd.sort()\n    even.sort()\n    even\
    \ = even.reversed()\n    for i in 0..<array.count {\n        if array[i] % 2 ==\
    \ 0 {\n            result.append(even[0])\n            even.remove(at: 0)\n  \
    \      } else {\n            result.append(odd[0])\n            odd.remove(at:\
    \ 0)\n        }\n    }\n    return result", "    var odd = [Int]()\n    var even\
    \ = [Int]()\n    var result = [Int]()\n    for i in array {\n        if i % 2\
    \ == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ result = array\n    var start = 0\n    var end = array.count - 1\n    while\
    \ start < end {\n        if array[start] % 2 == 0 && array[end] % 2 == 1 {\n \
    \           result[start] = array[end]\n            result[end] = array[start]\n\
    \            start += 1\n            end -= 1\n        } else if array[start]\
    \ % 2 == 1 && array[end] % 2 == 0 {\n            start += 1\n            end -=\
    \ 1\n        } else if array[start] % 2 == 0 && array[end] % 2 == 0 {\n      \
    \      end -= 1\n        } else {\n            start += 1\n        }\n    }\n\
    \    return result", "    var oddArray = [Int]()\n    var evenArray = [Int]()\n\
    \    var result = [Int]()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            evenArray.append(array[i])\n        } else {\n     \
    \       oddArray.append(array[i])\n        }\n    }\n    oddArray.sort()\n   \
    \ evenArray.sort()\n    if (array[0] + array[array.count - 1]) % 2 == 0 {\n  \
    \      evenArray.reverse()\n    }\n    for i in 0..<array.count {\n        if\
    \ array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n  \
    \      } else {\n            result.append(oddArray.removeFirst())\n        }\n\
    \    }\n    return result", "    var result = array\n    var first = 0\n    var\
    \ last = array.count - 1\n    while first < last {\n        if (array[first] +\
    \ array[last]) % 2 == 0 {\n            result[first] = array[last]\n         \
    \   result[last] = array[first]\n            first += 1\n            last -= 1\n\
    \        } else {\n            first += 1\n        }\n    }\n    return result",
  "    var result = array\n    var i = 0\n    var j = array.count - 1\n    var isOdd\
    \ = false\n    if (array[0] + array[array.count - 1]) % 2 == 1 {\n        isOdd\
    \ = true\n    }\n    while i < j {\n        if isOdd {\n            if array[i]\
    \ % 2 == 0 {\n                i += 1\n            } else if array[j] % 2 == 1\
    \ {\n                j -= 1\n            } else {\n                let temp =\
    \ array[i]\n                result[i] = array[j]\n                result[j] =\
    \ temp\n                i += 1\n                j -= 1\n            }\n      \
    \  } else {\n            if array[i] % 2 == 1 {\n                i += 1\n    \
    \        } else if array[j] % 2 == 0 {\n                j -= 1\n            }\
    \ else {\n                let temp = array[i]\n                result[i] = array[j]\n\
    \                result[j] = temp\n                i += 1\n                j -=\
    \ 1\n            }\n        }\n    }\n    return result", "    var oddArray =\
    \ [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n    for i in\
    \ 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var odd = [Int]()\n    var even = [Int]()\n\
    \    var result = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n   \
    \         even.append(i)\n        } else {\n            odd.append(i)\n      \
    \  }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n   \
    \ for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ result = array\n    var odd = [Int]()\n    var even = [Int]()\n    for i in\
    \ 0..<array.count {\n        if array[i] % 2 == 0 {\n            even.append(array[i])\n\
    \        } else {\n            odd.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    for i in 0..<array.count {\n        if array[i] % 2 == 0\
    \ {\n            result[i] = even.removeFirst()\n        } else {\n          \
    \  result[i] = odd.removeFirst()\n        }\n    }\n    return result", "    var\
    \ newArray = array\n    var oddArray = [Int]()\n    var evenArray = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort(by: >)\n    evenArray.sort(by: <)\n    var index = 0\n    for\
    \ i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            newArray[i]\
    \ = evenArray[index]\n            index += 1\n        } else {\n            newArray[i]\
    \ = oddArray[index]\n            index += 1\n        }\n    }\n    return newArray",
  "    var odd = [Int]()\n    var even = [Int]()\n    var result = [Int]()\n    for\
    \ i in array {\n        if i % 2 == 0 {\n            even.append(i)\n        }\
    \ else {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n    even.sort()\n\
    \    even = even.reversed()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            result.append(even[0])\n            even.remove(at:\
    \ 0)\n        } else {\n            result.append(odd[0])\n            odd.remove(at:\
    \ 0)\n        }\n    }\n    return result", "    var oddArray = [Int]()\n    var\
    \ evenArray = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.count % 2 == 0 {\n   \
    \     evenArray.reverse()\n    } else {\n        oddArray.reverse()\n    }\n \
    \   for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var array = array\n    var i = 0\n    var\
    \ j = array.count - 1\n    while i < j {\n        if array[i] % 2 == 0 {\n   \
    \         while i < j && array[j] % 2 == 0 {\n                j -= 1\n       \
    \     }\n            if i < j {\n                array.swapAt(i, j)\n        \
    \    }\n        }\n        i += 1\n    }\n    if array.count % 2 == 0 {\n    \
    \    for i in 0..<array.count/2 {\n            array.swapAt(i, array.count - 1\
    \ - i)\n        }\n    }\n    return array", "    var odd = [Int]()\n    var even\
    \ = [Int]()\n    var result = [Int]()\n    for i in array {\n        if i % 2\
    \ == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ oddArray = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    evenArray.reverse()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    if array.count >\
    \ 1 {\n        let first = array[0]\n        let last = array[array.count - 1]\n\
    \        if (first + last) % 2 == 0 {\n            result.sort(by: >)\n      \
    \  } else {\n            result.sort(by: <)\n        }\n    }\n    return result",
  "    var odd = [Int]()\n    var even = [Int]()\n    var result = [Int]()\n    for\
    \ i in array {\n        if i % 2 == 0 {\n            even.append(i)\n        }\
    \ else {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n    even.sort()\n\
    \    even = even.reversed()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            result.append(even[0])\n            even.remove(at:\
    \ 0)\n        } else {\n            result.append(odd[0])\n            odd.remove(at:\
    \ 0)\n        }\n    }\n    return result", "    var odd = [Int]()\n    var even\
    \ = [Int]()\n    var result = [Int]()\n    for i in array {\n        if i % 2\
    \ == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ result = array\n    var i = 0\n    var j = array.count - 1\n    while i < j\
    \ {\n        if (array[i] + array[j]) % 2 == 0 {\n            result[i] = array[j]\n\
    \            result[j] = array[i]\n            i += 1\n            j -= 1\n  \
    \      } else {\n            i += 1\n        }\n    }\n    return result", " \
    \   var odd = [Int]()\n    var even = [Int]()\n    var result = [Int]()\n    for\
    \ i in array {\n        if i % 2 == 0 {\n            even.append(i)\n        }\
    \ else {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n    even.sort()\n\
    \    even = even.reversed()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            result.append(even[0])\n            even.remove(at:\
    \ 0)\n        } else {\n            result.append(odd[0])\n            odd.remove(at:\
    \ 0)\n        }\n    }\n    return result", "    var result = array\n    var i\
    \ = 0\n    var j = array.count - 1\n    var temp = 0\n    while i < j {\n    \
    \    if (array[i] + array[j]) % 2 == 0 {\n            temp = result[i]\n     \
    \       result[i] = result[j]\n            result[j] = temp\n            i +=\
    \ 1\n            j -= 1\n        } else {\n            i += 1\n        }\n   \
    \ }\n    return result", "    var array = array\n    var i = 0\n    var j = array.count\
    \ - 1\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n      \
    \      let temp = array[i]\n            array[i] = array[j]\n            array[j]\
    \ = temp\n            i += 1\n            j -= 1\n        } else {\n         \
    \   i += 1\n        }\n    }\n    return array", "    var odd = [Int]()\n    var\
    \ even = [Int]()\n    var result = [Int]()\n    for i in array {\n        if i\
    \ % 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ oddArray = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var oddArray = [Int]()\n    var evenArray\
    \ = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count {\n      \
    \  if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n        } else\
    \ {\n            oddArray.append(array[i])\n        }\n    }\n    oddArray.sort()\n\
    \    evenArray.sort()\n    if (array[0] + array[array.count - 1]) % 2 == 0 {\n\
    \        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n        if\
    \ array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n  \
    \      } else {\n            result.append(oddArray.removeFirst())\n        }\n\
    \    }\n    return result", "    var result = array\n    var i = 0\n    var j\
    \ = array.count - 1\n    while i < j {\n        if (array[i] + array[j]) % 2 ==\
    \ 0 {\n            result[i] = array[j]\n            result[j] = array[i]\n  \
    \          i += 1\n            j -= 1\n        } else {\n            i += 1\n\
    \        }\n    }\n    return result", "    var result = array\n    var odd =\
    \ [Int]()\n    var even = [Int]()\n    for i in 0..<array.count {\n        if\
    \ i % 2 == 0 {\n            even.append(array[i])\n        } else {\n        \
    \    odd.append(array[i])\n        }\n    }\n    even.sort()\n    odd.sort(by:\
    \ >)\n    for i in 0..<array.count {\n        if i % 2 == 0 {\n            result[i]\
    \ = even[i / 2]\n        } else {\n            result[i] = odd[i / 2]\n      \
    \  }\n    }\n    return result", "    var result = array\n    var sum = 0\n  \
    \  for i in 0..<array.count {\n        sum += array[i]\n    }\n    if sum % 2\
    \ == 0 {\n        result.sort(by: >)\n    } else {\n        result.sort(by: <)\n\
    \    }\n    return result", "    var array = array\n    var start = 0\n    var\
    \ end = array.count - 1\n    while start < end {\n        if (array[start] + array[end])\
    \ % 2 == 0 {\n            let temp = array[start]\n            array[start] =\
    \ array[end]\n            array[end] = temp\n        }\n        start += 1\n \
    \       end -= 1\n    }\n    return array", "    var array = array\n    var i\
    \ = 0\n    var j = array.count - 1\n    while i < j {\n        if (array[i] +\
    \ array[j]) % 2 == 0 {\n            let temp = array[i]\n            array[i]\
    \ = array[j]\n            array[j] = temp\n            i += 1\n            j -=\
    \ 1\n        } else {\n            i += 1\n        }\n    }\n    return array",
  "    var result = array\n    if array.count == 0 {\n        return result\n    }\n\
    \    if array.count == 1 {\n        return result\n    }\n    if array.count ==\
    \ 2 {\n        if (array[0] + array[1]) % 2 == 0 {\n            result[0] = array[1]\n\
    \            result[1] = array[0]\n        }\n        return result\n    }\n \
    \   if (array[0] + array[array.count - 1]) % 2 == 0 {\n        for i in 0..<array.count\
    \ / 2 {\n            result[i] = array[array.count - 1 - i]\n            result[array.count\
    \ - 1 - i] = array[i]\n        }\n    }\n    return result", "    var odd = [Int]()\n\
    \    var even = [Int]()\n    var result = [Int]()\n    for i in array {\n    \
    \    if i % 2 == 0 {\n            even.append(i)\n        } else {\n         \
    \   odd.append(i)\n        }\n    }\n    odd.sort()\n    even.sort()\n    if (array.first!\
    \ + array.last!) % 2 == 0 {\n        even = even.reversed()\n    }\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even.removeFirst())\n\
    \        } else {\n            result.append(odd.removeFirst())\n        }\n \
    \   }\n    return result", "    var odd = [Int]()\n    var even = [Int]()\n  \
    \  var result = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n     \
    \       even.append(i)\n        } else {\n            odd.append(i)\n        }\n\
    \    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ result = array\n    var odd = [Int]()\n    var even = [Int]()\n    for i in\
    \ 0..<array.count {\n        if array[i] % 2 == 0 {\n            even.append(array[i])\n\
    \        } else {\n            odd.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    even = even.reversed()\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result[i] = even.removeFirst()\n\
    \        } else {\n            result[i] = odd.removeFirst()\n        }\n    }\n\
    \    return result", "    var oddArray = [Int]()\n    var evenArray = [Int]()\n\
    \    var result = [Int]()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            evenArray.append(array[i])\n        } else {\n     \
    \       oddArray.append(array[i])\n        }\n    }\n    oddArray.sort()\n   \
    \ evenArray.sort()\n    evenArray.reverse()\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var array = array\n    var i = 0\n    var\
    \ j = array.count - 1\n    while i < j {\n        if (array[i] + array[j]) % 2\
    \ == 0 {\n            let temp = array[i]\n            array[i] = array[j]\n \
    \           array[j] = temp\n            i += 1\n            j -= 1\n        }\
    \ else {\n            i += 1\n        }\n    }\n    return array", "    var oddArray\
    \ = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.count % 2 == 0 {\n   \
    \     evenArray.reverse()\n    } else {\n        oddArray.reverse()\n    }\n \
    \   for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var oddArray = [Int]()\n    var evenArray\
    \ = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count {\n      \
    \  if i % 2 == 0 {\n            oddArray.append(array[i])\n        } else {\n\
    \            evenArray.append(array[i])\n        }\n    }\n    oddArray.sort()\n\
    \    evenArray.sort()\n    for i in 0..<array.count {\n        if i % 2 == 0 {\n\
    \            result.append(oddArray[i/2])\n        } else {\n            result.append(evenArray[i/2])\n\
    \        }\n    }\n    return result", "    var array = array\n    var odd = [Int]()\n\
    \    var even = [Int]()\n    for i in 0..<array.count {\n        if array[i] %\
    \ 2 == 0 {\n            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort(by: >)\n    even.sort(by: <)\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            array[i] = even.removeFirst()\n\
    \        } else {\n            array[i] = odd.removeFirst()\n        }\n    }\n\
    \    return array", "    var result = array\n    var odd = [Int]()\n    var even\
    \ = [Int]()\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n\
    \            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        even = even.reversed()\n    }\n    var j = 0\n   \
    \ var k = 0\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n\
    \            result[i] = even[j]\n            j += 1\n        } else {\n     \
    \       result[i] = odd[k]\n            k += 1\n        }\n    }\n    return result",
  "    var array = array\n    var start = 0\n    var end = array.count - 1\n    var\
    \ temp = 0\n    while start < end {\n        if (array[start] + array[end]) %\
    \ 2 == 0 {\n            temp = array[start]\n            array[start] = array[end]\n\
    \            array[end] = temp\n        }\n        start += 1\n        end -=\
    \ 1\n    }\n    return array", "    var result = array\n    var i = 0\n    var\
    \ j = array.count - 1\n    var odd = true\n    if array.count > 1 {\n        if\
    \ (array[0] + array[array.count - 1]) % 2 == 0 {\n            odd = false\n  \
    \      }\n        while i < j {\n            if odd {\n                if result[i]\
    \ % 2 == 0 {\n                    if result[j] % 2 != 0 {\n                  \
    \      result.swapAt(i, j)\n                        i += 1\n                 \
    \       j -= 1\n                    } else {\n                        j -= 1\n\
    \                    }\n                } else {\n                    i += 1\n\
    \                }\n            } else {\n                if result[i] % 2 !=\
    \ 0 {\n                    if result[j] % 2 == 0 {\n                        result.swapAt(i,\
    \ j)\n                        i += 1\n                        j -= 1\n       \
    \             } else {\n                        j -= 1\n                    }\n\
    \                } else {\n                    i += 1\n                }\n   \
    \         }\n        }\n    }\n    return result", "    var array = array\n  \
    \  var sum = array[0] + array[array.count - 1]\n    if sum % 2 == 0 {\n      \
    \  array.sort(by: >)\n    } else {\n        array.sort(by: <)\n    }\n    return\
    \ array", "    var result = array\n    for i in 0..<result.count {\n        for\
    \ j in i..<result.count {\n            if (i + j) % 2 == 0 {\n               \
    \ if result[i] < result[j] {\n                    let temp = result[i]\n     \
    \               result[i] = result[j]\n                    result[j] = temp\n\
    \                }\n            } else {\n                if result[i] > result[j]\
    \ {\n                    let temp = result[i]\n                    result[i] =\
    \ result[j]\n                    result[j] = temp\n                }\n       \
    \     }\n        }\n    }\n    return result", "    var array = array\n    var\
    \ odd = [Int]()\n    var even = [Int]()\n    for i in 0..<array.count {\n    \
    \    if i % 2 == 0 {\n            even.append(array[i])\n        } else {\n  \
    \          odd.append(array[i])\n        }\n    }\n    even.sort()\n    odd.sort(by:\
    \ >)\n    for i in 0..<array.count {\n        if i % 2 == 0 {\n            array[i]\
    \ = even[i / 2]\n        } else {\n            array[i] = odd[i / 2]\n       \
    \ }\n    }\n    return array", "    var result = array\n    var odd = [Int]()\n\
    \    var even = [Int]()\n    for i in 0..<array.count {\n        if array[i] %\
    \ 2 == 0 {\n            even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    var index = 0\n    for\
    \ i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result[i]\
    \ = even[index]\n            index += 1\n        } else {\n            result[i]\
    \ = odd[index]\n            index += 1\n        }\n    }\n    return result",
  "    var result = array\n    var left = 0\n    var right = array.count - 1\n   \
    \ while left < right {\n        if array[left] % 2 == 0 {\n            if array[right]\
    \ % 2 != 0 {\n                result.swapAt(left, right)\n                left\
    \ += 1\n                right -= 1\n            } else {\n                right\
    \ -= 1\n            }\n        } else {\n            left += 1\n        }\n  \
    \  }\n    if array.count % 2 == 0 {\n        result.sort(by: >)\n    } else {\n\
    \        result.sort(by: <)\n    }\n    return result", "    var oddArray = [Int]()\n\
    \    var evenArray = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.first! + array.last! %\
    \ 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    var start = 0\n \
    \   var end = array.count - 1\n    while start < end {\n        if (array[start]\
    \ + array[end]) % 2 == 0 {\n            result[start] = array[end]\n         \
    \   result[end] = array[start]\n        }\n        start += 1\n        end -=\
    \ 1\n    }\n    return result", "    var array = array\n    var sum = array[0]\
    \ + array[array.count - 1]\n    if sum % 2 == 0 {\n        array.sort(by: >)\n\
    \    } else {\n        array.sort(by: <)\n    }\n    return array", "    var sortedArray\
    \ = array\n    var left = 0\n    var right = array.count - 1\n    while left <\
    \ right {\n        if (array[left] + array[right]) % 2 == 0 {\n            let\
    \ temp = sortedArray[left]\n            sortedArray[left] = sortedArray[right]\n\
    \            sortedArray[right] = temp\n            left += 1\n            right\
    \ -= 1\n        } else {\n            left += 1\n        }\n    }\n    return\
    \ sortedArray", "    var array = array\n    var odd = [Int]()\n    var even =\
    \ [Int]()\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n  \
    \          even.append(array[i])\n        } else {\n            odd.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        even.reverse()\n    }\n    var index = 0\n    for\
    \ i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            array[i]\
    \ = even[index]\n            index += 1\n        }\n    }\n    index = 0\n   \
    \ for i in 0..<array.count {\n        if array[i] % 2 != 0 {\n            array[i]\
    \ = odd[index]\n            index += 1\n        }\n    }\n    return array", " \
    \   var odd = [Int]()\n    var even = [Int]()\n    for i in array {\n        if\
    \ i % 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n\
    \    var result = [Int]()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            result.append(even[0])\n            even.remove(at:\
    \ 0)\n        } else {\n            result.append(odd[0])\n            odd.remove(at:\
    \ 0)\n        }\n    }\n    return result", "    var sortedArray = array\n   \
    \ var leftIndex = 0\n    var rightIndex = array.count - 1\n    while leftIndex\
    \ < rightIndex {\n        if (array[leftIndex] + array[rightIndex]) % 2 == 0 {\n\
    \            sortedArray[leftIndex] = array[rightIndex]\n            sortedArray[rightIndex]\
    \ = array[leftIndex]\n            leftIndex += 1\n            rightIndex -= 1\n\
    \        } else {\n            leftIndex += 1\n        }\n    }\n    return sortedArray",
  "    var result = array\n    var first = 0\n    var last = array.count - 1\n   \
    \ while first < last {\n        if (array[first] + array[last]) % 2 == 0 {\n \
    \           result[first] = array[last]\n            result[last] = array[first]\n\
    \            first += 1\n            last -= 1\n        } else {\n           \
    \ first += 1\n        }\n    }\n    return result", "    var result = array\n\
    \    var odd = [Int]()\n    var even = [Int]()\n    for i in 0..<array.count {\n\
    \        if i % 2 == 0 {\n            even.append(array[i])\n        } else {\n\
    \            odd.append(array[i])\n        }\n    }\n    even.sort()\n    odd.sort()\n\
    \    for i in 0..<array.count {\n        if i % 2 == 0 {\n            result[i]\
    \ = even[i / 2]\n        } else {\n            result[i] = odd[i / 2]\n      \
    \  }\n    }\n    return result", "    var result = array\n    var start = 0\n\
    \    var end = array.count - 1\n    while start < end {\n        if (array[start]\
    \ + array[end]) % 2 == 0 {\n            result[start] = array[end]\n         \
    \   result[end] = array[start]\n        }\n        start += 1\n        end -=\
    \ 1\n    }\n    return result", "    var array = array\n    var oddArray = [Int]()\n\
    \    var evenArray = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    evenArray.reverse()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray[0])\n\
    \            evenArray.removeFirst()\n        } else {\n            result.append(oddArray[0])\n\
    \            oddArray.removeFirst()\n        }\n    }\n    return result", " \
    \   var result = array\n    var start = 0\n    var end = array.count - 1\n   \
    \ while start < end {\n        if (array[start] + array[end]) % 2 == 0 {\n   \
    \         result[start] = array[end]\n            result[end] = array[start]\n\
    \        }\n        start += 1\n        end -= 1\n    }\n    return result", " \
    \   var array = array\n    var i = 0\n    var j = array.count - 1\n    while i\
    \ < j {\n        if array[i] % 2 == 0 {\n            if array[j] % 2 == 1 {\n\
    \                let temp = array[i]\n                array[i] = array[j]\n  \
    \              array[j] = temp\n                i += 1\n                j -= 1\n\
    \            } else {\n                j -= 1\n            }\n        } else {\n\
    \            i += 1\n        }\n    }\n    if (i + j) % 2 == 0 {\n        array[i...].sort(by:\
    \ >)\n    } else {\n        array[i...].sort(by: <)\n    }\n    return array",
  "    var result = array\n    var i = 0\n    var j = array.count - 1\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            result[i]\
    \ = array[j]\n            result[j] = array[i]\n            i += 1\n         \
    \   j -= 1\n        } else if array[i] % 2 == 1 && array[j] % 2 == 0 {\n     \
    \       i += 1\n            j -= 1\n        } else if array[i] % 2 == 0 && array[j]\
    \ % 2 == 0 {\n            j -= 1\n        } else {\n            i += 1\n     \
    \   }\n    }\n    if result[0] % 2 == 0 {\n        result.sort(by: >)\n    } else\
    \ {\n        result.sort(by: <)\n    }\n    return result", "    var array = array\n\
    \    var start = 0\n    var end = array.count - 1\n    var isOdd = false\n   \
    \ if (array[start] + array[end]) % 2 == 1 {\n        isOdd = true\n    }\n   \
    \ while start < end {\n        if isOdd {\n            if array[start] % 2 ==\
    \ 0 {\n                start += 1\n            } else if array[end] % 2 == 1 {\n\
    \                end -= 1\n            } else {\n                array.swapAt(start,\
    \ end)\n                start += 1\n                end -= 1\n            }\n\
    \        } else {\n            if array[start] % 2 == 1 {\n                start\
    \ += 1\n            } else if array[end] % 2 == 0 {\n                end -= 1\n\
    \            } else {\n                array.swapAt(start, end)\n            \
    \    start += 1\n                end -= 1\n            }\n        }\n    }\n \
    \   return array", "    var oddArray = [Int]()\n    var evenArray = [Int]()\n\
    \    var result = [Int]()\n    for num in array {\n        if num % 2 == 0 {\n\
    \            evenArray.append(num)\n        } else {\n            oddArray.append(num)\n\
    \        }\n    }\n    oddArray.sort()\n    evenArray.sort()\n    if array.first!\
    \ + array.last! % 2 == 0 {\n        evenArray.reverse()\n    }\n    for (index,\
    \ num) in array.enumerated() {\n        if num % 2 == 0 {\n            result.append(evenArray[0])\n\
    \            evenArray.removeFirst()\n        } else {\n            result.append(oddArray[0])\n\
    \            oddArray.removeFirst()\n        }\n    }\n    return result", " \
    \   var result = array\n    var start = 0\n    var end = array.count - 1\n   \
    \ while start < end {\n        if array[start] + array[end] % 2 == 0 {\n     \
    \       result[start] = array[end]\n            result[end] = array[start]\n \
    \       }\n        start += 1\n        end -= 1\n    }\n    return result", " \
    \   var oddArray = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.first! + array.last! %\
    \ 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    var left = 0\n  \
    \  var right = array.count - 1\n    while left < right {\n        if array[left]\
    \ % 2 == 0 {\n            while array[right] % 2 == 0 && left < right {\n    \
    \            right -= 1\n            }\n            result.swapAt(left, right)\n\
    \        }\n        left += 1\n    }\n    result.sort(by: { (a, b) -> Bool in\n\
    \        if a % 2 == 0 {\n            return a > b\n        } else {\n       \
    \     return a < b\n        }\n    })\n    return result", "    var newArray =\
    \ array\n    var sum = 0\n    for i in 0..<array.count {\n        sum += array[i]\n\
    \    }\n    if sum % 2 == 0 {\n        newArray.sort(by: >)\n    } else {\n  \
    \      newArray.sort(by: <)\n    }\n    return newArray", "    var oddArray =\
    \ [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n    for i in\
    \ 0..<array.count {\n        if i % 2 == 0 {\n            oddArray.append(array[i])\n\
    \        } else {\n            evenArray.append(array[i])\n        }\n    }\n\
    \    oddArray.sort()\n    evenArray.sort()\n    for i in 0..<array.count {\n \
    \       if i % 2 == 0 {\n            result.append(oddArray[i/2])\n        } else\
    \ {\n            result.append(evenArray[i/2])\n        }\n    }\n    return result",
  "    var sortedArray = array\n    let firstIndex = sortedArray.first!\n    let lastIndex\
    \ = sortedArray.last!\n    let sum = firstIndex + lastIndex\n    if sum % 2 ==\
    \ 0 {\n        sortedArray.sort(by: >)\n    } else {\n        sortedArray.sort(by:\
    \ <)\n    }\n    return sortedArray", "    var result = array\n    if array.count\
    \ > 1 {\n        if (array[0] + array[array.count - 1]) % 2 == 0 {\n         \
    \   result.sort(by: >)\n        } else {\n            result.sort(by: <)\n   \
    \     }\n    }\n    return result", "    var odd = [Int]()\n    var even = [Int]()\n\
    \    for i in array {\n        if i % 2 == 0 {\n            even.append(i)\n \
    \       } else {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n\
    \    even.sort()\n    even = even.reversed()\n    var result = [Int]()\n    for\
    \ i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ newArray = array\n    var sum = 0\n    for i in 0..<array.count {\n        sum\
    \ += array[i]\n    }\n    if sum % 2 == 0 {\n        newArray.sort(by: >)\n  \
    \  } else {\n        newArray.sort(by: <)\n    }\n    return newArray", "    var\
    \ odd = [Int]()\n    var even = [Int]()\n    var result = [Int]()\n    for i in\
    \ array {\n        if i % 2 == 0 {\n            even.append(i)\n        } else\
    \ {\n            odd.append(i)\n        }\n    }\n    odd.sort()\n    even.sort()\n\
    \    even = even.reversed()\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            result.append(even[0])\n            even.remove(at:\
    \ 0)\n        } else {\n            result.append(odd[0])\n            odd.remove(at:\
    \ 0)\n        }\n    }\n    return result", "    var result = array\n    var start\
    \ = 0\n    var end = array.count - 1\n    while start < end {\n        if array[start]\
    \ % 2 == 0 && array[end] % 2 == 1 {\n            result[start] = array[end]\n\
    \            result[end] = array[start]\n            start += 1\n            end\
    \ -= 1\n        } else if array[start] % 2 == 1 && array[end] % 2 == 0 {\n   \
    \         start += 1\n            end -= 1\n        } else if array[start] % 2\
    \ == 0 && array[end] % 2 == 0 {\n            end -= 1\n        } else {\n    \
    \        start += 1\n        }\n    }\n    return result", "    var odd = [Int]()\n\
    \    var even = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n     \
    \       even.append(i)\n        } else {\n            odd.append(i)\n        }\n\
    \    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n    var result\
    \ = [Int]()\n    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n\
    \            result.append(even[0])\n            even.remove(at: 0)\n        }\
    \ else {\n            result.append(odd[0])\n            odd.remove(at: 0)\n \
    \       }\n    }\n    return result", "    var odd = [Int]()\n    var even = [Int]()\n\
    \    var result = [Int]()\n    for i in array {\n        if i % 2 == 0 {\n   \
    \         even.append(i)\n        } else {\n            odd.append(i)\n      \
    \  }\n    }\n    odd.sort()\n    even.sort()\n    even = even.reversed()\n   \
    \ for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(even[0])\n\
    \            even.remove(at: 0)\n        } else {\n            result.append(odd[0])\n\
    \            odd.remove(at: 0)\n        }\n    }\n    return result", "    var\
    \ array = array\n    var oddArray = [Int]()\n    var evenArray = [Int]()\n   \
    \ for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.first! + array.last! %\
    \ 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            array[i] = evenArray.removeFirst()\n\
    \        } else {\n            array[i] = oddArray.removeFirst()\n        }\n\
    \    }\n    return array", "    var oddArray = [Int]()\n    var evenArray = [Int]()\n\
    \    var result = [Int]()\n    for i in 0..<array.count {\n        if i % 2 ==\
    \ 0 {\n            oddArray.append(array[i])\n        } else {\n            evenArray.append(array[i])\n\
    \        }\n    }\n    oddArray.sort()\n    evenArray.sort()\n    for i in 0..<array.count\
    \ {\n        if i % 2 == 0 {\n            result.append(oddArray[i/2])\n     \
    \   } else {\n            result.append(evenArray[i/2])\n        }\n    }\n  \
    \  return result", "    var result = array\n    var i = 0\n    var j = array.count\
    \ - 1\n    var isOdd = false\n    if (array[0] + array[array.count - 1]) % 2 ==\
    \ 1 {\n        isOdd = true\n    }\n    while i < j {\n        if isOdd {\n  \
    \          if result[i] % 2 == 0 {\n                while result[j] % 2 == 0 {\n\
    \                    j -= 1\n                }\n                let temp = result[i]\n\
    \                result[i] = result[j]\n                result[j] = temp\n   \
    \             j -= 1\n            }\n        } else {\n            if result[i]\
    \ % 2 == 1 {\n                while result[j] % 2 == 1 {\n                   \
    \ j -= 1\n                }\n                let temp = result[i]\n          \
    \      result[i] = result[j]\n                result[j] = temp\n             \
    \   j -= 1\n            }\n        }\n        i += 1\n    }\n    if isOdd {\n\
    \        result.sort(by: >)\n    } else {\n        result.sort(by: <)\n    }\n\
    \    return result", "    var array = array\n    var odd = [Int]()\n    var even\
    \ = [Int]()\n    for i in 0..<array.count {\n        if i % 2 == 0 {\n       \
    \     odd.append(array[i])\n        } else {\n            even.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort(by: >)\n    for i in 0..<array.count\
    \ {\n        if i % 2 == 0 {\n            array[i] = odd[i / 2]\n        } else\
    \ {\n            array[i] = even[i / 2]\n        }\n    }\n    return array",
  "    var result = array\n    var i = 0\n    var j = array.count - 1\n    var temp\
    \ = 0\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n      \
    \      temp = result[i]\n            result[i] = result[j]\n            result[j]\
    \ = temp\n            i += 1\n            j -= 1\n        } else {\n         \
    \   i += 1\n        }\n    }\n    return result", "    var result = array\n  \
    \  var start = 0\n    var end = array.count - 1\n    while start < end {\n   \
    \     if (array[start] + array[end]) % 2 == 0 {\n            result[start] = array[end]\n\
    \            result[end] = array[start]\n        }\n        start += 1\n     \
    \   end -= 1\n    }\n    return result", "    var oddArray = [Int]()\n    var\
    \ evenArray = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count\
    \ {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    evenArray.reverse()\n    for i\
    \ in 0..<array.count {\n        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var oddArray = [Int]()\n    var evenArray\
    \ = [Int]()\n    var result = [Int]()\n    for i in 0..<array.count {\n      \
    \  if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n        } else\
    \ {\n            oddArray.append(array[i])\n        }\n    }\n    oddArray.sort(by:\
    \ >)\n    evenArray.sort(by: <)\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            result.append(evenArray.removeFirst())\n        } else\
    \ {\n            result.append(oddArray.removeFirst())\n        }\n    }\n   \
    \ return result", "    var result = array\n    var odd = [Int]()\n    var even\
    \ = [Int]()\n    for i in 0..<array.count {\n        if i % 2 == 0 {\n       \
    \     odd.append(array[i])\n        } else {\n            even.append(array[i])\n\
    \        }\n    }\n    odd.sort()\n    even.sort()\n    for i in 0..<array.count\
    \ {\n        if i % 2 == 0 {\n            result[i] = odd[i / 2]\n        } else\
    \ {\n            result[i] = even[i / 2]\n        }\n    }\n    return result",
  "    var result = array\n    var start = 0\n    var end = array.count - 1\n    while\
    \ start < end {\n        if array[start] % 2 == 0 && array[end] % 2 == 1 {\n \
    \           result[start] = array[end]\n            result[end] = array[start]\n\
    \            start += 1\n            end -= 1\n        } else if array[start]\
    \ % 2 == 1 && array[end] % 2 == 0 {\n            start += 1\n            end -=\
    \ 1\n        } else if array[start] % 2 == 0 && array[end] % 2 == 0 {\n      \
    \      end -= 1\n        } else {\n            start += 1\n        }\n    }\n\
    \    return result", "    var result = array\n    var i = 0\n    var j = result.count\
    \ - 1\n    while i < j {\n        if result[i] % 2 == 0 {\n            while j\
    \ > i {\n                if result[j] % 2 == 1 {\n                    let temp\
    \ = result[i]\n                    result[i] = result[j]\n                   \
    \ result[j] = temp\n                    j -= 1\n                    break\n  \
    \              }\n                j -= 1\n            }\n        }\n        i\
    \ += 1\n    }\n    if result.count % 2 == 1 {\n        for i in 0..<result.count\
    \ / 2 {\n            let temp = result[i]\n            result[i] = result[result.count\
    \ - 1 - i]\n            result[result.count - 1 - i] = temp\n        }\n    }\n\
    \    return result", "    var array = array\n    var oddArray = [Int]()\n    var\
    \ evenArray = [Int]()\n    for i in 0..<array.count {\n        if array[i] % 2\
    \ == 0 {\n            evenArray.append(array[i])\n        } else {\n         \
    \   oddArray.append(array[i])\n        }\n    }\n    oddArray.sort(by: >)\n  \
    \  evenArray.sort(by: <)\n    for i in 0..<array.count {\n        if array[i]\
    \ % 2 == 0 {\n            array[i] = evenArray.removeFirst()\n        } else {\n\
    \            array[i] = oddArray.removeFirst()\n        }\n    }\n    return array",
  "    var result = array\n    var i = 0\n    var j = array.count - 1\n    var isOdd\
    \ = false\n    if (array[0] + array[array.count - 1]) % 2 == 1 {\n        isOdd\
    \ = true\n    }\n    while i < j {\n        if isOdd {\n            if result[i]\
    \ % 2 == 0 {\n                while result[j] % 2 == 0 {\n                   \
    \ j -= 1\n                }\n                let temp = result[i]\n          \
    \      result[i] = result[j]\n                result[j] = temp\n             \
    \   j -= 1\n            }\n        } else {\n            if result[i] % 2 == 1\
    \ {\n                while result[j] % 2 == 1 {\n                    j -= 1\n\
    \                }\n                let temp = result[i]\n                result[i]\
    \ = result[j]\n                result[j] = temp\n                j -= 1\n    \
    \        }\n        }\n        i += 1\n    }\n    if isOdd {\n        result.sort(by:\
    \ >)\n    } else {\n        result.sort(by: <)\n    }\n    return result", " \
    \   var result = array\n    var odd = [Int]()\n    var even = [Int]()\n    for\
    \ i in 0..<array.count {\n        if i % 2 == 0 {\n            odd.append(array[i])\n\
    \        } else {\n            even.append(array[i])\n        }\n    }\n    odd.sort()\n\
    \    even.sort(by: >)\n    for i in 0..<array.count {\n        if i % 2 == 0 {\n\
    \            result[i] = odd[i / 2]\n        } else {\n            result[i] =\
    \ even[i / 2]\n        }\n    }\n    return result", "    var result = array\n\
    \    var start = 0\n    var end = array.count - 1\n    while start < end {\n \
    \       if array[start] % 2 == 0 {\n            if array[end] % 2 != 0 {\n   \
    \             result[start] = array[end]\n                result[end] = array[start]\n\
    \                start += 1\n                end -= 1\n            } else {\n\
    \                end -= 1\n            }\n        } else {\n            start\
    \ += 1\n        }\n    }\n    if result.count % 2 == 0 {\n        result.sort(by:\
    \ >)\n    } else {\n        result.sort(by: <)\n    }\n    return result", " \
    \   var oddArray = [Int]()\n    var evenArray = [Int]()\n    var result = [Int]()\n\
    \    for i in 0..<array.count {\n        if array[i] % 2 == 0 {\n            evenArray.append(array[i])\n\
    \        } else {\n            oddArray.append(array[i])\n        }\n    }\n \
    \   oddArray.sort()\n    evenArray.sort()\n    if array.first! + array.last! %\
    \ 2 == 0 {\n        evenArray.reverse()\n    }\n    for i in 0..<array.count {\n\
    \        if array[i] % 2 == 0 {\n            result.append(evenArray.removeFirst())\n\
    \        } else {\n            result.append(oddArray.removeFirst())\n       \
    \ }\n    }\n    return result", "    var result = array\n    var left = 0\n  \
    \  var right = array.count - 1\n    while left < right {\n        if array[left]\
    \ % 2 == 0 {\n            if array[right] % 2 != 0 {\n                result.swapAt(left,\
    \ right)\n                left += 1\n                right -= 1\n            }\
    \ else {\n                right -= 1\n            }\n        } else {\n      \
    \      left += 1\n        }\n    }\n    if array.count % 2 == 0 {\n        for\
    \ i in 0..<array.count/2 {\n            if array[i] > array[array.count - 1 -\
    \ i] {\n                result.swapAt(i, array.count - 1 - i)\n            }\n\
    \        }\n    } else {\n        for i in 0..<array.count/2 {\n            if\
    \ array[i] < array[array.count - 1 - i] {\n                result.swapAt(i, array.count\
    \ - 1 - i)\n            }\n        }\n    }\n    return result", "    var result\
    \ = array\n    var first = 0\n    var last = array.count - 1\n    var temp = 0\n\
    \    if (first + last) % 2 == 0 {\n        while first < last {\n            if\
    \ result[first] > result[last] {\n                temp = result[first]\n     \
    \           result[first] = result[last]\n                result[last] = temp\n\
    \            }\n            first += 1\n            last -= 1\n        }\n   \
    \ } else {\n        while first < last {\n            if result[first] < result[last]\
    \ {\n                temp = result[first]\n                result[first] = result[last]\n\
    \                result[last] = temp\n            }\n            first += 1\n\
    \            last -= 1\n        }\n    }\n    return result", "    var array =\
    \ array\n    var sum = array[0] + array[array.count - 1]\n    if sum % 2 == 0\
    \ {\n        array.sort(by: >)\n    } else {\n        array.sort(by: <)\n    }\n\
    \    return array", "    var result = array\n    for i in 0..<result.count {\n\
    \        for j in 0..<result.count - 1 {\n            if (i + j) % 2 == 0 {\n\
    \                if result[j] > result[j + 1] {\n                    let temp\
    \ = result[j]\n                    result[j] = result[j + 1]\n               \
    \     result[j + 1] = temp\n                }\n            } else {\n        \
    \        if result[j] < result[j + 1] {\n                    let temp = result[j]\n\
    \                    result[j] = result[j + 1]\n                    result[j +\
    \ 1] = temp\n                }\n            }\n        }\n    }\n    return result",
  "    var array = array\n    var i = 0\n    var j = array.count - 1\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            let\
    \ temp = array[i]\n            array[i] = array[j]\n            array[j] = temp\n\
    \            i += 1\n            j -= 1\n        } else if array[i] % 2 == 1 &&\
    \ array[j] % 2 == 1 {\n            i += 1\n        } else if array[i] % 2 == 0\
    \ && array[j] % 2 == 0 {\n            j -= 1\n        } else {\n            i\
    \ += 1\n            j -= 1\n        }\n    }\n    if array.count % 2 == 1 {\n\
    \        if array[array.count / 2] % 2 == 0 {\n            for i in 0..<array.count\
    \ / 2 {\n                let temp = array[i]\n                array[i] = array[array.count\
    \ - 1 - i]\n                array[array.count - 1 - i] = temp\n            }\n\
    \        }\n    } else {\n        for i in 0..<array.count / 2 {\n           \
    \ let temp = array[i]\n            array[i] = array[array.count - 1 - i]\n   \
    \         array[array.count - 1 - i] = temp\n        }\n    }\n    return array",
  "    var newArray = array\n    var i = 0\n    while i < newArray.count {\n     \
    \   var j = i + 1\n        while j < newArray.count {\n            if (newArray[i]\
    \ + newArray[newArray.count - 1]) % 2 == 0 {\n                if newArray[i] <\
    \ newArray[j] {\n                    let temp = newArray[i]\n                \
    \    newArray[i] = newArray[j]\n                    newArray[j] = temp\n     \
    \           }\n            } else {\n                if newArray[i] > newArray[j]\
    \ {\n                    let temp = newArray[i]\n                    newArray[i]\
    \ = newArray[j]\n                    newArray[j] = temp\n                }\n \
    \           }\n            j += 1\n        }\n        i += 1\n    }\n    return\
    \ newArray", "    var array = array\n    var i = 0\n    var j = array.count -\
    \ 1\n    let sum = array[i] + array[j]\n    while i < j {\n        if sum % 2\
    \ == 0 {\n            if array[i] > array[j] {\n                array.swapAt(i,\
    \ j)\n            }\n            i += 1\n        } else {\n            if array[i]\
    \ < array[j] {\n                array.swapAt(i, j)\n            }\n          \
    \  j -= 1\n        }\n    }\n    return array", "    var result = array\n    var\
    \ i = 0\n    var j = array.count - 1\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            result[i] = array[j]\n            result[j]\
    \ = array[i]\n            i += 1\n            j -= 1\n        } else {\n     \
    \       i += 1\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

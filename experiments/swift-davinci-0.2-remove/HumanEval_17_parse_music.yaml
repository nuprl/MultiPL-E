name: HumanEval_17_parse_music
language: swift
prompt: "\n/// Input to this function is a string representing musical notes in a\
  \ special ASCII format.\n/// Your task is to parse this string and return list of\
  \ integers corresponding to how many beats does each\n/// not last.\n/// Here is\
  \ a legend:\n/// 'o' - whole note, lasts four beats\n/// 'o|' - half note, lasts\
  \ two beats\n/// '.|' - quater note, lasts one beat\nfunc parse_music(music_string:\
  \ String) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(parse_music(music_string: \"\") == [] as\
  \ [Int])\nassert(parse_music(music_string: \"o o o o\") == [4, 4, 4, 4])\nassert(parse_music(music_string:\
  \ \".| .| .| .|\") == [1, 1, 1, 1])\nassert(parse_music(music_string: \"o| o| .|\
  \ .| o o o o\") == [2, 2, 1, 1, 4, 4, 4, 4])\nassert(parse_music(music_string: \"\
  o| .| o| .| o o| o o|\") == [2, 1, 2, 1, 4, 2, 4, 2])"
completions: ["    let notes = music_string.split(separator: \"|\")\n    var result\
    \ = [Int]()\n    for note in notes {\n        switch note {\n        case \"o\"\
    :\n            result.append(4)\n        case \"o\":\n            result.append(2)\n\
    \        case \".\":\n            result.append(1)\n        default:\n       \
    \     result.append(0)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var current_beat = 0\n    for char in music_string {\n      \
    \  switch char {\n        case \"o\":\n            result.append(current_beat)\n\
    \            current_beat = 0\n        case \"|\":\n            current_beat +=\
    \ 1\n        default:\n            continue\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var current_beat = 0\n    for char in music_string\
    \ {\n        switch char {\n        case \"o\":\n            current_beat += 4\n\
    \        case \"|\":\n            result.append(current_beat)\n            current_beat\
    \ = 0\n        case \".\":\n            current_beat += 1\n        default:\n\
    \            break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music_string = music_string\n    while music_string.count > 0 {\n   \
    \     let index = music_string.index(of: \"|\") ?? music_string.endIndex\n   \
    \     let substring = music_string[..<index]\n        if substring.contains(\"\
    o\") {\n            result.append(4)\n        } else if substring.contains(\"\
    .\") {\n            result.append(1)\n        } else {\n            result.append(2)\n\
    \        }\n        music_string = String(music_string[index...])\n        if\
    \ music_string.count > 0 {\n            music_string = String(music_string[music_string.index(after:\
    \ music_string.startIndex)...])\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var current_char = \"\"\n    var current_count = 0\n \
    \   for char in music_string {\n        if char == \"|\" {\n            if current_char\
    \ == \"o\" {\n                result.append(4)\n            } else if current_char\
    \ == \".\" {\n                result.append(1)\n            }\n            current_char\
    \ = \"\"\n        } else {\n            current_char += String(char)\n       \
    \ }\n    }\n    return result", "    var result = [Int]()\n    var music = music_string.components(separatedBy:\
    \ \" \")\n    for note in music {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var current_beat = 0\n    for char in music_string {\n        switch char\
    \ {\n        case \"o\":\n            result.append(current_beat)\n          \
    \  current_beat = 0\n        case \"|\":\n            current_beat += 1\n    \
    \    default:\n            break\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var current_note = \"\"\n    for char in music_string\
    \ {\n        if char == \"|\" {\n            switch current_note {\n         \
    \   case \"o\":\n                result.append(4)\n            case \"o|\":\n\
    \                result.append(2)\n            case \".|\":\n                result.append(1)\n\
    \            default:\n                break\n            }\n            current_note\
    \ = \"\"\n        } else {\n            current_note += String(char)\n       \
    \ }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    var current_beat = 0\n    for char in music_string\
    \ {\n        if char == \"o\" {\n            current_beat += 4\n        } else\
    \ if char == \"|\" {\n            result.append(current_beat)\n            current_beat\
    \ = 0\n        }\n    }\n    return result", "    let beats = [4, 2, 1]\n    var\
    \ result: [Int] = []\n    var i = 0\n    for char in music_string {\n        if\
    \ char == \"|\" {\n            result.append(beats[i])\n            i += 1\n \
    \       }\n    }\n    return result", "    let notes = music_string.characters.split(separator:\
    \ \" \").map(String.init)\n    var beats = [Int]()\n    for note in notes {\n\
    \        switch note {\n        case \"o\":\n            beats.append(4)\n   \
    \     case \"o|\":\n            beats.append(2)\n        case \".|\":\n      \
    \      beats.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return beats", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        if note == \"o\" {\n            result.append(4)\n        }\
    \ else if note == \"o|\" {\n            result.append(2)\n        } else if note\
    \ == \".|\" {\n            result.append(1)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var music = music_string.characters.split(\" \").map(String.init)\n\
    \    for note in music {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    let notes = music_string.characters.split(separator: \" \").map(String.init)\n\
    \    var result = [Int]()\n    for note in notes {\n        switch note {\n  \
    \      case \"o\":\n            result.append(4)\n        case \"o|\":\n     \
    \       result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result: [Int] = []\n    var music_string = music_string\n\
    \    while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\")\
    \ {\n            result.append(4)\n            music_string.removeFirst()\n  \
    \      } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    let notes = music_string.components(separatedBy: \"\
    \ \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var current_beat = 0\n    for char in music_string\
    \ {\n        if char == \"o\" {\n            result.append(4 - current_beat)\n\
    \            current_beat = 0\n        } else if char == \"|\" {\n           \
    \ current_beat += 1\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music = music_string.characters.split{$0 == \" \"}.map(String.init)\n\
    \    for note in music {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    let beats: [Character: Int] = [\"o\": 4, \"|\": 2, \".\": 1]\n\
    \    var result: [Int] = []\n    var current_beat: Int = 0\n    for char in music_string\
    \ {\n        if let beat = beats[char] {\n            current_beat += beat\n \
    \       } else {\n            result.append(current_beat)\n            current_beat\
    \ = 0\n        }\n    }\n    result.append(current_beat)\n    return result",
  "    var result = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    let notes = music_string.characters.split(separator:\
    \ \"|\").map(String.init)\n    var beats = [Int]()\n    for note in notes {\n\
    \        if note == \"o\" {\n            beats.append(4)\n        } else if note\
    \ == \"o\" {\n            beats.append(2)\n        } else if note == \".\" {\n\
    \            beats.append(1)\n        }\n    }\n    return beats", "    var result\
    \ = [Int]()\n    var music_string = music_string\n    while music_string.characters.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var current_beat\
    \ = 0\n    for char in music_string {\n        if char == \"o\" {\n          \
    \  result.append(4)\n            current_beat += 4\n        } else if char ==\
    \ \"|\" {\n            result.append(current_beat)\n            current_beat =\
    \ 0\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result: [Int] = []\n    let music_string_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_string_array {\n        if note == \"o\" {\n \
    \           result.append(4)\n        } else if note == \"o|\" {\n           \
    \ result.append(2)\n        } else if note == \".|\" {\n            result.append(1)\n\
    \        }\n    }\n    return result", "    let beats = [4, 2, 1]\n    var result\
    \ = [Int]()\n    var i = 0\n    while i < music_string.count {\n        let char\
    \ = music_string[i]\n        if char == \"o\" {\n            result.append(beats[0])\n\
    \            i += 1\n        } else if char == \".\" {\n            result.append(beats[2])\n\
    \            i += 2\n        } else if char == \"o\" {\n            result.append(beats[1])\n\
    \            i += 2\n        }\n    }\n    return result", "    var result: [Int]\
    \ = []\n    let notes = music_string.characters.split(separator: \" \").map(String.init)\n\
    \    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var temp = \"\"\n    for char in music_string\
    \ {\n        if char == \"|\" {\n            switch temp {\n            case \"\
    o\":\n                result.append(4)\n            case \"o\":\n            \
    \    result.append(2)\n            case \".\":\n                result.append(1)\n\
    \            default:\n                break\n            }\n            temp\
    \ = \"\"\n        } else {\n            temp += String(char)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var music_string = music_string\n\
    \    while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\")\
    \ {\n            result.append(4)\n            music_string.removeFirst()\n  \
    \      } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    let notes = music_string.split(separator:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      result.append(0)\n        }\n    }\n    return result", "    var result:\
    \ [Int] = []\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    var music_string\
    \ = music_string\n    while music_string.count > 0 {\n        let index = music_string.index(music_string.startIndex,\
    \ offsetBy: 1)\n        let first_char = music_string[..<index]\n        switch\
    \ first_char {\n        case \"o\":\n            result.append(4)\n        case\
    \ \"o\":\n            result.append(2)\n        case \".\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n        music_string = String(music_string[index...])\n\
    \    }\n    return result", "    var result = [Int]()\n    var music_string =\
    \ music_string\n    while music_string.characters.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \"|\")\n    var result = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            result.append(4)\n        } else if note == \"o\" {\n \
    \           result.append(2)\n        } else if note == \".\" {\n            result.append(1)\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            result.append(0)\n        }\n    }\n    return\
    \ result", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ result = [Int]()\n    for note in notes {\n        switch note {\n        case\
    \ \"o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let beats = [4, 2, 1]\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    var result =\
    \ [Int]()\n    for note in notes {\n        let index = note.index(note.startIndex,\
    \ offsetBy: 1)\n        let beat = note[index]\n        switch beat {\n      \
    \  case \"o\":\n            result.append(beats[0])\n        case \"|\":\n   \
    \         result.append(beats[1])\n        case \".\":\n            result.append(beats[2])\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var current_note = \"\"\n    for char in music_string\
    \ {\n        if char == \"|\" {\n            switch current_note {\n         \
    \   case \"o\":\n                result.append(4)\n            case \"o|\":\n\
    \                result.append(2)\n            case \".|\":\n                result.append(1)\n\
    \            default:\n                break\n            }\n            current_note\
    \ = \"\"\n        } else {\n            current_note += String(char)\n       \
    \ }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    let notes = music_string.characters.split(separator:\
    \ \" \").map(String.init)\n    return notes.map {\n        switch $0 {\n     \
    \   case \"o\":\n            return 4\n        case \"o|\":\n            return\
    \ 2\n        case \".|\":\n            return 1\n        default:\n          \
    \  return 0\n        }\n    }", "    var result: [Int] = []\n    let music_string_array\
    \ = music_string.components(separatedBy: \" \")\n    for note in music_string_array\
    \ {\n        if note == \"o\" {\n            result.append(4)\n        } else\
    \ if note == \"o|\" {\n            result.append(2)\n        } else if note ==\
    \ \".|\" {\n            result.append(1)\n        }\n    }\n    return result",
  "    let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var result = [Int]()\n   \
    \ var music = music_string.characters.split{$0 == \" \"}.map(String.init)\n  \
    \  for note in music {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.characters.split { $0 == \" \" }.map(String.init)\n\
    \    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var music = music_string.components(separatedBy:\
    \ \"|\")\n    for note in music {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var current_beat = 0\n    for char in\
    \ music_string {\n        switch char {\n        case \"o\":\n            result.append(current_beat)\n\
    \            current_beat = 0\n        case \"|\":\n            current_beat +=\
    \ 1\n        default:\n            break\n        }\n    }\n    return result",
  "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var music_string = music_string\n  \
    \  while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\") {\n\
    \            result.append(4)\n            music_string.removeFirst()\n      \
    \  } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var note = \"\"\n    for char\
    \ in music_string {\n        note += String(char)\n        if note == \"o\" {\n\
    \            result.append(4)\n            note = \"\"\n        } else if note\
    \ == \"o|\" {\n            result.append(2)\n            note = \"\"\n       \
    \ } else if note == \".|\" {\n            result.append(1)\n            note =\
    \ \"\"\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ current_beat = 0\n    for char in music_string {\n        if char == \"o\" {\n\
    \            result.append(4 - current_beat)\n            current_beat = 0\n \
    \       } else if char == \"|\" {\n            current_beat += 1\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \"|\")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o\" {\n  \
    \          beats.append(2)\n        } else if note == \".\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result = [Int]()\n    let music_array\
    \ = music_string.components(separatedBy: \" \")\n    for note in music_array {\n\
    \        switch note {\n        case \"o\":\n            result.append(4)\n  \
    \      case \"o|\":\n            result.append(2)\n        case \".|\":\n    \
    \        result.append(1)\n        default:\n            result.append(0)\n  \
    \      }\n    }\n    return result", "    var result = [Int]()\n    var current_beat\
    \ = 0\n    for char in music_string {\n        if char == \"o\" {\n          \
    \  result.append(4)\n            current_beat += 4\n        } else if char ==\
    \ \"|\" {\n            result.append(current_beat)\n            current_beat =\
    \ 0\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ music_string = music_string\n    while music_string.count > 0 {\n        if\
    \ music_string.hasPrefix(\"o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    let notes = music_string.components(separatedBy: \"\
    \ \")\n    var beats = [Int]()\n    for note in notes {\n        switch note {\n\
    \        case \"o\":\n            beats.append(4)\n        case \"o|\":\n    \
    \        beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    var music = music_string.characters.map { String($0)\
    \ }\n    var current_note = \"\"\n    for note in music {\n        if note ==\
    \ \"|\" {\n            if current_note == \"o\" {\n                result.append(4)\n\
    \            } else if current_note == \"o|\" {\n                result.append(2)\n\
    \            } else if current_note == \".|\" {\n                result.append(1)\n\
    \            }\n            current_note = \"\"\n        } else {\n          \
    \  current_note += note\n        }\n    }\n    return result", "    var result:\
    \ [Int] = []\n    var current_number = 0\n    for char in music_string {\n   \
    \     if char == \"o\" {\n            current_number += 4\n        } else if char\
    \ == \"|\" {\n            result.append(current_number)\n            current_number\
    \ = 0\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ music_string = music_string\n    while music_string.count > 0 {\n        if\
    \ music_string.hasPrefix(\"o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var current_beat = 0\n    for char in\
    \ music_string {\n        if char == \"o\" {\n            current_beat += 4\n\
    \        } else if char == \"o\" {\n            current_beat += 2\n        } else\
    \ if char == \".\" {\n            current_beat += 1\n        } else if char ==\
    \ \"|\" {\n            result.append(current_beat)\n            current_beat =\
    \ 0\n        }\n    }\n    return result", "    var result: [Int] = []\n    let\
    \ notes = music_string.components(separatedBy: \" \")\n    for note in notes {\n\
    \        if note == \"o\" {\n            result.append(4)\n        } else if note\
    \ == \"o|\" {\n            result.append(2)\n        } else if note == \".|\"\
    \ {\n            result.append(1)\n        }\n    }\n    return result", "   \
    \ var result = [Int]()\n    var current_note = \"\"\n    for char in music_string\
    \ {\n        if char == \"|\" {\n            switch current_note {\n         \
    \   case \"o\":\n                result.append(4)\n            case \"o|\":\n\
    \                result.append(2)\n            case \".|\":\n                result.append(1)\n\
    \            default:\n                result.append(0)\n            }\n     \
    \       current_note = \"\"\n        } else {\n            current_note += String(char)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var current_note\
    \ = \"\"\n    for char in music_string {\n        if char == \"|\" {\n       \
    \     switch current_note {\n            case \"o\":\n                result.append(4)\n\
    \            case \"o|\":\n                result.append(2)\n            case\
    \ \".|\":\n                result.append(1)\n            default:\n          \
    \      break\n            }\n            current_note = \"\"\n        } else {\n\
    \            current_note += String(char)\n        }\n    }\n    return result",
  "    let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var result = [Int]()\n   \
    \ var current_beat = 0\n    for char in music_string {\n        if char == \"\
    o\" {\n            result.append(4)\n            current_beat += 4\n        }\
    \ else if char == \"|\" {\n            result.append(current_beat)\n         \
    \   current_beat = 0\n        }\n    }\n    return result", "    var result: [Int]\
    \ = []\n    var music_string = music_string\n    while music_string.count > 0\
    \ {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \"|\")\n    var result = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            result.append(4)\n        } else if note == \"o\" {\n \
    \           result.append(2)\n        } else if note == \".\" {\n            result.append(1)\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \"|\")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o\" {\n  \
    \          beats.append(2)\n        } else if note == \".\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result = [Int]()\n    var music_string\
    \ = music_string\n    while music_string.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    var music_string = music_string\n\
    \    while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\")\
    \ {\n            result.append(4)\n            music_string.removeFirst()\n  \
    \      } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    let note_types = [\"o\", \"o|\", \".|\"]\n    let note_lengths\
    \ = [4, 2, 1]\n    var result = [Int]()\n    for i in 0..<music_string.count {\n\
    \        let index = note_types.index(of: String(music_string[i]))\n        if\
    \ index != nil {\n            result.append(note_lengths[index!])\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var count = 0\n   \
    \ for char in music_string {\n        if char == \"o\" {\n            result.append(4)\n\
    \        } else if char == \"|\" {\n            result[count] = result[count]\
    \ / 2\n            count += 1\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var current_note = \"\"\n    for char in music_string\
    \ {\n        if char == \"|\" {\n            switch current_note {\n         \
    \   case \"o\":\n                result.append(4)\n            case \"o|\":\n\
    \                result.append(2)\n            case \".|\":\n                result.append(1)\n\
    \            default:\n                break\n            }\n            current_note\
    \ = \"\"\n        } else {\n            current_note += String(char)\n       \
    \ }\n    }\n    return result", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    // TODO: Implement this function\n    var result = [Int]()\n \
    \   var music_string = music_string\n    while music_string.count > 0 {\n    \
    \    if music_string.hasPrefix(\"o\") {\n            result.append(4)\n      \
    \      music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \"|\")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o\" {\n  \
    \          beats.append(2)\n        } else if note == \".\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            result.append(4)\n        } else if note == \"o|\" {\n\
    \            result.append(2)\n        } else if note == \".|\" {\n          \
    \  result.append(1)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var current_note = \"\"\n    for char in music_string {\n        if char\
    \ == \"|\" {\n            if current_note == \"o\" {\n                result.append(4)\n\
    \            } else if current_note == \"o|\" {\n                result.append(2)\n\
    \            } else if current_note == \".|\" {\n                result.append(1)\n\
    \            }\n            current_note = \"\"\n        } else {\n          \
    \  current_note += String(char)\n        }\n    }\n    return result", "    let\
    \ notes = music_string.components(separatedBy: \" \")\n    var result = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     result.append(4)\n        case \"o|\":\n            result.append(2)\n \
    \       case \".|\":\n            result.append(1)\n        default:\n       \
    \     result.append(0)\n        }\n    }\n    return result", "    var result:\
    \ [Int] = []\n    for char in music_string {\n        switch char {\n        case\
    \ \"o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var result =\
    \ [Int]()\n    for note in notes {\n        switch note {\n        case \"o\"\
    :\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for char in music_string {\n        switch char {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result: [Int] = []\n\
    \    var current_beat: Int = 0\n    for char in music_string {\n        if char\
    \ == \"o\" {\n            current_beat = 4\n        } else if char == \"|\" {\n\
    \            result.append(current_beat)\n            current_beat = 0\n     \
    \   } else if char == \".\" {\n            current_beat += 1\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var music = music_string.characters.split(\"\
    \ \").map(String.init)\n    for note in music {\n        switch note {\n     \
    \   case \"o\":\n            result.append(4)\n        case \"o|\":\n        \
    \    result.append(2)\n        case \".|\":\n            result.append(1)\n  \
    \      default:\n            break\n        }\n    }\n    return result", "  \
    \  var result = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    let notes = music_string.characters.split(separator:\
    \ \" \").map(String.init)\n    var result = [Int]()\n    for note in notes {\n\
    \        if note == \"o\" {\n            result.append(4)\n        } else if note\
    \ == \"o|\" {\n            result.append(2)\n        } else if note == \".|\"\
    \ {\n            result.append(1)\n        }\n    }\n    return result", "   \
    \ let notes = music_string.components(separatedBy: \"|\")\n    var beats = [Int]()\n\
    \    for note in notes {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o\" {\n            beats.append(2)\n        } else\
    \ if note == \".\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ beats = [Int]()\n    for note in notes {\n        if note == \"o\" {\n     \
    \       beats.append(4)\n        } else if note == \"o|\" {\n            beats.append(2)\n\
    \        } else if note == \".|\" {\n            beats.append(1)\n        }\n\
    \    }\n    return beats", "    var result = [Int]()\n    var current_note = \"\
    \"\n    for char in music_string {\n        if char == \"|\" {\n            switch\
    \ current_note {\n            case \"o\":\n                result.append(4)\n\
    \            case \"o|\":\n                result.append(2)\n            case\
    \ \".|\":\n                result.append(1)\n            default:\n          \
    \      break\n            }\n            current_note = \"\"\n        } else {\n\
    \            current_note += String(char)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var notes = music_string.characters.split{$0 == \"\
    \ \"}.map(String.init)\n    for note in notes {\n        switch note {\n     \
    \   case \"o\":\n            result.append(4)\n        case \"o|\":\n        \
    \    result.append(2)\n        case \".|\":\n            result.append(1)\n  \
    \      default:\n            break\n        }\n    }\n    return result", "  \
    \  var result = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        switch music_string.removeFirst() {\n        case \"o\":\n  \
    \          result.append(4)\n        case \"o\":\n            result.append(2)\n\
    \        case \".\":\n            result.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music_string = music_string\n    while music_string.count > 0 {\n   \
    \     if music_string.hasPrefix(\"o\") {\n            result.append(4)\n     \
    \       music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var note_length\
    \ = 0\n    for char in music_string {\n        if char == \"o\" {\n          \
    \  note_length = 4\n        } else if char == \"|\" {\n            result.append(note_length)\n\
    \            note_length = 0\n        }\n    }\n    return result", "    var result:\
    \ [Int] = []\n    var current_beat = 0\n    for char in music_string {\n     \
    \   if char == \"o\" {\n            current_beat += 4\n        } else if char\
    \ == \"|\" {\n            result.append(current_beat)\n            current_beat\
    \ = 0\n        }\n    }\n    return result", "    let notes = music_string.characters.split(separator:\
    \ \"|\").map(String.init)\n    var beats = [Int]()\n    for note in notes {\n\
    \        if note == \"o\" {\n            beats.append(4)\n        } else if note\
    \ == \"o\" {\n            beats.append(2)\n        } else if note == \".\" {\n\
    \            beats.append(1)\n        }\n    }\n    return beats", "    let notes\
    \ = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n   \
    \ for note in notes {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o|\" {\n            beats.append(2)\n        } else\
    \ if note == \".|\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ result = [Int]()\n    for note in notes {\n        switch note {\n        case\
    \ \"o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \"|\")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o\" {\n  \
    \          beats.append(2)\n        } else if note == \".\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result = [Int]()\n    var beats\
    \ = 0\n    for char in music_string {\n        if char == \"o\" {\n          \
    \  beats += 4\n        } else if char == \"|\" {\n            result.append(beats)\n\
    \            beats = 0\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var current_beat = 0\n    for char in music_string {\n      \
    \  switch char {\n        case \"o\":\n            result.append(current_beat)\n\
    \            current_beat = 0\n        case \"|\":\n            current_beat +=\
    \ 1\n        default:\n            break\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var current_note\
    \ = \"\"\n    for char in music_string {\n        if char == \"|\" {\n       \
    \     if current_note == \"o\" {\n                result.append(4)\n         \
    \   } else if current_note == \"o|\" {\n                result.append(2)\n   \
    \         } else if current_note == \".|\" {\n                result.append(1)\n\
    \            }\n            current_note = \"\"\n        } else {\n          \
    \  current_note += String(char)\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    let notes = music_string.components(separatedBy: \" \"\
    )\n    for note in notes {\n        switch note {\n        case \"o\":\n     \
    \       result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let beats = [4, 2, 1]\n\
    \    var result = [Int]()\n    var i = 0\n    for char in music_string {\n   \
    \     if char == \"o\" {\n            result.append(beats[i])\n        } else\
    \ if char == \"|\" {\n            i += 1\n        }\n    }\n    return result",
  "    let notes = music_string.characters.split(separator: \" \").map(String.init)\n\
    \    var beats = [Int]()\n    for note in notes {\n        if note == \"o\" {\n\
    \            beats.append(4)\n        } else if note == \"o|\" {\n           \
    \ beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    let notes = music_string.characters.split(separator:\
    \ \" \").map(String.init)\n    var result = [Int]()\n    for note in notes {\n\
    \        switch note {\n        case \"o\":\n            result.append(4)\n  \
    \      case \"o|\":\n            result.append(2)\n        case \".|\":\n    \
    \        result.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    var current_beat = 0\n\
    \    for character in music_string {\n        switch character {\n        case\
    \ \"o\":\n            result.append(current_beat)\n            current_beat =\
    \ 0\n        case \"|\":\n            current_beat += 1\n        default:\n  \
    \          break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var note_length = 0\n    for char in music_string {\n        if char == \"\
    o\" {\n            note_length = 4\n        } else if char == \"|\" {\n      \
    \      result.append(note_length)\n            note_length = 0\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    var music_string = music_string\n\
    \    while !music_string.isEmpty {\n        if music_string.hasPrefix(\"o\") {\n\
    \            result.append(4)\n            music_string.removeFirst()\n      \
    \  } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var current_beat = 0\n   \
    \ for char in music_string {\n        if char == \"o\" {\n            current_beat\
    \ += 4\n        } else if char == \"|\" {\n            result.append(current_beat)\n\
    \            current_beat = 0\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var music_string = music_string\n    while music_string.characters.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var i =\
    \ 0\n    while i < music_string.characters.count {\n        let index = music_string.index(music_string.startIndex,\
    \ offsetBy: i)\n        let char = music_string[index]\n        if char == \"\
    o\" {\n            result.append(4)\n            i += 1\n        } else if char\
    \ == \".\" {\n            result.append(1)\n            i += 2\n        } else\
    \ if char == \"|\" {\n            result.append(2)\n            i += 2\n     \
    \   }\n    }\n    return result", "    var result: [Int] = []\n    let notes =\
    \ music_string.components(separatedBy: \" \")\n    for note in notes {\n     \
    \   switch note {\n        case \"o\":\n            result.append(4)\n       \
    \ case \"o|\":\n            result.append(2)\n        case \".|\":\n         \
    \   result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var music = music_string.components(separatedBy:\
    \ \" \")\n    for note in music {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Invalid note\")\n        }\n    }\n    return result", "    var\
    \ result: [Int] = []\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    let beats = [4, 2, 1]\n    var result\
    \ = [Int]()\n    var currentBeat = 0\n    for note in music_string {\n       \
    \ switch note {\n        case \"o\":\n            currentBeat = beats[0]\n   \
    \     case \"o|\":\n            currentBeat = beats[1]\n        case \".|\":\n\
    \            currentBeat = beats[2]\n        default:\n            result.append(currentBeat)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var current_note\
    \ = \"\"\n    for char in music_string {\n        if char == \"|\" {\n       \
    \     switch current_note {\n            case \"o\":\n                result.append(4)\n\
    \            case \"o|\":\n                result.append(2)\n            case\
    \ \".|\":\n                result.append(1)\n            default:\n          \
    \      break\n            }\n            current_note = \"\"\n        } else {\n\
    \            current_note += String(char)\n        }\n    }\n    return result",
  "    let beats: [Character: Int] = [\"o\": 4, \"o|\": 2, \".|\": 1]\n    return\
    \ music_string.characters.map { beats[$0]! }", "    var result: [Int] = []\n \
    \   var music_string = music_string\n    while music_string.count > 0 {\n    \
    \    if music_string.hasPrefix(\"o\") {\n            result.append(4)\n      \
    \      music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var current_beat\
    \ = 0\n    for char in music_string {\n        if char == \"o\" {\n          \
    \  result.append(4)\n            current_beat += 4\n        } else if char ==\
    \ \"|\" {\n            result.append(current_beat)\n            current_beat =\
    \ 0\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \"|\")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o\":\n \
    \           beats.append(2)\n        case \".\":\n            beats.append(1)\n\
    \        default:\n            beats.append(0)\n        }\n    }\n    return beats",
  "    var result = [Int]()\n    var current_note = \"\"\n    for char in music_string\
    \ {\n        if char == \"|\" {\n            switch current_note {\n         \
    \   case \"o\":\n                result.append(4)\n            case \"o|\":\n\
    \                result.append(2)\n            case \".|\":\n                result.append(1)\n\
    \            default:\n                break\n            }\n            current_note\
    \ = \"\"\n        } else {\n            current_note += String(char)\n       \
    \ }\n    }\n    return result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var current_note = \"\"\n    for char\
    \ in music_string {\n        if char == \"|\" {\n            if current_note ==\
    \ \"o\" {\n                result.append(4)\n            } else if current_note\
    \ == \"o|\" {\n                result.append(2)\n            } else if current_note\
    \ == \".|\" {\n                result.append(1)\n            }\n            current_note\
    \ = \"\"\n        } else {\n            current_note += String(char)\n       \
    \ }\n    }\n    return result", "    var result: [Int] = []\n    let notes = music_string.characters.split{$0\
    \ == \" \"}.map(String.init)\n    for note in notes {\n        switch note {\n\
    \        case \"o\":\n            result.append(4)\n        case \"o|\":\n   \
    \         result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result: [Int] = []\n    let music_string_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_string_array {\n        switch note {\n      \
    \  case \"o\":\n            result.append(4)\n        case \"o|\":\n         \
    \   result.append(2)\n        case \".|\":\n            result.append(1)\n   \
    \     default:\n            break\n        }\n    }\n    return result", "   \
    \ let notes = music_string.characters.split(separator: \" \").map(String.init)\n\
    \    var beats = [Int]()\n    for note in notes {\n        if note == \"o\" {\n\
    \            beats.append(4)\n        } else if note == \"o|\" {\n           \
    \ beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result: [Int] = []\n    var music_string\
    \ = music_string\n    while music_string.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var music_array = music_string.characters.split{$0\
    \ == \" \"}.map(String.init)\n    for note in music_array {\n        if note ==\
    \ \"o\" {\n            result.append(4)\n        } else if note == \"o|\" {\n\
    \            result.append(2)\n        } else if note == \".|\" {\n          \
    \  result.append(1)\n        }\n    }\n    return result", "    var result: [Int]\
    \ = []\n    var music_string = music_string\n    while music_string.count > 0\
    \ {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    let music_string_array = music_string.characters.split(separator:\
    \ \" \").map(String.init)\n    for note in music_string_array {\n        if note\
    \ == \"o\" {\n            result.append(4)\n        } else if note == \"o|\" {\n\
    \            result.append(2)\n        } else if note == \".|\" {\n          \
    \  result.append(1)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music_string = music_string\n    while music_string.count > 0 {\n   \
    \     if music_string.hasPrefix(\"o\") {\n            result.append(4)\n     \
    \       music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     if note == \"o\" {\n            result.append(4)\n        } else if note\
    \ == \"o|\" {\n            result.append(2)\n        } else if note == \".|\"\
    \ {\n            result.append(1)\n        }\n    }\n    return result", "   \
    \ var result = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var current_beat\
    \ = 0\n    for char in music_string {\n        switch char {\n        case \"\
    o\":\n            result.append(current_beat)\n            current_beat = 0\n\
    \        case \"|\":\n            current_beat += 1\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var current_note = \"\"\n    for char in music_string {\n        if char\
    \ == \"|\" {\n            if current_note == \"o\" {\n                result.append(4)\n\
    \            } else if current_note == \"o|\" {\n                result.append(2)\n\
    \            } else if current_note == \".|\" {\n                result.append(1)\n\
    \            }\n            current_note = \"\"\n        } else {\n          \
    \  current_note += String(char)\n        }\n    }\n    return result", "    let\
    \ notes = music_string.components(separatedBy: \"|\")\n    var result = [Int]()\n\
    \    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o\" {\n            result.append(2)\n        } else\
    \ if note == \".\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    let music_string_array = music_string.components(separatedBy:\
    \ \"|\")\n    for note in music_string_array {\n        if note == \"o\" {\n \
    \           result.append(4)\n        } else if note == \"o\" {\n            result.append(2)\n\
    \        } else if note == \".\" {\n            result.append(1)\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    var music_string\
    \ = music_string\n    while music_string.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var music_string = music_string\n\
    \    while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\")\
    \ {\n            result.append(4)\n            music_string.removeFirst()\n  \
    \      } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for char in music_string {\n\
    \        switch char {\n        case \"o\":\n            result.append(4)\n  \
    \      case \"o|\":\n            result.append(2)\n        case \".|\":\n    \
    \        result.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    var current_beat = 0\n\
    \    for char in music_string {\n        switch char {\n        case \"o\":\n\
    \            current_beat += 4\n        case \"o|\":\n            current_beat\
    \ += 2\n        case \".|\":\n            current_beat += 1\n        default:\n\
    \            result.append(current_beat)\n            current_beat = 0\n     \
    \   }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \"|\")\n    var result = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            result.append(4)\n        } else if note == \"o\" {\n \
    \           result.append(2)\n        } else if note == \".\" {\n            result.append(1)\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result = [Int]()\n    var music_string\
    \ = music_string\n    while music_string.characters.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            result.append(4)\n        } else if note == \"o|\" {\n\
    \            result.append(2)\n        } else if note == \".|\" {\n          \
    \  result.append(1)\n        }\n    }\n    return result", "    let music = music_string.characters.split(separator:\
    \ \" \").map(String.init)\n    var result = [Int]()\n    for note in music {\n\
    \        switch note {\n        case \"o\":\n            result.append(4)\n  \
    \      case \"o|\":\n            result.append(2)\n        case \".|\":\n    \
    \        result.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    var current_string =\
    \ \"\"\n    for char in music_string {\n        if char == \"|\" {\n         \
    \   if current_string == \"o\" {\n                result.append(4)\n         \
    \   } else if current_string == \"o\" {\n                result.append(2)\n  \
    \          } else if current_string == \".\" {\n                result.append(1)\n\
    \            }\n            current_string = \"\"\n        } else {\n        \
    \    current_string += String(char)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    let music_string_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_string_array {\n        if note == \"o\" {\n \
    \           result.append(4)\n        } else if note == \"o|\" {\n           \
    \ result.append(2)\n        } else if note == \".|\" {\n            result.append(1)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var current_beat\
    \ = 0\n    for char in music_string {\n        switch char {\n        case \"\
    o\":\n            result.append(current_beat)\n            current_beat = 0\n\
    \        case \"|\":\n            current_beat += 1\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            result.append(4)\n        } else if note == \"o|\" {\n\
    \            result.append(2)\n        } else if note == \".|\" {\n          \
    \  result.append(1)\n        }\n    }\n    return result", "    var result: [Int]\
    \ = []\n    var note: String = \"\"\n    for char in music_string {\n        if\
    \ char == \"|\" {\n            switch note {\n            case \"o\":\n      \
    \          result.append(4)\n            case \"o|\":\n                result.append(2)\n\
    \            case \".|\":\n                result.append(1)\n            default:\n\
    \                break\n            }\n            note = \"\"\n        } else\
    \ {\n            note += String(char)\n        }\n    }\n    return result", " \
    \   var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ result = [Int]()\n    for note in notes {\n        if note == \"o\" {\n    \
    \        result.append(4)\n        } else if note == \"o|\" {\n            result.append(2)\n\
    \        } else if note == \".|\" {\n            result.append(1)\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    var current_beat = 0\n    var current_note = \"\"\
    \n    for char in music_string {\n        if char == \" \" {\n            if current_note\
    \ == \"o\" {\n                result.append(4)\n            } else if current_note\
    \ == \"o|\" {\n                result.append(2)\n            } else if current_note\
    \ == \".|\" {\n                result.append(1)\n            }\n            current_note\
    \ = \"\"\n        } else {\n            current_note += String(char)\n       \
    \ }\n    }\n    return result", "    var result = [Int]()\n    var current_beat\
    \ = 0\n    var current_note = \"\"\n    for char in music_string {\n        if\
    \ char == \"|\" {\n            if current_note == \"o\" {\n                result.append(4)\n\
    \            } else if current_note == \"o|\" {\n                result.append(2)\n\
    \            } else if current_note == \".|\" {\n                result.append(1)\n\
    \            }\n            current_note = \"\"\n        } else {\n          \
    \  current_note += String(char)\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var current_beat = 0\n    for character in music_string\
    \ {\n        switch character {\n        case \"o\":\n            result.append(current_beat)\n\
    \            current_beat = 0\n        case \"|\":\n            current_beat +=\
    \ 1\n        default:\n            break\n        }\n    }\n    return result",
  "    var result: [Int] = []\n    for char in music_string {\n        switch char\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            continue\n        }\n    }\n    return result",
  "    var result = [Int]()\n    let music_string_array = music_string.components(separatedBy:\
    \ \"|\")\n    for note in music_string_array {\n        if note == \"o\" {\n \
    \           result.append(4)\n        } else if note == \"o\" {\n            result.append(2)\n\
    \        } else if note == \".|\" {\n            result.append(1)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var beats = 0\n   \
    \ for char in music_string {\n        if char == \"o\" {\n            beats +=\
    \ 4\n        } else if char == \"|\" {\n            result.append(beats)\n   \
    \         beats = 0\n        }\n    }\n    return result", "    var result: [Int]\
    \ = []\n    let notes = music_string.components(separatedBy: \" \")\n    for note\
    \ in notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    var music_string\
    \ = music_string\n    while music_string.characters.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    let notes = music_string.split(separator:\
    \ \" \")\n    var result: [Int] = []\n    for note in notes {\n        switch\
    \ note {\n        case \"o\":\n            result.append(4)\n        case \"o|\"\
    :\n            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            result.append(0)\n        }\n    }\n    return\
    \ result", "    return music_string.components(separatedBy: \" \").map {\n   \
    \     switch $0 {\n        case \"o\":\n            return 4\n        case \"\
    o|\":\n            return 2\n        case \".|\":\n            return 1\n    \
    \    default:\n            return 0\n        }\n    }", "    var result: [Int]\
    \ = []\n    let notes = music_string.components(separatedBy: \" \")\n    for note\
    \ in notes {\n        if note == \"o\" {\n            result.append(4)\n     \
    \   } else if note == \"o|\" {\n            result.append(2)\n        } else if\
    \ note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ beats = [Int]()\n    for note in notes {\n        if note == \"o\" {\n     \
    \       beats.append(4)\n        } else if note == \"o|\" {\n            beats.append(2)\n\
    \        } else if note == \".|\" {\n            beats.append(1)\n        }\n\
    \    }\n    return beats", "    var result = [Int]()\n    var music_string = music_string\n\
    \    while music_string.count > 0 {\n        let index = music_string.index(music_string.startIndex,\
    \ offsetBy: 1)\n        let first_char = music_string[..<index]\n        if first_char\
    \ == \"o\" {\n            result.append(4)\n            music_string = String(music_string[index...])\n\
    \        } else if first_char == \".\" {\n            result.append(1)\n     \
    \       music_string = String(music_string[index...])\n        } else {\n    \
    \        result.append(2)\n            music_string = String(music_string[index...])\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var current_note\
    \ = \"\"\n    for char in music_string {\n        if char == \"|\" {\n       \
    \     switch current_note {\n            case \"o\":\n                result.append(4)\n\
    \            case \"o|\":\n                result.append(2)\n            case\
    \ \".|\":\n                result.append(1)\n            default:\n          \
    \      break\n            }\n            current_note = \"\"\n        } else {\n\
    \            current_note += String(char)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var current_beat = 0\n    for char in music_string\
    \ {\n        if char == \"o\" {\n            result.append(4)\n            current_beat\
    \ += 4\n        } else if char == \"|\" {\n            result.append(current_beat)\n\
    \            current_beat = 0\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var music_string = music_string\n    while !music_string.isEmpty\
    \ {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            result.append(4)\n        } else if note == \"o|\" {\n\
    \            result.append(2)\n        } else if note == \".|\" {\n          \
    \  result.append(1)\n        }\n    }\n    return result", "    var result: [Int]\
    \ = []\n    var music_string = music_string\n    while music_string.characters.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    let notes = music_string.split(separator:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note.contains(\"\
    o\") {\n            beats.append(4)\n        } else if note.contains(\"o|\") {\n\
    \            beats.append(2)\n        } else if note.contains(\".|\") {\n    \
    \        beats.append(1)\n        }\n    }\n    return beats", "    let notes\
    \ = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n   \
    \ for note in notes {\n        switch note {\n        case \"o\":\n          \
    \  beats.append(4)\n        case \"o|\":\n            beats.append(2)\n      \
    \  case \".|\":\n            beats.append(1)\n        default:\n            break\n\
    \        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let beats = music_string.components(separatedBy: \"|\")\n    var result =\
    \ [Int]()\n    for beat in beats {\n        if beat.contains(\"o\") {\n      \
    \      result.append(4)\n        } else {\n            result.append(2)\n    \
    \    }\n    }\n    return result", "    var result = [Int]()\n    var current_beat\
    \ = 0\n    for char in music_string {\n        if char == \"o\" {\n          \
    \  result.append(4)\n            current_beat += 4\n        } else if char ==\
    \ \"|\" {\n            result.append(current_beat)\n            current_beat =\
    \ 0\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ currentBeat = 0\n    for char in music_string {\n        if char == \"o\" {\n\
    \            result.append(4 - currentBeat)\n            currentBeat = 0\n   \
    \     } else if char == \"|\" {\n            currentBeat += 1\n        }\n   \
    \ }\n    return result", "    var result = [Int]()\n    var music_string = music_string\n\
    \    while !music_string.isEmpty {\n        let index = music_string.index(music_string.startIndex,\
    \ offsetBy: 1)\n        let first_char = music_string.substring(to: index)\n \
    \       switch first_char {\n        case \"o\":\n            result.append(4)\n\
    \            music_string = music_string.substring(from: index)\n        case\
    \ \"o|\":\n            result.append(2)\n            music_string = music_string.substring(from:\
    \ index)\n        case \".|\":\n            result.append(1)\n            music_string\
    \ = music_string.substring(from: index)\n        default:\n            music_string\
    \ = music_string.substring(from: index)\n        }\n    }\n    return result",
  "    let notes = music_string.components(separatedBy: \"|\")\n    var beats = [Int]()\n\
    \    for note in notes {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o\" {\n            beats.append(2)\n        } else\
    \ if note == \".\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    let notes = music_string.characters.split(separator: \" \").map(String.init)\n\
    \    return notes.map { note in\n        switch note {\n        case \"o\":\n\
    \            return 4\n        case \"o|\":\n            return 2\n        case\
    \ \".|\":\n            return 1\n        default:\n            return 0\n    \
    \    }\n    }", "    let notes = music_string.components(separatedBy: \" \")\n\
    \    var beats = [Int]()\n    for note in notes {\n        if note == \"o\" {\n\
    \            beats.append(4)\n        } else if note == \"o|\" {\n           \
    \ beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result: [Int] = []\n    var current_note\
    \ = \"\"\n    for char in music_string {\n        if char == \"|\" {\n       \
    \     if current_note == \"o\" {\n                result.append(4)\n         \
    \   } else if current_note == \"o|\" {\n                result.append(2)\n   \
    \         } else if current_note == \".|\" {\n                result.append(1)\n\
    \            }\n            current_note = \"\"\n        } else {\n          \
    \  current_note += String(char)\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var current_beat = 0\n    for char in music_string {\n\
    \        switch char {\n        case \"o\":\n            current_beat += 4\n \
    \       case \"o|\":\n            current_beat += 2\n        case \".|\":\n  \
    \          current_beat += 1\n        default:\n            result.append(current_beat)\n\
    \            current_beat = 0\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    let notes = music_string.components(separatedBy: \"|\"\
    )\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o\" {\n            result.append(2)\n        } else\
    \ if note == \".\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var music_string = music_string\n  \
    \  while music_string.count > 0 {\n        let index = music_string.index(of:\
    \ \"|\") ?? music_string.endIndex\n        let note = music_string[..<index]\n\
    \        if note == \"o\" {\n            result.append(4)\n        } else if note\
    \ == \"o|\" {\n            result.append(2)\n        } else if note == \".|\"\
    \ {\n            result.append(1)\n        }\n        music_string = String(music_string[index...])\n\
    \    }\n    return result", "    var result: [Int] = []\n    var music_string\
    \ = music_string\n    while !music_string.isEmpty {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result"]
stop_tokens:
- "\n}"

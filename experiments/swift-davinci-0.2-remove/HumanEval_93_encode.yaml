name: HumanEval_93_encode
language: swift
prompt: "\n/// Write a function that takes a message, and encodes in such a \n///\
  \ way that it swaps case of all letters, replaces all vowels in \n/// the message\
  \ with the letter that appears 2 places ahead of that \n/// vowel in the english\
  \ alphabet. \n/// Assume only letters. \n/// Examples:\nfunc encode(message: String)\
  \ -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(encode(message: \"TEST\") == \"tgst\")\n\
  assert(encode(message: \"Mudasir\") == \"mWDCSKR\")\nassert(encode(message: \"YES\"\
  ) == \"ygs\")\nassert(encode(message: \"This is a message\") == \"tHKS KS C MGSSCGG\"\
  )\nassert(encode(message: \"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq\
  \ wRkTg\")"
completions: ["    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var encoded\
    \ = \"\"\n    for char in message.characters {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            encoded.append(vowels[(vowels.index(of: String(char).lowercased())!\
    \ + 2) % 5].uppercased())\n        } else {\n            encoded.append(String(char).uppercased())\n\
    \        }\n    }\n    return encoded", "    var encodedMessage = \"\"\n    for\
    \ char in message.characters {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercase)\n\
    \        } else {\n            encodedMessage.append(char.uppercase)\n       \
    \ }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for character\
    \ in message {\n        if let index = alphabet.index(of: character) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.uppercased().index(of: character) {\n\
    \            let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(character)\n        }\n \
    \   }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for letter\
    \ in message {\n        if let index = alphabet.index(of: letter) {\n        \
    \    let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: letter.lowercased()) {\n   \
    \         let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for character\
    \ in message.characters {\n        if character.isUppercase {\n            encodedMessage.append(character.lowercase)\n\
    \        } else {\n            encodedMessage.append(character.uppercase)\n  \
    \      }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isUppercase {\n       \
    \     encodedMessage.append(char.lowercase)\n        } else {\n            encodedMessage.append(char.uppercase)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isUppercase {\n       \
    \     encodedMessage.append(char.lowercased())\n        } else {\n           \
    \ encodedMessage.append(char.uppercased())\n        }\n    }\n    return encodedMessage",
  "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encodedMessage = \"\"\n    for letter in message {\n        if let index\
    \ = alphabet.index(of: letter) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else if let index = alphabet.index(of: letter.lowercased()) {\n         \
    \   let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let vowels2 = \"\
    cdfghjklmnpqrstvwxyz\"\n    var encoded = \"\"\n    for char in message.characters\
    \ {\n        if vowels.contains(String(char)) {\n            encoded.append(vowels2[vowels.index(of:\
    \ String(char))!])\n        } else if vowels2.contains(String(char)) {\n     \
    \       encoded.append(vowels[vowels2.index(of: String(char))!])\n        } else\
    \ {\n            encoded.append(char)\n        }\n    }\n    return encoded",
  "    var encodedMessage = \"\"\n    for letter in message {\n        let letterString\
    \ = String(letter)\n        if letterString.lowercased() == letterString {\n \
    \           encodedMessage += letterString.uppercased()\n        } else {\n  \
    \          encodedMessage += letterString.lowercased()\n        }\n    }\n   \
    \ return encodedMessage", "    let vowels: Set<Character> = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let alphabet: [Character] = [\"a\", \"b\", \"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    ]\n    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)!\n            let newIndex\
    \ = (index + 2) % alphabet.count\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isVowel() {\n            encodedMessage.append(char.nextVowel())\n\
    \        } else if char.isUpper() {\n            encodedMessage.append(char.lowercase())\n\
    \        } else {\n            encodedMessage.append(char.uppercase())\n     \
    \   }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char\
    \ in message {\n        if vowels.contains(char) {\n            let index = alphabet.index(alphabet.startIndex,\
    \ offsetBy: alphabet.firstIndex(of: char)! + 2)\n            encoded.append(alphabet[index])\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encoded = \"\"\n    for char in message {\n        if let index = alphabet.index(of:\
    \ char) {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n   \
    \         encoded.append(alphabet[newIndex])\n        } else if let index = alphabet.index(of:\
    \ char.lowercased()) {\n            let newIndex = alphabet.index(index, offsetBy:\
    \ 2)\n            encoded.append(alphabet[newIndex].uppercased())\n        } else\
    \ {\n            encoded.append(char)\n        }\n    }\n    return encoded",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encoded = \"\"\n    for letter in message {\n        if let index =\
    \ alphabet.firstIndex(of: letter.lowercased()) {\n            if vowels.contains(letter.lowercased())\
    \ {\n                let newIndex = alphabet.index(index, offsetBy: 2)\n     \
    \           encoded.append(alphabet[newIndex])\n            } else {\n       \
    \         encoded.append(letter)\n            }\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encoded = \"\"\n    for char in message {\n        if let index = alphabet.index(of:\
    \ char) {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n   \
    \         encoded.append(alphabet[newIndex])\n        } else if let index = alphabet.index(of:\
    \ char.lowercased()) {\n            let newIndex = alphabet.index(index, offsetBy:\
    \ 2)\n            encoded.append(alphabet[newIndex].uppercased())\n        } else\
    \ {\n            encoded.append(char)\n        }\n    }\n    return encoded",
  "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encoded = \"\"\n    for char in message {\n        if let index = alphabet.firstIndex(of:\
    \ char) {\n            encoded.append(alphabet[alphabet.index(index, offsetBy:\
    \ 2)])\n        } else if let index = alphabet.firstIndex(of: char.lowercased())\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for letter in message {\n        if let index\
    \ = alphabet.index(of: letter) {\n            encodedMessage += String(alphabet[alphabet.index(index,\
    \ offsetBy: 2)])\n        } else if let index = alphabet.index(of: letter.lowercased())\
    \ {\n            encodedMessage += String(alphabet[alphabet.index(index, offsetBy:\
    \ 2)].uppercased())\n        } else {\n            encodedMessage += String(letter)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\
    \"\n    for letter in message {\n        if let index = alphabet.index(of: letter)\
    \ {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n         \
    \   encodedMessage.append(alphabet[newIndex])\n        } else if let index = alphabet.index(of:\
    \ letter.lowercased()) {\n            let newIndex = alphabet.index(index, offsetBy:\
    \ 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n   \
    \     } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage\
    \ = \"\"\n    for char in message {\n        if let index = alphabet.index(of:\
    \ char.lowercased()) {\n            if vowels.contains(char.lowercased()) {\n\
    \                let nextIndex = alphabet.index(index, offsetBy: 2)\n        \
    \        encodedMessage.append(alphabet[nextIndex])\n            } else {\n  \
    \              encodedMessage.append(alphabet[index])\n            }\n       \
    \ }\n    }\n    return encodedMessage", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage\
    \ = \"\"\n    for char in message {\n        if let index = alphabet.index(of:\
    \ char.lowercased()) {\n            if vowels.contains(char.lowercased()) {\n\
    \                encodedMessage.append(alphabet[alphabet.index(index, offsetBy:\
    \ 2)])\n            } else {\n                encodedMessage.append(alphabet[index])\n\
    \            }\n        }\n    }\n    return encodedMessage", "    var encoded\
    \ = \"\"\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for char in\
    \ message.characters {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            let index = vowels.index(of: String(char).lowercased())\n   \
    \         if index == 4 {\n                encoded += vowels[0]\n            }\
    \ else {\n                encoded += vowels[index! + 1]\n            }\n     \
    \   } else {\n            encoded += String(char)\n        }\n    }\n    return\
    \ encoded", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isLetter {\n            if char.isUppercase {\n         \
    \       encodedMessage.append(char.lowercased())\n            } else {\n     \
    \           encodedMessage.append(char.uppercased())\n            }\n        }\
    \ else {\n            encodedMessage.append(char)\n        }\n    }\n    return\
    \ encodedMessage", "    var encodedMessage = \"\"\n    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet: [Character] = [\"a\"\
    , \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)!\n            encodedMessage.append(alphabet[(index\
    \ + 2) % alphabet.count])\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  \
    \  var encodedMessage = \"\"\n    for char in message {\n        if let index\
    \ = alphabet.index(of: char.lowercased()) {\n            if vowels.contains(char.lowercased())\
    \ {\n                let newIndex = alphabet.index(index, offsetBy: 2)\n     \
    \           encodedMessage.append(alphabet[newIndex])\n            } else {\n\
    \                encodedMessage.append(alphabet[index])\n            }\n     \
    \   }\n    }\n    return encodedMessage", "    let vowels: Set<Character> = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet: [Character] = Array(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)!\n            encodedMessage.append(alphabet[(index\
    \ + 2) % alphabet.count])\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    var encoded = \"\"\n    let\
    \ vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for\
    \ character in message.characters {\n        if vowels.contains(String(character).lowercased())\
    \ {\n            let index = alphabet.index(of: String(character).lowercased())\n\
    \            let newIndex = alphabet.index(index!, offsetBy: 2)\n            encoded\
    \ += String(alphabet[newIndex])\n        } else {\n            encoded += String(character)\n\
    \        }\n    }\n    return encoded", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for char\
    \ in message {\n        if let index = alphabet.firstIndex(of: char) {\n     \
    \       encodedMessage += alphabet[alphabet.index(after: index)]\n        } else\
    \ if let index = alphabet.firstIndex(of: char.lowercased()) {\n            encodedMessage\
    \ += alphabet[alphabet.index(after: index)].uppercased()\n        } else {\n \
    \           encodedMessage += String(char)\n        }\n    }\n    return encodedMessage",
  "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)\n            let newIndex\
    \ = alphabet.index(index!, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercase)\n\
    \        } else {\n            encodedMessage.append(char.uppercase)\n       \
    \ }\n    }\n    return encodedMessage", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage\
    \ = \"\"\n    for letter in message {\n        if let index = alphabet.firstIndex(of:\
    \ letter.lowercased()) {\n            let newIndex = (index + 2) % alphabet.count\n\
    \            let newLetter = alphabet[newIndex]\n            encodedMessage +=\
    \ vowels.contains(letter.lowercased()) ? newLetter : newLetter.uppercased()\n\
    \        } else {\n            encodedMessage += String(letter)\n        }\n \
    \   }\n    return encodedMessage", "    var encodedMessage = \"\"\n    let vowels\
    \ = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for char\
    \ in message {\n        if let index = alphabet.index(of: char) {\n          \
    \  let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.uppercased().index(of: char) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for character\
    \ in message {\n        if let index = alphabet.index(of: character) {\n     \
    \       if let vowelIndex = vowels.index(of: character) {\n                let\
    \ newIndex = alphabet.index(vowelIndex, offsetBy: 2)\n                let newCharacter\
    \ = alphabet[newIndex]\n                encodedMessage.append(newCharacter)\n\
    \            } else {\n                let newIndex = alphabet.index(index, offsetBy:\
    \ 1)\n                let newCharacter = alphabet[newIndex]\n                encodedMessage.append(newCharacter)\n\
    \            }\n        } else {\n            encodedMessage.append(character)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\
    \"\n    for char in message {\n        if let index = alphabet.index(of: char)\
    \ {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n         \
    \   encodedMessage.append(alphabet[newIndex])\n        } else if let index = alphabet.index(of:\
    \ char.lowercased()) {\n            let newIndex = alphabet.index(index, offsetBy:\
    \ 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n   \
    \     } else {\n            encodedMessage.append(char)\n        }\n    }\n  \
    \  return encodedMessage", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n\
    \    for char in message {\n        if let index = alphabet.index(of: char.lowercased())\
    \ {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n         \
    \   let newChar = alphabet[newIndex]\n            if vowels.contains(String(newChar))\
    \ {\n                encoded.append(newChar.uppercased())\n            } else\
    \ {\n                encoded.append(newChar)\n            }\n        } else {\n\
    \            encoded.append(char)\n        }\n    }\n    return encoded", "  \
    \  let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet:\
    \ [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var encodedMessage = \"\"\n \
    \   for char in message {\n        if vowels.contains(char) {\n            let\
    \ index = alphabet.firstIndex(of: char)!\n            let newIndex = (index +\
    \ 2) % alphabet.count\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if vowels.contains(char) {\n            let index = alphabet.firstIndex(of:\
    \ char)!\n            let newIndex = alphabet.index(index, offsetBy: 2)\n    \
    \        encoded.append(alphabet[newIndex])\n        } else {\n            encoded.append(char)\n\
    \        }\n    }\n    return encoded", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.index(of: char) {\n            let newIndex\
    \ = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = message.index(of: char)!\n            let nextIndex\
    \ = message.index(after: index)\n            let nextNextIndex = message.index(after:\
    \ nextIndex)\n            encodedMessage.append(message[nextNextIndex])\n    \
    \    } else {\n            encodedMessage.append(char)\n        }\n    }\n   \
    \ return encodedMessage", "    var encodedMessage = \"\"\n    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet: [Character] = [\"a\"\
    , \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)!\n            encodedMessage.append(alphabet[index\
    \ + 2])\n        } else {\n            encodedMessage.append(char)\n        }\n\
    \    }\n    return encodedMessage", "    var encodedMessage = \"\"\n    let vowels\
    \ = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for char\
    \ in message {\n        if vowels.contains(char) {\n            let index = alphabet.index(of:\
    \ char)\n            let newIndex = alphabet.index(index!, offsetBy: 2)\n    \
    \        encodedMessage.append(alphabet[newIndex])\n        } else {\n       \
    \     encodedMessage.append(char)\n        }\n    }\n    return encodedMessage",
  "    var encodedMessage = \"\"\n    for char in message.characters {\n        if\
    \ char.isUppercase {\n            encodedMessage.append(char.lowercased())\n \
    \       } else {\n            encodedMessage.append(char.uppercased())\n     \
    \   }\n    }\n    return encodedMessage", "    let vowels: Set<Character> = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet: [Character] = Array(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    let encoded = message.map { (char) -> Character in\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)!\n            return\
    \ alphabet[(index + 2) % alphabet.count]\n        } else {\n            return\
    \ char\n        }\n    }\n    return String(encoded)", "    var encodedMessage\
    \ = \"\"\n    var vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    for char in message {\n        if vowels.contains(char) {\n            let\
    \ index = vowels.firstIndex(of: char)!\n            if index == 4 {\n        \
    \        encodedMessage.append(vowels[0])\n            } else {\n            \
    \    encodedMessage.append(vowels[index + 2])\n            }\n        } else {\n\
    \            encodedMessage.append(char)\n        }\n    }\n    return encodedMessage",
  "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet:\
    \ [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var encodedMessage = \"\"\n \
    \   for char in message {\n        if vowels.contains(char) {\n            let\
    \ index = alphabet.firstIndex(of: char)!\n            encodedMessage.append(alphabet[(index\
    \ + 2) % alphabet.count])\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\
    \"\n    for char in message {\n        if let index = alphabet.firstIndex(of:\
    \ char) {\n            let newIndex = (index + 2) % alphabet.count\n         \
    \   encodedMessage.append(alphabet[newIndex])\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    var encoded = \"\"\n    for\
    \ char in message.characters {\n        if char.isVowel() {\n            encoded.append(char.nextVowel())\n\
    \        } else if char.isUpperCase() {\n            encoded.append(char.lowercase())\n\
    \        } else {\n            encoded.append(char.uppercase())\n        }\n \
    \   }\n    return encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.index(of: char) {\n            let newIndex\
    \ = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for letter in message {\n        if let index\
    \ = alphabet.index(of: letter) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else if let index = alphabet.index(of: letter.lowercased()) {\n         \
    \   let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    for char in message {\n        if let index = alphabet.index(of: char.lowercased())\
    \ {\n            if vowels.contains(char.lowercased()) {\n                let\
    \ newIndex = alphabet.index(index, offsetBy: 2)\n                encodedMessage.append(alphabet[newIndex])\n\
    \            } else {\n                encodedMessage.append(alphabet[index])\n\
    \            }\n        }\n    }\n    return encodedMessage", "    var encodedMessage\
    \ = \"\"\n    for character in message.characters {\n        if character.isVowel()\
    \ {\n            encodedMessage.append(character.nextVowel())\n        } else\
    \ if character.isUpperCase() {\n            encodedMessage.append(character.lowercase())\n\
    \        } else {\n            encodedMessage.append(character.uppercase())\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isUppercase {\n       \
    \     encodedMessage.append(char.lowercase)\n        } else {\n            encodedMessage.append(char.uppercase)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\
    \"\n    for char in message {\n        if vowels.contains(char) {\n          \
    \  let index = alphabet.firstIndex(of: char)\n            let newIndex = alphabet.index(index!,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else {\n            encodedMessage.append(char)\n        }\n    }\n    return\
    \ encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encoded = \"\"\n    for char in message {\n        if let index = alphabet.index(of:\
    \ char) {\n            encoded.append(alphabet[alphabet.index(index, offsetBy:\
    \ 2)])\n        } else if let index = alphabet.index(of: char.lowercased()) {\n\
    \            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    var encodedMessage = \"\"\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    for char in message.characters {\n        if alphabet.contains(String(char))\
    \ {\n            if char == \"a\" || char == \"A\" {\n                encodedMessage\
    \ += \"c\"\n            } else if char == \"e\" || char == \"E\" {\n         \
    \       encodedMessage += \"g\"\n            } else if char == \"i\" || char ==\
    \ \"I\" {\n                encodedMessage += \"k\"\n            } else if char\
    \ == \"o\" || char == \"O\" {\n                encodedMessage += \"q\"\n     \
    \       } else if char == \"u\" || char == \"U\" {\n                encodedMessage\
    \ += \"y\"\n            } else {\n                encodedMessage += String(char)\n\
    \            }\n        } else {\n            encodedMessage += String(char)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    for letter in message {\n        if let index = alphabet.firstIndex(of:\
    \ letter.lowercased()) {\n            if vowels.contains(letter.lowercased())\
    \ {\n                let newIndex = alphabet.index(index, offsetBy: 2)\n     \
    \           encodedMessage.append(alphabet[newIndex])\n            } else {\n\
    \                encodedMessage.append(letter)\n            }\n        }\n   \
    \ }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for char\
    \ in message {\n        if let index = alphabet.firstIndex(of: char) {\n     \
    \       encodedMessage += alphabet[alphabet.index(index, offsetBy: 2)]\n     \
    \   } else if let index = alphabet.firstIndex(of: char.lowercased()) {\n     \
    \       encodedMessage += alphabet[alphabet.index(index, offsetBy: 2)].uppercased()\n\
    \        } else {\n            encodedMessage += String(char)\n        }\n   \
    \ }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.firstIndex(of: char) {\n            if alphabet.contains(char)\
    \ {\n                encoded.append(alphabet[alphabet.index(index, offsetBy: 2)])\n\
    \            }\n        } else if let index = alphabet.firstIndex(of: char.lowercased())\
    \ {\n            if alphabet.contains(char.lowercased()) {\n                encoded.append(alphabet[alphabet.index(index,\
    \ offsetBy: 2)].uppercased())\n            }\n        } else {\n            encoded.append(char)\n\
    \        }\n    }\n    return encoded", "    var encodedMessage = \"\"\n    for\
    \ char in message.characters {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercase)\n\
    \        } else {\n            encodedMessage.append(char.uppercase)\n       \
    \ }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n    for\
    \ char in message.characters {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercase)\n\
    \        } else {\n            encodedMessage.append(char.uppercase)\n       \
    \ }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    let alphabetUpper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)\n            let newIndex\
    \ = alphabet.index(index!, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if alphabetUpper.contains(char) {\n            let index = alphabetUpper.firstIndex(of:\
    \ char)\n            let newIndex = alphabetUpper.index(index!, offsetBy: 2)\n\
    \            encodedMessage.append(alphabetUpper[newIndex])\n        } else {\n\
    \            encodedMessage.append(char)\n        }\n    }\n    return encodedMessage",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for character in message {\n        if vowels.contains(String(character).lowercased())\
    \ {\n            let index = alphabet.index(of: character)\n            let nextIndex\
    \ = alphabet.index(index!, offsetBy: 2)\n            encodedMessage += String(alphabet[nextIndex])\n\
    \        } else {\n            encodedMessage += String(character)\n        }\n\
    \    }\n    return encodedMessage", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var encoded = \"\"\n    for letter in message {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            encoded += String(letter).uppercased()\n        } else {\n  \
    \          encoded += String(letter).lowercased()\n        }\n    }\n    return\
    \ encoded", "    var encoded = \"\"\n    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    for char in message {\n        if let\
    \ index = alphabet.firstIndex(of: char) {\n            if vowels.contains(char)\
    \ {\n                let nextIndex = alphabet.index(index, offsetBy: 2)\n    \
    \            encoded.append(alphabet[nextIndex])\n            } else {\n     \
    \           encoded.append(char)\n            }\n        } else {\n          \
    \  encoded.append(char)\n        }\n    }\n    return encoded", "    var encoded\
    \ = \"\"\n    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    for char in message {\n        if let index = alphabet.firstIndex(of: char)\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)])\n\
    \        } else if let index = alphabet.firstIndex(of: char.lowercased()) {\n\
    \            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    var encodedMessage = \"\"\n    for character in message.characters\
    \ {\n        if character.isLetter {\n            let ascii = character.asciiValue!\n\
    \            let newAscii = ascii + 2\n            let newCharacter = Character(UnicodeScalar(newAscii))\n\
    \            encodedMessage.append(newCharacter)\n        }\n    }\n    return\
    \ encodedMessage", "    var encoded = \"\"\n    for char in message.characters\
    \ {\n        if char.isLetter {\n            if char.isUpper {\n             \
    \   encoded.append(char.lowercased())\n            } else {\n                encoded.append(char.uppercased())\n\
    \            }\n        } else {\n            encoded.append(char)\n        }\n\
    \    }\n    return encoded", "    var encoded = \"\"\n    for char in message.characters\
    \ {\n        if char.isUppercase {\n            encoded.append(char.lowercase)\n\
    \        } else {\n            encoded.append(char.uppercase)\n        }\n   \
    \     if char == \"a\" {\n            encoded.append(\"c\")\n        } else if\
    \ char == \"e\" {\n            encoded.append(\"g\")\n        } else if char ==\
    \ \"i\" {\n            encoded.append(\"k\")\n        } else if char == \"o\"\
    \ {\n            encoded.append(\"q\")\n        } else if char == \"u\" {\n  \
    \          encoded.append(\"y\")\n        }\n    }\n    return encoded", "   \
    \ let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encodedMessage = \"\"\n    for char in message {\n        if let index\
    \ = alphabet.index(of: char) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else if let index = alphabet.index(of: char.lowercased()) {\n           \
    \ let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var encodedMessage = \"\"\n    for letter in message {\n        if let\
    \ index = vowels.index(of: String(letter).lowercased()) {\n            encodedMessage\
    \ += vowels[(index + 2) % vowels.count]\n        } else {\n            encodedMessage\
    \ += String(letter)\n        }\n    }\n    return encodedMessage", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for letter in message {\n        if let index\
    \ = alphabet.index(of: letter.lowercased()) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            if vowels.contains(letter.lowercased()) {\n      \
    \          encodedMessage.append(alphabet[newIndex])\n            } else {\n \
    \               encodedMessage.append(alphabet[newIndex].uppercased())\n     \
    \       }\n        }\n    }\n    return encodedMessage", "    let vowels = \"\
    aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded =\
    \ \"\"\n    for char in message {\n        if let index = alphabet.firstIndex(of:\
    \ char) {\n            encoded.append(alphabet[alphabet.index(index, offsetBy:\
    \ 2)])\n        } else if let index = alphabet.firstIndex(of: char.lowercased())\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    var encoded = \"\"\n    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    for char in message {\n        if let\
    \ index = alphabet.index(of: char) {\n            if let vowelIndex = vowels.index(of:\
    \ char) {\n                let newIndex = alphabet.index(vowelIndex, offsetBy:\
    \ 2)\n                encoded.append(alphabet[newIndex])\n            } else {\n\
    \                encoded.append(alphabet[index])\n            }\n        } else\
    \ {\n            encoded.append(char)\n        }\n    }\n    return encoded",
  "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encodedMessage = \"\"\n    for letter in message {\n        if let index\
    \ = alphabet.index(of: letter) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else if let index = alphabet.index(of: letter.lowercased()) {\n         \
    \   let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels: [Character] = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let alphabet: [Character] = [\"a\", \"b\", \"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    ]\n    var encodedMessage = \"\"\n    for letter in message {\n        if vowels.contains(letter)\
    \ {\n            let index = alphabet.firstIndex(of: letter)!\n            let\
    \ newIndex = index + 2\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for letter in\
    \ message {\n        if let index = alphabet.index(of: letter) {\n           \
    \ let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: letter.lowercased()) {\n   \
    \         let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for letter in\
    \ message {\n        if let index = alphabet.index(of: letter) {\n           \
    \ let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: letter.lowercased()) {\n   \
    \         let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for character\
    \ in message.characters {\n        if character.isLetter {\n            if character.isUppercase\
    \ {\n                encodedMessage.append(character.lowercased())\n         \
    \   } else {\n                encodedMessage.append(character.uppercased())\n\
    \            }\n        } else {\n            encodedMessage.append(character)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isLetter {\n          \
    \  if char.isUppercase {\n                encodedMessage.append(char.lowercased())\n\
    \            } else {\n                encodedMessage.append(char.uppercased())\n\
    \            }\n        } else {\n            encodedMessage.append(char)\n  \
    \      }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        let ascii = char.unicodeScalars.first!.value\n\
    \        if ascii >= 65 && ascii <= 90 {\n            encodedMessage.append(Character(UnicodeScalar(ascii\
    \ + 32)!))\n        } else if ascii >= 97 && ascii <= 122 {\n            encodedMessage.append(Character(UnicodeScalar(ascii\
    \ - 32)!))\n        } else {\n            encodedMessage.append(char)\n      \
    \  }\n    }\n    return encodedMessage", "    let vowels: [Character] = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let alphabet: [Character] = [\"a\", \"b\",\
    \ \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var encodedMessage = \"\"\n    for char in message {\n  \
    \      if vowels.contains(char) {\n            let index = alphabet.firstIndex(of:\
    \ char)!\n            let newIndex = index + 2\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let letters = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message.lowercased()\
    \ {\n        if let index = letters.index(of: char) {\n            let newIndex\
    \ = (index + 2) % letters.count\n            encoded.append(letters[newIndex])\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let letters = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encoded = \"\"\n    for char in message.characters {\n        if let\
    \ index = letters.characters.index(of: char) {\n            let newIndex = (index.encodedOffset\
    \ + 2) % letters.characters.count\n            encoded.append(letters[letters.index(letters.startIndex,\
    \ offsetBy: newIndex)])\n        } else {\n            encoded.append(char)\n\
    \        }\n    }\n    return encoded", "    var encodedMessage = \"\"\n    for\
    \ char in message.characters {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercase)\n\
    \        } else {\n            encodedMessage.append(char.uppercase)\n       \
    \ }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for char\
    \ in message.characters {\n        if vowels.containsString(String(char)) {\n\
    \            let index = vowels.characters.indexOf(char)\n            encodedMessage.append(vowels[vowels.startIndex.advancedBy(index!\
    \ + 2)])\n        } else if letters.containsString(String(char)) {\n         \
    \   let index = letters.characters.indexOf(char)\n            encodedMessage.append(letters[letters.startIndex.advancedBy(index!\
    \ + 2)])\n        } else {\n            encodedMessage.append(char)\n        }\n\
    \    }\n    return encodedMessage", "    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    var encodedMessage = \"\"\n    for char in message\
    \ {\n        if vowels.contains(char) {\n            let index = vowels.firstIndex(of:\
    \ char)!\n            let newIndex = (index + 2) % vowels.count\n            encodedMessage.append(vowels[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isVowel() {\n            encodedMessage.append(char.next().next())\n\
    \        } else if char.isUppercase() {\n            encodedMessage.append(char.lowercase())\n\
    \        } else {\n            encodedMessage.append(char.uppercase())\n     \
    \   }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n   \
    \ for character in message.characters {\n        if character.isLetter {\n   \
    \         let unicode = character.unicodeScalars.first!.value\n            let\
    \ unicodeString = String(unicode, radix: 16, uppercase: true)\n            let\
    \ unicodeInt = Int(unicodeString, radix: 16)!\n            let unicodeInt2 = unicodeInt\
    \ + 2\n            let unicode2 = UnicodeScalar(unicodeInt2)\n            let\
    \ character2 = Character(unicode2!)\n            encodedMessage.append(character2)\n\
    \        } else {\n            encodedMessage.append(character)\n        }\n \
    \   }\n    return encodedMessage", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    let alphabetArray\
    \ = Array(alphabet)\n    var encodedMessage = \"\"\n    for char in message {\n\
    \        let charLowercase = String(char).lowercased()\n        if vowels.contains(charLowercase)\
    \ {\n            let index = alphabetArray.index(of: charLowercase)!\n       \
    \     let newIndex = (index + 2) % alphabetArray.count\n            encodedMessage\
    \ += alphabetArray[newIndex]\n        } else {\n            encodedMessage +=\
    \ String(char)\n        }\n    }\n    return encodedMessage", "    var encoded\
    \ = \"\"\n    for char in message.characters {\n        if char.isLetter {\n \
    \           let ascii = char.asciiValue!\n            let isUpper = ascii >= 65\
    \ && ascii <= 90\n            let asciiOffset = isUpper ? 65 : 97\n          \
    \  let asciiIndex = Int(ascii) - asciiOffset\n            let encodedIndex = (asciiIndex\
    \ + 2) % 26\n            let encodedAscii = encodedIndex + asciiOffset\n     \
    \       let encodedChar = Character(UnicodeScalar(encodedAscii))\n           \
    \ encoded.append(encodedChar)\n        } else {\n            encoded.append(char)\n\
    \        }\n    }\n    return encoded", "    var encodedMessage = \"\"\n    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    for char in message {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            let index = alphabet.index(of: char)\n            let newIndex\
    \ = alphabet.index(index!, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isLetter {\n            if char.isUppercase {\n         \
    \       encodedMessage.append(char.lowercase)\n            } else {\n        \
    \        encodedMessage.append(char.uppercase)\n            }\n        } else\
    \ {\n            encodedMessage.append(char)\n        }\n    }\n    return encodedMessage",
  "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var encodedMessage\
    \ = \"\"\n    for char in message {\n        if vowels.contains(char) {\n    \
    \        let index = vowels.firstIndex(of: char)!\n            let nextIndex =\
    \ (index + 2) % vowels.count\n            encodedMessage.append(vowels[nextIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isLetter {\n            if char.isUppercase {\n         \
    \       encodedMessage.append(char.lowercase)\n            } else {\n        \
    \        encodedMessage.append(char.uppercase)\n            }\n        } else\
    \ {\n            encodedMessage.append(char)\n        }\n    }\n    return encodedMessage",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var encodedMessage =\
    \ \"\"\n    for char in message {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            let index = vowels.index(of: String(char).lowercased())\n   \
    \         if index == 4 {\n                encodedMessage += \"a\"\n         \
    \   } else {\n                encodedMessage += vowels[index! + 2]\n         \
    \   }\n        } else {\n            encodedMessage += String(char)\n        }\n\
    \    }\n    return encodedMessage", "    var encoded = \"\"\n    for char in message.characters\
    \ {\n        if char.isLetter {\n            if char.isUpper {\n             \
    \   encoded.append(char.lower())\n            } else {\n                encoded.append(char.upper())\n\
    \            }\n        } else {\n            encoded.append(char)\n        }\n\
    \    }\n    return encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.index(of: char) {\n            let newIndex\
    \ = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encoded = \"\"\n    for char in message {\n        if let index = alphabet.firstIndex(of:\
    \ char) {\n            encoded.append(alphabet[alphabet.index(index, offsetBy:\
    \ 2)])\n        } else if let index = alphabet.firstIndex(of: char.lowercased())\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for letter in message {\n        if let index\
    \ = alphabet.index(of: letter) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else if let index = alphabet.index(of: letter.lowercased()) {\n         \
    \   let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels: [Character] = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let alphabet: [Character] = [\"a\", \"b\", \"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    ]\n    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)!\n            encodedMessage.append(alphabet[(index\
    \ + 2) % alphabet.count])\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    for letter in message {\n        if alphabet.contains(letter) {\n      \
    \      if vowels.contains(letter) {\n                let index = alphabet.index(of:\
    \ letter)!\n                let newIndex = alphabet.index(index, offsetBy: 2)\n\
    \                encodedMessage.append(alphabet[newIndex])\n            } else\
    \ {\n                encodedMessage.append(letter)\n            }\n        } else\
    \ {\n            encodedMessage.append(letter)\n        }\n    }\n    return encodedMessage",
  "    var encodedMessage = \"\"\n    for char in message.characters {\n        if\
    \ char.isUppercase {\n            encodedMessage.append(char.lowercase)\n    \
    \    } else {\n            encodedMessage.append(char.uppercase)\n        }\n\
    \    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for char\
    \ in message {\n        if let index = alphabet.index(of: char) {\n          \
    \  let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.firstIndex(of: char) {\n            encodedMessage\
    \ += String(alphabet[alphabet.index(index, offsetBy: 2)])\n        } else if let\
    \ index = alphabet.firstIndex(of: char.lowercased()) {\n            encodedMessage\
    \ += String(alphabet[alphabet.index(index, offsetBy: 2)]).uppercased()\n     \
    \   } else {\n            encodedMessage += String(char)\n        }\n    }\n \
    \   return encodedMessage", "    var encoded = \"\"\n    let vowels = \"aeiou\"\
    \n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for char in message {\n\
    \        if vowels.contains(char) {\n            let index = alphabet.firstIndex(of:\
    \ char)\n            let newIndex = alphabet.index(index!, offsetBy: 2)\n    \
    \        encoded.append(alphabet[newIndex])\n        } else {\n            encoded.append(char)\n\
    \        }\n    }\n    return encoded", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.firstIndex(of: char) {\n            encoded.append(alphabet[alphabet.index(index,\
    \ offsetBy: 2)])\n        } else if let index = alphabet.firstIndex(of: char.lowercased())\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for char in message {\n        if let index\
    \ = alphabet.index(of: char) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else if let index = alphabet.index(of: char.lowercased()) {\n           \
    \ let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for character\
    \ in message.characters {\n        let lowercaseCharacter = String(character).lowercased()\n\
    \        if lowercaseCharacter == \"a\" {\n            encodedMessage += \"c\"\
    \n        } else if lowercaseCharacter == \"e\" {\n            encodedMessage\
    \ += \"g\"\n        } else if lowercaseCharacter == \"i\" {\n            encodedMessage\
    \ += \"k\"\n        } else if lowercaseCharacter == \"o\" {\n            encodedMessage\
    \ += \"q\"\n        } else if lowercaseCharacter == \"u\" {\n            encodedMessage\
    \ += \"y\"\n        } else if lowercaseCharacter == \"y\" {\n            encodedMessage\
    \ += \"a\"\n        } else if lowercaseCharacter == \"z\" {\n            encodedMessage\
    \ += \"b\"\n        } else if lowercaseCharacter == \" \" {\n            encodedMessage\
    \ += \" \"\n        } else {\n            encodedMessage += String(character).uppercased()\n\
    \        }\n    }\n    return encodedMessage", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet: [Character] = [\"a\"\
    , \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    var encodedMessage = \"\"\n    for char in message\
    \ {\n        if vowels.contains(char) {\n            let index = alphabet.firstIndex(of:\
    \ char)!\n            encodedMessage.append(alphabet[(index + 2) % alphabet.count])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isVowel() {\n            encodedMessage.append(char.nextVowel())\n\
    \        } else if char.isUpperCase() {\n            encodedMessage.append(char.lowercaseString)\n\
    \        } else {\n            encodedMessage.append(char.uppercaseString)\n \
    \       }\n    }\n    return encodedMessage", "    let vowels: [Character] = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet: [Character] = [\"a\", \"b\"\
    , \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var encodedMessage = \"\"\n    for char in message {\n  \
    \      if vowels.contains(char) {\n            let index = alphabet.firstIndex(of:\
    \ char)!\n            encodedMessage.append(alphabet[index + 2])\n        } else\
    \ {\n            encodedMessage.append(char)\n        }\n    }\n    return encodedMessage",
  "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encoded = \"\"\n    for char in message {\n        if let index = alphabet.index(of:\
    \ char) {\n            encoded.append(alphabet[alphabet.index(index, offsetBy:\
    \ 2)])\n        } else if let index = alphabet.index(of: char.lowercased()) {\n\
    \            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        let charString = String(char)\n        if charString.lowercaseString\
    \ == charString {\n            encodedMessage += charString.uppercaseString\n\
    \        } else {\n            encodedMessage += charString.lowercaseString\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n  \
    \  for char in message {\n        if let index = alphabet.index(of: char) {\n\
    \            let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    var encodedMessage = \"\"\n    for character in message.characters\
    \ {\n        if character.isUppercase {\n            encodedMessage.append(character.lowercase)\n\
    \        } else {\n            encodedMessage.append(character.uppercase)\n  \
    \      }\n    }\n    return encodedMessage", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  \
    \  var encodedMessage = \"\"\n    for char in message {\n        if let index\
    \ = alphabet.index(of: char.lowercased()) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            let newChar = alphabet[newIndex]\n            if vowels.contains(newChar)\
    \ {\n                encodedMessage += newChar.uppercased()\n            } else\
    \ {\n                encodedMessage += newChar\n            }\n        } else\
    \ {\n            encodedMessage += String(char)\n        }\n    }\n    return\
    \ encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encoded = \"\"\n    for char in message {\n        if let index = alphabet.index(of:\
    \ char) {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n   \
    \         encoded.append(alphabet[newIndex])\n        } else if let index = alphabet.index(of:\
    \ char.lowercased()) {\n            let newIndex = alphabet.index(index, offsetBy:\
    \ 2)\n            encoded.append(alphabet[newIndex].uppercased())\n        } else\
    \ {\n            encoded.append(char)\n        }\n    }\n    return encoded",
  "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encodedMessage = \"\"\n    for letter in message {\n        if let index\
    \ = alphabet.index(of: letter) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else if let index = alphabet.index(of: letter.lowercased()) {\n         \
    \   let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercased())\n\
    \        } else {\n            encodedMessage.append(char.uppercased())\n    \
    \    }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n \
    \   for character in message {\n        if let index = alphabet.index(of: character)\
    \ {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n         \
    \   encodedMessage.append(alphabet[newIndex])\n        } else if let index = alphabet.index(of:\
    \ character.lowercased()) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(character)\n        }\n \
    \   }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for character\
    \ in message {\n        if let index = alphabet.firstIndex(of: character) {\n\
    \            encodedMessage += String(alphabet[alphabet.index(index, offsetBy:\
    \ 2)])\n        } else if let index = alphabet.firstIndex(of: character.lowercased())\
    \ {\n            encodedMessage += String(alphabet[alphabet.index(index, offsetBy:\
    \ 2)]).uppercased()\n        } else {\n            encodedMessage += String(character)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isUppercase {\n       \
    \     encodedMessage.append(char.lowercase)\n        } else {\n            encodedMessage.append(char.uppercase)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\
    \"\n    for char in message {\n        if let index = alphabet.firstIndex(of:\
    \ char) {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n   \
    \         encodedMessage.append(alphabet[newIndex])\n        } else if let index\
    \ = alphabet.firstIndex(of: char.lowercased()) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for character\
    \ in message.characters {\n        if character.isLetter {\n            var asciiValue\
    \ = character.asciiValue\n            if asciiValue! >= 65 && asciiValue! <= 90\
    \ {\n                asciiValue = asciiValue! + 32\n            } else if asciiValue!\
    \ >= 97 && asciiValue! <= 122 {\n                asciiValue = asciiValue! - 32\n\
    \            }\n            switch asciiValue! {\n            case 97:\n     \
    \           encodedMessage.append(\"c\")\n            case 101:\n            \
    \    encodedMessage.append(\"f\")\n            case 105:\n                encodedMessage.append(\"\
    i\")\n            case 111:\n                encodedMessage.append(\"l\")\n  \
    \          case 117:\n                encodedMessage.append(\"o\")\n         \
    \   default:\n                encodedMessage.append(Character(UnicodeScalar(asciiValue!)))\n\
    \            }\n        } else {\n            encodedMessage.append(character)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isUppercase {\n       \
    \     encodedMessage.append(char.lowercased())\n        } else {\n           \
    \ encodedMessage.append(char.uppercased())\n        }\n    }\n    return encodedMessage",
  "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encodedMessage = \"\"\n    for char in message {\n        if let index\
    \ = alphabet.firstIndex(of: char) {\n            encodedMessage += alphabet[alphabet.index(index,\
    \ offsetBy: 2)]\n        } else if let index = alphabet.firstIndex(of: char.lowercased())\
    \ {\n            encodedMessage += alphabet[alphabet.index(index, offsetBy: 2)].uppercased()\n\
    \        } else {\n            encodedMessage += String(char)\n        }\n   \
    \ }\n    return encodedMessage", "    var encodedMessage = \"\"\n    let vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet: [Character]\
    \ = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)!\n            encodedMessage.append(alphabet[(index\
    \ + 2) % alphabet.count])\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isLetter {\n          \
    \  let ascii = char.asciiValue!\n            let newAscii = ascii + (ascii < 97\
    \ ? 2 : -2)\n            let newChar = Character(UnicodeScalar(newAscii))\n  \
    \          encodedMessage.append(newChar)\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet:\
    \ [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    for char in message {\n     \
    \   if vowels.contains(char) {\n            let index = alphabet.firstIndex(of:\
    \ char)!\n            encodedMessage.append(alphabet[(index + 2) % alphabet.count])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isLetter {\n            let ascii = char.asciiValue!\n  \
    \          let newAscii = ascii + (ascii < 97 ? 2 : -2)\n            let newChar\
    \ = Character(UnicodeScalar(newAscii))\n            encodedMessage.append(newChar)\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for letter in\
    \ message {\n        if let index = alphabet.index(of: letter) {\n           \
    \ let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: letter.lowercased()) {\n   \
    \         let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.index(of: char) {\n            let newIndex\
    \ = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for letter in\
    \ message {\n        if letter.isLetter {\n            if letter.isUppercase {\n\
    \                encodedMessage.append(letter.lowercased())\n            } else\
    \ {\n                encodedMessage.append(letter.uppercased())\n            }\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.index(of: char) {\n            let newIndex\
    \ = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    let alphabetUpper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    var encodedMessage\
    \ = \"\"\n    for char in message {\n        if vowels.contains(char) {\n    \
    \        let index = alphabet.firstIndex(of: char)\n            let newIndex =\
    \ alphabet.index(index!, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if alphabetUpper.contains(char) {\n            let index = alphabetUpper.firstIndex(of:\
    \ char)\n            let newIndex = alphabetUpper.index(index!, offsetBy: 2)\n\
    \            encodedMessage.append(alphabetUpper[newIndex])\n        } else {\n\
    \            encodedMessage.append(char)\n        }\n    }\n    return encodedMessage",
  "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet:\
    \ [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var encodedMessage = \"\"\n \
    \   for char in message {\n        if vowels.contains(char) {\n            let\
    \ index = alphabet.firstIndex(of: char)!\n            let newIndex = index + 2\n\
    \            encodedMessage.append(alphabet[newIndex])\n        } else {\n   \
    \         encodedMessage.append(char)\n        }\n    }\n    return encodedMessage",
  "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encodedMessage = \"\"\n    for char in message {\n        if let index\
    \ = alphabet.index(of: char) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else if let index = alphabet.index(of: char.lowercased()) {\n           \
    \ let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encoded = \"\"\n    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for char in message.characters {\n        if\
    \ vowels.contains(String(char).lowercased()) {\n            let index = vowels.index(of:\
    \ String(char).lowercased())\n            encoded += String(vowels[(index! + 2)\
    \ % 5]).uppercased()\n        } else {\n            encoded += String(char).uppercased()\n\
    \        }\n    }\n    return encoded", "    var encodedMessage = \"\"\n    let\
    \ vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for\
    \ char in message {\n        if let index = alphabet.index(of: char) {\n     \
    \       if let vowelIndex = vowels.index(of: char) {\n                encodedMessage.append(vowels[vowels.index(vowelIndex,\
    \ offsetBy: 2)])\n            } else {\n                encodedMessage.append(alphabet[alphabet.index(index,\
    \ offsetBy: 1)])\n            }\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            if let index = alphabet.firstIndex(of: char) {\n            \
    \    encodedMessage.append(alphabet[alphabet.index(index, offsetBy: 2)])\n   \
    \         }\n        } else {\n            encodedMessage.append(char)\n     \
    \   }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    let alphabetUpper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    var encodedMessage = \"\"\n    for letter in message {\n        if vowels.contains(letter)\
    \ {\n            if let index = alphabet.firstIndex(of: letter) {\n          \
    \      let newIndex = alphabet.index(index, offsetBy: 2)\n                encodedMessage.append(alphabet[newIndex])\n\
    \            } else if let index = alphabetUpper.firstIndex(of: letter) {\n  \
    \              let newIndex = alphabetUpper.index(index, offsetBy: 2)\n      \
    \          encodedMessage.append(alphabetUpper[newIndex])\n            }\n   \
    \     } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercase)\n\
    \        } else {\n            encodedMessage.append(char.uppercase)\n       \
    \ }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.firstIndex(of: char) {\n            if let\
    \ vowelIndex = vowels.firstIndex(of: char) {\n                let newIndex = alphabet.index(vowelIndex,\
    \ offsetBy: 2)\n                encoded.append(alphabet[newIndex])\n         \
    \   } else {\n                encoded.append(alphabet[index])\n            }\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    var encodedMessage = \"\"\n    for character in message.characters\
    \ {\n        if character.isUppercase {\n            encodedMessage.append(character.lowercase)\n\
    \        } else {\n            encodedMessage.append(character.uppercase)\n  \
    \      }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isLetter {\n          \
    \  let ascii = char.asciiValue!\n            if ascii >= 65 && ascii <= 90 {\n\
    \                encodedMessage.append(Character(UnicodeScalar(ascii + 32)))\n\
    \            } else if ascii >= 97 && ascii <= 122 {\n                encodedMessage.append(Character(UnicodeScalar(ascii\
    \ - 32)))\n            }\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        let ascii = char.unicodeScalars.first!.value\n\
    \        if ascii >= 65 && ascii <= 90 {\n            encodedMessage.append(Character(UnicodeScalar(ascii\
    \ + 32)!))\n        } else if ascii >= 97 && ascii <= 122 {\n            encodedMessage.append(Character(UnicodeScalar(ascii\
    \ - 32)!))\n        } else {\n            encodedMessage.append(char)\n      \
    \  }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char\
    \ in message {\n        if let index = alphabet.index(of: char) {\n          \
    \  let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let letters = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encoded = \"\"\n    for char in message.lowercased() {\n        if let\
    \ index = letters.index(of: char) {\n            if let vowelIndex = vowels.index(of:\
    \ char) {\n                let newIndex = letters.index(vowelIndex, offsetBy:\
    \ 2)\n                encoded.append(letters[newIndex])\n            } else {\n\
    \                encoded.append(char)\n            }\n        } else {\n     \
    \       encoded.append(char)\n        }\n    }\n    return encoded", "    let\
    \ vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var\
    \ encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)\n            let newIndex\
    \ = alphabet.index(index!, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let vowelsWithOffset\
    \ = \"cfilorux\"\n    let letters = \"abcdefghijklmnopqrstuvwxyz\"\n    let lettersWithOffset\
    \ = \"cdefghijklmnopqrstuvwxyzab\"\n    var encodedMessage = \"\"\n    for letter\
    \ in message {\n        if let index = vowels.index(of: letter) {\n          \
    \  encodedMessage.append(vowelsWithOffset[index])\n        } else if let index\
    \ = letters.index(of: letter) {\n            encodedMessage.append(lettersWithOffset[index])\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for letter in\
    \ message {\n        switch letter {\n        case \"a\":\n            encodedMessage\
    \ += \"c\"\n        case \"A\":\n            encodedMessage += \"C\"\n       \
    \ case \"e\":\n            encodedMessage += \"g\"\n        case \"E\":\n    \
    \        encodedMessage += \"G\"\n        case \"i\":\n            encodedMessage\
    \ += \"k\"\n        case \"I\":\n            encodedMessage += \"K\"\n       \
    \ case \"o\":\n            encodedMessage += \"q\"\n        case \"O\":\n    \
    \        encodedMessage += \"Q\"\n        case \"u\":\n            encodedMessage\
    \ += \"y\"\n        case \"U\":\n            encodedMessage += \"Y\"\n       \
    \ default:\n            encodedMessage += String(letter).lowercased() == String(letter)\
    \ ? String(letter).uppercased() : String(letter).lowercased()\n        }\n   \
    \ }\n    return encodedMessage", "    var encodedMessage = \"\"\n    for char\
    \ in message.characters {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercased())\n\
    \        } else {\n            encodedMessage.append(char.uppercased())\n    \
    \    }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n \
    \   for char in message {\n        if vowels.contains(char) {\n            let\
    \ index = alphabet.firstIndex(of: char)!\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else {\n            encodedMessage.append(char)\n        }\n    }\n    return\
    \ encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercase)\n\
    \        } else {\n            encodedMessage.append(char.uppercase)\n       \
    \ }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.index(of: char) {\n            encoded.append(alphabet[alphabet.index(index,\
    \ offsetBy: 2)])\n        } else if let index = alphabet.index(of: char.lowercased())\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)!\n            let newIndex\
    \ = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isUppercase {\n            encodedMessage.append(char.lowercase)\n\
    \        } else {\n            encodedMessage.append(char.uppercase)\n       \
    \ }\n    }\n    return encodedMessage", "    var encoded = \"\"\n    for char\
    \ in message.characters {\n        let ascii = char.unicodeScalars.first!.value\n\
    \        if ascii >= 65 && ascii <= 90 {\n            encoded.append(Character(UnicodeScalar(ascii\
    \ + 32)!))\n        } else if ascii >= 97 && ascii <= 122 {\n            encoded.append(Character(UnicodeScalar(ascii\
    \ - 32)!))\n        } else {\n            encoded.append(char)\n        }\n  \
    \  }\n    return encoded", "    var encodedMessage = \"\"\n    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    for char in message {\n        if let index = alphabet.index(of: char.lowercased())\
    \ {\n            if vowels.contains(char.lowercased()) {\n                let\
    \ newIndex = alphabet.index(index, offsetBy: 2)\n                encodedMessage.append(alphabet[newIndex])\n\
    \            } else {\n                encodedMessage.append(alphabet[index])\n\
    \            }\n        }\n    }\n    return encodedMessage", "    let vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet: [Character]\
    \ = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var encodedMessage = \"\"\n    for char\
    \ in message {\n        if vowels.contains(char) {\n            let index = alphabet.firstIndex(of:\
    \ char)!\n            let newIndex = (index + 2) % alphabet.count\n          \
    \  encodedMessage.append(alphabet[newIndex])\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n  \
    \  for char in message {\n        if let index = alphabet.index(of: char) {\n\
    \            let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)\n            let newIndex\
    \ = alphabet.index(index!, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.firstIndex(of: char) {\n            encoded.append(alphabet[alphabet.index(index,\
    \ offsetBy: 2)])\n        } else if let index = alphabet.firstIndex(of: char.lowercased())\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for char in message {\n        if let index\
    \ = alphabet.index(of: char) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n      \
    \  } else if let index = alphabet.index(of: char.lowercased()) {\n           \
    \ let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.firstIndex(of: char) {\n            encoded.append(alphabet[alphabet.index(index,\
    \ offsetBy: 2)])\n        } else if let index = alphabet.firstIndex(of: char.lowercased())\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for letter\
    \ in message {\n        if let index = alphabet.index(of: letter.lowercased())\
    \ {\n            if vowels.contains(letter.lowercased()) {\n                let\
    \ newIndex = alphabet.index(index, offsetBy: 2)\n                encodedMessage.append(alphabet[newIndex])\n\
    \            } else {\n                encodedMessage.append(alphabet[index])\n\
    \            }\n        }\n    }\n    return encodedMessage", "    let vowels\
    \ = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage\
    \ = \"\"\n    for letter in message {\n        if let index = alphabet.index(of:\
    \ letter) {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n \
    \           encodedMessage.append(alphabet[newIndex])\n        } else if let index\
    \ = alphabet.index(of: letter.lowercased()) {\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let letters = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message.lowercased()\
    \ {\n        if vowels.contains(char) {\n            let index = vowels.index(of:\
    \ char)!\n            let newIndex = (index + 2) % vowels.count\n            encoded.append(vowels[newIndex])\n\
    \        } else if letters.contains(char) {\n            let index = letters.index(of:\
    \ char)!\n            let newIndex = (index + 2) % letters.count\n           \
    \ encoded.append(letters[newIndex])\n        } else {\n            encoded.append(char)\n\
    \        }\n    }\n    return encoded", "    let vowels = \"aeiou\"\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for char\
    \ in message {\n        if vowels.contains(char) {\n            let index = alphabet.firstIndex(of:\
    \ char)\n            let newIndex = alphabet.index(index!, offsetBy: 2)\n    \
    \        encodedMessage.append(alphabet[newIndex])\n        } else {\n       \
    \     encodedMessage.append(char)\n        }\n    }\n    return encodedMessage",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var encoded = \"\"\n\
    \    for char in message.characters {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            let index = vowels.index(of: String(char).lowercased())\n   \
    \         if index! + 2 > 4 {\n                encoded += vowels[index! + 2 -\
    \ 5]\n            } else {\n                encoded += vowels[index! + 2]\n  \
    \          }\n        } else {\n            encoded += String(char)\n        }\n\
    \    }\n    return encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for letter in\
    \ message {\n        if let index = alphabet.index(of: letter) {\n           \
    \ if let vowelIndex = vowels.index(of: letter) {\n                let newVowelIndex\
    \ = (vowelIndex + 2) % 5\n                encodedMessage.append(vowels[vowels.index(vowels.startIndex,\
    \ offsetBy: newVowelIndex)])\n            } else {\n                let newIndex\
    \ = (index + 2) % 26\n                encodedMessage.append(alphabet[alphabet.index(alphabet.startIndex,\
    \ offsetBy: newIndex)])\n            }\n        } else {\n            encodedMessage.append(letter)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n  \
    \  for char in message {\n        if let index = alphabet.index(of: char) {\n\
    \            let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let alphabet: [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\",\
    \ \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var encodedMessage\
    \ = \"\"\n    for char in message {\n        if vowels.contains(char) {\n    \
    \        let index = alphabet.firstIndex(of: char)!\n            encodedMessage.append(alphabet[(index\
    \ + 2) % alphabet.count])\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\
    \"\n    for char in message {\n        if let index = alphabet.index(of: char)\
    \ {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n         \
    \   encodedMessage.append(alphabet[newIndex])\n        } else if let index = alphabet.index(of:\
    \ char.lowercased()) {\n            let newIndex = alphabet.index(index, offsetBy:\
    \ 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n   \
    \     } else {\n            encodedMessage.append(char)\n        }\n    }\n  \
    \  return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.index(of: char) {\n            let newIndex\
    \ = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)\n            let newIndex\
    \ = alphabet.index(index!, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encoded = \"\"\n    for char in message.characters\
    \ {\n        if char.isVowel {\n            encoded.append(char.next.next)\n \
    \       } else if char.isUppercase {\n            encoded.append(char.lowercase)\n\
    \        } else {\n            encoded.append(char.uppercase)\n        }\n   \
    \ }\n    return encoded", "    var encodedMessage = \"\"\n    let vowels = \"\
    aeiou\"\n    let letters = \"abcdefghijklmnopqrstuvwxyz\"\n    for letter in message\
    \ {\n        if let index = letters.index(of: letter) {\n            let newIndex\
    \ = index + 2\n            if newIndex < letters.count {\n                encodedMessage.append(letters[newIndex])\n\
    \            } else {\n                encodedMessage.append(letters[newIndex\
    \ - letters.count])\n            }\n        } else if let index = vowels.index(of:\
    \ letter) {\n            let newIndex = index + 2\n            if newIndex < vowels.count\
    \ {\n                encodedMessage.append(vowels[newIndex])\n            } else\
    \ {\n                encodedMessage.append(vowels[newIndex - vowels.count])\n\
    \            }\n        } else {\n            encodedMessage.append(letter)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for character in message.characters {\n        if character.isVowel() {\n\
    \            encodedMessage.append(character.next().next())\n        } else {\n\
    \            encodedMessage.append(character)\n        }\n    }\n    return encodedMessage",
  "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var encodedMessage = \"\"\n    for char in message {\n        if vowels.contains(char)\
    \ {\n            let index = alphabet.firstIndex(of: char)\n            let newIndex\
    \ = alphabet.index(index!, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n    for char in message\
    \ {\n        if let index = alphabet.index(of: char) {\n            encoded.append(alphabet[alphabet.index(index,\
    \ offsetBy: 2)])\n        } else if let index = alphabet.index(of: char.lowercased())\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isLetter {\n            if char.isUppercase {\n         \
    \       encodedMessage.append(char.lowercased())\n            } else {\n     \
    \           encodedMessage.append(char.uppercased())\n            }\n        }\
    \ else {\n            encodedMessage.append(char)\n        }\n    }\n    return\
    \ encodedMessage", "    var encodedMessage = \"\"\n    for char in message.characters\
    \ {\n        if char.isLetter {\n            let ascii = char.asciiValue!\n  \
    \          let isUpper = ascii >= 65 && ascii <= 90\n            let isLower =\
    \ ascii >= 97 && ascii <= 122\n            if isUpper {\n                encodedMessage.append(Character(UnicodeScalar(ascii\
    \ + 32)!))\n            } else if isLower {\n                encodedMessage.append(Character(UnicodeScalar(ascii\
    \ - 32)!))\n            }\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isUppercase {\n       \
    \     encodedMessage.append(char.lowercase)\n        } else {\n            encodedMessage.append(char.uppercase)\n\
    \        }\n    }\n    return encodedMessage", "    var encodedMessage = \"\"\n\
    \    for char in message.characters {\n        if char.isLetter {\n          \
    \  if char.isUppercase {\n                encodedMessage.append(char.lowercase)\n\
    \            } else {\n                encodedMessage.append(char.uppercase)\n\
    \            }\n        } else {\n            encodedMessage.append(char)\n  \
    \      }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n   \
    \ let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\
    \n    for letter in message {\n        if let index = alphabet.firstIndex(of:\
    \ letter) {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n \
    \           encodedMessage.append(alphabet[newIndex])\n        } else if let index\
    \ = alphabet.firstIndex(of: letter.lowercased()) {\n            let newIndex =\
    \ alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(letter)\n        }\n    }\n\
    \    return encodedMessage", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var encodedMessage = \"\"\n    for letter in message {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            encodedMessage += String(letter).lowercased() == \"z\" ? \"b\"\
    \ : String(Array(String(letter).lowercased())[1])\n        } else {\n        \
    \    encodedMessage += String(letter).lowercased() == String(letter) ? String(letter).uppercased()\
    \ : String(letter).lowercased()\n        }\n    }\n    return encodedMessage",
  "    var encodedMessage = \"\"\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for letter in message\
    \ {\n        if let index = alphabet.index(of: letter.lowercased()) {\n      \
    \      let newIndex = alphabet.index(index, offsetBy: 2)\n            let newLetter\
    \ = alphabet[newIndex]\n            if vowels.contains(newLetter) {\n        \
    \        encodedMessage += newLetter.uppercased()\n            } else {\n    \
    \            encodedMessage += newLetter\n            }\n        } else {\n  \
    \          encodedMessage += String(letter)\n        }\n    }\n    return encodedMessage",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for char in message {\n        if let index\
    \ = alphabet.firstIndex(of: char.lowercased()) {\n            if vowels.contains(char.lowercased())\
    \ {\n                encodedMessage.append(alphabet[alphabet.index(index, offsetBy:\
    \ 2)])\n            } else {\n                encodedMessage.append(alphabet[alphabet.index(index,\
    \ offsetBy: -2)])\n            }\n        } else {\n            encodedMessage.append(char)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n  \
    \  for letter in message {\n        if let index = alphabet.index(of: letter)\
    \ {\n            encoded.append(alphabet[alphabet.index(index, offsetBy: 2)])\n\
    \        } else if let index = alphabet.index(of: letter.lowercased()) {\n   \
    \         encoded.append(alphabet[alphabet.index(index, offsetBy: 2)].uppercased())\n\
    \        } else {\n            encoded.append(letter)\n        }\n    }\n    return\
    \ encoded", "    let vowels = \"aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var encodedMessage = \"\"\n    for char in message {\n        if let index\
    \ = alphabet.index(of: char) {\n            if let vowelIndex = vowels.index(of:\
    \ char) {\n                let newIndex = alphabet.index(vowelIndex, offsetBy:\
    \ 2)\n                encodedMessage.append(alphabet[newIndex])\n            }\
    \ else {\n                let newIndex = alphabet.index(index, offsetBy: 1)\n\
    \                encodedMessage.append(alphabet[newIndex])\n            }\n  \
    \      } else {\n            encodedMessage.append(char)\n        }\n    }\n \
    \   return encodedMessage", "    var encodedMessage = \"\"\n    let vowels = \"\
    aeiou\"\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for letter in\
    \ message {\n        if let index = alphabet.firstIndex(of: letter) {\n      \
    \      if let vowelIndex = vowels.firstIndex(of: letter) {\n                let\
    \ newIndex = alphabet.index(after: alphabet.index(after: vowelIndex))\n      \
    \          encodedMessage.append(alphabet[newIndex])\n            } else {\n \
    \               encodedMessage.append(alphabet[alphabet.index(after: index)])\n\
    \            }\n        } else {\n            encodedMessage.append(letter)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n  \
    \  for char in message {\n        if let index = alphabet.index(of: char) {\n\
    \            let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encoded.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encoded.append(char)\n        }\n    }\n    return\
    \ encoded", "    var encodedMessage = \"\"\n    for character in message.characters\
    \ {\n        if character.isUppercase {\n            encodedMessage.append(character.lowercased())\n\
    \        } else {\n            encodedMessage.append(character.uppercased())\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encoded = \"\"\n  \
    \  for char in message {\n        if vowels.contains(char) {\n            let\
    \ index = alphabet.index(of: char)!\n            let newIndex = alphabet.index(index,\
    \ offsetBy: 2)\n            encoded.append(alphabet[newIndex])\n        } else\
    \ {\n            encoded.append(char)\n        }\n    }\n    return encoded",
  "    var encodedMessage = \"\"\n    for char in message.characters {\n        if\
    \ char.isVowel() {\n            encodedMessage.append(char.nextVowel())\n    \
    \    } else if char.isUpperCase() {\n            encodedMessage.append(char.lowercaseString)\n\
    \        } else {\n            encodedMessage.append(char.uppercaseString)\n \
    \       }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n  \
    \  let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\
    \n    for char in message {\n        if let index = alphabet.index(of: char) {\n\
    \            let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex])\n\
    \        } else if let index = alphabet.index(of: char.lowercased()) {\n     \
    \       let newIndex = alphabet.index(index, offsetBy: 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n\
    \        } else {\n            encodedMessage.append(char)\n        }\n    }\n\
    \    return encodedMessage", "    var encodedMessage = \"\"\n    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    for character in message {\n        if alphabet.contains(String(character))\
    \ {\n            if vowels.contains(String(character)) {\n                let\
    \ index = alphabet.index(of: String(character))!\n                let newIndex\
    \ = alphabet.index(index, offsetBy: 2)\n                encodedMessage += String(alphabet[newIndex])\n\
    \            } else {\n                encodedMessage += String(character).uppercased()\n\
    \            }\n        } else {\n            encodedMessage += String(character)\n\
    \        }\n    }\n    return encodedMessage", "    let vowels = \"aeiou\"\n \
    \   let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\
    \"\n    for char in message {\n        if let index = alphabet.index(of: char)\
    \ {\n            let newIndex = alphabet.index(index, offsetBy: 2)\n         \
    \   encodedMessage.append(alphabet[newIndex])\n        } else if let index = alphabet.index(of:\
    \ char.lowercased()) {\n            let newIndex = alphabet.index(index, offsetBy:\
    \ 2)\n            encodedMessage.append(alphabet[newIndex].uppercased())\n   \
    \     } else {\n            encodedMessage.append(char)\n        }\n    }\n  \
    \  return encodedMessage", "    let vowels = \"aeiou\"\n    let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var encodedMessage = \"\"\n    for char in message\
    \ {\n        if vowels.contains(char) {\n            let index = alphabet.firstIndex(of:\
    \ char)!\n            let newIndex = alphabet.index(index, offsetBy: 2)\n    \
    \        encodedMessage.append(alphabet[newIndex])\n        } else {\n       \
    \     encodedMessage.append(char)\n        }\n    }\n    return encodedMessage"]
stop_tokens:
- "\n}"

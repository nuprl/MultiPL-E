language: swift
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var n = n\n\
    \    var count = 0\n    while n > 0 {\n        n -= 2\n        count += 1\n  \
    \  }\n    return count == 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp3_tl3l07/tmp3_tl3l07.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b978ac9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b978a995b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b978a995988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b978a9947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3_tl3l07                        0x000055da7d90d3a1 <unavailable> + 5025

    5    libc.so.6                          0x00002b978ae8a460 __libc_start_main +
    245

    6    tmp3_tl3l07                        0x000055da7d90cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    for i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n       \
    \ }\n        if sum == n {\n            return true\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp7dw4rwp8/tmp7dw4rwp8.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1135ac4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b11357bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b11357bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b11357ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7dw4rwp8                        0x00005566997243a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b1135cb0460 __libc_start_main +
    245

    6    tmp7dw4rwp8                        0x0000556699723fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    // TODO: Implement this function\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp_5p746e7/tmp_5p746e7.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2bd1ecac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2bd1bc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2bd1bc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2bd1bc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_5p746e7                        0x00005652ae3c229d <unavailable> + 4765

    5    libc.so.6                          0x00002b2bd20b6460 __libc_start_main +
    245

    6    tmp_5p746e7                        0x00005652ae3c1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if count == 4 {\n            break\n        }\n    }\n    return sum\
    \ == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpxtefeaal/tmpxtefeaal.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aae86b92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aae86889b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aae86889988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aae868887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtefeaal                        0x00005586ae4e641d <unavailable> + 5149

    5    libc.so.6                          0x00002aae86d7e460 __libc_start_main +
    245

    6    tmpxtefeaal                        0x00005586ae4e5fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    // TODO: Write some code to solve this coding exercise\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmputea8sn0/tmputea8sn0.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b878d636c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b878d32db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b878d32d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b878d32c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmputea8sn0                        0x000055a24030329d <unavailable> + 4765

    5    libc.so.6                          0x00002b878d822460 __libc_start_main +
    245

    6    tmputea8sn0                        0x000055a240302e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    for i in 1...n {\n        for j in 1...n\
    \ {\n            for k in 1...n {\n                for l in 1...n {\n        \
    \            if i + j + k + l == n && i % 2 == 0 && j % 2 == 0 && k % 2 == 0 &&\
    \ l % 2 == 0 {\n                        result = true\n                    }\n\
    \                }\n            }\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    if n % 2 == 0 {\n        var sum = 0\n\
    \        var i = 2\n        while sum < n {\n            sum += i\n          \
    \  i += 2\n        }\n        if sum == n {\n            result = true\n     \
    \   }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpy79nsmrc/tmpy79nsmrc.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f72ad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f727cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f727cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f727cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy79nsmrc                        0x00005615aea5c2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b5f72cc2460 __libc_start_main +
    245

    6    tmpy79nsmrc                        0x00005615aea5bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var i = 1\n    while\
    \ i <= n {\n        if i % 2 == 0 {\n            sum += i\n            if sum\
    \ == n {\n                result = true\n                break\n            }\n\
    \        }\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmptc67gyll/tmptc67gyll.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8b823c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8b51ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8b51a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8b5197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptc67gyll                        0x000055850e0ca2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b2f8ba0f460 __libc_start_main +
    245

    6    tmptc67gyll                        0x000055850e0c9ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    var\
    \ i = 2\n    while i <= n {\n        if i % 2 == 0 {\n            sum += i\n \
    \           count += 1\n        }\n        if sum == n && count == 4 {\n     \
    \       result = true\n            break\n        }\n        i += 1\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp3dl5v1bp/tmp3dl5v1bp.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af849ca0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af849997b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af849997988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8499967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dl5v1bp                        0x000055d02bdaf32d <unavailable> + 4909

    5    libc.so.6                          0x00002af849e8c460 __libc_start_main +
    245

    6    tmp3dl5v1bp                        0x000055d02bdaeef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var i = 2\n    while sum < n {\n        sum\
    \ += i\n        i += 2\n    }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp_wgna_yh/tmp_wgna_yh.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade2d843c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade2d53ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade2d53a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade2d5397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_wgna_yh                        0x000056375842b229 <unavailable> + 4649

    5    libc.so.6                          0x00002ade2da2f460 __libc_start_main +
    245

    6    tmp_wgna_yh                        0x000056375842ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n < 8 {\n        return false\n    }\n    var sum = 0\n  \
    \  var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum\
    \ += i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpmr50alsx/tmpmr50alsx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b46e5a85c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b46e577cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b46e577c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46e577b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmr50alsx                        0x00005566c056141d <unavailable> + 5149

    5    libc.so.6                          0x00002b46e5c71460 __libc_start_main +
    245

    6    tmpmr50alsx                        0x00005566c0560fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let n = n\n    var a = 0\n    var b = 0\n    var c = 0\n    var\
    \ d = 0\n    for a in 0...n {\n        for b in 0...n {\n            for c in\
    \ 0...n {\n                for d in 0...n {\n                    if a + b + c\
    \ + d == n && a % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 == 0 {\n       \
    \                 return true\n                    }\n                }\n    \
    \        }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpf6f9x96u/tmpf6f9x96u.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad775cc6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad7759bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad7759bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad7759bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf6f9x96u                        0x0000563cef875333 <unavailable> + 4915

    5    libc.so.6                          0x00002ad775eb2460 __libc_start_main +
    245

    6    tmpf6f9x96u                        0x0000563cef874fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var a = 0\n    var b = 0\n    var c =\
    \ 0\n    var d = 0\n    for a in 1...n {\n        for b in 1...n {\n         \
    \   for c in 1...n {\n                for d in 1...n {\n                    if\
    \ a + b + c + d == n && a % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 == 0 {\n\
    \                        result = true\n                    }\n              \
    \  }\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    if n < 8 {\n\
    \        return false\n    }\n    var sum = 0\n    for i in 1...n/2 {\n      \
    \  sum += i\n        if sum == n {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp_3wcgzwu/tmp_3wcgzwu.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a1a185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a19e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a19e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a19e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_3wcgzwu                        0x000055ce5ed4a41d <unavailable> + 5149

    5    libc.so.6                          0x00002b1a1a371460 __libc_start_main +
    245

    6    tmp_3wcgzwu                        0x000055ce5ed49fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var a = 0\n    var b = 0\n    var c =\
    \ 0\n    var d = 0\n    for a in 1...n {\n        for b in 1...n {\n         \
    \   for c in 1...n {\n                for d in 1...n {\n                    if\
    \ a + b + c + d == n && a % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 == 0 {\n\
    \                        result = true\n                    }\n              \
    \  }\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var n = n\n    var sum = 0\n    var count = 0\n    while n >\
    \ 0 {\n        let digit = n % 10\n        if digit % 2 == 0 {\n            sum\
    \ += digit\n            count += 1\n        }\n        n /= 10\n    }\n    return\
    \ count == 4 && sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpcax0j_qv/tmpcax0j_qv.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae73c2b6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae73bfadb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae73bfad988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae73bfac7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcax0j_qv                        0x00005639b45d932d <unavailable> + 4909

    5    libc.so.6                          0x00002ae73c4a2460 __libc_start_main +
    245

    6    tmpcax0j_qv                        0x00005639b45d8ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var i = 2\n    var j = 2\n    var k =\
    \ 2\n    var l = 2\n    while i < n {\n        while j < n {\n            while\
    \ k < n {\n                while l < n {\n                    if i + j + k + l\
    \ == n {\n                        result = true\n                    }\n     \
    \               l += 2\n                }\n                k += 2\n          \
    \  }\n            j += 2\n        }\n        i += 2\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009457
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var a = 2\n    var b = 2\n    var c =\
    \ 2\n    var d = 2\n    while a <= n/4 {\n        while b <= n/3 {\n         \
    \   while c <= n/2 {\n                while d <= n {\n                    if a\
    \ + b + c + d == n {\n                        result = true\n                \
    \        break\n                    }\n                    d += 2\n          \
    \      }\n                c += 2\n            }\n            b += 2\n        }\n\
    \        a += 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    for i in 1...n {\n        for j in 1...n\
    \ {\n            for k in 1...n {\n                for l in 1...n {\n        \
    \            if i + j + k + l == n {\n                        result = true\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp8n6ee3lp/tmp8n6ee3lp.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4b05b87c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4b0587eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4b0587e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4b0587d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8n6ee3lp                        0x000056490ce84333 <unavailable> + 4915

    5    libc.so.6                          0x00002b4b05d73460 __libc_start_main +
    245

    6    tmp8n6ee3lp                        0x000056490ce83fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var i = 1\n    while i < n {\n      \
    \  var j = 1\n        while j < n {\n            var k = 1\n            while\
    \ k < n {\n                var l = 1\n                while l < n {\n        \
    \            if (i + j + k + l) == n {\n                        result = true\n\
    \                    }\n                    l += 1\n                }\n      \
    \          k += 1\n            }\n            j += 1\n        }\n        i +=\
    \ 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpea40jc3w/tmpea40jc3w.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac659a8fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac659786b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac659786988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6597857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpea40jc3w                        0x000055f45a2ed1b3 <unavailable> + 4531

    5    libc.so.6                          0x00002ac659c7b460 __libc_start_main +
    245

    6    tmpea40jc3w                        0x000055f45a2ece69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       for j in 1...n {\n            for k in 1...n {\n                for l\
    \ in 1...n {\n                    sum = i + j + k + l\n                    if\
    \ sum == n {\n                        result = true\n                    }\n \
    \               }\n            }\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp36bm9pgs/tmp36bm9pgs.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b00cf02ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b00ced21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b00ced21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00ced207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp36bm9pgs                        0x000055d69b7cb333 <unavailable> + 4915

    5    libc.so.6                          0x00002b00cf216460 __libc_start_main +
    245

    6    tmp36bm9pgs                        0x000055d69b7cafe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    for i in 1...n/2 {\n        if i % 2 == 0 {\n            sum += i\n     \
    \   }\n        if sum == n {\n            return true\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp1tggd1o7/tmp1tggd1o7.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4236f3fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4236c36b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4236c36988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4236c357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tggd1o7                        0x0000557b4704541d <unavailable> + 5149

    5    libc.so.6                          0x00002b423712b460 __libc_start_main +
    245

    6    tmp1tggd1o7                        0x0000557b47044fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    if n < 8 {\n\
    \        return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 0...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpgnt_jac_/tmpgnt_jac_.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f12baac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f128a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f128a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f128a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgnt_jac_                        0x000055dc5ed9841d <unavailable> + 5149

    5    libc.so.6                          0x00002b7f12d96460 __libc_start_main +
    245

    6    tmpgnt_jac_                        0x000055dc5ed97fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let evens = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26,\
    \ 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64,\
    \ 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102,\
    \ 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134,\
    \ 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166,\
    \ 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198,\
    \ 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230,\
    \ 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 260, 262,\
    \ 264, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294,\
    \ 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326,\
    \ 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358,\
    \ 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390,\
    \ 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422,\
    \ 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454,\
    \ 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 4\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvzv55pv7.swift:5:1176: error: expected ']' in container literal\
    \ expression\n    let evens = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26,\
    \ 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64,\
    \ 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102,\
    \ 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134,\
    \ 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166,\
    \ 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198,\
    \ 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230,\
    \ 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 260, 262,\
    \ 264, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294,\
    \ 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326,\
    \ 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358,\
    \ 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390,\
    \ 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422,\
    \ 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454,\
    \ 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 4\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                             "
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var count = 0\n    var sum = 0\n    var i = 2\n    while count\
    \ < 4 && sum < n {\n        if i % 2 == 0 {\n            sum += i\n          \
    \  count += 1\n        }\n        i += 1\n    }\n    return sum == n\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk4d69rw_/tmpk4d69rw_.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affe376dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affe3464b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affe3464988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affe34637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk4d69rw_                        0x000055e10a89a2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002affe3959460 __libc_start_main +
    245

    6    tmpk4d69rw_                        0x000055e10a899ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let evens = (2...n).filter { $0 % 2 == 0 }\n    let sums = evens.combinations(4).map\
    \ { $0.reduce(0, +) }\n    return sums.contains(n)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp8e86n3vm.swift:6:22: error: value of type '[ClosedRange<Int>.Element]'\
    \ (aka 'Array<Int>') has no member 'combinations'\n    let sums = evens.combinations(4).map\
    \ { $0.reduce(0, +) }\n               ~~~~~ ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let evens = (2...n).filter { $0 % 2 == 0 }\n    for i in evens\
    \ {\n        for j in evens {\n            for k in evens {\n                for\
    \ l in evens {\n                    if i + j + k + l == n {\n                \
    \        return true\n                    }\n                }\n            }\n\
    \        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var i = 2\n    while sum < n {\n        sum += i\n        i += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2ggckb18/tmp2ggckb18.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b850e0a7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b850dd9eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b850dd9e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b850dd9d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ggckb18                        0x0000557da97912b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b850e293460 __libc_start_main +
    245

    6    tmp2ggckb18                        0x0000557da9790ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var num = n\n\
    \    var count = 0\n    while num > 0 {\n        num -= 2\n        count += 1\n\
    \    }\n    return count == 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2o64arcn/tmp2o64arcn.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b619bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b5e92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b5e92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b5e917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o64arcn                        0x000055dc10c1d3a1 <unavailable> + 5025

    5    libc.so.6                          0x00002ab8b6387460 __libc_start_main +
    245

    6    tmp2o64arcn                        0x000055dc10c1cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    for i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n       \
    \ }\n        if sum == n {\n            return true\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp7dw4rwp8/tmp7dw4rwp8.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1135ac4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b11357bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b11357bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b11357ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7dw4rwp8                        0x00005566997243a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b1135cb0460 __libc_start_main +
    245

    6    tmp7dw4rwp8                        0x0000556699723fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 0...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpgnt_jac_/tmpgnt_jac_.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f12baac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f128a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f128a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f128a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgnt_jac_                        0x000055dc5ed9841d <unavailable> + 5149

    5    libc.so.6                          0x00002b7f12d96460 __libc_start_main +
    245

    6    tmpgnt_jac_                        0x000055dc5ed97fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    for i in 1...n {\n        for j in 1...n\
    \ {\n            for k in 1...n {\n                for l in 1...n {\n        \
    \            if (i + j + k + l == n) && (i % 2 == 0) && (j % 2 == 0) && (k % 2\
    \ == 0) && (l % 2 == 0) {\n                        result = true\n           \
    \         }\n                }\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let even_numbers = (0...n).filter { $0 % 2 == 0 }\n    var sum\
    \ = 0\n    for i in even_numbers {\n        sum += i\n        if sum == n {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpvugvs_7k/tmpvugvs_7k.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a7cb16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a7c80db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a7c80d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a7c80c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvugvs_7k                        0x000055de353105a9 <unavailable> + 5545

    5    libc.so.6                          0x00002b4a7cd02460 __libc_start_main +
    245

    6    tmpvugvs_7k                        0x000055de353101e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var i = 2\n    while sum < n {\n        sum += i\n        i += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2ggckb18/tmp2ggckb18.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b850e0a7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b850dd9eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b850dd9e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b850dd9d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ggckb18                        0x0000557da97912b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b850e293460 __libc_start_main +
    245

    6    tmp2ggckb18                        0x0000557da9790ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var i = 0\n    var j = 0\n    var k =\
    \ 0\n    var l = 0\n    var sum = 0\n    for i in 0...n {\n        for j in 0...n\
    \ {\n            for k in 0...n {\n                for l in 0...n {\n        \
    \            sum = i + j + k + l\n                    if sum == n {\n        \
    \                result = true\n                    }\n                }\n   \
    \         }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmphyx450i5/tmphyx450i5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af4a50aec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af4a4da5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af4a4da5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af4a4da47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphyx450i5                        0x00005570010e4333 <unavailable> + 4915

    5    libc.so.6                          0x00002af4a529a460 __libc_start_main +
    245

    6    tmphyx450i5                        0x00005570010e3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var i = 2\n    while sum < n {\n        sum += i\n        i += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2ggckb18/tmp2ggckb18.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b850e0a7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b850dd9eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b850dd9e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b850dd9d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ggckb18                        0x0000557da97912b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b850e293460 __libc_start_main +
    245

    6    tmp2ggckb18                        0x0000557da9790ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    var\
    \ i = 0\n    while i < n {\n        if i % 2 == 0 {\n            sum += i\n  \
    \          count += 1\n        }\n        if sum == n && count == 4 {\n      \
    \      result = true\n            break\n        }\n        i += 1\n    }\n  \
    \  return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp62rm1y7k/tmp62rm1y7k.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9162546c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b916223db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b916223d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b916223c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp62rm1y7k                        0x0000561cdd68332d <unavailable> + 4909

    5    libc.so.6                          0x00002b9162732460 __libc_start_main +
    245

    6    tmp62rm1y7k                        0x0000561cdd682ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    let n = n /\
    \ 2\n    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n      \
    \      count += 1\n        }\n    }\n    return count == 4\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp2nooqpqt/tmp2nooqpqt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b199f2a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b199ef98b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b199ef98988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b199ef977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2nooqpqt                        0x000055e72c4c441d <unavailable> + 5149

    5    libc.so.6                          0x00002b199f48d460 __libc_start_main +
    245

    6    tmp2nooqpqt                        0x000055e72c4c3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var i = 0\n    while\
    \ i < n {\n        if i % 2 == 0 {\n            sum += i\n            if sum ==\
    \ n {\n                result = true\n                break\n            }\n \
    \       }\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsy48q2cv/tmpsy48q2cv.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34b01c8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34afebfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34afebf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34afebe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsy48q2cv                        0x000055c58ec9b2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b34b03b4460 __libc_start_main +
    245

    6    tmpsy48q2cv                        0x000055c58ec9aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    if n < 8 {\n\
    \        return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let evens = (1...n).filter { $0 % 2 == 0 }\n    return evens.contains\
    \ { evens.contains { evens.contains { evens.contains($0 + $1 + $2 + $3 == n) }\
    \ } }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmppw148jy4.swift:6:12: error: the compiler is unable to type-check\
    \ this expression in reasonable time; try breaking up the expression into distinct\
    \ sub-expressions\n    return evens.contains { evens.contains { evens.contains\
    \ { evens.contains($0 + $1 + $2 + $3 == n) } } }\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009717
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var n = n\n    var sum = 0\n    var count\
    \ = 0\n    while n > 0 {\n        if n % 2 == 0 {\n            sum += n\n    \
    \        count += 1\n        }\n        n -= 1\n    }\n    if sum % 2 == 0 &&\
    \ count == 4 {\n        result = true\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp_o4d2b0o/tmp_o4d2b0o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac781f98c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac781c8fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac781c8f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac781c8e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_o4d2b0o                        0x000055838e9d33a1 <unavailable> + 5025

    5    libc.so.6                          0x00002ac782184460 __libc_start_main +
    245

    6    tmp_o4d2b0o                        0x000055838e9d2ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmppyt_b0i7/tmppyt_b0i7.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa2370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa2067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa2067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa20667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppyt_b0i7                        0x000055e93174829d <unavailable> + 4765

    5    libc.so.6                          0x00002b7fa255c460 __libc_start_main +
    245

    6    tmppyt_b0i7                        0x000055e931747e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp00a0ncfe/tmp00a0ncfe.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2086f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2083ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2083ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2083eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp00a0ncfe                        0x00005647ceff441d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2088e1460 __libc_start_main +
    245

    6    tmp00a0ncfe                        0x00005647ceff3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu021hhnk/tmpu021hhnk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b70155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b6fe4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b6fe4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b6fe4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu021hhnk                        0x00005575d774541d <unavailable> + 5149

    5    libc.so.6                          0x00002b2b70341460 __libc_start_main +
    245

    6    tmpu021hhnk                        0x00005575d7744fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var result = false\n    var sum = 0\n    for i in 1...n {\n \
    \       if i % 2 == 0 {\n            sum += i\n            if sum == n {\n   \
    \             result = true\n                break\n            }\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpl4gt7rq2/tmpl4gt7rq2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd1b23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd181ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd181a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd18197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4gt7rq2                        0x00005568fb1e73a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b6dd1d0f460 __libc_start_main +
    245

    6    tmpl4gt7rq2                        0x00005568fb1e6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    // your code here\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpu9h3ui1_/tmpu9h3ui1_.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae44ab61c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae44a858b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae44a858988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae44a8577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu9h3ui1_                        0x0000556f5acb229d <unavailable> + 4765

    5    libc.so.6                          0x00002ae44ad4d460 __libc_start_main +
    245

    6    tmpu9h3ui1_                        0x0000556f5acb1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    var count = 0\n    for i in 1...n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkrmpy7iy/tmpkrmpy7iy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add68f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add68c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add68c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add68c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrmpy7iy                        0x00005616ba8ca41d <unavailable> + 5149

    5    libc.so.6                          0x00002add69160460 __libc_start_main +
    245

    6    tmpkrmpy7iy                        0x00005616ba8c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    if n % 2 != 0 {\n        return false\n    }\n    var sum = 0\n\
    \    var count = 0\n    for i in 0...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpyt_clwd4/tmpyt_clwd4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af365ed7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af365bceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af365bce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af365bcd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyt_clwd4                        0x00005596db4c441d <unavailable> + 5149

    5    libc.so.6                          0x00002af3660c3460 __libc_start_main +
    245

    6    tmpyt_clwd4                        0x00005596db4c3fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457

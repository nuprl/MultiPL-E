language: swift
name: HumanEval_146_specialFilter
results:
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter({ $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdkdyya0e.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }).count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpdkdyya0e.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({\
    \ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }).count\n      \
    \                                                        ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp6nzx9lre.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 != 0\
    \ {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmp6nzx9lre.swift:9:57: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit()\
    \ % 2 != 0 && num.lastDigit() % 2 != 0 {\n                                   \
    \                 ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter {\n        $0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpx9ten_7a.swift:8:23: error: value of type 'Int' has no member 'firstDigit'\n\
    \        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n        \
    \           ~~ ^~~~~~~~~~\n/tmp/tmpx9ten_7a.swift:8:49: error: value of type 'Int'\
    \ has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit\
    \ % 2 != 0\n                                             ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && isFirstAndLastDigitOdd(num: num) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg89gc8jf.swift:9:24: error: cannot find 'isFirstAndLastDigitOdd'\
    \ in scope\n        if num > 10 && isFirstAndLastDigitOdd(num: num) {\n      \
    \                 ^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpwige4ox0/tmpwige4ox0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd96ed3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd96bcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd96bca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd96bc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwige4ox0                        0x000055d7634916b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abd970bf460 __libc_start_main +
    245

    6    tmpwige4ox0                        0x000055d763491169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0 > 10 && $0.firstDigit()\
    \ % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmphkktp9z_.swift:7:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmphkktp9z_.swift:7:67:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n      \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8_bep6wt.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0 {\n\
    \                       ~~~ ^~~~~~~~~~\n/tmp/tmp8_bep6wt.swift:9:55: error: value\
    \ of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit\
    \ % 2 != 0 && num.lastDigit % 2 != 0 {\n                                     \
    \             ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8_bep6wt.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0 {\n\
    \                       ~~~ ^~~~~~~~~~\n/tmp/tmp8_bep6wt.swift:9:55: error: value\
    \ of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit\
    \ % 2 != 0 && num.lastDigit % 2 != 0 {\n                                     \
    \             ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0 > 10 && $0.firstDigit()\
    \ % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmphkktp9z_.swift:7:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmphkktp9z_.swift:7:67:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n      \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            let firstDigit = num % 10\n          \
    \  let lastDigit = num / 10\n            if firstDigit % 2 != 0 && lastDigit %\
    \ 2 != 0 {\n                count += 1\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp8npe1dog/tmp8npe1dog.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b319acacc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b319a9a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b319a9a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b319a9a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8npe1dog                        0x0000560f48a7c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b319ae98460 __libc_start_main +
    245

    6    tmp8npe1dog                        0x0000560f48a7c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 && num % 10 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpm61nkl7x/tmpm61nkl7x.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8378b95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b837888cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b837888c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b837888b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm61nkl7x                        0x0000561ccf1756b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b8378d81460 __libc_start_main +
    245

    6    tmpm61nkl7x                        0x0000561ccf175169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpwige4ox0/tmpwige4ox0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd96ed3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd96bcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd96bca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd96bc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwige4ox0                        0x000055d7634916b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abd970bf460 __libc_start_main +
    245

    6    tmpwige4ox0                        0x000055d763491169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpwige4ox0/tmpwige4ox0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd96ed3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd96bcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd96bca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd96bc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwige4ox0                        0x000055d7634916b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abd970bf460 __libc_start_main +
    245

    6    tmpwige4ox0                        0x000055d763491169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 && num % 10 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpm61nkl7x/tmpm61nkl7x.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8378b95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b837888cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b837888c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b837888b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm61nkl7x                        0x0000561ccf1756b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b8378d81460 __libc_start_main +
    245

    6    tmpm61nkl7x                        0x0000561ccf175169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpwige4ox0/tmpwige4ox0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd96ed3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd96bcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd96bca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd96bc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwige4ox0                        0x000055d7634916b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abd970bf460 __libc_start_main +
    245

    6    tmpwige4ox0                        0x000055d763491169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            let first = num % 10\n            let\
    \ last = num / 10\n            if first % 2 != 0 && last % 2 != 0 {\n        \
    \        count += 1\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp2rsqj8eb/tmp2rsqj8eb.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84e1e57c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84e1b4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84e1b4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84e1b4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2rsqj8eb                        0x000055dad61726b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b84e2043460 __libc_start_main +
    245

    6    tmp2rsqj8eb                        0x000055dad6172169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            let firstDigit = num % 10\n          \
    \  let lastDigit = num / 10\n            if firstDigit % 2 != 0 && lastDigit %\
    \ 2 != 0 {\n                count += 1\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp8npe1dog/tmp8npe1dog.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b319acacc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b319a9a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b319a9a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b319a9a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8npe1dog                        0x0000560f48a7c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b319ae98460 __libc_start_main +
    245

    6    tmp8npe1dog                        0x0000560f48a7c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n        $0\
    \ > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n        $0 % 10\
    \ % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmprxwy1y6p/tmprxwy1y6p.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d7960ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d79301b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d79301988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d793007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprxwy1y6p                        0x000055972b39a674 <unavailable> + 5748

    5    libc.so.6                          0x00002b1d797f6460 __libc_start_main +
    245

    6    tmprxwy1y6p                        0x000055972b39a129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter({ $0 > 10 &&\
    \ $0 % 2 != 0 && $0 % 10 != 0 }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp98oisfs1/tmp98oisfs1.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb52eacc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb52ba3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb52ba3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb52ba27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp98oisfs1                        0x000055c4642f7674 <unavailable> + 5748

    5    libc.so.6                          0x00002aeb53098460 __libc_start_main +
    245

    6    tmp98oisfs1                        0x000055c4642f7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpwige4ox0/tmpwige4ox0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd96ed3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd96bcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd96bca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd96bc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwige4ox0                        0x000055d7634916b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abd970bf460 __libc_start_main +
    245

    6    tmpwige4ox0                        0x000055d763491169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0 > 10 && $0\
    \ % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3cuu25qn/tmp3cuu25qn.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0fd015c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0fcd0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0fcd0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0fcd0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3cuu25qn                        0x000055b23cbd7674 <unavailable> + 5748

    5    libc.so.6                          0x00002ad0fd201460 __libc_start_main +
    245

    6    tmp3cuu25qn                        0x000055b23cbd7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpwige4ox0/tmpwige4ox0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd96ed3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd96bcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd96bca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd96bc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwige4ox0                        0x000055d7634916b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abd970bf460 __libc_start_main +
    245

    6    tmpwige4ox0                        0x000055d763491169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 && num % 10 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpm61nkl7x/tmpm61nkl7x.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8378b95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b837888cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b837888c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b837888b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm61nkl7x                        0x0000561ccf1756b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b8378d81460 __libc_start_main +
    245

    6    tmpm61nkl7x                        0x0000561ccf175169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp6nzx9lre.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 != 0\
    \ {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmp6nzx9lre.swift:9:57: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit()\
    \ % 2 != 0 && num.lastDigit() % 2 != 0 {\n                                   \
    \                 ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter {\n        $0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpx9ten_7a.swift:8:23: error: value of type 'Int' has no member 'firstDigit'\n\
    \        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n        \
    \           ~~ ^~~~~~~~~~\n/tmp/tmpx9ten_7a.swift:8:49: error: value of type 'Int'\
    \ has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit\
    \ % 2 != 0\n                                             ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp6nzx9lre.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 != 0\
    \ {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmp6nzx9lre.swift:9:57: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit()\
    \ % 2 != 0 && num.lastDigit() % 2 != 0 {\n                                   \
    \                 ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp6nzx9lre.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 != 0\
    \ {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmp6nzx9lre.swift:9:57: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit()\
    \ % 2 != 0 && num.lastDigit() % 2 != 0 {\n                                   \
    \                 ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigitIsOdd() && num.lastDigitIsOdd() {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmph77pi11z.swift:9:28: error: value of type 'Int' has no member 'firstDigitIsOdd'\n\
    \        if num > 10 && num.firstDigitIsOdd() && num.lastDigitIsOdd() {\n    \
    \                   ~~~ ^~~~~~~~~~~~~~~\n/tmp/tmph77pi11z.swift:9:53: error: value\
    \ of type 'Int' has no member 'lastDigitIsOdd'\n        if num > 10 && num.firstDigitIsOdd()\
    \ && num.lastDigitIsOdd() {\n                                                ~~~\
    \ ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            let firstDigit = num % 10\n          \
    \  let lastDigit = num / 10\n            if firstDigit % 2 != 0 && lastDigit %\
    \ 2 != 0 {\n                count += 1\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp8npe1dog/tmp8npe1dog.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b319acacc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b319a9a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b319a9a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b319a9a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8npe1dog                        0x0000560f48a7c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b319ae98460 __libc_start_main +
    245

    6    tmp8npe1dog                        0x0000560f48a7c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter{$0 > 10 && $0\
    \ % 2 != 0 && $0 % 10 != 0}.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmprnnq6xbi/tmprnnq6xbi.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af86cd10c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af86ca07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af86ca07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af86ca067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprnnq6xbi                        0x000055ea2f65d674 <unavailable> + 5748

    5    libc.so.6                          0x00002af86cefc460 __libc_start_main +
    245

    6    tmprnnq6xbi                        0x000055ea2f65d129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8_bep6wt.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0 {\n\
    \                       ~~~ ^~~~~~~~~~\n/tmp/tmp8_bep6wt.swift:9:55: error: value\
    \ of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit\
    \ % 2 != 0 && num.lastDigit % 2 != 0 {\n                                     \
    \             ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpwige4ox0/tmpwige4ox0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd96ed3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd96bcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd96bca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd96bc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwige4ox0                        0x000055d7634916b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abd970bf460 __libc_start_main +
    245

    6    tmpwige4ox0                        0x000055d763491169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpwige4ox0/tmpwige4ox0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd96ed3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd96bcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd96bca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd96bc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwige4ox0                        0x000055d7634916b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abd970bf460 __libc_start_main +
    245

    6    tmpwige4ox0                        0x000055d763491169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0 > 10 && $0\
    \ % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3cuu25qn/tmp3cuu25qn.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0fd015c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0fcd0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0fcd0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0fcd0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3cuu25qn                        0x000055b23cbd7674 <unavailable> + 5748

    5    libc.so.6                          0x00002ad0fd201460 __libc_start_main +
    245

    6    tmp3cuu25qn                        0x000055b23cbd7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var result = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            result\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp8usjhy2v/tmp8usjhy2v.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7c0bfedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7c0bce4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7c0bce4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7c0bce37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8usjhy2v                        0x0000555f5684f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7c0c1d9460 __libc_start_main +
    245

    6    tmp8usjhy2v                        0x0000555f5684f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8_bep6wt.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0 {\n\
    \                       ~~~ ^~~~~~~~~~\n/tmp/tmp8_bep6wt.swift:9:55: error: value\
    \ of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit\
    \ % 2 != 0 && num.lastDigit % 2 != 0 {\n                                     \
    \             ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp6nzx9lre.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 != 0\
    \ {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmp6nzx9lre.swift:9:57: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit()\
    \ % 2 != 0 && num.lastDigit() % 2 != 0 {\n                                   \
    \                 ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n        $0\
    \ > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n        $0 % 10\
    \ % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmprxwy1y6p/tmprxwy1y6p.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d7960ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d79301b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d79301988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d793007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprxwy1y6p                        0x000055972b39a674 <unavailable> + 5748

    5    libc.so.6                          0x00002b1d797f6460 __libc_start_main +
    245

    6    tmprxwy1y6p                        0x000055972b39a129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8_bep6wt.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0 {\n\
    \                       ~~~ ^~~~~~~~~~\n/tmp/tmp8_bep6wt.swift:9:55: error: value\
    \ of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit\
    \ % 2 != 0 && num.lastDigit % 2 != 0 {\n                                     \
    \             ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8_bep6wt.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0 {\n\
    \                       ~~~ ^~~~~~~~~~\n/tmp/tmp8_bep6wt.swift:9:55: error: value\
    \ of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit\
    \ % 2 != 0 && num.lastDigit % 2 != 0 {\n                                     \
    \             ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp6nzx9lre.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 != 0\
    \ {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmp6nzx9lre.swift:9:57: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit()\
    \ % 2 != 0 && num.lastDigit() % 2 != 0 {\n                                   \
    \                 ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter {\n        $0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpx9ten_7a.swift:8:23: error: value of type 'Int' has no member 'firstDigit'\n\
    \        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n        \
    \           ~~ ^~~~~~~~~~\n/tmp/tmpx9ten_7a.swift:8:49: error: value of type 'Int'\
    \ has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit\
    \ % 2 != 0\n                                             ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter({ $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdkdyya0e.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }).count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpdkdyya0e.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({\
    \ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }).count\n      \
    \                                                        ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            let firstDigit = num % 10\n          \
    \  let lastDigit = num / 10\n            if firstDigit % 2 != 0 && lastDigit %\
    \ 2 != 0 {\n                count += 1\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp8npe1dog/tmp8npe1dog.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b319acacc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b319a9a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b319a9a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b319a9a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8npe1dog                        0x0000560f48a7c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b319ae98460 __libc_start_main +
    245

    6    tmp8npe1dog                        0x0000560f48a7c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp6nzx9lre.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 != 0\
    \ {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmp6nzx9lre.swift:9:57: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit()\
    \ % 2 != 0 && num.lastDigit() % 2 != 0 {\n                                   \
    \                 ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter {\n        $0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpx9ten_7a.swift:8:23: error: value of type 'Int' has no member 'firstDigit'\n\
    \        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n        \
    \           ~~ ^~~~~~~~~~\n/tmp/tmpx9ten_7a.swift:8:49: error: value of type 'Int'\
    \ has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit\
    \ % 2 != 0\n                                             ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8_bep6wt.swift:9:28: error: value of type 'Int' has no member 'firstDigit'\n\
    \        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0 {\n\
    \                       ~~~ ^~~~~~~~~~\n/tmp/tmp8_bep6wt.swift:9:55: error: value\
    \ of type 'Int' has no member 'lastDigit'\n        if num > 10 && num.firstDigit\
    \ % 2 != 0 && num.lastDigit % 2 != 0 {\n                                     \
    \             ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpwige4ox0/tmpwige4ox0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd96ed3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd96bcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd96bca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd96bc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwige4ox0                        0x000055d7634916b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abd970bf460 __libc_start_main +
    245

    6    tmpwige4ox0                        0x000055d763491169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter {\n        $0\
    \ > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n        $0 % 10\
    \ % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmppacxrmni/tmppacxrmni.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd55fa6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd55c9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd55c9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd55c9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppacxrmni                        0x0000561c8aa2d674 <unavailable> + 5748

    5    libc.so.6                          0x00002abd56192460 __libc_start_main +
    245

    6    tmppacxrmni                        0x0000561c8aa2d129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    return nums.filter { $0 > 10 &&\
    \ $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjwl2jn7.swift:7:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpgjwl2jn7.swift:7:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 && num % 10 != 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpm61nkl7x/tmpm61nkl7x.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8378b95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b837888cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b837888c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b837888b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm61nkl7x                        0x0000561ccf1756b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b8378d81460 __libc_start_main +
    245

    6    tmpm61nkl7x                        0x0000561ccf175169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpple6ujvc/tmpple6ujvc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5569d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5569a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5569a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5569a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpple6ujvc                        0x0000562d66daa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b5569f55460 __libc_start_main +
    245

    6    tmpple6ujvc                        0x0000562d66daa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009734

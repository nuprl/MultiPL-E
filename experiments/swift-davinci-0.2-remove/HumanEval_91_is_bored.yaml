name: HumanEval_91_is_bored
language: swift
prompt: "\n/// You'll be given a string of words, and your task is to count the number\n\
  /// of boredoms. A boredom is a sentence that starts with the word \"I\".\n/// Sentences\
  \ are delimited by '.', '?' or '!'.\n/// For example:\nfunc is_bored(S: String)\
  \ -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
  \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
  \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
  \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\")\
  \ == 0)"
completions: ["    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms", " \
    \   var count = 0\n    let words = S.split(separator: \" \")\n    for word in\
    \ words {\n        if word == \"I\" {\n            count += 1\n        }\n   \
    \ }\n    return count", "    let words = S.components(separatedBy: \" \")\n  \
    \  var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms", "    var boredoms\
    \ = 0\n    var words = S.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    let words = S.split(separator: \" \")\n    var boredoms\
    \ = 0\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.components(separatedBy: \" \")\n    for word in words {\n        if\
    \ word == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    let words = S.components(separatedBy: \" \")\n    var boredoms = 0\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    var boredoms = 0\n    let sentences\
    \ = S.split(separator: \".\")\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms", " \
    \   var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.components(separatedBy: \" \")\n    for word in words {\n        if\
    \ word == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    var boredoms = 0\n    let sentences\
    \ = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    for sentence in sentences\
    \ {\n        if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms", "    let s = S.lowercased()\n    let arr =\
    \ s.components(separatedBy: \" \")\n    var count = 0\n    for i in arr {\n  \
    \      if i == \"i\" {\n            count += 1\n        }\n    }\n    return count",
  "    var bored = 0\n    let sentences = S.split(separator: \".\")\n    for sentence\
    \ in sentences {\n        let words = sentence.split(separator: \" \")\n     \
    \   if words.count > 0 && words[0] == \"I\" {\n            bored += 1\n      \
    \  }\n    }\n    return bored", "    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.lowercased() == \"i\" {\n \
    \           boredoms += 1\n        }\n    }\n    return boredoms", "    let words\
    \ = S.split(separator: \" \")\n    var boredoms = 0\n    for word in words {\n\
    \        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n   \
    \ return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let str = S.lowercased()\n\
    \    let words = str.components(separatedBy: \" \")\n    var boredoms = 0\n  \
    \  for word in words {\n        if word == \"i\" {\n            boredoms += 1\n\
    \        }\n    }\n    return boredoms", "    let words = S.components(separatedBy:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", "  \
    \  var boredoms = 0\n    var words = S.split(separator: \" \")\n    for i in 0..<words.count\
    \ {\n        if words[i] == \"I\" {\n            boredoms += 1\n        }\n  \
    \  }\n    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.split(separator: \" \")\n    for word in words {\n        if word\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    let words = S.components(separatedBy: \" \")\n    var boredoms = 0\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let sentences = S.split(separator:\
    \ \".\")\n    var boredoms = 0\n    for sentence in sentences {\n        let words\
    \ = sentence.split(separator: \" \")\n        if words.count > 0 && words[0] ==\
    \ \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.components(separatedBy: \" \")\n    for word in words {\n        if\
    \ word == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    var count = 0\n    for sentence in sentences {\n\
    \        if sentence.hasPrefix(\"I\") {\n            count += 1\n        }\n \
    \   }\n    return count", '    return S.components(separatedBy: "I").count - 1',
  "    var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let boredoms = S.components(separatedBy:\
    \ \"I\")\n    return boredoms.count - 1", "    var boredoms = 0\n    var words\
    \ = S.components(separatedBy: \" \")\n    for word in words {\n        if word\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let sentences = S.split(separator:\
    \ \".\").map { String($0) }\n    let boredoms = sentences.filter { $0.hasPrefix(\"\
    I\") }\n    return boredoms.count", "    var boredoms = 0\n    let sentences =\
    \ S.components(separatedBy: [\".\", \"?\", \"!\"])\n    for sentence in sentences\
    \ {\n        if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let arr = S.components(separatedBy:\
    \ \".!?\")\n    var count = 0\n    for i in arr {\n        if i.hasPrefix(\"I\"\
    ) {\n            count += 1\n        }\n    }\n    return count", "    let arr\
    \ = S.components(separatedBy: \" \")\n    var count = 0\n    for i in 0..<arr.count\
    \ {\n        if arr[i] == \"I\" {\n            count += 1\n        }\n    }\n\
    \    return count", "    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms", " \
    \   var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let words = S.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for word in words {\n        if word == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var boredoms\
    \ = 0\n    var sentences = S.components(separatedBy: \".\")\n    sentences.append(contentsOf:\
    \ S.components(separatedBy: \"?\"))\n    sentences.append(contentsOf: S.components(separatedBy:\
    \ \"!\"))\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let words = S.components(separatedBy:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", "  \
    \  var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word.hasPrefix(\"I\") {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var words\
    \ = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    for word in words {\n\
    \        if word.hasPrefix(\"I\") {\n            boredoms += 1\n        }\n  \
    \  }\n    return boredoms", "    let arr = S.split(separator: \" \")\n    var\
    \ count = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"I\" {\n    \
    \        count += 1\n        }\n    }\n    return count", "    let sentences =\
    \ S.split(separator: \".\")\n    var boredoms = 0\n    for sentence in sentences\
    \ {\n        let words = sentence.split(separator: \" \")\n        if words.count\
    \ > 0 {\n            if words[0] == \"I\" {\n                boredoms += 1\n \
    \           }\n        }\n    }\n    return boredoms", "    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    var boredoms = 0\n    for sentence in sentences\
    \ {\n        if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms", "    let words = S.split(separator: \" \"\
    )\n    var count = 0\n    for word in words {\n        if word == \"I\" {\n  \
    \          count += 1\n        }\n    }\n    return count", "    var boredoms\
    \ = 0\n    var words = S.split(separator: \" \")\n    for word in words {\n  \
    \      if word.first == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for sentence\
    \ in sentences {\n        if sentence.hasPrefix(\"I\") {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.split(separator: \" \")\n    for word in words {\n        if word.lowercased()\
    \ == \"i\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    let sentences = S.components(separatedBy: \".?!\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms", "    let s =\
    \ S.split(separator: \" \")\n    var count = 0\n    for i in s {\n        if i\
    \ == \"I\" {\n            count += 1\n        }\n    }\n    return count", " \
    \   let words = S.components(separatedBy: \" \")\n    var boredoms = 0\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let arr = S.split(separator: \" \"\
    )\n    var count = 0\n    for i in 0..<arr.count {\n        if arr[i] == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var boredoms\
    \ = 0\n    let words = S.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let words = S.split(separator:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", "  \
    \  var boredoms = 0\n    let sentences = S.split(separator: \".\")\n    for sentence\
    \ in sentences {\n        let words = sentence.split(separator: \" \")\n     \
    \   if words.count > 0 && words[0] == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let words = S.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for word in words {\n        if word == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count", "    let s =\
    \ S.lowercased()\n    let arr = s.components(separatedBy: \" \")\n    var count\
    \ = 0\n    for i in arr {\n        if i == \"i\" {\n            count += 1\n \
    \       }\n    }\n    return count", "    let arr = S.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for i in 0..<arr.count {\n        if arr[i] ==\
    \ \"I\" {\n            count += 1\n        }\n    }\n    return count", "    var\
    \ boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for word\
    \ in words {\n        if word == \"I\" {\n            boredoms += 1\n        }\n\
    \    }\n    return boredoms", "    let words = S.split(separator: \" \")\n   \
    \ var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n    \
    \        boredoms += 1\n        }\n    }\n    return boredoms", "    var boredoms\
    \ = 0\n    let sentences = S.split(separator: \".\")\n    for sentence in sentences\
    \ {\n        let words = sentence.split(separator: \" \")\n        if words.count\
    \ > 0 {\n            if words[0] == \"I\" {\n                boredoms += 1\n \
    \           }\n        }\n    }\n    return boredoms", "    var boredoms = 0\n\
    \    var sentence = \"\"\n    for char in S {\n        if char == \".\" || char\
    \ == \"?\" || char == \"!\" {\n            if sentence.hasPrefix(\"I\") {\n  \
    \              boredoms += 1\n            }\n            sentence = \"\"\n   \
    \     } else {\n            sentence += String(char)\n        }\n    }\n    return\
    \ boredoms", "    let words = S.components(separatedBy: \" \")\n    var boredoms\
    \ = 0\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ sentence = \"\"\n    for c in S {\n        if c == \".\" || c == \"?\" || c\
    \ == \"!\" {\n            if sentence.hasPrefix(\"I\") {\n                boredoms\
    \ += 1\n            }\n            sentence = \"\"\n        } else {\n       \
    \     sentence.append(c)\n        }\n    }\n    return boredoms", "    var boredoms\
    \ = 0\n    var words = S.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    let arr = S.components(separatedBy: \".\")\n    var\
    \ count = 0\n    for i in arr {\n        if i.hasPrefix(\"I\") {\n           \
    \ count += 1\n        }\n    }\n    return count", "    let words = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    var boredoms = 0\n    for word in words {\n    \
    \    if word.hasPrefix(\"I\") {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    let words = S.components(separatedBy: \" \")\n   \
    \ var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n    \
    \        boredoms += 1\n        }\n    }\n    return boredoms", "    var boredoms\
    \ = 0\n    var words = S.split(separator: \" \")\n    for word in words {\n  \
    \      if word.lowercased() == \"i\" {\n            boredoms += 1\n        }\n\
    \    }\n    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var count = 0\n    let sentences\
    \ = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    for sentence in sentences\
    \ {\n        let words = sentence.components(separatedBy: \" \")\n        if words.count\
    \ > 0 && words[0] == \"I\" {\n            count += 1\n        }\n    }\n    return\
    \ count", "    let words = S.components(separatedBy: \" \")\n    var boredoms\
    \ = 0\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.components(separatedBy: \" \")\n    for word in words {\n        if\
    \ word == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let words = S.components(separatedBy:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", "  \
    \  let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for sentence\
    \ in sentences {\n        let words = sentence.split(separator: \" \")\n     \
    \   if words.count > 0 {\n            if words[0] == \"I\" {\n               \
    \ boredoms += 1\n            }\n        }\n    }\n    return boredoms", "    let\
    \ S = S.lowercased()\n    let words = S.components(separatedBy: \" \")\n    var\
    \ count = 0\n    for word in words {\n        if word == \"i\" {\n           \
    \ count += 1\n        }\n    }\n    return count", "    let arr = S.components(separatedBy:\
    \ \" \")\n    var boredoms = 0\n    for i in 0..<arr.count {\n        if arr[i]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms", "    let words\
    \ = S.split(separator: \" \")\n    var boredoms = 0\n    for word in words {\n\
    \        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n   \
    \ return boredoms", "    var boredoms = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.split(separator: \" \")\n    for word in words {\n        if word\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    let arr = S.components(separatedBy: \" \")\n    var count = 0\n    for word\
    \ in arr {\n        if word == \"I\" {\n            count += 1\n        }\n  \
    \  }\n    return count", "    var boredoms = 0\n    var sentence = \"\"\n    for\
    \ char in S {\n        if char == \".\" || char == \"?\" || char == \"!\" {\n\
    \            if sentence.hasPrefix(\"I\") {\n                boredoms += 1\n \
    \           }\n            sentence = \"\"\n        } else {\n            sentence\
    \ += String(char)\n        }\n    }\n    return boredoms", "    var boredoms =\
    \ 0\n    let sentences = S.components(separatedBy: \".\")\n    for sentence in\
    \ sentences {\n        let words = sentence.components(separatedBy: \" \")\n \
    \       if words.count > 0 && words[0] == \"I\" {\n            boredoms += 1\n\
    \        }\n    }\n    return boredoms", "    let words = S.components(separatedBy:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", "  \
    \  var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms", " \
    \   let arr = S.components(separatedBy: \" \")\n    var count = 0\n    for i in\
    \ 0..<arr.count {\n        if arr[i] == \"I\" {\n            count += 1\n    \
    \    }\n    }\n    return count", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let sentences = S.split(separator:\
    \ \".\")\n    var boredoms = 0\n    for sentence in sentences {\n        let words\
    \ = sentence.split(separator: \" \")\n        if words.count > 0 && words[0] ==\
    \ \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let sentences = S.split(separator:\
    \ \".\")\n    var boredoms = 0\n    for sentence in sentences {\n        let words\
    \ = sentence.split(separator: \" \")\n        if words.count > 0 && words[0] ==\
    \ \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n  \
    \  for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n     \
    \       boredoms += 1\n        }\n    }\n    return boredoms", "    let s = S.lowercased()\n\
    \    let arr = s.components(separatedBy: \".\")\n    var count = 0\n    for i\
    \ in arr {\n        if i.hasPrefix(\"i\") {\n            count += 1\n        }\n\
    \    }\n    return count", "    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.components(separatedBy: \" \")\n    for word in words {\n        if\
    \ word == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var words = S.split(separator: \" \")\n    for word in\
    \ words {\n        if word.lowercased() == \"i\" {\n            boredoms += 1\n\
    \        }\n    }\n    return boredoms", "    let S = S.lowercased()\n    let\
    \ sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"i\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms", "    let arr\
    \ = S.components(separatedBy: \" \")\n    var count = 0\n    for i in 0..<arr.count\
    \ {\n        if arr[i] == \"I\" {\n            count += 1\n        }\n    }\n\
    \    return count", "    let boredoms = S.components(separatedBy: \"I\")\n   \
    \ return boredoms.count - 1", "    let words = S.components(separatedBy: \" \"\
    )\n    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms", "    var count\
    \ = 0\n    var isBored = false\n    for char in S {\n        if char == \"I\"\
    \ {\n            isBored = true\n        } else if isBored && (char == \".\" ||\
    \ char == \"?\" || char == \"!\") {\n            count += 1\n            isBored\
    \ = false\n        }\n    }\n    return count", "    let S = S.lowercased()\n\
    \    var boredoms = 0\n    var start = S.startIndex\n    var end = S.endIndex\n\
    \    var range = start..<end\n    while range.lowerBound < range.upperBound {\n\
    \        let r = S.rangeOfCharacter(from: CharacterSet.punctuationCharacters,\
    \ options: [], range: range)\n        if let r = r {\n            end = r.lowerBound\n\
    \            range = start..<end\n        } else {\n            end = S.endIndex\n\
    \            range = start..<end\n        }\n        let substr = S[range]\n \
    \       if substr.hasPrefix(\"i\") {\n            boredoms += 1\n        }\n \
    \       if let r = r {\n            start = r.upperBound\n            range =\
    \ start..<end\n        } else {\n            break\n        }\n    }\n    return\
    \ boredoms", "    let words = S.components(separatedBy: \" \")\n    var boredoms\
    \ = 0\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let sentences = S.split(separator:\
    \ \".\")\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms", " \
    \   let words = S.components(separatedBy: \" \")\n    var boredoms = 0\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    var boredoms = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.split(separator: \" \")\n    for word in words {\n        if word\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    let words = S.split(separator: \" \")\n    var boredoms = 0\n    for word in\
    \ words {\n        if word == \"I\" {\n            boredoms += 1\n        }\n\
    \    }\n    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let sentences = S.split(separator:\
    \ \".\")\n    let boredoms = sentences.filter { $0.hasPrefix(\"I\") }\n    return\
    \ boredoms.count", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word.lowercased() == \"i\" {\n \
    \           boredoms += 1\n        }\n    }\n    return boredoms", "    var boredoms\
    \ = 0\n    var sentence = \"\"\n    for char in S {\n        if char == \".\"\
    \ || char == \"?\" || char == \"!\" {\n            if sentence.hasPrefix(\"I\"\
    ) {\n                boredoms += 1\n            }\n            sentence = \"\"\
    \n        } else {\n            sentence += String(char)\n        }\n    }\n \
    \   return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for word in words {\n        if word.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms", " \
    \   var boredoms = 0\n    let words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let sentences = S.split(separator:\
    \ \".\")\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms", " \
    \   let words = S.components(separatedBy: \" \")\n    var count = 0\n    for word\
    \ in words {\n        if word == \"I\" {\n            count += 1\n        }\n\
    \    }\n    return count", "    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.split(separator: \" \")\n    for word in words {\n        if word.first\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    var boredoms = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.components(separatedBy: \" \")\n    for word in words {\n        if\
    \ word == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    let words = S.components(separatedBy: \" \")\n    var count = 0\n    for word\
    \ in words {\n        if word == \"I\" {\n            count += 1\n        }\n\
    \    }\n    return count", "    let words = S.components(separatedBy: \" \")\n\
    \    var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n \
    \           boredoms += 1\n        }\n    }\n    return boredoms", "    var boredoms\
    \ = 0\n    var words = S.split(separator: \" \")\n    for word in words {\n  \
    \      if word.lowercased() == \"i\" {\n            boredoms += 1\n        }\n\
    \    }\n    return boredoms", "    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let words = S.components(separatedBy:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", '    return
    S.components(separatedBy: "I").count - 1', "    var boredoms = 0\n    var words\
    \ = S.components(separatedBy: \" \")\n    for word in words {\n        if word\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", '    return S.components(separatedBy: "I").count
    - 1', "    let words = S.components(separatedBy: \" \")\n    var boredoms = 0\n\
    \    for word in words {\n        if word == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms", "    let words = S.components(separatedBy:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", "  \
    \  let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n  \
    \  for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n     \
    \       boredoms += 1\n        }\n    }\n    return boredoms", "    let words\
    \ = S.components(separatedBy: \" \")\n    var count = 0\n    for word in words\
    \ {\n        if word == \"I\" {\n            count += 1\n        }\n    }\n  \
    \  return count", "    let words = S.split(separator: \" \")\n    var count =\
    \ 0\n    for word in words {\n        if word == \"I\" {\n            count +=\
    \ 1\n        }\n    }\n    return count", "    let words = S.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for word in words {\n        if word == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var boredoms\
    \ = 0\n    var words = S.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.components(separatedBy: \" \")\n    for word in words {\n        if\
    \ word.hasPrefix(\"I\") {\n            boredoms += 1\n        }\n    }\n    return\
    \ boredoms", "    let sentences = S.split(separator: \".\").map { String($0) }\n\
    \    let boredoms = sentences.filter { $0.starts(with: \"I\") }\n    return boredoms.count",
  "    let words = S.components(separatedBy: \" \")\n    var boredoms = 0\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    let words = S.components(separatedBy:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", '    return
    S.components(separatedBy: "I").count - 1', "    let words = S.split(separator:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", "  \
    \  let s = S.lowercased()\n    var boredoms = 0\n    var i = 0\n    while i <\
    \ s.count {\n        let index = s.index(s.startIndex, offsetBy: i)\n        let\
    \ c = s[index]\n        if c == \"i\" {\n            let index2 = s.index(s.startIndex,\
    \ offsetBy: i + 1)\n            let c2 = s[index2]\n            if c2 == \" \"\
    \ {\n                boredoms += 1\n            }\n        }\n        i += 1\n\
    \    }\n    return boredoms", "    let sentences = S.split(separator: \".\")\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", '    return S.components(separatedBy:
    "I").count - 1', "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let words = S.split(separator:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", "  \
    \  let s = S.lowercased()\n    let arr = s.split(separator: \" \")\n    var count\
    \ = 0\n    for i in arr {\n        if i == \"i\" {\n            count += 1\n \
    \       }\n    }\n    return count", "    var boredoms = 0\n    let sentences\
    \ = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    for sentence in sentences\
    \ {\n        let words = sentence.components(separatedBy: \" \")\n        if words.count\
    \ > 0 && words[0] == \"I\" {\n            boredoms += 1\n        }\n    }\n  \
    \  return boredoms", "    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    let words = S.components(separatedBy: \" \")\n    var boredoms = 0\n    for\
    \ word in words {\n        if word == \"I\" {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms", "    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.split(separator: \" \")\n    for i in 0..<words.count {\n        if\
    \ words[i] == \"I\" {\n            boredoms += 1\n        }\n    }\n    return\
    \ boredoms", '    return S.components(separatedBy: "I").count - 1', "    var boredoms\
    \ = 0\n    var words = S.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    var boredoms = 0\n    var words = S.split(separator:\
    \ \" \")\n    for word in words {\n        if word.hasPrefix(\"I\") {\n      \
    \      boredoms += 1\n        }\n    }\n    return boredoms", "    var boredoms\
    \ = 0\n    var words = S.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    var count = 0\n    let words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            count\
    \ += 1\n        }\n    }\n    return count", "    let words = S.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for word in words {\n        if word == \"I\"\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var boredoms\
    \ = 0\n    var words = S.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    let arr = S.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for i in 0..<arr.count {\n        if arr[i] ==\
    \ \"I\" {\n            count += 1\n        }\n    }\n    return count", "    let\
    \ sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms", "    let sentences\
    \ = S.components(separatedBy: \".!?\")\n    var boredoms = 0\n    for sentence\
    \ in sentences {\n        let words = sentence.components(separatedBy: \" \")\n\
    \        if words.count > 0 && words[0] == \"I\" {\n            boredoms += 1\n\
    \        }\n    }\n    return boredoms", "    let words = S.split(separator: \"\
    \ \")\n    var boredoms = 0\n    for word in words {\n        if word == \"I\"\
    \ {\n            boredoms += 1\n        }\n    }\n    return boredoms", "    var\
    \ boredoms = 0\n    var words = S.components(separatedBy: \" \")\n    for word\
    \ in words {\n        if word == \"I\" {\n            boredoms += 1\n        }\n\
    \    }\n    return boredoms", "    let sentences = S.components(separatedBy: [\"\
    .\", \"?\", \"!\"])\n    var boredoms = 0\n    for sentence in sentences {\n \
    \       if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n        }\n\
    \    }\n    return boredoms", "    var boredoms = 0\n    var words = S.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.components(separatedBy: \" \")\n    for word in words {\n        if\
    \ word.hasPrefix(\"I\") {\n            boredoms += 1\n        }\n    }\n    return\
    \ boredoms", "    let words = S.components(separatedBy: \" \")\n    var boredoms\
    \ = 0\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.split(separator: \" \")\n    for word in words {\n        if word\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  '    return S.components(separatedBy: "I").count - 1', "    let arr = S.components(separatedBy:\
    \ \" \")\n    var count = 0\n    for word in arr {\n        if word == \"I\" {\n\
    \            count += 1\n        }\n    }\n    return count", "    var boredoms\
    \ = 0\n    var words = S.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    let words = S.components(separatedBy: \" \")\n   \
    \ var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n    \
    \        boredoms += 1\n        }\n    }\n    return boredoms", "    var boredoms\
    \ = 0\n    var words = S.split(separator: \" \")\n    for word in words {\n  \
    \      if word == \"I\" {\n            boredoms += 1\n        }\n    }\n    return\
    \ boredoms", "    let words = S.components(separatedBy: \" \")\n    var boredoms\
    \ = 0\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var boredoms = 0\n    var\
    \ words = S.components(separatedBy: \" \")\n    for word in words {\n        if\
    \ word == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms",
  "    var boredoms = 0\n    var sentence = \"\"\n    for char in S {\n        if\
    \ char == \".\" || char == \"?\" || char == \"!\" {\n            if sentence.hasPrefix(\"\
    I\") {\n                boredoms += 1\n            }\n            sentence = \"\
    \"\n        } else {\n            sentence += String(char)\n        }\n    }\n\
    \    return boredoms", "    let words = S.components(separatedBy: \" \")\n   \
    \ var boredoms = 0\n    for word in words {\n        if word == \"I\" {\n    \
    \        boredoms += 1\n        }\n    }\n    return boredoms", "    var boredoms\
    \ = 0\n    var words = S.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms", "    let words = S.split(separator: \" \")\n    var boredoms\
    \ = 0\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms", "    var count = 0\n    var words\
    \ = S.split(separator: \" \")\n    for word in words {\n        if word.first\
    \ == \"I\" {\n            count += 1\n        }\n    }\n    return count", '    return
    S.components(separatedBy: "I").count - 1', "    let words = S.components(separatedBy:\
    \ \" \")\n    var boredoms = 0\n    for word in words {\n        if word == \"\
    I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms", "  \
    \  let words = S.components(separatedBy: \" \")\n    var count = 0\n    for word\
    \ in words {\n        if word == \"I\" {\n            count += 1\n        }\n\
    \    }\n    return count", "    let words = S.split(separator: \" \")\n    var\
    \ boredoms = 0\n    for word in words {\n        if word == \"I\" {\n        \
    \    boredoms += 1\n        }\n    }\n    return boredoms", "    let sentences\
    \ = S.split(separator: \".\")\n    var boredoms = 0\n    for sentence in sentences\
    \ {\n        let words = sentence.split(separator: \" \")\n        if words.count\
    \ > 0 && words[0] == \"I\" {\n            boredoms += 1\n        }\n    }\n  \
    \  return boredoms"]
stop_tokens:
- "\n}"

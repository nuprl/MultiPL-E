language: swift
name: HumanEval_26_remove_duplicates
results:
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen = Set<Int>()\n    var result = [Int]()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            seen.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmps4vnzewx/tmps4vnzewx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05a575bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05a5452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05a5452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05a54517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4vnzewx                        0x0000560c6c24d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b05a5947460 __libc_start_main +
    245

    6    tmps4vnzewx                        0x0000560c6c24d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var set: Set<Int> = []\n\
    \    for number in numbers {\n        if set.contains(number) {\n            continue\n\
    \        }\n        set.insert(number)\n        result.append(number)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_ivx9nh/tmpr_ivx9nh.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afd06009c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afd05d00b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afd05d00988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afd05cff7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_ivx9nh                        0x0000561104d13941 <unavailable> + 6465

    5    libc.so.6                          0x00002afd061f5460 __libc_start_main +
    245

    6    tmpr_ivx9nh                        0x0000561104d132f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !result.contains(number) {\n            result.append(number)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpl3fa91jt/tmpl3fa91jt.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99f4b97c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99f488eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99f488e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99f488d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3fa91jt                        0x0000560808242841 <unavailable> + 6209

    5    libc.so.6                          0x00002b99f4d83460 __libc_start_main +
    245

    6    tmpl3fa91jt                        0x00005608082421f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    var uniqueNumbersDict\
    \ = [Int: Int]()\n    \n    for number in numbers {\n        if uniqueNumbersDict[number]\
    \ == nil {\n            uniqueNumbersDict[number] = 1\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    \n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpf15m65s4/tmpf15m65s4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a5de79c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a5db70b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a5db70988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a5db6f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf15m65s4                        0x0000555afbd7c961 <unavailable> + 6497

    5    libc.so.6                          0x00002b5a5e065460 __libc_start_main +
    245

    6    tmpf15m65s4                        0x0000555afbd7c319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    return Array(Set(numbers))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpdzqsib6y/tmpdzqsib6y.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6aa8d0cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6aa8a03b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6aa8a03988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6aa8a027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdzqsib6y                        0x000056000410c60d <unavailable> + 5645

    5    libc.so.6                          0x00002b6aa8ef8460 __libc_start_main +
    245

    6    tmpdzqsib6y                        0x000056000410c129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    var unique_numbers_set\
    \ = Set<Int>()\n    for number in numbers {\n        if !unique_numbers_set.contains(number)\
    \ {\n            unique_numbers.append(number)\n            unique_numbers_set.insert(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfkqakuw/tmpsfkqakuw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af6c2770c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af6c2467b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af6c2467988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af6c24667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfkqakuw                        0x0000562096107981 <unavailable> + 6529

    5    libc.so.6                          0x00002af6c295c460 __libc_start_main +
    245

    6    tmpsfkqakuw                        0x0000562096107339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !result.contains(number) {\n            result.append(number)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpl3fa91jt/tmpl3fa91jt.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99f4b97c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99f488eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99f488e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99f488d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3fa91jt                        0x0000560808242841 <unavailable> + 6209

    5    libc.so.6                          0x00002b99f4d83460 __libc_start_main +
    245

    6    tmpl3fa91jt                        0x00005608082421f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen = Set<Int>()\n    var result = [Int]()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            seen.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmps4vnzewx/tmps4vnzewx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05a575bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05a5452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05a5452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05a54517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4vnzewx                        0x0000560c6c24d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b05a5947460 __libc_start_main +
    245

    6    tmps4vnzewx                        0x0000560c6c24d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var set = Set<Int>()\n    for\
    \ number in numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr7emj1y3/tmpr7emj1y3.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addf7ef6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addf7bedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addf7bed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addf7bec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr7emj1y3                        0x000055a8abb73981 <unavailable> + 6529

    5    libc.so.6                          0x00002addf80e2460 __libc_start_main +
    245

    6    tmpr7emj1y3                        0x000055a8abb73339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen = Set<Int>()\n    var result = [Int]()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            seen.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmps4vnzewx/tmps4vnzewx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05a575bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05a5452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05a5452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05a54517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4vnzewx                        0x0000560c6c24d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b05a5947460 __libc_start_main +
    245

    6    tmps4vnzewx                        0x0000560c6c24d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var set = Set<Int>()\n    for\
    \ number in numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr7emj1y3/tmpr7emj1y3.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addf7ef6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addf7bedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addf7bed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addf7bec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr7emj1y3                        0x000055a8abb73981 <unavailable> + 6529

    5    libc.so.6                          0x00002addf80e2460 __libc_start_main +
    245

    6    tmpr7emj1y3                        0x000055a8abb73339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !result.contains(number) {\n            result.append(number)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpl3fa91jt/tmpl3fa91jt.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99f4b97c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99f488eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99f488e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99f488d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3fa91jt                        0x0000560808242841 <unavailable> + 6209

    5    libc.so.6                          0x00002b99f4d83460 __libc_start_main +
    245

    6    tmpl3fa91jt                        0x00005608082421f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen = Set<Int>()\n    var result = [Int]()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            seen.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmps4vnzewx/tmps4vnzewx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05a575bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05a5452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05a5452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05a54517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4vnzewx                        0x0000560c6c24d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b05a5947460 __libc_start_main +
    245

    6    tmps4vnzewx                        0x0000560c6c24d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var set: Set<Int> = []\n\
    \    for number in numbers {\n        if !set.contains(number) {\n           \
    \ result.append(number)\n            set.insert(number)\n        }\n    }\n  \
    \  return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmportiy1my/tmportiy1my.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c94fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c91f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c91f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c91f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmportiy1my                        0x0000558f786c3941 <unavailable> + 6465

    5    libc.so.6                          0x00002b13c96ea460 __libc_start_main +
    245

    6    tmportiy1my                        0x0000558f786c32f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var set = Set<Int>()\n    for\
    \ number in numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr7emj1y3/tmpr7emj1y3.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addf7ef6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addf7bedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addf7bed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addf7bec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr7emj1y3                        0x000055a8abb73981 <unavailable> + 6529

    5    libc.so.6                          0x00002addf80e2460 __libc_start_main +
    245

    6    tmpr7emj1y3                        0x000055a8abb73339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    return []\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpofufmndy/tmpofufmndy.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3182607c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31822feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31822fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31822fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpofufmndy                        0x00005629e97f44ad <unavailable> + 5293

    5    libc.so.6                          0x00002b31827f3460 __libc_start_main +
    245

    6    tmpofufmndy                        0x00005629e97f3fc9 <unavailable> + 4041

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen = Set<Int>()\n    var result = [Int]()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            seen.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmps4vnzewx/tmps4vnzewx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05a575bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05a5452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05a5452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05a54517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4vnzewx                        0x0000560c6c24d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b05a5947460 __libc_start_main +
    245

    6    tmps4vnzewx                        0x0000560c6c24d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniques: [Int] = []\n    for number in numbers {\n\
    \        if !uniques.contains(number) {\n            uniques.append(number)\n\
    \        }\n    }\n    return uniques\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpda60zir1/tmpda60zir1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ed835ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ed8051b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ed8051988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ed80507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpda60zir1                        0x000055dea7af5841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5ed8546460 __libc_start_main +
    245

    6    tmpda60zir1                        0x000055dea7af51f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers: [Int] = []\n    var unique_numbers_set:\
    \ Set<Int> = []\n    for number in numbers {\n        if !unique_numbers_set.contains(number)\
    \ {\n            unique_numbers.append(number)\n            unique_numbers_set.insert(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5fhjyln9/tmp5fhjyln9.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9abe405c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9abe0fcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9abe0fc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9abe0fb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fhjyln9                        0x000055f300c9e941 <unavailable> + 6465

    5    libc.so.6                          0x00002b9abe5f1460 __libc_start_main +
    245

    6    tmp5fhjyln9                        0x000055f300c9e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var numbers_set = Set<Int>()\n    var result = [Int]()\n\
    \    for number in numbers {\n        if numbers_set.contains(number) {\n    \
    \        continue\n        }\n        numbers_set.insert(number)\n        result.append(number)\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpcuh1m3uz/tmpcuh1m3uz.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c41692c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c41389b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c41389988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c413887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcuh1m3uz                        0x0000561b6b6d9981 <unavailable> + 6529

    5    libc.so.6                          0x00002b0c4187e460 __libc_start_main +
    245

    6    tmpcuh1m3uz                        0x0000561b6b6d9339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    return Array(Set(numbers))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpdzqsib6y/tmpdzqsib6y.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6aa8d0cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6aa8a03b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6aa8a03988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6aa8a027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdzqsib6y                        0x000056000410c60d <unavailable> + 5645

    5    libc.so.6                          0x00002b6aa8ef8460 __libc_start_main +
    245

    6    tmpdzqsib6y                        0x000056000410c129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen = Set<Int>()\n    var result = [Int]()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            seen.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmps4vnzewx/tmps4vnzewx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05a575bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05a5452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05a5452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05a54517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4vnzewx                        0x0000560c6c24d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b05a5947460 __libc_start_main +
    245

    6    tmps4vnzewx                        0x0000560c6c24d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var set: Set<Int> = []\n\
    \    for n in numbers {\n        if !set.contains(n) {\n            result.append(n)\n\
    \            set.insert(n)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmptwjay7b6/tmptwjay7b6.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b8431fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b84016b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b84016988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b840157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptwjay7b6                        0x000055ef50346941 <unavailable> + 6465

    5    libc.so.6                          0x00002b2b8450b460 __libc_start_main +
    245

    6    tmptwjay7b6                        0x000055ef503462f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var set: Set<Int> = []\n\
    \    for number in numbers {\n        if !set.contains(number) {\n           \
    \ result.append(number)\n            set.insert(number)\n        }\n    }\n  \
    \  return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmportiy1my/tmportiy1my.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c94fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c91f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c91f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c91f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmportiy1my                        0x0000558f786c3941 <unavailable> + 6465

    5    libc.so.6                          0x00002b13c96ea460 __libc_start_main +
    245

    6    tmportiy1my                        0x0000558f786c32f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !result.contains(number) {\n            result.append(number)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpl3fa91jt/tmpl3fa91jt.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99f4b97c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99f488eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99f488e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99f488d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3fa91jt                        0x0000560808242841 <unavailable> + 6209

    5    libc.so.6                          0x00002b99f4d83460 __libc_start_main +
    245

    6    tmpl3fa91jt                        0x00005608082421f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var numbers_set = Set<Int>()\n    var result = [Int]()\n\
    \    for number in numbers {\n        if !numbers_set.contains(number) {\n   \
    \         numbers_set.insert(number)\n            result.append(number)\n    \
    \    }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpv_c76afi/tmpv_c76afi.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b54e4a97c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b54e478eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b54e478e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b54e478d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv_c76afi                        0x00005571c6b75981 <unavailable> + 6529

    5    libc.so.6                          0x00002b54e4c83460 __libc_start_main +
    245

    6    tmpv_c76afi                        0x00005571c6b75339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for i in numbers {\n    \
    \    if !result.contains(i) {\n            result.append(i)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmp43czt6_d/tmp43czt6_d.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e7de53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e7db4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e7db4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e7db497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43czt6_d                        0x00005609ff46f841 <unavailable> + 6209

    5    libc.so.6                          0x00002b8e7e03f460 __libc_start_main +
    245

    6    tmp43czt6_d                        0x00005609ff46f1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    var uniqueNumbersSet\
    \ = Set<Int>()\n    \n    for number in numbers {\n        if !uniqueNumbersSet.contains(number)\
    \ {\n            uniqueNumbers.append(number)\n            uniqueNumbersSet.insert(number)\n\
    \        }\n    }\n    \n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpd6e9z5py/tmpd6e9z5py.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae96f230c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae96ef27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae96ef27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae96ef267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6e9z5py                        0x000055feec49f981 <unavailable> + 6529

    5    libc.so.6                          0x00002ae96f41c460 __libc_start_main +
    245

    6    tmpd6e9z5py                        0x000055feec49f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen = Set<Int>()\n    var result = [Int]()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            seen.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmps4vnzewx/tmps4vnzewx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05a575bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05a5452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05a5452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05a54517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4vnzewx                        0x0000560c6c24d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b05a5947460 __libc_start_main +
    245

    6    tmps4vnzewx                        0x0000560c6c24d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var set: Set<Int> = []\n\
    \    for number in numbers {\n        if !set.contains(number) {\n           \
    \ result.append(number)\n            set.insert(number)\n        }\n    }\n  \
    \  return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmportiy1my/tmportiy1my.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c94fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c91f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c91f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c91f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmportiy1my                        0x0000558f786c3941 <unavailable> + 6465

    5    libc.so.6                          0x00002b13c96ea460 __libc_start_main +
    245

    6    tmportiy1my                        0x0000558f786c32f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var set: Set<Int> = []\n\
    \    for number in numbers {\n        if !set.contains(number) {\n           \
    \ result.append(number)\n            set.insert(number)\n        }\n    }\n  \
    \  return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmportiy1my/tmportiy1my.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c94fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c91f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c91f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c91f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmportiy1my                        0x0000558f786c3941 <unavailable> + 6465

    5    libc.so.6                          0x00002b13c96ea460 __libc_start_main +
    245

    6    tmportiy1my                        0x0000558f786c32f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen = Set<Int>()\n    var result = [Int]()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            seen.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmps4vnzewx/tmps4vnzewx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05a575bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05a5452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05a5452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05a54517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4vnzewx                        0x0000560c6c24d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b05a5947460 __libc_start_main +
    245

    6    tmps4vnzewx                        0x0000560c6c24d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Int] = [:]\n    var result: [Int] = []\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            seen[number]\
    \ = 1\n            result.append(number)\n        } else {\n            seen[number]!\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpma8w2jvz/tmpma8w2jvz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8bbdbe3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8bbd8dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8bbd8da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8bbd8d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpma8w2jvz                        0x0000560f280daa01 <unavailable> + 6657

    5    libc.so.6                          0x00002b8bbddcf460 __libc_start_main +
    245

    6    tmpma8w2jvz                        0x0000560f280da3b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var numbers_set = Set<Int>()\n    var result = [Int]()\n\
    \    for number in numbers {\n        if numbers_set.contains(number) {\n    \
    \        continue\n        }\n        numbers_set.insert(number)\n        result.append(number)\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpcuh1m3uz/tmpcuh1m3uz.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c41692c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c41389b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c41389988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c413887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcuh1m3uz                        0x0000561b6b6d9981 <unavailable> + 6529

    5    libc.so.6                          0x00002b0c4187e460 __libc_start_main +
    245

    6    tmpcuh1m3uz                        0x0000561b6b6d9339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen = Set<Int>()\n    var result = [Int]()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            seen.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmps4vnzewx/tmps4vnzewx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05a575bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05a5452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05a5452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05a54517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4vnzewx                        0x0000560c6c24d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b05a5947460 __libc_start_main +
    245

    6    tmps4vnzewx                        0x0000560c6c24d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    return numbers.filter\
    \ { seen.updateValue(true, forKey: $0) == nil }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpcatd0cuk/tmpcatd0cuk.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40589f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40586ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40586ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40586eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcatd0cuk                        0x000055e5ff86e821 <unavailable> + 6177

    5    libc.so.6                          0x00002b4058be1460 __libc_start_main +
    245

    6    tmpcatd0cuk                        0x000055e5ff86e1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var set = Set<Int>()\n    for\
    \ number in numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr7emj1y3/tmpr7emj1y3.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addf7ef6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addf7bedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addf7bed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addf7bec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr7emj1y3                        0x000055a8abb73981 <unavailable> + 6529

    5    libc.so.6                          0x00002addf80e2460 __libc_start_main +
    245

    6    tmpr7emj1y3                        0x000055a8abb73339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var numbers_set = Set<Int>()\n    var result = [Int]()\n\
    \    for number in numbers {\n        if !numbers_set.contains(number) {\n   \
    \         numbers_set.insert(number)\n            result.append(number)\n    \
    \    }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpv_c76afi/tmpv_c76afi.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b54e4a97c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b54e478eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b54e478e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b54e478d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv_c76afi                        0x00005571c6b75981 <unavailable> + 6529

    5    libc.so.6                          0x00002b54e4c83460 __libc_start_main +
    245

    6    tmpv_c76afi                        0x00005571c6b75339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var set: Set<Int> = []\n\
    \    for number in numbers {\n        if !set.contains(number) {\n           \
    \ result.append(number)\n            set.insert(number)\n        }\n    }\n  \
    \  return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmportiy1my/tmportiy1my.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c94fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c91f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c91f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c91f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmportiy1my                        0x0000558f786c3941 <unavailable> + 6465

    5    libc.so.6                          0x00002b13c96ea460 __libc_start_main +
    245

    6    tmportiy1my                        0x0000558f786c32f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var numbers_set = Set<Int>()\n    var result = [Int]()\n\
    \    for number in numbers {\n        if !numbers_set.contains(number) {\n   \
    \         numbers_set.insert(number)\n            result.append(number)\n    \
    \    }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpv_c76afi/tmpv_c76afi.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b54e4a97c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b54e478eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b54e478e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b54e478d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv_c76afi                        0x00005571c6b75981 <unavailable> + 6529

    5    libc.so.6                          0x00002b54e4c83460 __libc_start_main +
    245

    6    tmpv_c76afi                        0x00005571c6b75339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    var seen_numbers =\
    \ [Int: Bool]()\n    for number in numbers {\n        if seen_numbers[number]\
    \ == nil {\n            unique_numbers.append(number)\n            seen_numbers[number]\
    \ = true\n        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpdsmk16nm/tmpdsmk16nm.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d071d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d06ecdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d06ecd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d06ecc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdsmk16nm                        0x00005565013d3991 <unavailable> + 6545

    5    libc.so.6                          0x00002b3d073c2460 __libc_start_main +
    245

    6    tmpdsmk16nm                        0x00005565013d3349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] =\
    \ []\n    for number in numbers {\n        if seen[number] == nil {\n        \
    \    seen[number] = true\n            result.append(number)\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpga31jv1u/tmpga31jv1u.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f034b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f031afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f031af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f031ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga31jv1u                        0x000055ef94e41961 <unavailable> + 6497

    5    libc.so.6                          0x00002b7f036a4460 __libc_start_main +
    245

    6    tmpga31jv1u                        0x000055ef94e41319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var new_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !new_numbers.contains(number) {\n            new_numbers.append(number)\n\
    \        }\n    }\n    return new_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpga5kw1ha/tmpga5kw1ha.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab20ff5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab20fc56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab20fc56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab20fc557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpga5kw1ha                        0x000055a92bed9891 <unavailable> + 6289

    5    libc.so.6                          0x00002ab21014b460 __libc_start_main +
    245

    6    tmpga5kw1ha                        0x000055a92bed9249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var seen: [Int: Int] = [:]\n    var result: [Int] = []\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            seen[number]\
    \ = 1\n            result.append(number)\n        } else {\n            seen[number]!\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpma8w2jvz/tmpma8w2jvz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8bbdbe3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8bbd8dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8bbd8da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8bbd8d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpma8w2jvz                        0x0000560f280daa01 <unavailable> + 6657

    5    libc.so.6                          0x00002b8bbddcf460 __libc_start_main +
    245

    6    tmpma8w2jvz                        0x0000560f280da3b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var numbers_set = Set<Int>()\n    var result = [Int]()\n\
    \    for number in numbers {\n        if numbers_set.contains(number) {\n    \
    \        continue\n        }\n        numbers_set.insert(number)\n        result.append(number)\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpcuh1m3uz/tmpcuh1m3uz.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c41692c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c41389b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c41389988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c413887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcuh1m3uz                        0x0000561b6b6d9981 <unavailable> + 6529

    5    libc.so.6                          0x00002b0c4187e460 __libc_start_main +
    245

    6    tmpcuh1m3uz                        0x0000561b6b6d9339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !result.contains(number) {\n            result.append(number)\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpwu8gvcym/tmpwu8gvcym.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17e4387c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17e407eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17e407e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17e407d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwu8gvcym                        0x0000557e58522891 <unavailable> + 6289

    5    libc.so.6                          0x00002b17e4573460 __libc_start_main +
    245

    6    tmpwu8gvcym                        0x0000557e58522249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique_numbers = [Int]()\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp4eduiy28/tmp4eduiy28.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f4c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4eduiy28                        0x000055d756c89891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba1f4e32460 __libc_start_main +
    245

    6    tmp4eduiy28                        0x000055d756c89249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp70mjwrnv/tmp70mjwrnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64cb166c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64cae5db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64cae5d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64cae5c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70mjwrnv                        0x000056019cf3e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b64cb352460 __libc_start_main +
    245

    6    tmp70mjwrnv                        0x000056019cf3e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = Set<Int>()\n   \
    \ for number in numbers {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp1zacdsp4/tmp1zacdsp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a9b70dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a9b404b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a9b404988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a9b4037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1zacdsp4                        0x00005581f00ce981 <unavailable> + 6529

    5    libc.so.6                          0x00002b4a9b8f9460 __libc_start_main +
    245

    6    tmp1zacdsp4                        0x00005581f00ce339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442

language: swift
name: HumanEval_92_any_int
results:
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    let sum = x + y + z\n    if sum == x || sum\
    \ == y || sum == z {\n        return true\n    } else {\n        return false\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3, z:\
    \ 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpwni6pp3f/tmpwni6pp3f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9138223c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9137f1ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9137f1a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9137f197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwni6pp3f                        0x0000565481caf1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b913840f460 __libc_start_main +
    245

    6    tmpwni6pp3f                        0x0000565481caee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z || y == x + z || z == x + y)\
    \ && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8kwwts7s/tmp8kwwts7s.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6f19a92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6f19789b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6f19789988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6f197887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8kwwts7s                        0x000056537014377d <unavailable> + 6013

    5    libc.so.6                          0x00002b6f19c7e460 __libc_start_main +
    245

    6    tmp8kwwts7s                        0x0000565370142f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z || x + z == y || y + z == x) {\n        \
    \    return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmplveslo8x/tmplveslo8x.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b4b8a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b4b5a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b4b5a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b4b59f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplveslo8x                        0x000055bdb9aab77d <unavailable> + 6013

    5    libc.so.6                          0x00002b0b4ba95460 __libc_start_main +
    245

    6    tmplveslo8x                        0x000055bdb9aaaf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpj5goh5u3/tmpj5goh5u3.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba434a39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba434730b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba434730988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba43472f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5goh5u3                        0x000055858437977d <unavailable> + 6013

    5    libc.so.6                          0x00002ba434c25460 __libc_start_main +
    245

    6    tmpj5goh5u3                        0x0000558584378f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z || x + z == y || y + z == x)\
    \ && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvkm5nzqf/tmpvkm5nzqf.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf659c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf656b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf656b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf656b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvkm5nzqf                        0x00005612c487677d <unavailable> + 6013

    5    libc.so.6                          0x00002acf65bad460 __libc_start_main +
    245

    6    tmpvkm5nzqf                        0x00005612c4875f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpj5goh5u3/tmpj5goh5u3.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba434a39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba434730b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba434730988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba43472f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5goh5u3                        0x000055858437977d <unavailable> + 6013

    5    libc.so.6                          0x00002ba434c25460 __libc_start_main +
    245

    6    tmpj5goh5u3                        0x0000558584378f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z || x + z == y || y + z == x) {\n        \
    \    return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmplveslo8x/tmplveslo8x.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b4b8a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b4b5a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b4b5a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b4b59f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplveslo8x                        0x000055bdb9aab77d <unavailable> + 6013

    5    libc.so.6                          0x00002b0b4ba95460 __libc_start_main +
    245

    6    tmplveslo8x                        0x000055bdb9aaaf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z || x + z == y || y + z == x) {\n        \
    \    return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmplveslo8x/tmplveslo8x.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b4b8a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b4b5a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b4b5a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b4b59f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplveslo8x                        0x000055bdb9aab77d <unavailable> + 6013

    5    libc.so.6                          0x00002b0b4ba95460 __libc_start_main +
    245

    6    tmplveslo8x                        0x000055bdb9aaaf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z || y == x + z || z == x + y)\
    \ && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8kwwts7s/tmp8kwwts7s.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6f19a92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6f19789b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6f19789988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6f197887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8kwwts7s                        0x000056537014377d <unavailable> + 6013

    5    libc.so.6                          0x00002b6f19c7e460 __libc_start_main +
    245

    6    tmp8kwwts7s                        0x0000565370142f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7hiab4fd/tmp7hiab4fd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aceee891c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aceee588b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aceee588988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aceee5877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7hiab4fd                        0x0000563866ee677d <unavailable> + 6013

    5    libc.so.6                          0x00002aceeea7d460 __libc_start_main +
    245

    6    tmp7hiab4fd                        0x0000563866ee5f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpj5goh5u3/tmpj5goh5u3.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba434a39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba434730b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba434730988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba43472f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5goh5u3                        0x000055858437977d <unavailable> + 6013

    5    libc.so.6                          0x00002ba434c25460 __libc_start_main +
    245

    6    tmpj5goh5u3                        0x0000558584378f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z || x + z == y || y + z == x)\
    \ && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvkm5nzqf/tmpvkm5nzqf.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf659c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf656b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf656b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf656b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvkm5nzqf                        0x00005612c487677d <unavailable> + 6013

    5    libc.so.6                          0x00002acf65bad460 __libc_start_main +
    245

    6    tmpvkm5nzqf                        0x00005612c4875f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpj5goh5u3/tmpj5goh5u3.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba434a39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba434730b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba434730988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba43472f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5goh5u3                        0x000055858437977d <unavailable> + 6013

    5    libc.so.6                          0x00002ba434c25460 __libc_start_main +
    245

    6    tmpj5goh5u3                        0x0000558584378f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z || x + z == y || y + z == x)\
    \ && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvkm5nzqf/tmpvkm5nzqf.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf659c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf656b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf656b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf656b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvkm5nzqf                        0x00005612c487677d <unavailable> + 6013

    5    libc.so.6                          0x00002acf65bad460 __libc_start_main +
    245

    6    tmpvkm5nzqf                        0x00005612c4875f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpwqok9osf/tmpwqok9osf.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b96be23fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b96bdf36b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b96bdf36988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b96bdf357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwqok9osf                        0x0000558b7430443a <unavailable> + 5178

    5    libc.so.6                          0x00002b96be42b460 __libc_start_main +
    245

    6    tmpwqok9osf                        0x0000558b74303f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z || x + z == y || y + z == x) {\n        \
    \    return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmplveslo8x/tmplveslo8x.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b4b8a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b4b5a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b4b5a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b4b59f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplveslo8x                        0x000055bdb9aab77d <unavailable> + 6013

    5    libc.so.6                          0x00002b0b4ba95460 __libc_start_main +
    245

    6    tmplveslo8x                        0x000055bdb9aaaf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (y == x + z) || (z\
    \ == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbl95tl92/tmpbl95tl92.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b263c40cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b263c103b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b263c103988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b263c1027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbl95tl92                        0x000055ba6ed8c2d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b263c5f8460 __libc_start_main +
    245

    6    tmpbl95tl92                        0x000055ba6ed8be69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpj5goh5u3/tmpj5goh5u3.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba434a39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba434730b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba434730988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba43472f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5goh5u3                        0x000055858437977d <unavailable> + 6013

    5    libc.so.6                          0x00002ba434c25460 __libc_start_main +
    245

    6    tmpj5goh5u3                        0x0000558584378f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpj5goh5u3/tmpj5goh5u3.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba434a39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba434730b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba434730988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba43472f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5goh5u3                        0x000055858437977d <unavailable> + 6013

    5    libc.so.6                          0x00002ba434c25460 __libc_start_main +
    245

    6    tmpj5goh5u3                        0x0000558584378f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z || y == x + z || z == x + y)\
    \ && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8kwwts7s/tmp8kwwts7s.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6f19a92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6f19789b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6f19789988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6f197887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8kwwts7s                        0x000056537014377d <unavailable> + 6013

    5    libc.so.6                          0x00002b6f19c7e460 __libc_start_main +
    245

    6    tmp8kwwts7s                        0x0000565370142f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z || x + z == y || y + z == x) {\n        \
    \    return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmplveslo8x/tmplveslo8x.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b4b8a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b4b5a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b4b5a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b4b59f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplveslo8x                        0x000055bdb9aab77d <unavailable> + 6013

    5    libc.so.6                          0x00002b0b4ba95460 __libc_start_main +
    245

    6    tmplveslo8x                        0x000055bdb9aaaf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    let sum = x + y + z\n    if sum == x || sum\
    \ == y || sum == z {\n        return true\n    } else {\n        return false\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3, z:\
    \ 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpwni6pp3f/tmpwni6pp3f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9138223c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9137f1ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9137f1a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9137f197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwni6pp3f                        0x0000565481caf1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b913840f460 __libc_start_main +
    245

    6    tmpwni6pp3f                        0x0000565481caee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.isInteger && y.isInteger && z.isInteger\
    \ {\n        if x == y + z || y == x + z || z == x + y {\n            return true\n\
    \        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmppz94hhg5.swift:7:10: error: value of type 'Double' has no member\
    \ 'isInteger'\n    if x.isInteger && y.isInteger && z.isInteger {\n       ~ ^~~~~~~~~\n\
    /tmp/tmppz94hhg5.swift:7:25: error: value of type 'Double' has no member 'isInteger'\n\
    \    if x.isInteger && y.isInteger && z.isInteger {\n                      ~ ^~~~~~~~~\n\
    /tmp/tmppz94hhg5.swift:7:40: error: value of type 'Double' has no member 'isInteger'\n\
    \    if x.isInteger && y.isInteger && z.isInteger {\n                        \
    \             ~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z || y == x + z || z == x + y)\
    \ && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8kwwts7s/tmp8kwwts7s.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6f19a92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6f19789b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6f19789988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6f197887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8kwwts7s                        0x000056537014377d <unavailable> + 6013

    5    libc.so.6                          0x00002b6f19c7e460 __libc_start_main +
    245

    6    tmp8kwwts7s                        0x0000565370142f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    let sum = x + y + z\n    if sum.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        return true\n    } else {\n        return false\n    }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyoxp20av/tmpyoxp20av.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba8f05fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba8ed56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba8ed56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba8ed557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyoxp20av                        0x00005604795bd3b6 <unavailable> + 5046

    5    libc.so.6                          0x00002aba8f24b460 __libc_start_main +
    245

    6    tmpyoxp20av                        0x00005604795bcf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpj5goh5u3/tmpj5goh5u3.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba434a39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba434730b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba434730988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba43472f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5goh5u3                        0x000055858437977d <unavailable> + 6013

    5    libc.so.6                          0x00002ba434c25460 __libc_start_main +
    245

    6    tmpj5goh5u3                        0x0000558584378f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z || x + z == y || y + z == x)\
    \ && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvkm5nzqf/tmpvkm5nzqf.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf659c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf656b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf656b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf656b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvkm5nzqf                        0x00005612c487677d <unavailable> + 6013

    5    libc.so.6                          0x00002acf65bad460 __libc_start_main +
    245

    6    tmpvkm5nzqf                        0x00005612c4875f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z || x + z == y || y + z == x) {\n        \
    \    return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmplveslo8x/tmplveslo8x.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b4b8a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b4b5a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b4b5a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b4b59f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplveslo8x                        0x000055bdb9aab77d <unavailable> + 6013

    5    libc.so.6                          0x00002b0b4ba95460 __libc_start_main +
    245

    6    tmplveslo8x                        0x000055bdb9aaaf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z || y == x + z || z == x\
    \ + y) && (x % 1 == 0 && y % 1 == 0 && z % 1 == 0)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpnkxdn9oy.swift:7:59: error: '%' is unavailable: For floating point\
    \ numbers use truncatingRemainder instead\n    return (x == y + z || y == x +\
    \ z || z == x + y) && (x % 1 == 0 && y % 1 == 0 && z % 1 == 0)\n             \
    \                                             ^\nSwift.%:2:13: note: '%' has been\
    \ explicitly marked unavailable here\npublic func % <T>(lhs: T, rhs: T) -> T where\
    \ T : BinaryFloatingPoint\n            ^\n/tmp/tmpnkxdn9oy.swift:7:73: error:\
    \ '%' is unavailable: For floating point numbers use truncatingRemainder instead\n\
    \    return (x == y + z || y == x + z || z == x + y) && (x % 1 == 0 && y % 1 ==\
    \ 0 && z % 1 == 0)\n                                                         \
    \               ^\nSwift.%:2:13: note: '%' has been explicitly marked unavailable\
    \ here\npublic func % <T>(lhs: T, rhs: T) -> T where T : BinaryFloatingPoint\n\
    \            ^\n/tmp/tmpnkxdn9oy.swift:7:87: error: '%' is unavailable: For floating\
    \ point numbers use truncatingRemainder instead\n    return (x == y + z || y ==\
    \ x + z || z == x + y) && (x % 1 == 0 && y % 1 == 0 && z % 1 == 0)\n         \
    \                                                                            \
    \ ^\nSwift.%:2:13: note: '%' has been explicitly marked unavailable here\npublic\
    \ func % <T>(lhs: T, rhs: T) -> T where T : BinaryFloatingPoint\n            ^\n"
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z || x + z == y || y + z == x)\
    \ && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvkm5nzqf/tmpvkm5nzqf.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf659c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf656b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf656b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf656b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvkm5nzqf                        0x00005612c487677d <unavailable> + 6013

    5    libc.so.6                          0x00002acf65bad460 __libc_start_main +
    245

    6    tmpvkm5nzqf                        0x00005612c4875f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x + y == z) || (x + z == y) || (y + z\
    \ == x) {\n        return true\n    } else {\n        return false\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt36mr6vv/tmpt36mr6vv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada32d53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada32a4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada32a4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada32a497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt36mr6vv                        0x0000561c802762d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ada32f3f460 __libc_start_main +
    245

    6    tmpt36mr6vv                        0x0000561c80275e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x\
    \ + y) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpdv__5f0r/tmpdv__5f0r.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8b3ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8b3bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8b3bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8b3bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv__5f0r                        0x000055e2f0c782d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ab8b40bc460 __libc_start_main +
    245

    6    tmpdv__5f0r                        0x000055e2f0c77e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x + y == z || x + z == y || y + z\
    \ == x) && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpk19pi_8j/tmpk19pi_8j.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af0e8629c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af0e8320b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af0e8320988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af0e831f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk19pi_8j                        0x000055b059e5477d <unavailable> + 6013

    5    libc.so.6                          0x00002af0e8815460 __libc_start_main +
    245

    6    tmpk19pi_8j                        0x000055b059e53f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y\
    \ {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp3hw2lbi/tmpp3hw2lbi.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62cb0e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62cadd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62cadd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62cadd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp3hw2lbi                        0x000055d8067382d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b62cb2cd460 __libc_start_main +
    245

    6    tmpp3hw2lbi                        0x000055d806737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0iaefxsw/tmp0iaefxsw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2942351c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2942048b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2942048988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29420477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iaefxsw                        0x0000559386cee77d <unavailable> + 6013

    5    libc.so.6                          0x00002b294253d460 __libc_start_main +
    245

    6    tmp0iaefxsw                        0x0000559386cedf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpb9gm0qi4/tmpb9gm0qi4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6b0532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6b0229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6b0229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6b02287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb9gm0qi4                        0x000055ee895a277d <unavailable> + 6013

    5    libc.so.6                          0x00002ac6b071e460 __libc_start_main +
    245

    6    tmpb9gm0qi4                        0x000055ee895a1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659978998

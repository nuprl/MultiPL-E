language: swift
name: HumanEval_54_same_chars
results:
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    var chars = [Character: Int]()\n    for c in s0.characters\
    \ {\n        if let n = chars[c] {\n            chars[c] = n + 1\n        } else\
    \ {\n            chars[c] = 1\n        }\n    }\n    for c in s1.characters {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzl6j85be.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpzl6j85be.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    var chars = [Character: Int]()\n    for c in s0.characters\
    \ {\n        if let n = chars[c] {\n            chars[c] = n + 1\n        } else\
    \ {\n            chars[c] = 1\n        }\n    }\n    for c in s1.characters {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, v) in chars {\n     \
    \   if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpc3kmp15z.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpc3kmp15z.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    var chars = [Character: Int]()\n    for c in s0.characters\
    \ {\n        if let count = chars[c] {\n            chars[c] = count + 1\n   \
    \     } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1.characters\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpjarnkuk8.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpjarnkuk8.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let i = chars[c] {\n            chars[c] = i + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let i = chars[c] {\n            chars[c] = i - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, i) in chars {\n     \
    \   if i != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpatw31fy_/tmpatw31fy_.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61d7044c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61d6d3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61d6d3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61d6d3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpatw31fy_                        0x000055cd5d6a6623 <unavailable> + 5667

    5    libc.so.6                          0x00002b61d7230460 __libc_start_main +
    245

    6    tmpatw31fy_                        0x000055cd5d6a6279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    if s0.count != s1.count {\n        return\
    \ false\n    }\n    var chars = [Character: Int]()\n    for c in s0 {\n      \
    \  if let count = chars[c] {\n            chars[c] = count + 1\n        } else\
    \ {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n        if\
    \ let count = chars[c] {\n            chars[c] = count - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, count) in chars {\n \
    \       if count != 0 {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpcgl8au5b/tmpcgl8au5b.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b654cf98c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b654cc8fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b654cc8f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b654cc8e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcgl8au5b                        0x000055c510fc3673 <unavailable> + 5747

    5    libc.so.6                          0x00002b654d184460 __libc_start_main +
    245

    6    tmpcgl8au5b                        0x000055c510fc32c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        if chars[c] == nil {\n            return false\n        }\n        chars[c]\
    \ = chars[c]! - 1\n        if chars[c] == 0 {\n            chars.removeValue(forKey:\
    \ c)\n        }\n    }\n    return chars.count == 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpt_hjg30n/tmpt_hjg30n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b51bb02ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b51bad25b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b51bad25988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b51bad247b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt_hjg30n                        0x0000558010785603 <unavailable> + 5635

    5    libc.so.6                          0x00002b51bb21a460 __libc_start_main +
    245

    6    tmpt_hjg30n                        0x0000558010785259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var s0 = s0\n    var s1 = s1\n    for c in\
    \ s0.characters {\n        if let i = s1.characters.indexOf(c) {\n           \
    \ s1.removeAtIndex(i)\n        } else {\n            return false\n        }\n\
    \    }\n    return s1.isEmpty\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpm9zxilct.swift:6:17: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in s0.characters {\n                ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpm9zxilct.swift:7:34:\
    \ error: value of type 'String' has no member 'indexOf'\n        if let i = s1.characters.indexOf(c)\
    \ {\n                   ~~~~~~~~~~~~~ ^~~~~~~\n/tmp/tmpm9zxilct.swift:8:16: error:\
    \ value of type 'String' has no member 'removeAtIndex'\n            s1.removeAtIndex(i)\n\
    \            ~~ ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = Array(s0.characters)\n    let s1\
    \ = Array(s1.characters)\n    return s0.sort() == s1.sort()\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpcczvap45.swift:4:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    let s0 = Array(s0.characters)\n                   \
    \   ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n\
    \    public var characters: String { get set }\n               ^\n/tmp/tmpcczvap45.swift:5:23:\
    \ error: 'characters' is unavailable: Please use String directly\n    let s1 =\
    \ Array(s1.characters)\n                      ^~~~~~~~~~\nSwift.String:5:16: note:\
    \ 'characters' was obsoleted in Swift 5.0\n    public var characters: String {\
    \ get set }\n               ^\n/tmp/tmpcczvap45.swift:6:15: error: cannot use\
    \ mutating member on immutable value: 's0' is a 'let' constant\n    return s0.sort()\
    \ == s1.sort()\n           ~~ ^\n/tmp/tmpcczvap45.swift:4:5: note: change 'let'\
    \ to 'var' to make it mutable\n    let s0 = Array(s0.characters)\n    ^~~\n  \
    \  var\n/tmp/tmpcczvap45.swift:6:28: error: cannot use mutating member on immutable\
    \ value: 's1' is a 'let' constant\n    return s0.sort() == s1.sort()\n       \
    \                 ~~ ^\n/tmp/tmpcczvap45.swift:5:5: note: change 'let' to 'var'\
    \ to make it mutable\n    let s1 = Array(s1.characters)\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let c0 = s0.characters.sorted()\n    let\
    \ c1 = s1.characters.sorted()\n    return c0 == c1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpe1n5yaii.swift:4:17: error: 'characters' is unavailable: Please\
    \ use String directly\n    let c0 = s0.characters.sorted()\n                ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpe1n5yaii.swift:5:17:\
    \ error: 'characters' is unavailable: Please use String directly\n    let c1 =\
    \ s1.characters.sorted()\n                ^~~~~~~~~~\nSwift.String:5:16: note:\
    \ 'characters' was obsoleted in Swift 5.0\n    public var characters: String {\
    \ get set }\n               ^\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var c0 = s0.characters.sort()\n    var c1\
    \ = s1.characters.sort()\n    return c0 == c1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzpwme5cw.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    var c0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzpwme5cw.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    var c1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    return s0.characters.sort() == s1.characters.sort()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpbtklw4mk.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpbtklw4mk.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var s0 = s0\n    var s1 = s1\n    for c in\
    \ s0.characters {\n        if let i = s1.characters.indexOf(c) {\n           \
    \ s1.removeAtIndex(i)\n        } else {\n            return false\n        }\n\
    \    }\n    return s1.isEmpty\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpm9zxilct.swift:6:17: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in s0.characters {\n                ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpm9zxilct.swift:7:34:\
    \ error: value of type 'String' has no member 'indexOf'\n        if let i = s1.characters.indexOf(c)\
    \ {\n                   ~~~~~~~~~~~~~ ^~~~~~~\n/tmp/tmpm9zxilct.swift:8:16: error:\
    \ value of type 'String' has no member 'removeAtIndex'\n            s1.removeAtIndex(i)\n\
    \            ~~ ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    if s0.count != s1.count {\n        return\
    \ false\n    }\n    var chars0 = s0.map { $0 }\n    var chars1 = s1.map { $0 }\n\
    \    chars0.sort()\n    chars1.sort()\n    return chars0 == chars1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpy_0yhucf/tmpy_0yhucf.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3141dadc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3141aa4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3141aa4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3141aa37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy_0yhucf                        0x00005622fbc21603 <unavailable> + 5635

    5    libc.so.6                          0x00002b3141f99460 __libc_start_main +
    245

    6    tmpy_0yhucf                        0x00005622fbc21259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString.characters.sort()\n\
    \    let s1 = s1.lowercaseString.characters.sort()\n    return s0 == s1\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp39b1x5kg.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString.characters.sort()\n     \
    \        ~~ ^~~~~~~~~~~~~~~\n/tmp/tmp39b1x5kg.swift:5:17: error: value of type\
    \ 'String' has no member 'lowercaseString'\n    let s1 = s1.lowercaseString.characters.sort()\n\
    \             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var s0 = s0\n    var s1 = s1\n    for c in\
    \ s0.characters {\n        if let i = s1.characters.indexOf(c) {\n           \
    \ s1.removeAtIndex(i)\n        } else {\n            return false\n        }\n\
    \    }\n    return s1.isEmpty\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpm9zxilct.swift:6:17: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in s0.characters {\n                ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpm9zxilct.swift:7:34:\
    \ error: value of type 'String' has no member 'indexOf'\n        if let i = s1.characters.indexOf(c)\
    \ {\n                   ~~~~~~~~~~~~~ ^~~~~~~\n/tmp/tmpm9zxilct.swift:8:16: error:\
    \ value of type 'String' has no member 'removeAtIndex'\n            s1.removeAtIndex(i)\n\
    \            ~~ ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let v = chars[c] {\n            chars[c] = v + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let v = chars[c] {\n            chars[c] = v - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, v) in chars {\n     \
    \   if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpscsnxgj2/tmpscsnxgj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b46e6f76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b46e6c6db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b46e6c6d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46e6c6c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpscsnxgj2                        0x000055f455d6a623 <unavailable> + 5667

    5    libc.so.6                          0x00002b46e7162460 __libc_start_main +
    245

    6    tmpscsnxgj2                        0x000055f455d6a279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    return chars.values.filter\
    \ { $0 != 0 }.count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp1mht0auq/tmp1mht0auq.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba595931c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba595628b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba595628988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba5956277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1mht0auq                        0x00005636d6223663 <unavailable> + 5731

    5    libc.so.6                          0x00002ba595b1d460 __libc_start_main +
    245

    6    tmp1mht0auq                        0x00005636d62232b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        if chars[c] == nil {\n            return false\n        }\n        chars[c]\
    \ = chars[c]! - 1\n        if chars[c] == 0 {\n            chars.removeValue(forKey:\
    \ c)\n        }\n    }\n    return chars.count == 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpt_hjg30n/tmpt_hjg30n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b51bb02ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b51bad25b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b51bad25988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b51bad247b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt_hjg30n                        0x0000558010785603 <unavailable> + 5635

    5    libc.so.6                          0x00002b51bb21a460 __libc_start_main +
    245

    6    tmpt_hjg30n                        0x0000558010785259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars: [Character: Int] = [:]\n    for\
    \ c in s0 {\n        if let count = chars[c] {\n            chars[c] = count +\
    \ 1\n        } else {\n            chars[c] = 1\n        }\n    }\n    for c in\
    \ s1 {\n        if let count = chars[c] {\n            chars[c] = count - 1\n\
    \        } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpd33p3qnu/tmpd33p3qnu.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab596ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab59689ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab59689a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab5968997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd33p3qnu                        0x00005594130a86b3 <unavailable> + 5811

    5    libc.so.6                          0x00002ab596d8f460 __libc_start_main +
    245

    6    tmpd33p3qnu                        0x00005594130a8309 <unavailable> + 4873

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars0 = [Character](s0.characters)\n\
    \    var chars1 = [Character](s1.characters)\n    chars0.sortInPlace()\n    chars1.sortInPlace()\n\
    \    return chars0 == chars1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp9emsa5w5.swift:4:33: error: 'characters' is unavailable: Please\
    \ use String directly\n    var chars0 = [Character](s0.characters)\n         \
    \                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was\
    \ obsoleted in Swift 5.0\n    public var characters: String { get set }\n    \
    \           ^\n/tmp/tmp9emsa5w5.swift:5:33: error: 'characters' is unavailable:\
    \ Please use String directly\n    var chars1 = [Character](s1.characters)\n  \
    \                              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n/tmp/tmp9emsa5w5.swift:6:12: error: value of type '[Character]'\
    \ has no member 'sortInPlace'\n    chars0.sortInPlace()\n    ~~~~~~ ^~~~~~~~~~~\n\
    /tmp/tmp9emsa5w5.swift:7:12: error: value of type '[Character]' has no member\
    \ 'sortInPlace'\n    chars1.sortInPlace()\n    ~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        if chars[c] == nil {\n            return false\n        }\n        chars[c]\
    \ = chars[c]! - 1\n        if chars[c] == 0 {\n            chars.removeValue(forKey:\
    \ c)\n        }\n    }\n    return chars.count == 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpt_hjg30n/tmpt_hjg30n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b51bb02ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b51bad25b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b51bad25988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b51bad247b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt_hjg30n                        0x0000558010785603 <unavailable> + 5635

    5    libc.so.6                          0x00002b51bb21a460 __libc_start_main +
    245

    6    tmpt_hjg30n                        0x0000558010785259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars0 = [Character](s0.characters)\n\
    \    var chars1 = [Character](s1.characters)\n    chars0.sortInPlace()\n    chars1.sortInPlace()\n\
    \    return chars0 == chars1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp9emsa5w5.swift:4:33: error: 'characters' is unavailable: Please\
    \ use String directly\n    var chars0 = [Character](s0.characters)\n         \
    \                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was\
    \ obsoleted in Swift 5.0\n    public var characters: String { get set }\n    \
    \           ^\n/tmp/tmp9emsa5w5.swift:5:33: error: 'characters' is unavailable:\
    \ Please use String directly\n    var chars1 = [Character](s1.characters)\n  \
    \                              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n/tmp/tmp9emsa5w5.swift:6:12: error: value of type '[Character]'\
    \ has no member 'sortInPlace'\n    chars0.sortInPlace()\n    ~~~~~~ ^~~~~~~~~~~\n\
    /tmp/tmp9emsa5w5.swift:7:12: error: value of type '[Character]' has no member\
    \ 'sortInPlace'\n    chars1.sortInPlace()\n    ~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    var chars = [Character: Int]()\n    for c in s0.characters\
    \ {\n        if let count = chars[c] {\n            chars[c] = count + 1\n   \
    \     } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1.characters\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpjarnkuk8.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpjarnkuk8.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let c0 = Array(s0.characters).sort()\n  \
    \  let c1 = Array(s1.characters).sort()\n    return c0 == c1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp1i76j190.swift:4:35: error: cannot use mutating member on immutable\
    \ value: function call returns immutable value\n    let c0 = Array(s0.characters).sort()\n\
    \             ~~~~~~~~~~~~~~~~~~~~ ^\n/tmp/tmp1i76j190.swift:5:35: error: cannot\
    \ use mutating member on immutable value: function call returns immutable value\n\
    \    let c1 = Array(s1.characters).sort()\n             ~~~~~~~~~~~~~~~~~~~~ ^\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    return chars.values.reduce(0,\
    \ +) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmplqbolwd1/tmplqbolwd1.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b869d5fcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b869d2f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b869d2f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b869d2f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplqbolwd1                        0x0000556587a0a613 <unavailable> + 5651

    5    libc.so.6                          0x00002b869d7e8460 __libc_start_main +
    245

    6    tmplqbolwd1                        0x0000556587a0a269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            if n == 1 {\n                chars.removeValue(forKey:\
    \ c)\n            } else {\n                chars[c] = n - 1\n            }\n\
    \        } else {\n            return false\n        }\n    }\n    return chars.isEmpty\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp1h5asjm9/tmp1h5asjm9.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab16e873c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab16e56ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab16e56a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab16e5697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1h5asjm9                        0x0000557eaa13d573 <unavailable> + 5491

    5    libc.so.6                          0x00002ab16ea5f460 __libc_start_main +
    245

    6    tmp1h5asjm9                        0x0000557eaa13d1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    return chars.values.filter\
    \ { $0 != 0 }.count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp1mht0auq/tmp1mht0auq.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba595931c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba595628b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba595628988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba5956277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1mht0auq                        0x00005636d6223663 <unavailable> + 5731

    5    libc.so.6                          0x00002ba595b1d460 __libc_start_main +
    245

    6    tmp1mht0auq                        0x00005636d62232b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var s0 = s0\n    var s1 = s1\n    for c in\
    \ s0.characters {\n        if let i = s1.characters.indexOf(c) {\n           \
    \ s1.removeAtIndex(i)\n        } else {\n            return false\n        }\n\
    \    }\n    return s1.isEmpty\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpm9zxilct.swift:6:17: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in s0.characters {\n                ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpm9zxilct.swift:7:34:\
    \ error: value of type 'String' has no member 'indexOf'\n        if let i = s1.characters.indexOf(c)\
    \ {\n                   ~~~~~~~~~~~~~ ^~~~~~~\n/tmp/tmpm9zxilct.swift:8:16: error:\
    \ value of type 'String' has no member 'removeAtIndex'\n            s1.removeAtIndex(i)\n\
    \            ~~ ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    return chars.values.filter\
    \ { $0 != 0 }.count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp1mht0auq/tmp1mht0auq.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba595931c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba595628b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba595628988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba5956277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1mht0auq                        0x00005636d6223663 <unavailable> + 5731

    5    libc.so.6                          0x00002ba595b1d460 __libc_start_main +
    245

    6    tmp1mht0auq                        0x00005636d62232b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars0 = s0.characters.sorted()\n   \
    \ var chars1 = s1.characters.sorted()\n    return chars0 == chars1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpnnttdvck.swift:4:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    var chars0 = s0.characters.sorted()\n             \
    \       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift\
    \ 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpnnttdvck.swift:5:21:\
    \ error: 'characters' is unavailable: Please use String directly\n    var chars1\
    \ = s1.characters.sorted()\n                    ^~~~~~~~~~\nSwift.String:5:16:\
    \ note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String\
    \ { get set }\n               ^\n/tmp/tmpnnttdvck.swift:4:9: warning: variable\
    \ 'chars0' was never mutated; consider changing to 'let' constant\n    var chars0\
    \ = s0.characters.sorted()\n    ~~~ ^\n    let\n/tmp/tmpnnttdvck.swift:5:9: warning:\
    \ variable 'chars1' was never mutated; consider changing to 'let' constant\n \
    \   var chars1 = s1.characters.sorted()\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    var chars = [Character: Int]()\n    for c in s0.characters\
    \ {\n        if let n = chars[c] {\n            chars[c] = n + 1\n        } else\
    \ {\n            chars[c] = 1\n        }\n    }\n    for c in s1.characters {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzl6j85be.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpzl6j85be.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    return s0.characters.sort() == s1.characters.sort()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpbtklw4mk.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpbtklw4mk.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let c0 = Array(s0.characters).sort()\n  \
    \  let c1 = Array(s1.characters).sort()\n    return c0 == c1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp1i76j190.swift:4:35: error: cannot use mutating member on immutable\
    \ value: function call returns immutable value\n    let c0 = Array(s0.characters).sort()\n\
    \             ~~~~~~~~~~~~~~~~~~~~ ^\n/tmp/tmp1i76j190.swift:5:35: error: cannot\
    \ use mutating member on immutable value: function call returns immutable value\n\
    \    let c1 = Array(s1.characters).sort()\n             ~~~~~~~~~~~~~~~~~~~~ ^\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars0 = [Character](s0.characters)\n\
    \    var chars1 = [Character](s1.characters)\n    chars0.sortInPlace()\n    chars1.sortInPlace()\n\
    \    return chars0 == chars1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp9emsa5w5.swift:4:33: error: 'characters' is unavailable: Please\
    \ use String directly\n    var chars0 = [Character](s0.characters)\n         \
    \                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was\
    \ obsoleted in Swift 5.0\n    public var characters: String { get set }\n    \
    \           ^\n/tmp/tmp9emsa5w5.swift:5:33: error: 'characters' is unavailable:\
    \ Please use String directly\n    var chars1 = [Character](s1.characters)\n  \
    \                              ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n/tmp/tmp9emsa5w5.swift:6:12: error: value of type '[Character]'\
    \ has no member 'sortInPlace'\n    chars0.sortInPlace()\n    ~~~~~~ ^~~~~~~~~~~\n\
    /tmp/tmp9emsa5w5.swift:7:12: error: value of type '[Character]' has no member\
    \ 'sortInPlace'\n    chars1.sortInPlace()\n    ~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = Array(s0.characters)\n    let s1\
    \ = Array(s1.characters)\n    return s0.sort() == s1.sort()\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpcczvap45.swift:4:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    let s0 = Array(s0.characters)\n                   \
    \   ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n\
    \    public var characters: String { get set }\n               ^\n/tmp/tmpcczvap45.swift:5:23:\
    \ error: 'characters' is unavailable: Please use String directly\n    let s1 =\
    \ Array(s1.characters)\n                      ^~~~~~~~~~\nSwift.String:5:16: note:\
    \ 'characters' was obsoleted in Swift 5.0\n    public var characters: String {\
    \ get set }\n               ^\n/tmp/tmpcczvap45.swift:6:15: error: cannot use\
    \ mutating member on immutable value: 's0' is a 'let' constant\n    return s0.sort()\
    \ == s1.sort()\n           ~~ ^\n/tmp/tmpcczvap45.swift:4:5: note: change 'let'\
    \ to 'var' to make it mutable\n    let s0 = Array(s0.characters)\n    ^~~\n  \
    \  var\n/tmp/tmpcczvap45.swift:6:28: error: cannot use mutating member on immutable\
    \ value: 's1' is a 'let' constant\n    return s0.sort() == s1.sort()\n       \
    \                 ~~ ^\n/tmp/tmpcczvap45.swift:5:5: note: change 'let' to 'var'\
    \ to make it mutable\n    let s1 = Array(s1.characters)\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.filter\
    \ { $0 != 0 }.count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpv5q2gwe7/tmpv5q2gwe7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a64c26c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a6491db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a6491d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a6491c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv5q2gwe7                        0x000055634daa1663 <unavailable> + 5731

    5    libc.so.6                          0x00002b7a64e12460 __libc_start_main +
    245

    6    tmpv5q2gwe7                        0x000055634daa12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.filter\
    \ { $0 != 0 }.isEmpty\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpz00po_jl/tmpz00po_jl.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7488451c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7488148b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7488148988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b74881477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz00po_jl                        0x000055e02ff606a3 <unavailable> + 5795

    5    libc.so.6                          0x00002b748863d460 __libc_start_main +
    245

    6    tmpz00po_jl                        0x000055e02ff602f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars0 = Array(s0.characters)\n    var\
    \ chars1 = Array(s1.characters)\n    chars0.sortInPlace()\n    chars1.sortInPlace()\n\
    \    return chars0 == chars1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpvhlai4xc.swift:4:27: error: 'characters' is unavailable: Please\
    \ use String directly\n    var chars0 = Array(s0.characters)\n               \
    \           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n\
    /tmp/tmpvhlai4xc.swift:5:27: error: 'characters' is unavailable: Please use String\
    \ directly\n    var chars1 = Array(s1.characters)\n                          ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpvhlai4xc.swift:6:12:\
    \ error: value of type '[String.Element]' (aka 'Array<Character>') has no member\
    \ 'sortInPlace'\n    chars0.sortInPlace()\n    ~~~~~~ ^~~~~~~~~~~\n/tmp/tmpvhlai4xc.swift:7:12:\
    \ error: value of type '[String.Element]' (aka 'Array<Character>') has no member\
    \ 'sortInPlace'\n    chars1.sortInPlace()\n    ~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014116
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.reduce(0,\
    \ +) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmp2s1mhnka/tmp2s1mhnka.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba5d5b8ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba5d5881b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba5d5881988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba5d58807b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2s1mhnka                        0x000055afec3a3613 <unavailable> + 5651

    5    libc.so.6                          0x00002ba5d5d76460 __libc_start_main +
    245

    6    tmp2s1mhnka                        0x000055afec3a3269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    var chars = [Character: Int]()\n    for c in s0.characters\
    \ {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1.characters\
    \ {\n        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n\
    \        if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpwt6x1530.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpwt6x1530.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_, v) in chars {\n  \
    \      if v != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppsdr2ug8/tmppsdr2ug8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33c983dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33c9534b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33c9534988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33c95337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppsdr2ug8                        0x00005624ab605623 <unavailable> + 5667

    5    libc.so.6                          0x00002b33c9a29460 __libc_start_main +
    245

    6    tmppsdr2ug8                        0x00005624ab605279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.filter({\
    \ $0 != 0 }).count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmptlpev6si/tmptlpev6si.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aff247adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aff244a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aff244a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aff244a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptlpev6si                        0x00005634ff571663 <unavailable> + 5731

    5    libc.so.6                          0x00002aff24999460 __libc_start_main +
    245

    6    tmptlpev6si                        0x00005634ff5712b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n    for c in s1 {\n\
    \        chars[c] = (chars[c] ?? 0) - 1\n    }\n    return chars.values.allSatisfy\
    \ { $0 == 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpfd_w7sc7/tmpfd_w7sc7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92b8a2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92b8726b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92b8726988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92b87257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfd_w7sc7                        0x000056132359c603 <unavailable> + 5635

    5    libc.so.6                          0x00002b92b8c1b460 __libc_start_main +
    245

    6    tmpfd_w7sc7                        0x000056132359c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    for (_, count)\
    \ in chars {\n        if count != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmppx8icgcn/tmppx8icgcn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69fe7b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69fe4aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69fe4ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69fe4ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppx8icgcn                        0x0000561407d57623 <unavailable> + 5667

    5    libc.so.6                          0x00002b69fe9a3460 __libc_start_main +
    245

    6    tmppx8icgcn                        0x0000561407d57279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    var chars = [Character: Int]()\n    for c in s0.characters\
    \ {\n        if let n = chars[c] {\n            chars[c] = n + 1\n        } else\
    \ {\n            chars[c] = 1\n        }\n    }\n    for c in s1.characters {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzl6j85be.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpzl6j85be.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.lowercaseString\n    let s1 =\
    \ s1.lowercaseString\n    return s0.characters.sort() == s1.characters.sort()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpbtklw4mk.swift:4:17: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    let s0 = s0.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpbtklw4mk.swift:5:17: error: value of type 'String' has no member 'lowercaseString'\n\
    \    let s1 = s1.lowercaseString\n             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014115
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let count = chars[c] {\n            chars[c] = count + 1\n\
    \        } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1\
    \ {\n        if let count = chars[c] {\n            chars[c] = count - 1\n   \
    \     } else {\n            return false\n        }\n    }\n    return chars.values.filter\
    \ { $0 != 0 }.count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp1mht0auq/tmp1mht0auq.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba595931c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba595628b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba595628988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba5956277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1mht0auq                        0x00005636d6223663 <unavailable> + 5731

    5    libc.so.6                          0x00002ba595b1d460 __libc_start_main +
    245

    6    tmp1mht0auq                        0x00005636d62232b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let c0 = Array(s0.characters)\n    let c1\
    \ = Array(s1.characters)\n    return c0.sort() == c1.sort()\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpht7nhphd.swift:4:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    let c0 = Array(s0.characters)\n                   \
    \   ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n\
    \    public var characters: String { get set }\n               ^\n/tmp/tmpht7nhphd.swift:5:23:\
    \ error: 'characters' is unavailable: Please use String directly\n    let c1 =\
    \ Array(s1.characters)\n                      ^~~~~~~~~~\nSwift.String:5:16: note:\
    \ 'characters' was obsoleted in Swift 5.0\n    public var characters: String {\
    \ get set }\n               ^\n/tmp/tmpht7nhphd.swift:6:15: error: cannot use\
    \ mutating member on immutable value: 'c0' is a 'let' constant\n    return c0.sort()\
    \ == c1.sort()\n           ~~ ^\n/tmp/tmpht7nhphd.swift:4:5: note: change 'let'\
    \ to 'var' to make it mutable\n    let c0 = Array(s0.characters)\n    ^~~\n  \
    \  var\n/tmp/tmpht7nhphd.swift:6:28: error: cannot use mutating member on immutable\
    \ value: 'c1' is a 'let' constant\n    return c0.sort() == c1.sort()\n       \
    \                 ~~ ^\n/tmp/tmpht7nhphd.swift:5:5: note: change 'let' to 'var'\
    \ to make it mutable\n    let c1 = Array(s1.characters)\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    var chars = [Character: Int]()\n    for c\
    \ in s0 {\n        if let n = chars[c] {\n            chars[c] = n + 1\n     \
    \   } else {\n            chars[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let n = chars[c] {\n            chars[c] = n - 1\n        } else {\n\
    \            return false\n        }\n    }\n    for (_, n) in chars {\n     \
    \   if n != 0 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpjr43wa69/tmpjr43wa69.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e02dffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e02af6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e02af6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e02af57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjr43wa69                        0x000055b0231bf623 <unavailable> + 5667

    5    libc.so.6                          0x00002b8e02feb460 __libc_start_main +
    245

    6    tmpjr43wa69                        0x000055b0231bf279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014115
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\nfunc same_chars(s0:\
    \ String, s1: String) -> Bool {\n    let s0 = s0.characters.sort()\n    let s1\
    \ = s1.characters.sort()\n    return s0 == s1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\n\
    assert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgdrhlg5.swift:4:28: error: value of type 'String' has no member\
    \ 'sort'\n    let s0 = s0.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n\
    /tmp/tmpzgdrhlg5.swift:5:28: error: value of type 'String' has no member 'sort'\n\
    \    let s1 = s1.characters.sort()\n             ~~~~~~~~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660014115

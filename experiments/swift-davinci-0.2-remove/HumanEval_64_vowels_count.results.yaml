language: swift
name: HumanEval_64_vowels_count
results:
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpp0ppib1t/tmpp0ppib1t.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b483c0dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b483bdd5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b483bdd5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b483bdd47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp0ppib1t                        0x000055734969b4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b483c2ca460 __libc_start_main +
    245

    6    tmpp0ppib1t                        0x000055734969b099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4bmqmbhi/tmp4bmqmbhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac22439bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac224092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac224092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2240917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4bmqmbhi                        0x0000560410b3c64b <unavailable> + 5707

    5    libc.so.6                          0x00002ac224587460 __libc_start_main +
    245

    6    tmp4bmqmbhi                        0x0000560410b3c229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let s = s.lowercased()\n    var count = 0\n    for c in s {\n\
    \        if vowels.contains(c) {\n            count += 1\n        }\n    }\n \
    \   if s.hasSuffix(\"y\") {\n        count += 1\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpiby_vlsz/tmpiby_vlsz.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9ca5882c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9ca5579b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9ca5579988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9ca55787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiby_vlsz                        0x000055ca5792864b <unavailable> + 5707

    5    libc.so.6                          0x00002b9ca5a6e460 __libc_start_main +
    245

    6    tmpiby_vlsz                        0x000055ca57928229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp37aotchq/tmp37aotchq.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2342c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2039b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2039988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c20387b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp37aotchq                        0x000055f460d6d69b <unavailable> + 5787

    5    libc.so.6                          0x00002af2c252e460 __libc_start_main +
    245

    6    tmp37aotchq                        0x000055f460d6d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp9nrv3zfs/tmp9nrv3zfs.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b756048dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7560184b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7560184988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b75601837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9nrv3zfs                        0x000055b38951164b <unavailable> + 5707

    5    libc.so.6                          0x00002b7560679460 __libc_start_main +
    245

    6    tmp9nrv3zfs                        0x000055b389511229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpfh1scnb8/tmpfh1scnb8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8316845c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b831653cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b831653c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b831653b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfh1scnb8                        0x0000560e655a669b <unavailable> + 5787

    5    libc.so.6                          0x00002b8316a31460 __libc_start_main +
    245

    6    tmpfh1scnb8                        0x0000560e655a6279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpiby_vlsz/tmpiby_vlsz.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9ca5882c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9ca5579b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9ca5579988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9ca55787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiby_vlsz                        0x000055ca5792864b <unavailable> + 5707

    5    libc.so.6                          0x00002b9ca5a6e460 __libc_start_main +
    245

    6    tmpiby_vlsz                        0x000055ca57928229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let s = s.lowercased()\n    var count = 0\n    for c in s {\n        if vowels.contains(String(c))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmphtupb_o8/tmphtupb_o8.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6ece2a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6ecdf98b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6ecdf98988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6ecdf977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphtupb_o8                        0x0000556b90b03702 <unavailable> + 5890

    5    libc.so.6                          0x00002b6ece48d460 __libc_start_main +
    245

    6    tmphtupb_o8                        0x0000556b90b03239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter { $0 == \"a\" || $0 == \"e\" || $0 ==\
    \ \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\" }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpakxdo7ef/tmpakxdo7ef.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b616ce33c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b616cb2ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b616cb2a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b616cb297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakxdo7ef                        0x0000555d941b752b <unavailable> + 5419

    5    libc.so.6                          0x00002b616d01f460 __libc_start_main +
    245

    6    tmpakxdo7ef                        0x0000555d941b7109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\", \"y\":\n            count +=\
    \ 1\n        default:\n            continue\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmplewhs7mg/tmplewhs7mg.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b554fcb0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b554f9a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b554f9a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b554f9a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplewhs7mg                        0x00005639ac0a04bb <unavailable> + 5307

    5    libc.so.6                          0x00002b554fe9c460 __libc_start_main +
    245

    6    tmplewhs7mg                        0x00005639ac0a0099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4bmqmbhi/tmp4bmqmbhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac22439bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac224092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac224092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2240917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4bmqmbhi                        0x0000560410b3c64b <unavailable> + 5707

    5    libc.so.6                          0x00002ac224587460 __libc_start_main +
    245

    6    tmp4bmqmbhi                        0x0000560410b3c229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp26p50wbe/tmp26p50wbe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba18588fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba185586b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba185586988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1855857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp26p50wbe                        0x0000556c2b35c4db <unavailable> + 5339

    5    libc.so.6                          0x00002ba185a7b460 __libc_start_main +
    245

    6    tmp26p50wbe                        0x0000556c2b35c0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpfh1scnb8/tmpfh1scnb8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8316845c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b831653cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b831653c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b831653b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfh1scnb8                        0x0000560e655a669b <unavailable> + 5787

    5    libc.so.6                          0x00002b8316a31460 __libc_start_main +
    245

    6    tmpfh1scnb8                        0x0000560e655a6279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\", \"y\":\n            vowels +=\
    \ 1\n        default:\n            break\n        }\n    }\n    return vowels\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp_otnf5x2/tmp_otnf5x2.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba51c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba51c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba51c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba51c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_otnf5x2                        0x000055fa9f0f24bb <unavailable> + 5307

    5    libc.so.6                          0x00002ba51c6b5460 __libc_start_main +
    245

    6    tmp_otnf5x2                        0x000055fa9f0f2099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp26p50wbe/tmp26p50wbe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba18588fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba185586b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba185586988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1855857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp26p50wbe                        0x0000556c2b35c4db <unavailable> + 5339

    5    libc.so.6                          0x00002ba185a7b460 __libc_start_main +
    245

    6    tmp26p50wbe                        0x0000556c2b35c0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3dbgx2uu/tmp3dbgx2uu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e08c2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e08922b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e08922988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e089217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dbgx2uu                        0x0000560f3877c4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b1e08e17460 __libc_start_main +
    245

    6    tmp3dbgx2uu                        0x0000560f3877c099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp26p50wbe/tmp26p50wbe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba18588fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba185586b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba185586988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1855857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp26p50wbe                        0x0000556c2b35c4db <unavailable> + 5339

    5    libc.so.6                          0x00002ba185a7b460 __libc_start_main +
    245

    6    tmp26p50wbe                        0x0000556c2b35c0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3dbgx2uu/tmp3dbgx2uu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e08c2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e08922b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e08922988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e089217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dbgx2uu                        0x0000560f3877c4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b1e08e17460 __libc_start_main +
    245

    6    tmp3dbgx2uu                        0x0000560f3877c099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3dbgx2uu/tmp3dbgx2uu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e08c2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e08922b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e08922988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e089217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dbgx2uu                        0x0000560f3877c4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b1e08e17460 __libc_start_main +
    245

    6    tmp3dbgx2uu                        0x0000560f3877c099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3dbgx2uu/tmp3dbgx2uu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e08c2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e08922b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e08922988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e089217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dbgx2uu                        0x0000560f3877c4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b1e08e17460 __libc_start_main +
    245

    6    tmp3dbgx2uu                        0x0000560f3877c099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s.lowercased() {\n        if vowels.contains(char) {\n            count +=\
    \ 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1uogd2b2/tmp1uogd2b2.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70841e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7083ed9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7083ed9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7083ed87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1uogd2b2                        0x000055c72181768f <unavailable> + 5775

    5    libc.so.6                          0x00002b70843ce460 __libc_start_main +
    245

    6    tmp1uogd2b2                        0x000055c721817119 <unavailable> + 4377

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels\
    \ += 1\n        }\n    }\n    return vowels\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpif6fiftx/tmpif6fiftx.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6f2d47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6f2a3eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6f2a3e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6f2a3d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpif6fiftx                        0x000055d3e12464bb <unavailable> + 5307

    5    libc.so.6                          0x00002ae6f2f33460 __libc_start_main +
    245

    6    tmpif6fiftx                        0x000055d3e1246099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpfh1scnb8/tmpfh1scnb8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8316845c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b831653cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b831653c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b831653b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfh1scnb8                        0x0000560e655a669b <unavailable> + 5787

    5    libc.so.6                          0x00002b8316a31460 __libc_start_main +
    245

    6    tmpfh1scnb8                        0x0000560e655a6279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let s = s.lowercased()\n    var count = 0\n    for c in s {\n  \
    \      if vowels.contains(c) {\n            count += 1\n        }\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2qwaur4/tmpd2qwaur4.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b15bc056c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b15bbd4db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b15bbd4d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b15bbd4c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2qwaur4                        0x000055f798664742 <unavailable> + 5954

    5    libc.so.6                          0x00002b15bc242460 __libc_start_main +
    245

    6    tmpd2qwaur4                        0x000055f798664279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpb3lis6tl/tmpb3lis6tl.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32219b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32216aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32216ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32216ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb3lis6tl                        0x00005581ccde45fb <unavailable> + 5627

    5    libc.so.6                          0x00002b3221ba3460 __libc_start_main +
    245

    6    tmpb3lis6tl                        0x00005581ccde41d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let s = s.lowercased()\n    var count = 0\n    for c in s {\n        if vowels.contains(String(c))\
    \ {\n            count += 1\n        }\n    }\n    if s.hasSuffix(\"y\") {\n \
    \       count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp37aotchq/tmp37aotchq.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2342c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2039b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2039988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c20387b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp37aotchq                        0x000055f460d6d69b <unavailable> + 5787

    5    libc.so.6                          0x00002af2c252e460 __libc_start_main +
    245

    6    tmp37aotchq                        0x000055f460d6d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp26p50wbe/tmp26p50wbe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba18588fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba185586b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba185586988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1855857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp26p50wbe                        0x0000556c2b35c4db <unavailable> + 5339

    5    libc.so.6                          0x00002ba185a7b460 __libc_start_main +
    245

    6    tmp26p50wbe                        0x0000556c2b35c0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4bmqmbhi/tmp4bmqmbhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac22439bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac224092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac224092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2240917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4bmqmbhi                        0x0000560410b3c64b <unavailable> + 5707

    5    libc.so.6                          0x00002ac224587460 __libc_start_main +
    245

    6    tmp4bmqmbhi                        0x0000560410b3c229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp37aotchq/tmp37aotchq.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2342c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2039b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2039988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c20387b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp37aotchq                        0x000055f460d6d69b <unavailable> + 5787

    5    libc.so.6                          0x00002af2c252e460 __libc_start_main +
    245

    6    tmp37aotchq                        0x000055f460d6d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpiby_vlsz/tmpiby_vlsz.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9ca5882c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9ca5579b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9ca5579988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9ca55787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiby_vlsz                        0x000055ca5792864b <unavailable> + 5707

    5    libc.so.6                          0x00002b9ca5a6e460 __libc_start_main +
    245

    6    tmpiby_vlsz                        0x000055ca57928229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4bmqmbhi/tmp4bmqmbhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac22439bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac224092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac224092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2240917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4bmqmbhi                        0x0000560410b3c64b <unavailable> + 5707

    5    libc.so.6                          0x00002ac224587460 __libc_start_main +
    245

    6    tmp4bmqmbhi                        0x0000560410b3c229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpp0ppib1t/tmpp0ppib1t.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b483c0dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b483bdd5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b483bdd5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b483bdd47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp0ppib1t                        0x000055734969b4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b483c2ca460 __libc_start_main +
    245

    6    tmpp0ppib1t                        0x000055734969b099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4bmqmbhi/tmp4bmqmbhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac22439bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac224092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac224092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2240917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4bmqmbhi                        0x0000560410b3c64b <unavailable> + 5707

    5    libc.so.6                          0x00002ac224587460 __libc_start_main +
    245

    6    tmp4bmqmbhi                        0x0000560410b3c229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3dbgx2uu/tmp3dbgx2uu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e08c2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e08922b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e08922988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e089217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dbgx2uu                        0x0000560f3877c4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b1e08e17460 __libc_start_main +
    245

    6    tmp3dbgx2uu                        0x0000560f3877c099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || (c == \"y\" && s.last\
    \ == c) {\n            vowels += 1\n        }\n    }\n    return vowels\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpekmay4gh/tmpekmay4gh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac92507ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac924d71b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac924d71988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac924d707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpekmay4gh                        0x0000563481ed358b <unavailable> + 5515

    5    libc.so.6                          0x00002ac925266460 __libc_start_main +
    245

    6    tmpekmay4gh                        0x0000563481ed3169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp9nrv3zfs/tmp9nrv3zfs.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b756048dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7560184b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7560184988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b75601837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9nrv3zfs                        0x000055b38951164b <unavailable> + 5707

    5    libc.so.6                          0x00002b7560679460 __libc_start_main +
    245

    6    tmp9nrv3zfs                        0x000055b389511229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let last = s.last\n    let s = s.lowercased()\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(String(c)) {\n            count += 1\n  \
    \      }\n    }\n    if last == \"y\" {\n        count += 1\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmp3_6yt4_z/tmp3_6yt4_z.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acaa03aec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acaa00a5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acaa00a5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acaa00a47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3_6yt4_z                        0x000055f359a199ee <unavailable> + 6638

    5    libc.so.6                          0x00002acaa059a460 __libc_start_main +
    245

    6    tmp3_6yt4_z                        0x000055f359a193b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp37aotchq/tmp37aotchq.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2342c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2039b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2039988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c20387b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp37aotchq                        0x000055f460d6d69b <unavailable> + 5787

    5    libc.so.6                          0x00002af2c252e460 __libc_start_main +
    245

    6    tmp37aotchq                        0x000055f460d6d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter { $0 == \"a\" || $0 == \"e\" || $0 ==\
    \ \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\" }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpakxdo7ef/tmpakxdo7ef.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b616ce33c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b616cb2ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b616cb2a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b616cb297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakxdo7ef                        0x0000555d941b752b <unavailable> + 5419

    5    libc.so.6                          0x00002b616d01f460 __libc_start_main +
    245

    6    tmpakxdo7ef                        0x0000555d941b7109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4bmqmbhi/tmp4bmqmbhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac22439bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac224092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac224092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2240917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4bmqmbhi                        0x0000560410b3c64b <unavailable> + 5707

    5    libc.so.6                          0x00002ac224587460 __libc_start_main +
    245

    6    tmp4bmqmbhi                        0x0000560410b3c229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpb3lis6tl/tmpb3lis6tl.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32219b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32216aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32216ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32216ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb3lis6tl                        0x00005581ccde45fb <unavailable> + 5627

    5    libc.so.6                          0x00002b3221ba3460 __libc_start_main +
    245

    6    tmpb3lis6tl                        0x00005581ccde41d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    let vowels_list = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    for c in s {\n        if vowels_list.contains(String(c))\
    \ {\n            vowels += 1\n        }\n    }\n    return vowels\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1grhdo29/tmp1grhdo29.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8d64cedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8d649e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8d649e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8d649e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1grhdo29                        0x0000556c44f005fb <unavailable> + 5627

    5    libc.so.6                          0x00002b8d64ed9460 __libc_start_main +
    245

    6    tmp1grhdo29                        0x0000556c44f001d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpb3lis6tl/tmpb3lis6tl.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32219b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32216aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32216ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32216ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb3lis6tl                        0x00005581ccde45fb <unavailable> + 5627

    5    libc.so.6                          0x00002b3221ba3460 __libc_start_main +
    245

    6    tmpb3lis6tl                        0x00005581ccde41d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3dbgx2uu/tmp3dbgx2uu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e08c2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e08922b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e08922988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e089217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dbgx2uu                        0x0000560f3877c4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b1e08e17460 __libc_start_main +
    245

    6    tmp3dbgx2uu                        0x0000560f3877c099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3dbgx2uu/tmp3dbgx2uu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e08c2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e08922b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e08922988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e089217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dbgx2uu                        0x0000560f3877c4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b1e08e17460 __libc_start_main +
    245

    6    tmp3dbgx2uu                        0x0000560f3877c099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp37aotchq/tmp37aotchq.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2342c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2039b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2039988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c20387b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp37aotchq                        0x000055f460d6d69b <unavailable> + 5787

    5    libc.so.6                          0x00002af2c252e460 __libc_start_main +
    245

    6    tmp37aotchq                        0x000055f460d6d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp26p50wbe/tmp26p50wbe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba18588fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba185586b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba185586988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1855857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp26p50wbe                        0x0000556c2b35c4db <unavailable> + 5339

    5    libc.so.6                          0x00002ba185a7b460 __libc_start_main +
    245

    6    tmp26p50wbe                        0x0000556c2b35c0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4bmqmbhi/tmp4bmqmbhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac22439bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac224092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac224092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2240917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4bmqmbhi                        0x0000560410b3c64b <unavailable> + 5707

    5    libc.so.6                          0x00002ac224587460 __libc_start_main +
    245

    6    tmp4bmqmbhi                        0x0000560410b3c229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4bmqmbhi/tmp4bmqmbhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac22439bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac224092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac224092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2240917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4bmqmbhi                        0x0000560410b3c64b <unavailable> + 5707

    5    libc.so.6                          0x00002ac224587460 __libc_start_main +
    245

    6    tmp4bmqmbhi                        0x0000560410b3c229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp26p50wbe/tmp26p50wbe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba18588fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba185586b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba185586988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1855857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp26p50wbe                        0x0000556c2b35c4db <unavailable> + 5339

    5    libc.so.6                          0x00002ba185a7b460 __libc_start_main +
    245

    6    tmp26p50wbe                        0x0000556c2b35c0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkkh3hnlv/tmpkkh3hnlv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b49fe8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b49cdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b49cdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b49cde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkkh3hnlv                        0x000055fde81bc64b <unavailable> + 5707

    5    libc.so.6                          0x00002b0b4a1d4460 __libc_start_main +
    245

    6    tmpkkh3hnlv                        0x000055fde81bc229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let chars = Array(s)\n    var count = 0\n    for i in 0..<chars.count\
    \ {\n        if vowels.contains(chars[i]) {\n            count += 1\n        }\n\
    \    }\n    if chars.count > 1 && chars[chars.count - 1] == \"y\" && !vowels.contains(chars[chars.count\
    \ - 2]) {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpy7wfu87e/tmpy7wfu87e.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21be72cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21be423b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21be423988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21be4227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy7wfu87e                        0x000055a604d7c94b <unavailable> + 6475

    5    libc.so.6                          0x00002b21be918460 __libc_start_main +
    245

    6    tmpy7wfu87e                        0x000055a604d7c529 <unavailable> + 5417

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4bmqmbhi/tmp4bmqmbhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac22439bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac224092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac224092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2240917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4bmqmbhi                        0x0000560410b3c64b <unavailable> + 5707

    5    libc.so.6                          0x00002ac224587460 __libc_start_main +
    245

    6    tmp4bmqmbhi                        0x0000560410b3c229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter { $0 == \"a\" || $0 == \"e\" || $0 ==\
    \ \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\" }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpakxdo7ef/tmpakxdo7ef.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b616ce33c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b616cb2ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b616cb2a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b616cb297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakxdo7ef                        0x0000555d941b752b <unavailable> + 5419

    5    libc.so.6                          0x00002b616d01f460 __libc_start_main +
    245

    6    tmpakxdo7ef                        0x0000555d941b7109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8_b78b1s/tmp8_b78b1s.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31185e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31182d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31182d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31182d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8_b78b1s                        0x00005599c85a75fb <unavailable> + 5627

    5    libc.so.6                          0x00002b31187cc460 __libc_start_main +
    245

    6    tmp8_b78b1s                        0x00005599c85a71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnh4rwi70/tmpnh4rwi70.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c8affdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c8acf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c8acf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c8acf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnh4rwi70                        0x00005652d21b969b <unavailable> + 5787

    5    libc.so.6                          0x00002b2c8b1e9460 __libc_start_main +
    245

    6    tmpnh4rwi70                        0x00005652d21b9279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpfh1scnb8/tmpfh1scnb8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8316845c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b831653cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b831653c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b831653b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfh1scnb8                        0x0000560e655a669b <unavailable> + 5787

    5    libc.so.6                          0x00002b8316a31460 __libc_start_main +
    245

    6    tmpfh1scnb8                        0x0000560e655a6279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for c in s {\n        if vowels.contains(String(c)) {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbya65qod/tmpbya65qod.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af54e243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af54df3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af54df3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af54df397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbya65qod                        0x00005652325a25fb <unavailable> + 5627

    5    libc.so.6                          0x00002af54e42f460 __libc_start_main +
    245

    6    tmpbya65qod                        0x00005652325a21d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978525
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4srpp_xq/tmp4srpp_xq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add5a67cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add5a373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add5a373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add5a3727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4srpp_xq                        0x000055d5b30b44bb <unavailable> + 5307

    5    libc.so.6                          0x00002add5a868460 __libc_start_main +
    245

    6    tmp4srpp_xq                        0x000055d5b30b4099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978525

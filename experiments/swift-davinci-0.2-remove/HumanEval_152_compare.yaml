name: HumanEval_152_compare
language: swift
prompt: "\n/// I think we all remember that feeling when the result of some long-awaited\n\
  /// event is finally known. The feelings and thoughts you have at that moment are\n\
  /// definitely worth noting down and comparing.\n/// Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n/// You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n/// Return an array of the same length denoting how far off each guess was.\
  \ If they have guessed correctly,\n/// the value is 0, and if not, the value is\
  \ the absolute difference between the guess and the score.\n/// example:\nfunc compare(game:\
  \ [Int], guess: [Int]) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(compare(game: [1, 2, 3, 4, 5, 1], guess:\
  \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\nassert(compare(game: [0, 0, 0, 0,\
  \ 0, 0], guess: [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\nassert(compare(game:\
  \ [1, 2, 3], guess: [-1, -2, -3]) == [2, 4, 6])\nassert(compare(game: [1, 2, 3,\
  \ 5], guess: [-1, 2, 3, 4]) == [2, 0, 0, 1])"
completions: ["    var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result = [Int]()\n    for (index, value)\
    \ in game.enumerated() {\n        result.append(abs(value - guess[index]))\n \
    \   }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ (index, value) in game.enumerated() {\n        result.append(abs(value - guess[index]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result: [Int] = []\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for (index, value) in game.enumerated() {\n        if value == guess[index]\
    \ {\n            result.append(0)\n        } else {\n            result.append(abs(value\
    \ - guess[index]))\n        }\n    }\n    return result", "    var result: [Int]\
    \ = []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i]\
    \ == guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        let diff = abs(game[i]\
    \ - guess[i])\n        result.append(diff)\n    }\n    return result", "    var\
    \ result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for (index, value) in game.enumerated() {\n   \
    \     result.append(abs(value - guess[index]))\n    }\n    return result", " \
    \   var result = [Int]()\n    for (index, value) in game.enumerated() {\n    \
    \    result.append(abs(value - guess[index]))\n    }\n    return result", "  \
    \  var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for (index, value) in game.enumerated() {\n        result.append(abs(value\
    \ - guess[index]))\n    }\n    return result", "    var result = [Int]()\n   \
    \ for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for (index, value) in game.enumerated() {\n   \
    \     result.append(abs(value - guess[index]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i]\
    \ == guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ (index, value) in game.enumerated() {\n        if value == guess[index] {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(value\
    \ - guess[index]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<game.count {\n        if game[i] == guess[i] {\n           \
    \ result.append(0)\n        } else {\n            result.append(abs(game[i] -\
    \ guess[i]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<game.count {\n        if game[i] == guess[i] {\n           \
    \ result.append(0)\n        } else {\n            result.append(abs(game[i] -\
    \ guess[i]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result = [Int]()\n    for (index, value) in game.enumerated()\
    \ {\n        result.append(abs(value - guess[index]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i]\
    \ == guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result = [Int]()\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<game.count {\n        if game[i] == guess[i] {\n           \
    \ result.append(0)\n        } else {\n            result.append(abs(game[i] -\
    \ guess[i]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i]\
    \ == guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        let diff = abs(game[i] - guess[i])\n        result.append(diff)\n\
    \    }\n    return result", "    var result = [Int]()\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for (index, value) in game.enumerated() {\n   \
    \     result.append(abs(value - guess[index]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ (index, value) in game.enumerated() {\n        result.append(abs(value - guess[index]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for (index, value) in game.enumerated()\
    \ {\n        result.append(abs(value - guess[index]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result: [Int] = []\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result: [Int] = []\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i]\
    \ == guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        if game[i] == guess[i] {\n      \
    \      result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result: [Int] = []\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for (index, value) in game.enumerated() {\n   \
    \     result.append(abs(value - guess[index]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        if game[i]\
    \ == guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result: [Int] = []\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        if game[i] == guess[i] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n  \
    \  return result", "    var result: [Int] = []\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result = [Int]()\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ (index, value) in game.enumerated() {\n        result.append(abs(value - guess[index]))\n\
    \    }\n    return result", "    var result = [Int]()\n    for (index, value)\
    \ in game.enumerated() {\n        result.append(abs(value - guess[index]))\n \
    \   }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<game.count {\n        if game[i] ==\
    \ guess[i] {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in 0..<game.count\
    \ {\n        result.append(abs(game[i] - guess[i]))\n    }\n    return result",
  "    var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in 0..<game.count {\n\
    \        result.append(abs(game[i] - guess[i]))\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<game.count {\n        result.append(abs(game[i]\
    \ - guess[i]))\n    }\n    return result", "    var result: [Int] = []\n    for\
    \ i in 0..<game.count {\n        result.append(abs(game[i] - guess[i]))\n    }\n\
    \    return result"]
stop_tokens:
- "\n}"
